var searchIndex = JSON.parse('{\
"ab_glyph_rasterizer":{"doc":"Coverage rasterization for lines, quadratic &amp; cubic …","t":"DDLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLMM","n":["Point","Rasterizer","add","add_assign","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone_into","default","dimensions","draw_cubic","draw_line","draw_quad","eq","fmt","fmt","for_each_pixel","for_each_pixel_2d","from","from","from","from","into","into","new","partial_cmp","point","reset","sub","sub_assign","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y"],"q":[[0,"ab_glyph_rasterizer"]],"d":["An (x, y) coordinate.","Coverage rasterizer for lines, quadratic &amp; cubic beziers.","Add rhs.x to x, rhs.y to y.","","","","","","Clears the rasterizer. This method behaves as if the …","","","","Returns the dimensions the rasterizer was built to draw to.","Adds a cubic Bézier curve from <code>p0</code> to <code>p3</code> to the outline …","Adds a straight line from <code>p0</code> to <code>p1</code> to the outline.","Adds a quadratic Bézier curve from <code>p0</code> to <code>p2</code> to the …","","","","Run a callback for each pixel <code>index</code> &amp; <code>alpha</code>, with indices …","Run a callback for each pixel x position, y position &amp; …","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Allocates a new rasterizer that can draw onto a <code>width</code> x …","","<code>Point</code> constructor.","Resets the rasterizer to an empty <code>width</code> x <code>height</code> alpha …","Subtract rhs.x from x, rhs.y from y.","","","","","","","","","",""],"i":[0,0,1,1,2,1,2,1,2,1,1,1,2,2,2,2,1,2,1,2,2,2,1,1,1,2,1,2,1,0,2,1,1,1,2,1,2,1,2,1,1,1],"f":[0,0,[[1,1],1],[[1,1]],[[]],[[]],[[]],[[]],[2],[1,1],[[]],[[],1],[2],[[2,1,1,1,1]],[[2,1,1]],[[2,1,1,1]],[[1,1],3],[[2,4],5],[[1,4],5],[[2,6]],[[2,6]],[[]],[[],1],[[]],[[[9,[[8,[7]]]]],1],[[]],[[]],[[10,10],2],[[1,1],[[12,[11]]]],[[7,7],1],[[2,10,10]],[[1,1],1],[[1,1]],[[]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],0,0],"c":[],"p":[[3,"Point"],[3,"Rasterizer"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"FnMut"],[15,"f32"],[8,"Into"],[15,"array"],[15,"usize"],[4,"Ordering"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"adler":{"doc":"Adler-32 checksum implementation.","t":"DFLLLLLLLLLLLLLLLL","n":["Adler32","adler32_slice","borrow","borrow_mut","checksum","clone","default","finish","fmt","from","from_checksum","into","new","try_from","try_into","type_id","write","write_slice"],"q":[[0,"adler"]],"d":["Adler-32 checksum calculator.","Calculates the Adler-32 checksum of a byte slice.","","","Returns the calculated checksum at this point in time.","","","","","Returns the argument unchanged.","Creates an <code>Adler32</code> instance from a precomputed Adler-32 …","Calls <code>U::from(self)</code>.","Creates a new Adler-32 instance with default state.","","","","","Adds <code>bytes</code> to the checksum calculation."],"i":[0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[0,[[[2,[1]]],3],[[]],[[]],[4,3],[4,4],[[],4],[4,5],[[4,6],7],[[]],[3,4],[[]],[[],4],[[],8],[[],8],[[],9],[[4,[2,[1]]]],[[4,[2,[1]]]]],"c":[],"p":[[15,"u8"],[15,"slice"],[15,"u32"],[3,"Adler32"],[15,"u64"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"adler32":{"doc":"A minimal implementation of Adler32 for Rust.","t":"DFLLLLLLLLLLLLLLLLLL","n":["RollingAdler32","adler32","borrow","borrow_mut","clone","clone_into","default","from","from_buffer","from_value","hash","into","new","remove","to_owned","try_from","try_into","type_id","update","update_buffer"],"q":[[0,"adler32"]],"d":["A rolling version of the Adler32 hash, which can ‘forget…","Consume a Read object and returns the Adler32 hash.","","","","","","Returns the argument unchanged.","Convenience function initializing a context from the hash …","Creates an Adler32 context with the given initial value.","Returns the current hash.","Calls <code>U::from(self)</code>.","Creates an empty Adler32 context (with hash 1).","Removes the given <code>byte</code> that was fed to the algorithm <code>size</code> …","","","","","Feeds a new <code>byte</code> to the algorithm to update the hash.","Feeds a vector of bytes to the algorithm to update the …"],"i":[0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[0,[1,[[3,[2]]]],[[]],[[]],[4,4],[[]],[[],4],[[]],[[[6,[5]]],4],[2,4],[4,2],[[]],[[],4],[[4,7,5]],[[]],[[],8],[[],8],[[],9],[[4,5]],[[4,[6,[5]]]]],"c":[],"p":[[8,"Read"],[15,"u32"],[6,"Result"],[3,"RollingAdler32"],[15,"u8"],[15,"slice"],[15,"usize"],[4,"Result"],[3,"TypeId"]]},\
"arrayvec":{"doc":"<strong>arrayvec</strong> provides the types <code>ArrayVec</code> and <code>ArrayString</code>:  …","t":"IDDDDDQILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Array","ArrayString","ArrayVec","CapacityError","Drain","IntoIter","Item","RangeArgument","as_mut","as_mut_slice","as_ref","as_ref","as_slice","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","clear","clear","clone","clone","clone","clone","clone_from","clone_from","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","deref","deref","deref_mut","deref_mut","description","dispose","drain","drop","drop","drop","element","end","end","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_byte_string","from_iter","ge","ge","ge","gt","gt","gt","hash","hash","insert","into","into","into","into","into","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","is_full","is_full","le","le","le","len","lt","lt","lt","new","new","new","next","next","next_back","next_back","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","pop","pop_at","push","push","push_str","push_unchecked","remove","remove","retain","set_len","set_len","simplify","size_hint","size_hint","start","start","swap_pop","swap_remove","to_owned","to_owned","to_owned","to_owned","to_string","to_string","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push_str","type_id","type_id","type_id","type_id","type_id","write","write_char","write_str"],"q":[[0,"arrayvec"]],"d":["Trait for fixed size arrays.","A string with a fixed capacity.","A vector with a fixed capacity.","Error value indicating insufficient capacity","A draining iterator for <code>ArrayVec</code>.","By-value iterator for <code>ArrayVec</code>.","The array’s element type","<code>RangeArgument</code> is implemented by Rust’s built-in range …","","Return a mutable slice containing all elements of the …","","","Return a slice containing all elements of the vector.","Return a string slice of the whole <code>ArrayString</code>.","","","","","","","","","","","","","","Return the capacity of the <code>ArrayVec</code>.","Return the capacity of the <code>ArrayString</code>.","Remove all elements in the vector.","Make the string empty.","","","","","","","","","","","","","","Return an empty array","Return an empty <code>ArrayString</code>","","","","","","Dispose of <code>self</code> without the overwriting that is needed in …","Create a draining iterator that removes the specified …","","","","Extract the overflowing element","End index (exclusive)","End index (exclusive)","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a <code>str</code>.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a byte string literal.","","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the inner fixed size array, if it is full to its …","","","","","","Return if the <code>ArrayVec</code> is completely filled.","Return if the <code>ArrayString</code> is completely filled.","","","","Return the number of elements in the <code>ArrayVec</code>.","","","","Create a new empty <code>ArrayVec</code>.","Create a new empty <code>ArrayString</code>.","Create a new <code>CapacityError</code> from <code>element</code>.","","","","","","","","","Remove the last element in the vector and return it.","Removes the last character from the string and returns it.","Remove the element at <code>index</code> and shift down the following …","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push <code>element</code> to the end of the vector without checking the …","Remove the element at <code>index</code> and shift down the following …","Removes a <code>char</code> from this <code>ArrayString</code> at a byte position …","Retains only the elements specified by the predicate.","Set the vector’s length without dropping or moving out …","Set the strings’s length.","Convert into a <code>CapacityError</code> that does not carry an …","","","Start index (inclusive)","Start index (inclusive)","Remove the element at <code>index</code> and swap the last element into …","Remove the element at <code>index</code> and swap the last element into …","","","","","","","Shortens the vector, keeping the first <code>len</code> elements and …","Shortens this <code>ArrayString</code> to the specified length.","","","","","","Insert <code>element</code> at position <code>index</code>.","","","","","","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,2,2,2,4,2,4,2,2,7,15,4,4,10,2,2,7,15,4,10,2,4,2,4,2,7,4,10,2,4,2,7,4,10,2,4,10,2,4,2,4,2,4,10,2,2,2,7,15,10,14,14,2,2,4,4,10,2,4,10,2,2,2,7,4,4,10,10,2,2,2,7,15,4,4,10,4,2,2,4,4,2,4,4,2,4,2,2,7,15,4,10,2,2,2,2,7,15,2,4,2,4,4,2,2,4,4,2,4,10,7,15,7,15,2,4,4,10,2,4,2,2,4,4,2,2,4,2,2,4,10,7,15,14,14,2,2,2,7,4,10,4,10,2,4,2,7,15,4,10,2,2,7,15,4,10,2,4,4,2,7,15,4,10,2,4,4],"f":[0,0,0,0,0,0,0,0,[[[2,[1]]],3],[[[2,[1]]],3],[[[2,[1]]],3],[[[4,[1]]],5],[[[2,[1]]],3],[[[4,[1]]],5],[[[2,[1]]],3],[[]],[[]],[[]],[[]],[[[4,[1]]],5],[[]],[[]],[[[2,[1]]],3],[[]],[[]],[[]],[[]],[[[2,[1]]],6],[[[4,[1]]],6],[[[2,[1]]]],[[[4,[1]]]],[[[2,[1]]],[[2,[1]]]],[[[7,[1]]],[[7,[1]]]],[[[4,[[0,[1,8]]]]],[[4,[[0,[1,8]]]]]],[[[10,[9]]],[[10,[9]]]],[[[2,[1]],[2,[1]]]],[[[4,[[0,[1,8]]]],[4,[[0,[1,8]]]]]],[[]],[[]],[[]],[[]],[[[2,[1]],[2,[1]]],11],[[[4,[1]],[4,[1]]],11],[[[10,[12]],[10,[12]]],11],[[],[[2,[1]]]],[[],[[4,[1]]]],[[[2,[1]]],3],[[[4,[1]]],5],[[[2,[1]]],3],[[[4,[1]]],5],[[[10,[13]]],5],[[[2,[1]]]],[[[2,[1]],14],[[15,[1]]]],[[[2,[1]]]],[[[7,[1]]]],[[[15,[1]]]],[10],[[],[[16,[6]]]],[[],[[16,[6]]]],[[[2,[1]],[2,[1]]],17],[[[2,[1]],3],17],[[[4,[1]],[4,[1]]],17],[[[4,[1]],5],17],[[[10,[18]],[10,[18]]],17],[[],17],[[],17],[[],17],[[[2,[1]],19]],[[[2,[1]]],20],[[[2,[1]],21],22],[[[7,[1]],21],22],[[[4,[1]],21],22],[[[4,[1]],21],22],[[10,21],22],[[10,21],22],[1,[[2,[1]]]],[23],[[]],[[]],[[]],[[]],[5,[[24,[[4,[1]],[10,[5]]]]]],[[]],[1,[[24,[[4,[1]],25]]]],[19,[[2,[1]]]],[[[2,[1]],[2,[1]]],17],[[[4,[1]],5],17],[[[4,[1]],[4,[1]]],17],[[[2,[1]],[2,[1]]],17],[[[4,[1]],5],17],[[[4,[1]],[4,[1]]],17],[[[2,[1]],26]],[[[4,[1]],26]],[[[2,[1]],6]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[24,[1,[2,[1]]]]]],[[[2,[1]]],[[7,[1]]]],[[[2,[1]]]],[[[2,[1]]]],[[]],[[]],[[[2,[1]]],17],[[[4,[1]]],17],[[[2,[1]],[2,[1]]],17],[[[4,[1]],5],17],[[[4,[1]],[4,[1]]],17],[[[2,[1]]],6],[[[2,[1]],[2,[1]]],17],[[[4,[1]],5],17],[[[4,[1]],[4,[1]]],17],[[],[[2,[1]]]],[[],[[4,[1]]]],[[],10],[[[7,[1]]],16],[[[15,[1]]],16],[[[7,[1]]],16],[[[15,[1]]],16],[[[2,[1]],[2,[1]]],[[16,[11]]]],[[[4,[1]],5],[[16,[11]]]],[[[4,[1]],[4,[1]]],[[16,[11]]]],[[[10,[27]],[10,[27]]],[[16,[11]]]],[[[2,[1]]],16],[[[4,[1]]],[[16,[28]]]],[[[2,[1]],6],16],[[[2,[1]]]],[[[4,[1]],28]],[[[4,[1]],5]],[[[2,[1]]]],[[[2,[1]],6]],[[[4,[1]],6],28],[[[2,[1]],29]],[[[2,[1]],6]],[[[4,[1]],6]],[10,10],[[[7,[1]]]],[[[15,[1]]]],[[],[[16,[6]]]],[[],[[16,[6]]]],[[[2,[1]],6],16],[[[2,[1]],6]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[[2,[1]],6]],[[[4,[1]],6]],[[],24],[[],24],[[],24],[[],24],[[],24],[[[2,[1]],6],[[24,[10]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[[2,[1]]],[[24,[10]]]],[[[4,[1]],28],[[24,[[10,[28]]]]]],[[[4,[1]],5],[[24,[[10,[5]]]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[[2,[1]],[3,[32]]],[[20,[6]]]],[[[4,[1]],28],22],[[[4,[1]],5],22]],"c":[],"p":[[8,"Array"],[3,"ArrayVec"],[15,"slice"],[3,"ArrayString"],[15,"str"],[15,"usize"],[3,"IntoIter"],[8,"Copy"],[8,"Clone"],[3,"CapacityError"],[4,"Ordering"],[8,"Ord"],[8,"Any"],[8,"RangeArgument"],[3,"Drain"],[4,"Option"],[15,"bool"],[8,"PartialEq"],[8,"IntoIterator"],[6,"Result"],[3,"Formatter"],[6,"Result"],[15,"never"],[4,"Result"],[3,"Utf8Error"],[8,"Hasher"],[8,"PartialOrd"],[15,"char"],[8,"FnMut"],[3,"String"],[3,"TypeId"],[15,"u8"]]},\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for …","t":"SIIKKKKKKKKK","n":["BIT_LENGTH","BitArray","BitField","bit_length","get_bit","get_bit","get_bits","get_bits","set_bit","set_bit","set_bits","set_bits"],"q":[[0,"bit_field"]],"d":["The number of bits in this bit field.","","A generic trait which provides methods for extracting and …","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the range of bits specified by <code>range</code>; note that …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[4,0,0,5,4,5,4,5,4,5,4,5],"f":[0,0,0,[[],1],[1,2],[1,2],[[[3,[1]]]],[[[3,[1]]]],[[1,2]],[[1,2]],[[[3,[1]]]],[[[3,[1]]]]],"c":[],"p":[[15,"usize"],[15,"bool"],[8,"RangeBounds"],[8,"BitField"],[8,"BitArray"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":"O","n":["bitflags"],"q":[[0,"bitflags"]],"d":["The macro used to generate the flag structures."],"i":[0],"f":[0],"c":[],"p":[]},\
"bytemuck":{"doc":"This crate gives small utilities for casting between plain …","t":"NICIQSSINIEINNIIIALLFFFFFFFALLLFLLLFFLLLLLLOLLLLLLLLLLFFFLLFFFFFLFFLFLLLLLLLLLLLFLLDILLFFFFFFFFLLLLLFLLLLLLLLFFFFFFFFLFLFFFLLLLLFFFQIENNLLFFFFFLLLLLLLFFLLKFLLFFFFFLFFLFL","n":["AlignmentMismatch","AnyBitPattern","CheckedBitPattern","Contiguous","Int","MAX_VALUE","MIN_VALUE","NoUninit","OutputSliceWouldHaveSlop","Pod","PodCastError","PodInOption","SizeMismatch","TargetAlignmentGreaterAndInputNotAligned","TransparentWrapper","Zeroable","ZeroableInOption","allocation","borrow","borrow_mut","bytes_of","bytes_of_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","checked","clone","clone_into","eq","fill_zeroes","fmt","fmt","from","from_bytes","from_bytes_mut","from_integer","from_integer","hash","into","into_integer","into_integer","offset_of","peel","peel","peel_mut","peel_mut","peel_ref","peel_ref","peel_slice","peel_slice","peel_slice_mut","peel_slice_mut","pod_align_to","pod_align_to_mut","pod_read_unaligned","to_owned","to_string","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id","wrap","wrap","wrap_mut","wrap_mut","wrap_ref","wrap_ref","wrap_slice","wrap_slice","wrap_slice_mut","wrap_slice_mut","write_zeroes","zeroed","zeroed","BoxBytes","TransparentWrapperAlloc","borrow","borrow_mut","box_bytes_of","cast_arc","cast_box","cast_rc","cast_slice_arc","cast_slice_box","cast_slice_rc","cast_vec","deref","deref_mut","drop","from","from","from_box_bytes","from_raw_parts","into","into_raw_parts","layout","peel_arc","peel_box","peel_rc","peel_vec","pod_collect_to_vec","try_cast_arc","try_cast_box","try_cast_rc","try_cast_slice_arc","try_cast_slice_box","try_cast_slice_rc","try_cast_vec","try_from","try_from_box_bytes","try_into","try_zeroed_box","try_zeroed_slice_box","try_zeroed_vec","type_id","wrap_arc","wrap_box","wrap_rc","wrap_vec","zeroed_box","zeroed_slice_box","zeroed_vec","Bits","CheckedBitPattern","CheckedCastError","InvalidBitPattern","PodCastError","borrow","borrow_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","clone","clone_into","eq","fmt","fmt","from","from","from_bytes","from_bytes_mut","hash","into","is_valid_bit_pattern","pod_read_unaligned","to_owned","to_string","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id"],"q":[[0,"bytemuck"],[83,"bytemuck::allocation"],[131,"bytemuck::checked"]],"d":["For this type of cast the alignments must be exactly the …","Marker trait for “plain old data” types that are valid …","","A trait indicating that:","The primitive integer type with an identical …","The upper <em>inclusive</em> bound for valid instances of this type.","The lower <em>inclusive</em> bound for valid instances of this type.","Marker trait for “plain old data” types with no uninit …","If the element size changes then the output slice changes …","Marker trait for “plain old data”.","The things that can go wrong when casting between <code>Pod</code> data …","Trait for types which are Pod when wrapped in Option.","When casting a slice you can’t convert between ZST …","You tried to cast a slice to an element type with a higher …","A trait which indicates that a type is a …","Trait for types that can be safely created with <code>zeroed</code>.","Trait for types which are Zeroable when wrapped in Option.","Stuff to boost things in the <code>alloc</code> crate.","","","Re-interprets <code>&amp;T</code> as <code>&amp;[u8]</code>.","Re-interprets <code>&amp;mut T</code> as <code>&amp;mut [u8]</code>.","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","Checked versions of the casting functions exposed in crate …","","","","Fill all bytes of <code>slice</code> with zeroes (see <code>Zeroable</code>).","","","Returns the argument unchanged.","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","If <code>value</code> is within the range for valid instances of this …","If <code>value</code> is within the range for valid instances of this …","","Calls <code>U::from(self)</code>.","Perform the conversion from <code>C</code> into the underlying integral …","Perform the conversion from <code>C</code> into the underlying integral …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Convert the wrapper type into the inner type.","Convert the wrapper type into the inner type.","Convert a mutable reference to the wrapper type into a …","Convert a mutable reference to the wrapper type into a …","Convert a reference to the wrapper type into a reference …","Convert a reference to the wrapper type into a reference …","Convert a slice to the wrapped type into a slice to the …","Convert a slice to the wrapped type into a slice to the …","Convert a mutable slice to the wrapped type into a mutable …","Convert a mutable slice to the wrapped type into a mutable …","As <code>align_to</code>, but safe because of the <code>Pod</code> bound.","As <code>align_to_mut</code>, but safe because of the <code>Pod</code> bound.","Reads the slice into a <code>T</code> value.","","","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.","","Convert the inner type into the wrapper type.","Convert the inner type into the wrapper type.","Convert a mutable reference to the inner type into a …","Convert a mutable reference to the inner type into a …","Convert a reference to the inner type into a reference to …","Convert a reference to the inner type into a reference to …","Convert a slice to the inner type into a slice to the …","Convert a slice to the inner type into a slice to the …","Convert a mutable slice to the inner type into a mutable …","Convert a mutable slice to the inner type into a mutable …","Fill all bytes of <code>target</code> with zeroes (see <code>Zeroable</code>).","Calls <code>zeroed</code>.","Calls <code>zeroed</code>.","As <code>Box&lt;[u8]&gt;</code>, but remembers the original alignment.","An extension trait for <code>TransparentWrapper</code> and alloc types.","","","Re-interprets <code>Box&lt;T&gt;</code> as <code>BoxBytes</code>.","As <code>try_cast_arc</code>, but unwraps for you.","As <code>try_cast_box</code>, but unwraps for you.","As <code>try_cast_rc</code>, but unwraps for you.","As <code>try_cast_slice_arc</code>, but unwraps for you.","As <code>try_cast_slice_box</code>, but unwraps for you.","As <code>try_cast_slice_rc</code>, but unwraps for you.","As <code>try_cast_vec</code>, but unwraps for you.","","","","","Returns the argument unchanged.","Re-interprets <code>BoxBytes</code> as <code>Box&lt;T&gt;</code>.","Constructs a <code>BoxBytes</code> from its raw parts.","Calls <code>U::from(self)</code>.","Deconstructs a <code>BoxBytes</code> into its raw parts.","Returns the original layout.","Convert an <code>Arc</code> to the wrapper type into an <code>Arc</code> to the …","Convert a box to the wrapper type into a box to the inner …","Convert an <code>Rc</code> to the wrapper type into an <code>Rc</code> to the inner …","Convert a vec of the wrapper type into a vec of the inner …","This “collects” a slice of pod data into a vec of a …","Attempts to cast the content type of a <code>Arc</code>.","Attempts to cast the content type of a <code>Box</code>.","Attempts to cast the content type of a <code>Rc</code>.","Attempts to cast the content type of a <code>Arc&lt;[T]&gt;</code>.","Attempts to cast the content type of a <code>Box&lt;[T]&gt;</code>.","Attempts to cast the content type of a <code>Rc&lt;[T]&gt;</code>.","Attempts to cast the content type of a <code>Vec</code>.","","Re-interprets <code>BoxBytes</code> as <code>Box&lt;T&gt;</code>.","","Allocates a <code>Box&lt;T&gt;</code> with all of the contents being zeroed …","Allocates a <code>Box&lt;[T]&gt;</code> with all contents being zeroed out.","Allocates a <code>Vec&lt;T&gt;</code> of length and capacity exactly equal to …","","Convert an <code>Arc</code> to the inner type into an <code>Arc</code> to the …","Convert a box to the inner type into a box to the wrapper …","Convert an <code>Rc</code> to the inner type into an <code>Rc</code> to the wrapper …","Convert a vec of the inner type into a vec of the wrapper …","As <code>try_zeroed_box</code>, but unwraps for you.","As <code>try_zeroed_slice_box</code>, but unwraps for you.","As <code>try_zeroed_vec</code> but unwraps for you","<code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> …","A marker trait that allows types that have some invalid …","The things that can go wrong when casting between …","When casting to a <code>CheckedBitPattern</code> type, it is possible …","An error occurred during a true-<code>Pod</code> cast","","","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","","","","","","Returns the argument unchanged.","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Calls <code>U::from(self)</code>.","If this function returns true, then it must be valid to …","Reads the slice into a <code>T</code> value.","","","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.",""],"i":[5,0,0,0,26,26,26,0,5,0,0,0,5,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,5,5,0,5,5,5,0,0,26,26,5,5,26,26,0,27,27,27,27,27,27,27,27,27,27,0,0,0,5,5,0,0,0,0,0,5,0,0,5,0,5,27,27,27,27,27,27,27,27,27,27,0,7,7,0,0,17,17,0,0,0,0,0,0,0,0,17,17,17,17,17,0,17,17,17,17,28,28,28,28,0,0,0,0,0,0,0,0,17,0,17,0,0,0,17,28,28,28,28,0,0,0,24,0,0,25,25,25,25,0,0,0,0,0,25,25,25,25,25,25,25,0,0,25,25,24,0,25,25,0,0,0,0,0,25,0,0,25,0,25],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,[[3,[2]]]],[[[0,[1,4]]],[[3,[2]]]],[1,4],[[[0,[1,4]]],[[0,[1,4]]]],[1,4],[[[3,[1]]],[[3,[4]]]],[[[3,[[0,[1,4]]]]],[[3,[[0,[1,4]]]]]],0,[5,5],[[]],[[5,5],6],[[[3,[7]]]],[[5,8],9],[[5,8],9],[[]],[[[3,[2]]],4],[[[3,[2]]],[[0,[1,4]]]],[[],10],[[],10],[[5,11]],[[]],[[]],[[]],0,[12,12],[12,12],[[]],[[]],[[]],[[]],[[[3,[12]]],[[3,[12]]]],[[[3,[12]]],[[3,[12]]]],[[[3,[12]]],[[3,[12]]]],[[[3,[12]]],[[3,[12]]]],[[[3,[1]]]],[[[3,[[0,[1,4]]]]]],[[[3,[2]]],4],[[]],[[],13],[1,[[14,[4,5]]]],[[[0,[1,4]]],[[14,[[0,[1,4]],5]]]],[1,[[14,[4,5]]]],[[[3,[1]]],[[14,[[3,[4]],5]]]],[[[3,[[0,[1,4]]]]],[[14,[[3,[[0,[1,4]]]],5]]]],[[],14],[[[3,[2]]],[[14,[4,5]]]],[[[3,[2]]],[[14,[[0,[1,4]],5]]]],[[],14],[[[3,[2]]],[[14,[4,5]]]],[[],15],[12,12],[12,12],[[]],[[]],[[]],[[]],[[[3,[12]]],[[3,[12]]]],[[[3,[12]]],[[3,[12]]]],[[[3,[12]]],[[3,[12]]]],[[[3,[12]]],[[3,[12]]]],[7],[[]],[[]],0,0,[[]],[[]],[[[16,[[0,[0,12]]]]],17],[[[18,[[0,[1,4]]]]],[[18,[[0,[1,4]]]]]],[[[16,[1]]],[[16,[4]]]],[[[19,[[0,[1,4]]]]],[[19,[[0,[1,4]]]]]],[[[18,[[3,[[0,[1,4]]]]]]],[[18,[[3,[[0,[1,4]]]]]]]],[[[16,[[3,[1]]]]],[[16,[[3,[4]]]]]],[[[19,[[3,[[0,[1,4]]]]]]],[[19,[[3,[[0,[1,4]]]]]]]],[[[20,[1]]],[[20,[4]]]],[17],[17],[17],[[[16,[[0,[12,0]]]]],17],[[]],[17,[[16,[[0,[0,12]]]]]],[[[21,[2]],22],17],[[]],[17],[17,22],[18,18],[16,16],[19,19],[[[20,[12]]],[[20,[12]]]],[[[3,[1]]],[[20,[[0,[1,4]]]]]],[[[18,[[0,[1,4]]]]],[[14,[[18,[[0,[1,4]]]]]]]],[[[16,[1]]],[[14,[[16,[4]]]]]],[[[19,[[0,[1,4]]]]],[[14,[[19,[[0,[1,4]]]]]]]],[[[18,[[3,[[0,[1,4]]]]]]],[[14,[[18,[[3,[[0,[1,4]]]]]]]]]],[[[16,[[3,[1]]]]],[[14,[[16,[[3,[4]]]]]]]],[[[19,[[3,[[0,[1,4]]]]]]],[[14,[[19,[[3,[[0,[1,4]]]]]]]]]],[[[20,[1]]],[[14,[[20,[4]]]]]],[[],14],[17,[[14,[[16,[[0,[0,12]]]]]]]],[[],14],[[],[[14,[[16,[7]]]]]],[23,[[14,[[16,[[3,[7]]]]]]]],[23,[[14,[[20,[7]]]]]],[[],15],[18,18],[16,16],[19,19],[[[20,[12]]],[[20,[12]]]],[[],[[16,[7]]]],[23,[[16,[[3,[7]]]]]],[23,[[20,[7]]]],0,0,0,0,0,[[]],[[]],[1,24],[[[0,[1,4]]],[[0,[1,24]]]],[1,24],[[[3,[1]]],[[3,[24]]]],[[[3,[[0,[1,4]]]]],[[3,[[0,[1,24]]]]]],[25,25],[[]],[[25,25],6],[[25,8],9],[[25,8],9],[[]],[5,25],[[[3,[2]]],24],[[[3,[2]]],[[0,[1,24]]]],[[25,11]],[[]],[[],6],[[[3,[2]]],24],[[]],[[],13],[1,[[14,[24,25]]]],[[[0,[1,4]]],[[14,[[0,[24,1]],25]]]],[1,[[14,[24,25]]]],[[[3,[1]]],[[14,[[3,[24]],25]]]],[[[3,[[0,[1,4]]]]],[[14,[[3,[[0,[24,1]]]],25]]]],[[],14],[[[3,[2]]],[[14,[24,25]]]],[[[3,[2]]],[[14,[[0,[24,1]],25]]]],[[],14],[[[3,[2]]],[[14,[24,25]]]],[[],15]],"c":[],"p":[[8,"NoUninit"],[15,"u8"],[15,"slice"],[8,"AnyBitPattern"],[4,"PodCastError"],[15,"bool"],[8,"Zeroable"],[3,"Formatter"],[6,"Result"],[4,"Option"],[8,"Hasher"],[8,"Sized"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Box"],[3,"BoxBytes"],[3,"Arc"],[3,"Rc"],[3,"Vec"],[3,"NonNull"],[3,"Layout"],[15,"usize"],[8,"CheckedBitPattern"],[4,"CheckedCastError"],[8,"Contiguous"],[8,"TransparentWrapper"],[8,"TransparentWrapperAlloc"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":"GEIGEGGIILLLLLLLLLLLLLLLLLLLLKLLKLLLLLLKLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLKLLLLKLLLLLLLKLLLLKLLLLLLLKLLLLKLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLKLLLLKLLLLLKLLLLKLLLLLKLLLLKLLLLKLLLLKLLLL","n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","ReadBytesExt","WriteBytesExt","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32","read_f32","read_f32_into","read_f32_into","read_f32_into","read_f32_into_unchecked","read_f32_into_unchecked","read_f32_into_unchecked","read_f64","read_f64","read_f64","read_f64_into","read_f64_into","read_f64_into","read_f64_into_unchecked","read_f64_into_unchecked","read_f64_into_unchecked","read_i128","read_i128","read_i128","read_i128_into","read_i128_into","read_i128_into","read_i16","read_i16","read_i16","read_i16_into","read_i16_into","read_i16_into","read_i24","read_i24","read_i24","read_i32","read_i32","read_i32","read_i32_into","read_i32_into","read_i32_into","read_i48","read_i48","read_i48","read_i64","read_i64","read_i64","read_i64_into","read_i64_into","read_i64_into","read_i8","read_i8","read_i8_into","read_i8_into","read_int","read_int","read_int","read_int128","read_int128","read_int128","read_u128","read_u128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u24","read_u24","read_u32","read_u32","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u48","read_u48","read_u64","read_u64","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u8","read_u8","read_uint","read_uint","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","read_uint128","read_uint128","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32","write_f32","write_f32_into","write_f64","write_f64","write_f64","write_f64_into","write_i128","write_i128","write_i128","write_i128_into","write_i16","write_i16","write_i16","write_i16_into","write_i24","write_i24","write_i24","write_i32","write_i32","write_i32","write_i32_into","write_i48","write_i48","write_i48","write_i64","write_i64","write_i64","write_i64_into","write_i8","write_i8","write_i8_into","write_int","write_int","write_int","write_int128","write_int128","write_int128","write_u128","write_u128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u24","write_u24","write_u32","write_u32","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u48","write_u48","write_u64","write_u64","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_u8","write_u8","write_uint","write_uint","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128","write_uint128","write_uint128"],"q":[[0,"byteorder"]],"d":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","Extends <code>Read</code> with methods for reading numbers. (For <code>std::io</code>…","Extends <code>Write</code> with methods for writing numbers. (For …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to a …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from <code>buf</code>.","Reads a sequence of signed 128 bit integers from the …","Reads a sequence of signed 128 bit integers from the …","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a sequence of signed 16 bit integers from the …","Reads a sequence of signed 16 bit integers from the …","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a sequence of signed 32 bit integers from the …","Reads a sequence of signed 32 bit integers from the …","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a sequence of signed 64 bit integers from the …","Reads a sequence of signed 64 bit integers from the …","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads a sequence of signed 8 bit integers from the …","Reads a sequence of signed 8 bit integers from the …","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","Reads an unsigned 128 bit integer from the underlying …","Reads an unsigned 128 bit integer from the underlying …","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 128 bit integers from the …","Reads a sequence of unsigned 128 bit integers from the …","","","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 16 bit integer from the underlying …","Reads an unsigned 16 bit integer from the underlying …","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 16 bit integers from the …","Reads a sequence of unsigned 16 bit integers from the …","","","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 32 bit integer from the underlying …","Reads an unsigned 32 bit integer from the underlying …","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 32 bit integers from the …","Reads a sequence of unsigned 32 bit integers from the …","","","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","Reads an unsigned 64 bit integer from the underlying …","Reads an unsigned 64 bit integer from the underlying …","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 64 bit integers from the …","Reads a sequence of unsigned 64 bit integers from the …","","","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 128 bit integer to the underlying …","Writes an unsigned 128 bit integer to the underlying …","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 16 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 32 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 64 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,26,1,2,26,1,2,26,26,26,26,26,1,2,26,1,2,26,1,2,26,1,2,1,2,1,2,1,2,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,27,27,27,27,26,27,27,26,26,27,27,1,2,26,27,27,1,2,26,27,27,1,2,26,27,27,1,2,27,27,26,26,27,27,1,2,26,27,27,1,2,27,27,26,26,27,27,1,2,26,27,27,1,2,27,27,26,27,27,1,2,26,27,27,1,2,1,2,1,2,1,2,1,2,28,28,26,26,28,28,26,26,28,28,26,26,28,28,26,26,28,28,26,28,28,26,26,28,28,26,28,28,26,26,28,28,26,28,28,26,28,28,26,26,28,28,1,2,26,1,2,26,28,28,1,2,26,1,2,28,28,26,26,28,28,1,2,26,1,2,28,28,26,26,28,28,1,2,26,1,2,28,28,26,28,28,1,2,26,28,28,1,2],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,1],3],[[2,2],3],[[],1],[[],2],[[1,1],4],[[2,2],4],[[],4],[[],4],[[1,5],6],[[2,5],6],[[]],[[]],[[[8,[7]]]],[[[8,[7]]]],[[[8,[7]]]],[[[8,[9]]]],[[[8,[9]]]],[[[8,[9]]]],[[[8,[10]]]],[[[8,[11]]]],[[[8,[12]]]],[[[8,[13]]]],[[[8,[14]]]],[[[8,[14]]]],[[[8,[14]]]],[[[8,[15]]]],[[[8,[15]]]],[[[8,[15]]]],[[[8,[16]]]],[[[8,[16]]]],[[[8,[16]]]],[[[8,[17]]]],[[[8,[17]]]],[[[8,[17]]]],[[1,18]],[[2,18]],[[]],[[]],[[1,1],[[19,[3]]]],[[2,2],[[19,[3]]]],[[],[[20,[7]]]],[[],[[20,[7]]]],[[[8,[21]]],7],[[[8,[7]]],20],[[[8,[7]]],20],[[[8,[21]],[8,[7]]]],[[[8,[7]]],20],[[[8,[7]]],20],[[[8,[21]],[8,[7]]]],[[],[[20,[9]]]],[[],[[20,[9]]]],[[[8,[21]]],9],[[[8,[9]]],20],[[[8,[9]]],20],[[[8,[21]],[8,[9]]]],[[[8,[9]]],20],[[[8,[9]]],20],[[[8,[21]],[8,[9]]]],[[],[[20,[10]]]],[[],[[20,[10]]]],[[[8,[21]]],10],[[[8,[10]]],20],[[[8,[10]]],20],[[[8,[21]],[8,[10]]]],[[],[[20,[11]]]],[[],[[20,[11]]]],[[[8,[21]]],11],[[[8,[11]]],20],[[[8,[11]]],20],[[[8,[21]],[8,[11]]]],[[],[[20,[12]]]],[[],[[20,[12]]]],[[[8,[21]]],12],[[],[[20,[12]]]],[[],[[20,[12]]]],[[[8,[21]]],12],[[[8,[12]]],20],[[[8,[12]]],20],[[[8,[21]],[8,[12]]]],[[],[[20,[13]]]],[[],[[20,[13]]]],[[[8,[21]]],13],[[],[[20,[13]]]],[[],[[20,[13]]]],[[[8,[21]]],13],[[[8,[13]]],20],[[[8,[13]]],20],[[[8,[21]],[8,[13]]]],[[],[[20,[22]]]],[[],[[20,[22]]]],[[[8,[22]]],20],[[[8,[22]]],20],[23,[[20,[13]]]],[23,[[20,[13]]]],[[[8,[21]],23],13],[23,[[20,[10]]]],[23,[[20,[10]]]],[[[8,[21]],23],10],[[[8,[21]]],14],[[],[[20,[14]]]],[[],[[20,[14]]]],[[[8,[21]]],14],[[[8,[21]]],14],[[[8,[21]],[8,[14]]]],[[[8,[14]]],20],[[[8,[14]]],20],[[[8,[21]],[8,[14]]]],[[[8,[21]],[8,[14]]]],[[[8,[21]]],15],[[],[[20,[15]]]],[[],[[20,[15]]]],[[[8,[21]]],15],[[[8,[21]]],15],[[[8,[21]],[8,[15]]]],[[[8,[15]]],20],[[[8,[15]]],20],[[[8,[21]],[8,[15]]]],[[[8,[21]],[8,[15]]]],[[],[[20,[16]]]],[[],[[20,[16]]]],[[[8,[21]]],16],[[[8,[21]]],16],[[],[[20,[16]]]],[[],[[20,[16]]]],[[[8,[21]]],16],[[[8,[21]]],16],[[[8,[21]],[8,[16]]]],[[[8,[16]]],20],[[[8,[16]]],20],[[[8,[21]],[8,[16]]]],[[[8,[21]],[8,[16]]]],[[],[[20,[17]]]],[[],[[20,[17]]]],[[[8,[21]]],17],[[[8,[21]]],17],[[],[[20,[17]]]],[[],[[20,[17]]]],[[[8,[21]]],17],[[[8,[21]]],17],[[[8,[21]],[8,[17]]]],[[[8,[17]]],20],[[[8,[17]]],20],[[[8,[21]],[8,[17]]]],[[[8,[21]],[8,[17]]]],[[],[[20,[21]]]],[[],[[20,[21]]]],[[[8,[21]],23],17],[23,[[20,[17]]]],[23,[[20,[17]]]],[[[8,[21]],23],17],[[[8,[21]],23],17],[[[8,[21]],23],14],[23,[[20,[14]]]],[23,[[20,[14]]]],[[[8,[21]],23],14],[[[8,[21]],23],14],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[7,20],[7,20],[[[8,[21]],7]],[[[8,[7]],[8,[21]]]],[9,20],[9,20],[[[8,[21]],9]],[[[8,[9]],[8,[21]]]],[10,20],[10,20],[[[8,[21]],10]],[[[8,[10]],[8,[21]]]],[11,20],[11,20],[[[8,[21]],11]],[[[8,[11]],[8,[21]]]],[12,20],[12,20],[[[8,[21]],12]],[12,20],[12,20],[[[8,[21]],12]],[[[8,[12]],[8,[21]]]],[13,20],[13,20],[[[8,[21]],13]],[13,20],[13,20],[[[8,[21]],13]],[[[8,[13]],[8,[21]]]],[22,20],[22,20],[[[8,[22]],[8,[21]]]],[[13,23],20],[[13,23],20],[[[8,[21]],13,23]],[[10,23],20],[[10,23],20],[[[8,[21]],10,23]],[[[8,[21]],14]],[14,20],[14,20],[[[8,[21]],14]],[[[8,[21]],14]],[[[8,[14]],[8,[21]]]],[[[8,[14]],[8,[21]]]],[[[8,[14]],[8,[21]]]],[[[8,[21]],15]],[15,20],[15,20],[[[8,[21]],15]],[[[8,[21]],15]],[[[8,[15]],[8,[21]]]],[[[8,[15]],[8,[21]]]],[[[8,[15]],[8,[21]]]],[16,20],[16,20],[[[8,[21]],16]],[[[8,[21]],16]],[16,20],[16,20],[[[8,[21]],16]],[[[8,[21]],16]],[[[8,[16]],[8,[21]]]],[[[8,[16]],[8,[21]]]],[[[8,[16]],[8,[21]]]],[17,20],[17,20],[[[8,[21]],17]],[[[8,[21]],17]],[17,20],[17,20],[[[8,[21]],17]],[[[8,[21]],17]],[[[8,[17]],[8,[21]]]],[[[8,[17]],[8,[21]]]],[[[8,[17]],[8,[21]]]],[21,20],[21,20],[[[8,[21]],17,23]],[[17,23],20],[[17,23],20],[[[8,[21]],17,23]],[[[8,[21]],17,23]],[[[8,[21]],14,23]],[[14,23],20],[[14,23],20],[[[8,[21]],14,23]],[[[8,[21]],14,23]]],"c":[63,64,65,72,73,74],"p":[[4,"BigEndian"],[4,"LittleEndian"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"f32"],[15,"slice"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[8,"Hasher"],[4,"Option"],[6,"Result"],[15,"u8"],[15,"i8"],[15,"usize"],[4,"Result"],[3,"TypeId"],[8,"ByteOrder"],[8,"ReadBytesExt"],[8,"WriteBytesExt"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":"O","n":["cfg_if"],"q":[[0,"cfg_if"]],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"c":[],"p":[]},\
"color_quant":{"doc":"Color quantization library","t":"DLLLLLLLLLLLLLL","n":["NeuQuant","borrow","borrow_mut","color_map_rgb","color_map_rgba","from","index_of","init","into","lookup","map_pixel","new","try_from","try_into","type_id"],"q":[[0,"color_quant"]],"d":["","","","Returns the RGBA color map calculated from the sample.","Returns the RGBA color map calculated from the sample.","Returns the argument unchanged.","Finds the best-matching index in the color map.","Initializes the neuronal network and trains it with the …","Calls <code>U::from(self)</code>.","Lookup pixel values for color at <code>idx</code> in the colormap.","Maps the rgba-pixel in-place to the best-matching color in …","Creates a new neuronal network and trains it with the …","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1,[[3,[2]]]],[1,[[3,[2]]]],[[]],[[1,[4,[2]]],5],[[1,[4,[2]]]],[[]],[[1,5],[[7,[[6,[2]]]]]],[[1,[4,[2]]]],[[8,5,[4,[2]]],1],[[],9],[[],9],[[],10]],"c":[],"p":[[3,"NeuQuant"],[15,"u8"],[3,"Vec"],[15,"slice"],[15,"usize"],[15,"array"],[4,"Option"],[15,"i32"],[4,"Result"],[3,"TypeId"]]},\
"crc32fast":{"doc":"Fast, SIMD-accelerated CRC32 (IEEE) checksum computation.","t":"DLLLLLLLLLLFLLLLLLLLLLL","n":["Hasher","borrow","borrow_mut","clone","clone_into","combine","default","finalize","finish","fmt","from","hash","into","new","new_with_initial","new_with_initial_len","reset","to_owned","try_from","try_into","type_id","update","write"],"q":[[0,"crc32fast"]],"d":["Represents an in-progress CRC32 computation.","","","","","Combine the hash state with the hash state for the …","","Finalize the hash state and return the computed CRC32 …","","","Returns the argument unchanged.","Computes the CRC32 hash of a byte slice.","Calls <code>U::from(self)</code>.","Create a new <code>Hasher</code>.","Create a new <code>Hasher</code> with an initial CRC32 state.","Create a new <code>Hasher</code> with an initial CRC32 state.","Reset the hash state.","","","","","Process the given byte slice and update the hash state.",""],"i":[0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1,1],[[]],[[1,1]],[[],1],[1,2],[1,3],[[1,4],5],[[]],[[[7,[6]]],2],[[]],[[],1],[2,1],[[2,3],1],[1],[[]],[[],8],[[],8],[[],9],[[1,[7,[6]]]],[[1,[7,[6]]]]],"c":[],"p":[[3,"Hasher"],[15,"u32"],[15,"u64"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[4,"Result"],[3,"TypeId"]]},\
"crossbeam_deque":{"doc":"Concurrent work-stealing deques.","t":"NDNEDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Empty","Injector","Retry","Steal","Stealer","Success","Worker","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_iter","init","init","init","init","into","into","into","into","is_empty","is_empty","is_empty","is_empty","is_retry","is_success","len","len","len","new","new_fifo","new_lifo","or_else","pop","push","push","steal","steal","steal_batch","steal_batch","steal_batch_and_pop","steal_batch_and_pop","steal_batch_with_limit","steal_batch_with_limit","steal_batch_with_limit_and_pop","steal_batch_with_limit_and_pop","stealer","success","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"crossbeam_deque"]],"d":["The queue was empty at the time of stealing.","An injector queue.","The steal operation needs to be retried.","Possible outcomes of a steal operation.","A stealer handle of a worker queue.","At least one task was successfully stolen.","A worker queue.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Consumes items until a <code>Success</code> is found and returns it.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue was empty at the time of …","Returns <code>true</code> if the steal operation needs to be retried.","Returns <code>true</code> if at least one task was stolen.","Returns the number of tasks in the deque.","Returns the number of tasks in the deque.","Returns the number of tasks in the queue.","Creates a new injector queue.","Creates a FIFO worker queue.","Creates a LIFO worker queue.","If no task was stolen, attempts another steal operation.","Pops a task from the queue.","Pushes a task into the queue.","Pushes a task into the queue.","Steals a task from the queue.","Steals a task from the queue.","Steals a batch of tasks and pushes them into another …","Steals a batch of tasks and pushes them into a worker.","Steals a batch of tasks, pushes them into another worker, …","Steals a batch of tasks, pushes them into a worker, and …","Steals no more than <code>limit</code> of tasks and pushes them into …","Steals no more than of tasks and pushes them into a worker.","Steals no more than <code>limit</code> of tasks, pushes them into …","Steals no more than <code>limit</code> of tasks, pushes them into a …","Creates a stealer for this queue.","Returns the result of the operation, if successful.","","","","","","","","","","","","","",""],"i":[3,0,3,0,0,3,0,8,1,4,3,8,1,4,3,1,3,1,3,4,8,1,4,3,8,1,4,3,8,1,4,4,3,3,3,8,1,4,3,8,1,4,3,3,8,1,4,3,8,1,4,3,8,1,4,3,3,3,8,1,4,4,8,8,3,8,8,4,1,4,1,4,1,4,1,4,1,4,8,3,1,3,8,1,4,3,8,1,4,3,8,1,4,3],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[[3,[2]]],[[3,[2]]]],[[]],[[]],[[],4],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[4],[5],[5],[[[3,[6]],[3,[6]]],7],[[],7],[[8,9],10],[[1,9],10],[[4,9],10],[[3,9],10],[[]],[[]],[[]],[[]],[11,3],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[8,7],[1,7],[4,7],[3,7],[3,7],[3,7],[8,5],[1,5],[4,5],[[],4],[[],8],[[],8],[[3,12],3],[8,13],[8],[4],[1,3],[4,3],[[1,8],3],[[4,8],3],[[1,8],3],[[4,8],3],[[1,8,5],3],[[4,8,5],3],[[1,8,5],3],[[4,8,5],3],[8,1],[3,13],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15]],"c":[],"p":[[3,"Stealer"],[8,"Clone"],[4,"Steal"],[3,"Injector"],[15,"usize"],[8,"PartialEq"],[15,"bool"],[3,"Worker"],[3,"Formatter"],[6,"Result"],[8,"IntoIterator"],[8,"FnOnce"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"crossbeam_epoch":{"doc":"Epoch-based memory reclamation.","t":"SDDGIDDQDDIIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLFLLLKLLLLLLLLLKLLLLLLLLLKLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLLLLLLLKLLLFLLLLLLMLLLFLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLL","n":["ALIGN","Atomic","Collector","CompareAndSetError","CompareAndSetOrdering","CompareExchangeError","Guard","Init","LocalHandle","Owned","Pointable","Pointer","Shared","as_mut","as_raw","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","collector","collector","compare_and_set","compare_and_set_weak","compare_exchange","compare_exchange_weak","current","default","default","default","default_collector","defer","defer_destroy","defer_unchecked","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","failure","fetch_and","fetch_or","fetch_update","fetch_xor","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw","from_usize","from_usize","from_usize","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_box","into_owned","into_owned","into_shared","into_usize","into_usize","into_usize","is_null","is_pinned","is_pinned","load","load_consume","new","new","new","new","null","null","partial_cmp","pin","pin","register","repin","repin_after","store","success","swap","tag","tag","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_owned","try_into_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unprotected","with_tag","with_tag"],"q":[[0,"crossbeam_epoch"]],"d":["The alignment of pointer.","An atomic pointer that can be safely shared between …","An epoch-based garbage collector.","The error returned on failed compare-and-set operation.","Memory orderings for compare-and-set operations.","The error returned on failed compare-and-swap operation.","A guard that keeps the current thread pinned.","The type for initializers.","A handle to a garbage collector.","An owned heap-allocated object.","Types that are pointed to by a single word.","A trait for either <code>Owned</code> or <code>Shared</code> pointers.","A pointer to an object protected by the epoch GC.","","Converts the pointer to a raw pointer (without the tag).","","Converts the pointer to a reference.","","","","","","","","","","","","","","","","","Returns a copy of the atomic value.","","","Creates another reference to the same garbage collector.","","","","","","Returns the <code>Collector</code> associated with this handle.","Returns the <code>Collector</code> associated with this guard.","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","The value in the atomic pointer at the time of the failed …","","","","Returns the default global collector.","Stores a function so that it can be executed at some point …","Stores a destructor for an object so that it can be …","Stores a function so that it can be executed at some point …","Dereferences the given pointer.","","","","","Dereferences the pointer.","","","","","Mutably dereferences the given pointer.","","","","","Dereferences the pointer.","","","","","Drops the object pointed to by the given pointer.","","","","","","","","","","","","Checks if both handles point to the same collector.","","","The ordering of the operation when it fails.","Bitwise “and” with the current tag.","Bitwise “or” with the current tag.","Fetches the pointer, and then applies a function to it …","Bitwise “xor” with the current tag.","Clears up the thread-local cache of deferred functions by …","","","","","","","","","","Returns the argument unchanged.","Returns a new atomic pointer pointing to <code>ptr</code>.","Returns the argument unchanged.","Returns a new atomic pointer pointing to <code>raw</code>.","","Returns a new atomic pointer pointing to <code>owned</code>.","","","","","Returns the argument unchanged.","Returns a new owned pointer pointing to <code>b</code>.","Returns a new pointer pointing to <code>raw</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a new owned pointer pointing to <code>raw</code>.","Returns a new pointer pointing to the tagged pointer <code>data</code>.","Returns a new pointer pointing to the tagged pointer <code>data</code>.","","Initializes a with the given initializer.","","Allocates <code>value</code> on the heap and returns a new atomic …","","Allocates <code>value</code> on the heap and returns a new owned …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the owned pointer into a <code>Box</code>.","Takes ownership of the pointee.","Takes ownership of the pointee.","Converts the owned pointer into a <code>Shared</code>.","Returns the machine representation of the pointer.","","","Returns <code>true</code> if the pointer is null.","Returns <code>true</code> if the current thread is pinned.","Returns <code>true</code> if the handle is pinned.","Loads a <code>Shared</code> from the atomic pointer.","Loads a <code>Shared</code> from the atomic pointer using a “consume…","Allocates <code>value</code> on the heap and returns a new atomic …","Allocates <code>value</code> on the heap and returns a new owned …","Creates a new collector.","The new value, which the operation failed to store.","Returns a new null atomic pointer.","Returns a new null pointer.","","Pins the current thread.","Pins the handle.","Registers a new handle for the collector.","Unpins and then immediately re-pins the thread.","Temporarily unpins the thread, executes the given function …","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer.","The ordering of the operation when it succeeds.","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer, …","Returns the tag stored within the pointer.","Returns the tag stored within the pointer.","","","","","","","","","","","","","","","","","","","Takes ownership of the pointee if it is non-null.","Takes ownership of the pointee if it is not null.","","","","","","","","Returns a reference to a dummy guard that allows …","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …"],"i":[2,0,0,0,0,0,0,2,0,0,0,0,0,3,4,3,4,17,6,3,3,4,8,10,11,17,6,3,3,4,8,10,11,6,3,4,8,6,3,4,8,4,10,11,6,6,6,6,17,6,4,8,0,11,11,11,2,17,6,3,3,4,4,8,10,11,2,17,6,3,3,4,4,8,10,11,2,17,6,3,3,4,8,10,10,11,11,4,8,4,8,13,6,6,6,6,11,17,6,6,3,4,4,8,10,11,17,6,6,6,6,6,6,6,3,3,3,3,4,4,8,10,11,3,12,3,4,2,17,6,6,3,3,4,8,10,11,17,6,3,4,8,10,11,3,6,4,3,12,3,4,4,0,10,6,6,6,3,8,17,6,4,4,0,10,8,11,11,6,13,6,3,4,6,3,4,8,17,6,3,4,8,10,11,17,6,3,4,8,10,11,6,4,17,6,3,4,8,10,11,0,3,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[[3,[[0,[1,2]]]]],[[0,[1,2]]]],[4],[[[3,[[0,[1,2]]]]],[[0,[1,2]]]],[[[4,[[0,[1,2]]]]],[[5,[[0,[1,2]]]]]],[[]],[[]],[[[3,[[0,[1,2]]]]],[[0,[1,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[[0,[1,2]]]]],[[0,[1,2]]]],[[]],[[]],[[]],[[]],[[[6,[[0,[1,2]]]]],[[6,[[0,[1,2]]]]]],[[[3,[7]]],[[3,[7]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[8,8],[[]],[[]],[[]],[[]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],9],[10,8],[11,[[5,[8]]]],[[[6,[[0,[1,2]]]],[4,[[0,[1,2]]]],[12,[[0,[1,2]]]],13,11],[[15,[[4,[[0,[1,2]]]],[14,[[0,[1,2]],[12,[[0,[1,2]]]]]]]]]],[[[6,[[0,[1,2]]]],[4,[[0,[1,2]]]],[12,[[0,[1,2]]]],13,11],[[15,[[4,[[0,[1,2]]]],[14,[[0,[1,2]],[12,[[0,[1,2]]]]]]]]]],[[[6,[[0,[1,2]]]],[4,[[0,[1,2]]]],[12,[[0,[1,2]]]],16,16,11],[[15,[[4,[[0,[1,2]]]],[17,[[0,[1,2]],[12,[[0,[1,2]]]]]]]]]],[[[6,[[0,[1,2]]]],[4,[[0,[1,2]]]],[12,[[0,[1,2]]]],16,16,11],[[15,[[4,[[0,[1,2]]]],[17,[[0,[1,2]],[12,[[0,[1,2]]]]]]]]]],0,[[],[[6,[[0,[1,2]]]]]],[[],[[4,[[0,[1,2]]]]]],[[],8],[[],8],[[11,[0,[18,19]]]],[[11,4]],[[11,18]],[20],[20],[20],[20],[[[3,[[0,[1,2]]]]],[[0,[1,2]]]],[[[4,[[0,[1,2]]]]],[[0,[1,2]]]],[20],[20],[20],[20],[20],[20],[20],[20],[[[3,[[0,[1,2]]]]],[[0,[1,2]]]],[[[4,[[0,[1,2]]]]],[[0,[1,2]]]],[20],[20],[20],[20],[20],[20],[20],[20],[[[3,[[0,[1,2]]]]]],[20],[20],[20],[10],[11],[20],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],21],[[8,8],21],[[],21],[[],21],[[],16],[[[6,[[0,[1,2]]]],20,16,11],[[4,[[0,[1,2]]]]]],[[[6,[[0,[1,2]]]],20,16,11],[[4,[[0,[1,2]]]]]],[[[6,[[0,[1,2]]]],16,16,11,22],[[15,[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]]]]],[[[6,[[0,[1,2]]]],20,16,11],[[4,[[0,[1,2]]]]]],[11],[[[17,[[0,[12,23]]]],24],25],[[[6,[[0,[1,2]]]],24],25],[[[6,[[0,[1,2]]]],24],25],[[[3,[[0,[1,2]]]],24],25],[[[4,[[0,[1,2]]]],24],25],[[[4,[[0,[1,2]]]],24],25],[[8,24],25],[[10,24],25],[[11,24],25],[[]],[[[4,[[0,[1,2]]]]],[[6,[[0,[1,2]]]]]],[[]],[[],6],[26],[[[3,[[0,[1,2]]]]],[[6,[[0,[1,2]]]]]],[27,6],[[],6],[[],3],[26],[[]],[27,3],[[],4],[[]],[[]],[[]],[[]],[[],3],[20],[20,[[3,[[0,[1,2]]]]]],[20,[[4,[[0,[1,2]]]]]],[[],20],[[],20],[[],[[6,[[0,[1,2]]]]]],[[],20],[[],[[3,[[0,[1,2]]]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,27],[[[6,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]],11],[[4,[[0,[1,2]]]]]],[[],20],[[[3,[[0,[1,2]]]]],20],[[[4,[[0,[1,2]]]]],20],[[[4,[[0,[1,2]]]]],21],[[],21],[10,21],[[[6,[[0,[1,2]]]],16,11],[[4,[[0,[1,2]]]]]],[[[6,[[0,[1,2]]]],11],[[4,[[0,[1,2]]]]]],[[],6],[[],3],[[],8],0,[[],[[6,[[0,[1,2]]]]]],[[],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[5,[9]]]],[[],11],[10,11],[8,10],[11],[[11,18]],[[[6,[[0,[1,2]]]],[12,[[0,[1,2]]]],16]],[[],16],[[[6,[[0,[1,2]]]],[12,[[0,[1,2]]]],16,11],[[4,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]]],20],[[[4,[[0,[1,2]]]]],20],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[[6,[[0,[1,2]]]]],[[5,[[3,[[0,[1,2]]]]]]]],[[[4,[[0,[1,2]]]]],[[5,[[3,[[0,[1,2]]]]]]]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],11],[[[3,[[0,[1,2]]]],20],[[3,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],20],[[4,[[0,[1,2]]]]]]],"c":[3,4,44,45,91,169],"p":[[8,"Sized"],[8,"Pointable"],[3,"Owned"],[3,"Shared"],[4,"Option"],[3,"Atomic"],[8,"Clone"],[3,"Collector"],[4,"Ordering"],[3,"LocalHandle"],[3,"Guard"],[8,"Pointer"],[8,"CompareAndSetOrdering"],[6,"CompareAndSetError"],[4,"Result"],[4,"Ordering"],[3,"CompareExchangeError"],[8,"FnOnce"],[8,"Send"],[15,"usize"],[15,"bool"],[8,"FnMut"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"never"],[3,"Box"],[3,"TypeId"]]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","t":"DDALLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLDIQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLL","n":["Backoff","CachePadded","atomic","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","from","from","from","from","hash","into","into","into_inner","is_completed","new","new","reset","snooze","spin","sync","thread","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","AtomicCell","AtomicConsume","Val","as_ptr","borrow","borrow_mut","compare_and_swap","compare_exchange","default","drop","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_update","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fmt","from","from","from","into","into_inner","is_lock_free","load","load_consume","new","store","swap","take","try_from","try_into","type_id","Parker","ShardedLock","ShardedLockReadGuard","ShardedLockWriteGuard","Unparker","WaitGroup","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","default","deref","deref","deref_mut","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","from_raw","get_mut","into","into","into","into","into","into","into_inner","into_raw","into_raw","is_poisoned","new","new","new","park","park_deadline","park_timeout","read","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","unpark","unparker","wait","write","Scope","ScopedJoinHandle","ScopedThreadBuilder","as_raw_handle","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","fmt","fmt","fmt","from","from","from","into","into","into","into_raw_handle","join","name","scope","spawn","spawn","stack_size","thread","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"crossbeam_utils"],[40,"crossbeam_utils::atomic"],[167,"crossbeam_utils::sync"],[261,"crossbeam_utils::thread"]],"d":["Performs exponential backoff in spin loops.","Pads and aligns a value to the length of a cache line.","Atomic types.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the inner value.","Returns <code>true</code> if exponential backoff has completed and …","Creates a new <code>Backoff</code>.","Pads and aligns a value to the length of a cache line.","Resets the <code>Backoff</code>.","Backs off in a blocking loop.","Backs off in a lock-free loop.","Thread synchronization primitives.","Threads that can borrow variables from the stack.","","","","","","","","A thread-safe mutable memory location.","Trait which allows reading from primitive atomic types …","Type returned by <code>load_consume</code>.","Returns a raw pointer to the underlying data in this …","","","If the current value equals <code>current</code>, stores <code>new</code> into the …","If the current value equals <code>current</code>, stores <code>new</code> into the …","","","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies logical “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies logical “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies logical “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Fetches the value, and applies a function to it that …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies logical “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Consumes the atomic and returns the contained value.","Returns <code>true</code> if operations on values of this type are …","Loads a value from the atomic cell.","Loads a value from the atomic using a “consume” memory …","Creates a new atomic cell initialized with <code>val</code>.","Stores <code>val</code> into the atomic cell.","Stores <code>val</code> into the atomic cell and returns the previous …","Takes the value of the atomic cell, leaving …","","","","A thread parking primitive.","A sharded reader-writer lock.","A guard used to release the shared read access of a …","A guard used to release the exclusive write access of a …","Unparks a thread parked by the associated <code>Parker</code>.","Enables threads to synchronize the beginning or end of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a raw pointer into a <code>Parker</code>.","Converts a raw pointer into an <code>Unparker</code>.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this lock, returning the underlying data.","Converts a <code>Parker</code> into a raw pointer.","Converts an <code>Unparker</code> into a raw pointer.","Returns <code>true</code> if the lock is poisoned.","Creates a new <code>Parker</code>.","Creates a new sharded reader-writer lock.","Creates a new wait group and returns the single reference …","Blocks the current thread until the token is made …","Blocks the current thread until the token is made …","Blocks the current thread until the token is made …","Locks with shared read access, blocking the current thread …","","","","","","","","","","","","","","","","","Attempts to acquire this lock with shared read access.","Attempts to acquire this lock with exclusive write access.","","","","","","","Atomically makes the token available if it is not already.","Returns a reference to an associated <code>Unparker</code>.","Drops this reference and waits until all other references …","Locks with exclusive write access, blocking the current …","A scope for spawning threads.","A handle that can be used to join its scoped thread.","Configures the properties of a new thread.","","","","","","","","Creates a builder that can configure a thread before …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Waits for the thread to finish and returns its result.","Sets the name for the new thread.","Creates a new scope for spawning threads.","Spawns a scoped thread.","Spawns a scoped thread with this configuration.","Sets the size of the stack for the new thread.","Returns a handle to the underlying thread.","","","","","","","","",""],"i":[0,0,0,3,2,3,2,2,2,3,2,2,2,2,2,3,2,3,2,2,2,2,3,2,2,3,3,2,3,3,3,0,0,2,3,2,3,2,3,2,0,0,53,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,53,15,15,15,15,15,15,15,0,0,0,0,0,0,33,31,34,32,36,37,33,31,34,32,36,37,31,32,31,32,33,34,32,36,37,37,32,37,33,31,34,32,36,36,37,37,33,31,34,34,34,32,36,37,33,31,34,33,31,34,32,36,37,34,33,31,34,33,34,32,33,33,33,34,31,32,36,37,33,31,34,32,36,37,33,31,34,32,36,37,34,34,33,31,34,32,36,37,31,33,32,34,0,0,0,44,46,44,47,46,44,47,46,46,44,47,46,44,47,46,44,47,44,44,47,0,46,47,47,44,46,44,47,46,44,47,46,44,47],"f":[0,0,0,[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[]],[[],3],[[],[[2,[4]]]],[2],[2],[[[2,[5]],[2,[5]]],6],[[],6],[[3,7],8],[[[2,[9]],7],8],[[]],[[]],[10],[[],2],[[[2,[11]],12]],[[]],[[]],[2],[3,6],[[],3],[[],2],[3],[3],[3],0,0,[[]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],0,0,0,[15],[[]],[[]],[[[15,[[0,[16,17]]]],[0,[16,17]],[0,[16,17]]],[[0,[16,17]]]],[[[15,[[0,[16,17]]]],[0,[16,17]],[0,[16,17]]],[[13,[[0,[16,17]],[0,[16,17]]]]]],[[],[[15,[4]]]],[15],[[[15,[18]],18],18],[[[15,[19]],19],19],[[[15,[20]],20],20],[[[15,[21]],21],21],[[[15,[22]],22],22],[[[15,[23]],23],23],[[[15,[24]],24],24],[[[15,[25]],25],25],[[[15,[26]],26],26],[[[15,[27]],27],27],[[[15,[28]],28],28],[[[15,[29]],29],29],[[[15,[22]],22],22],[[[15,[19]],19],19],[[[15,[27]],27],27],[[[15,[26]],26],26],[[[15,[28]],28],28],[[[15,[18]],18],18],[[[15,[6]],6],6],[[[15,[24]],24],24],[[[15,[25]],25],25],[[[15,[29]],29],29],[[[15,[21]],21],21],[[[15,[23]],23],23],[[[15,[20]],20],20],[[[15,[19]],19],19],[[[15,[23]],23],23],[[[15,[20]],20],20],[[[15,[24]],24],24],[[[15,[25]],25],25],[[[15,[26]],26],26],[[[15,[21]],21],21],[[[15,[22]],22],22],[[[15,[27]],27],27],[[[15,[29]],29],29],[[[15,[28]],28],28],[[[15,[18]],18],18],[[[15,[27]],27],27],[[[15,[20]],20],20],[[[15,[18]],18],18],[[[15,[28]],28],28],[[[15,[29]],29],29],[[[15,[23]],23],23],[[[15,[19]],19],19],[[[15,[22]],22],22],[[[15,[21]],21],21],[[[15,[26]],26],26],[[[15,[25]],25],25],[[[15,[24]],24],24],[[[15,[28]],28],28],[[[15,[22]],22],22],[[[15,[6]],6],6],[[[15,[20]],20],20],[[[15,[25]],25],25],[[[15,[21]],21],21],[[[15,[19]],19],19],[[[15,[23]],23],23],[[[15,[27]],27],27],[[[15,[29]],29],29],[[[15,[26]],26],26],[[[15,[18]],18],18],[[[15,[24]],24],24],[[[15,[21]],21],21],[[[15,[28]],28],28],[[[15,[23]],23],23],[[[15,[22]],22],22],[[[15,[19]],19],19],[[[15,[24]],24],24],[[[15,[27]],27],27],[[[15,[18]],18],18],[[[15,[29]],29],29],[[[15,[6]],6],6],[[[15,[25]],25],25],[[[15,[20]],20],20],[[[15,[26]],26],26],[[[15,[21]],21],21],[[[15,[22]],22],22],[[[15,[26]],26],26],[[[15,[23]],23],23],[[[15,[25]],25],25],[[[15,[20]],20],20],[[[15,[29]],29],29],[[[15,[19]],19],19],[[[15,[28]],28],28],[[[15,[24]],24],24],[[[15,[27]],27],27],[[[15,[18]],18],18],[[[15,[[0,[16,17]]]],30],[[13,[[0,[16,17]],[0,[16,17]]]]]],[[[15,[23]],23],23],[[[15,[18]],18],18],[[[15,[26]],26],26],[[[15,[20]],20],20],[[[15,[27]],27],27],[[[15,[24]],24],24],[[[15,[6]],6],6],[[[15,[25]],25],25],[[[15,[21]],21],21],[[[15,[29]],29],29],[[[15,[19]],19],19],[[[15,[22]],22],22],[[[15,[28]],28],28],[[[15,[[0,[16,9]]]],7],8],[[],15],[10],[[]],[[]],[15],[[],6],[[[15,[16]]],16],[[]],[[],15],[15],[15],[[[15,[4]]],4],[[],13],[[],13],[[],14],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,31],[32,32],[[]],[[]],[[],33],[[],[[34,[4]]]],[[],32],[[[36,[35]]],35],[[[37,[35]]],35],[[[37,[35]]],35],[32],[[[37,[35]]]],[[33,7],8],[[31,7],8],[[[34,[[0,[35,9]]]],7],8],[[32,7],8],[[[36,[[0,[35,38]]]],7],8],[[[36,[9]],7],8],[[[37,[9]],7],8],[[[37,[[0,[35,38]]]],7],8],[[]],[[]],[10],[[]],[[],34],[[]],[[]],[[]],[[],33],[[],31],[[[34,[35]]],[[39,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[34,39],[33],[31],[[[34,[35]]],6],[[],33],[[],34],[[],32],[33],[[33,40]],[[33,41]],[[[34,[35]]],[[39,[[36,[35]]]]]],[[]],[[]],[[],42],[[],42],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[34,[35]]],[[43,[[36,[35]]]]]],[[[34,[35]]],[[43,[[37,[35]]]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[31],[33,31],[32],[[[34,[35]]],[[39,[[37,[35]]]]]],0,0,0,[44,45],[[]],[[]],[[]],[[]],[[]],[[]],[46,47],[[46,7],8],[[44,7],8],[[47,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[44,45],[44,48],[[47,42],47],[49,48],[[46,[0,[49,50]]],[[44,[50]]]],[[47,[0,[49,50]]],[[51,[[44,[50]]]]]],[[47,25],47],[44,52],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14]],"c":[46],"p":[[8,"Clone"],[3,"CachePadded"],[3,"Backoff"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"never"],[8,"Hash"],[8,"Hasher"],[4,"Result"],[3,"TypeId"],[3,"AtomicCell"],[8,"Copy"],[8,"Eq"],[15,"u16"],[15,"u128"],[15,"isize"],[15,"i128"],[15,"u8"],[15,"i64"],[15,"i8"],[15,"usize"],[15,"i16"],[15,"i32"],[15,"u64"],[15,"u32"],[8,"FnMut"],[3,"Unparker"],[3,"WaitGroup"],[3,"Parker"],[3,"ShardedLock"],[8,"Sized"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"],[8,"Display"],[6,"LockResult"],[3,"Instant"],[3,"Duration"],[3,"String"],[6,"TryLockResult"],[3,"ScopedJoinHandle"],[6,"RawHandle"],[3,"Scope"],[3,"ScopedThreadBuilder"],[6,"Result"],[8,"FnOnce"],[8,"Send"],[6,"Result"],[3,"Thread"],[8,"AtomicConsume"]]},\
"deflate":{"doc":"An implementation an encoder using DEFLATE compression …","t":"NEDNNNNENENNLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLMLLLLLLLLLLLLLLLLLADDLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Best","Compression","CompressionOptions","Default","Fast","Greedy","Lazy","MatchingType","Normal","SpecialOptions","_ForceFixed","_ForceStored","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","deflate_bytes","deflate_bytes_conf","deflate_bytes_zlib","deflate_bytes_zlib_conf","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fast","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","high","huffman_only","into","into","into","into","lazy_if_less_than","matching_type","max_hash_checks","partial_cmp","partial_cmp","rle","special","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","DeflateEncoder","ZlibEncoder","borrow","borrow","borrow_mut","borrow_mut","checksum","drop","drop","finish","finish","flush","flush","from","from","into","into","new","new","reset","reset","try_from","try_from","try_into","try_into","type_id","type_id","write","write"],"q":[[0,"deflate"],[91,"deflate::write"]],"d":["Higher compression level (<code>CompressionOptions::high()</code>).","An enum describing the level of compression to be used by …","A struct describing the options for a compressor or …","Default level (<code>CompressionOptions::default()</code>).","Fast minimal compression (<code>CompressionOptions::fast()</code>).","Use greedy matching: the matching algorithm simply uses a …","Use lazy matching: after finding a match, the next input …","An enum describing whether we use lazy or greedy matching.","Compress normally.","Enum allowing some special options (not implemented yet)!","Force fixed huffman tables. (Unimplemented!).","Force stored (uncompressed) blocks only. (Unimplemented!).","","","","","","","","","","","","","","","","","","","","","Returns the options describing the default compression …","Compress the given slice of bytes with DEFLATE compression …","Compress the given slice of bytes with DEFLATE compression.","Compress the given slice of bytes with DEFLATE …","Compress the given slice of bytes with DEFLATE …","","","","","","","","","Returns  a fast set of compression settings","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns compression settings rouhgly corresponding to the …","Returns a set of compression settings that makes the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Only lazy match if we have a length less than this value.","Whether to use lazy or greedy matching.","The maximum number of checks to make in the hash table for …","","","Returns a set of compression settings that makes the …","Force fixed/stored blocks (Not implemented yet).","","","","","","","","","","","","","","","","","","Encoders implementing a <code>Write</code> interface.","A DEFLATE encoder/compressor.","A Zlib encoder/compressor.","","","","","Return the adler32 checksum of the currently consumed data.","When the encoder is dropped, output the rest of the data.","When the encoder is dropped, output the rest of the data.","Encode all pending data to the contained writer, consume …","Encode all pending data to the contained writer, consume …","Flush the encoder.","Flush the encoder.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new encoder using the provided compression …","Create a new <code>ZlibEncoder</code> using the provided compression …","Resets the encoder (except the compression options), …","Resets the encoder (except the compression options), …","","","","","","","",""],"i":[1,0,0,1,1,4,4,0,2,0,2,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,4,1,2,3,0,0,0,0,1,2,3,4,1,2,3,4,3,1,2,3,4,4,1,2,3,3,4,1,2,3,4,3,3,1,2,3,4,3,3,3,1,4,3,3,1,2,3,4,4,1,2,3,4,1,2,3,4,1,2,3,4,0,0,0,21,19,21,19,19,21,19,21,19,21,19,21,19,21,19,21,19,21,19,21,19,21,19,21,19,21,19],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[[]],[[]],[[]],[[]],[[1,1],5],[[4,4],5],[[],1],[[],2],[[],3],[[[7,[6]]],[[8,[6]]]],[[[7,[6]],[9,[3]]],[[8,[6]]]],[[[7,[6]]],[[8,[6]]]],[[[7,[6]],[9,[3]]],[[8,[6]]]],[[1,1],10],[[2,2],10],[[3,3],10],[[4,4],10],[[],10],[[],10],[[],10],[[],10],[[],3],[[1,11],12],[[2,11],12],[[3,11],12],[[4,11],12],[[4,11],12],[[]],[[]],[[]],[1,3],[[]],[[1,13]],[[2,13]],[[3,13]],[[4,13]],[[],3],[[],3],[[]],[[]],[[]],[[]],0,0,0,[[1,1],[[14,[5]]]],[[4,4],[[14,[5]]]],[[],3],0,[[]],[[]],[[]],[[]],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],0,0,0,[[]],[[]],[[]],[[]],[[[19,[18]]],20],[[[21,[18]]]],[[[19,[18]]]],[[[21,[18]]],[[22,[18]]]],[[[19,[18]]],[[22,[18]]]],[[[21,[18]]],22],[[[19,[18]]],22],[[]],[[]],[[]],[[]],[[18,[9,[3]]],[[21,[18]]]],[[18,[9,[3]]],[[19,[18]]]],[[[21,[18]],18],[[22,[18]]]],[[[19,[18]],18],[[22,[18]]]],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[[21,[18]],[7,[6]]],[[22,[23]]]],[[[19,[18]],[7,[6]]],[[22,[23]]]]],"c":[],"p":[[4,"Compression"],[4,"SpecialOptions"],[3,"CompressionOptions"],[4,"MatchingType"],[4,"Ordering"],[15,"u8"],[15,"slice"],[3,"Vec"],[8,"Into"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[8,"Write"],[3,"ZlibEncoder"],[15,"u32"],[3,"DeflateEncoder"],[6,"Result"],[15,"usize"]]},\
"either":{"doc":"The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","t":"EDCNCNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOLLLL","n":["Either","IterEither","Left","Left","Right","Right","all","all","any","any","as_mut","as_mut","as_mut","as_mut","as_pin_mut","as_pin_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_from","cmp","collect","collect","count","count","deref","deref_mut","either","either_into","either_with","eq","expect_left","expect_right","extend","factor_err","factor_first","factor_into_iter","factor_iter","factor_iter_mut","factor_none","factor_ok","factor_second","find","find","find_map","find_map","flip","fmt","fmt","fmt","fold","fold","for_both","for_each","for_each","from","from","from","hash","into","into","into","into_future","into_inner","into_iter","into_iter","into_iter","is_left","is_right","iter","iter_mut","last","last","left","left_and_then","left_or","left_or_default","left_or_else","len","len","map","map_either","map_either_with","map_left","map_right","next","next","next_back","next_back","nth","nth","partial_cmp","partition","partition","poll","position","position","rfind","rfind","rfold","rfold","right","right_and_then","right_or","right_or_default","right_or_else","size_hint","size_hint","try_from","try_from","try_into","try_into","try_left","try_right","type_id","type_id","unwrap_left","unwrap_right"],"q":[[0,"either"]],"d":["The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","Iterator that maps left or right iterators to …","","A value of type <code>L</code>.","","A value of type <code>R</code>.","","","","","","","Convert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.","","Convert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, …","","","Convert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.","","","","","","","","","","","","","","","","Apply one of two functions depending on contents, unifying …","Convert the contained value into <code>T</code>","Like <code>either</code>, but provide some context to whichever of the …","","Returns the left value","Returns the right value","","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Converts an <code>Either</code> of <code>Iterator</code>s to be an <code>Iterator</code> of <code>Either</code>…","Borrows an <code>Either</code> of <code>Iterator</code>s to be an <code>Iterator</code> of <code>Either</code>s","Mutably borrows an <code>Either</code> of <code>Iterator</code>s to be an <code>Iterator</code> …","Factors out <code>None</code> from an <code>Either</code> of <code>Option</code>.","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","","","","","Convert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.","","","","","","Evaluate the provided expression for both <code>Either::Left</code> and …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Extract the value of an either over two equivalent types.","","Convert the inner value to an iterator.","","Return true if the value is the <code>Left</code> variant.","Return true if the value is the <code>Right</code> variant.","Borrow the inner value as an iterator.","Mutably borrow the inner value as an iterator.","","","Convert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","","","Map <code>f</code> over the contained value and return the result in the","Apply the functions <code>f</code> and <code>g</code> to the <code>Left</code> and <code>Right</code> variants …","Similar to <code>map_either</code>, with an added context <code>ctx</code> …","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","","","","","","","","","","","","","","","","","Convert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","","","","","","","Macro for unwrapping the left side of an <code>Either</code>, which …","Dual to <code>try_left!</code>, see its documentation for more …","","","Returns the left value","Returns the right value"],"i":[0,0,0,2,0,2,2,5,2,5,2,2,2,2,2,2,2,2,2,2,2,5,2,5,2,5,2,2,2,5,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,5,2,2,2,5,2,5,0,2,5,2,2,5,2,2,2,5,2,2,2,2,5,2,2,2,2,2,5,2,2,2,2,2,2,5,2,2,2,2,2,2,5,2,5,2,5,2,2,5,2,2,5,2,5,2,5,2,2,2,2,2,2,5,2,5,2,5,0,0,2,5,2,2],"f":[0,0,0,0,0,0,[[[2,[1,1]],3],4],[[[5,[1,1]],3],4],[[[2,[1,1]],3],4],[[[5,[1,1]],3],4],[[[2,[[7,[6]],[7,[6]]]]],6],[[[2,[[7,[8]],[7,[8]]]]],8],[2,2],[[[2,[7,7]]]],[[[9,[2]]],[[2,[9,9]]]],[[[9,[2]]],[[2,[9,9]]]],[[[2,[[10,[6]],[10,[6]]]]],6],[[[2,[10,10]]]],[2,2],[[[2,[[10,[8]],[10,[8]]]]],8],[[]],[[]],[[]],[[]],[[[2,[11,11]]],[[2,[11,11]]]],[[[5,[11,11]]],[[5,[11,11]]]],[[[2,[11,11]],[2,[11,11]]]],[[[2,[12,12]],[2,[12,12]]],13],[[[2,[1,1]]],14],[[[5,[1,1]]],14],[[[2,[1,1]]],15],[[[5,[1,1]]],15],[[[2,[16,16]]]],[[[2,[17,17]]]],[[2,18,18]],[[[2,[19,19]]]],[[2,18,18]],[[[2,[20,20]],[2,[20,20]]],4],[[[2,[21]],8]],[[[2,[21]],8]],[[[2,[22,22]],23]],[[[2,[24,24]]],[[24,[2]]]],[2],[[[2,[23,23]]],5],[2,5],[2,5],[[[2,[25,25]]],[[25,[2]]]],[[[2,[24,24]]],[[24,[2]]]],[2],[[[2,[1,1]],3],25],[[[5,[1,1]],3],25],[[[2,[1,1]],3],25],[[[5,[1,1]],3],25],[2,2],[[[2,[21,21]],26],27],[[[2,[28,28]],26],27],[[[5,[21,21]],26],27],[[[2,[1,1]],3]],[[[5,[1,1]],3]],0,[[[2,[1,1]],3]],[[[5,[1,1]],3]],[24,2],[[]],[[]],[[[2,[29,29]],30]],[[]],[2,24],[[]],[[]],[2],[[]],[[[2,[23,23]]],2],[[]],[2,4],[2,4],[2,2],[2,2],[[[2,[1,1]]],25],[[[5,[1,1]]],25],[2,25],[[2,18],2],[2],[[[2,[31]]],31],[[2,18]],[[[2,[32,32]]],15],[[[5,[32,32]]],15],[[2,18],2],[[2,18,18],2],[[2,18,18],2],[[2,18],2],[[2,18],2],[[[2,[1,1]]],25],[[[5,[1,1]]],25],[[[2,[33,33]]],25],[[[5,[33,33]]],25],[[[2,[1,1]],15],25],[[[5,[1,1]],15],25],[[[2,[34,34]],[2,[34,34]]],[[25,[13]]]],[[[2,[1,1]],3]],[[[5,[1,1]],3]],[[[9,[[2,[35,35]]]],36],37],[[[2,[1,1]],3],[[25,[15]]]],[[[5,[1,1]],3],[[25,[15]]]],[[[2,[33,33]],3],25],[[[5,[33,33]],3],25],[[[2,[33,33]],3]],[[[5,[33,33]],3]],[2,25],[[2,18],2],[2],[[[2,[31]]],31],[[2,18]],[[[2,[1,1]]]],[[[5,[1,1]]]],[[],24],[[],24],[[],24],[[],24],0,0,[[],38],[[],38],[[[2,[21]]]],[[[2,[21]]]]],"c":[],"p":[[8,"Iterator"],[4,"Either"],[8,"FnMut"],[15,"bool"],[3,"IterEither"],[15,"slice"],[8,"AsMut"],[15,"str"],[3,"Pin"],[8,"AsRef"],[8,"Clone"],[8,"Ord"],[4,"Ordering"],[8,"FromIterator"],[15,"usize"],[8,"Deref"],[8,"DerefMut"],[8,"FnOnce"],[8,"Into"],[8,"PartialEq"],[8,"Debug"],[8,"Extend"],[8,"IntoIterator"],[4,"Result"],[4,"Option"],[3,"Formatter"],[6,"Result"],[8,"Display"],[8,"Hash"],[8,"Hasher"],[8,"Default"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[8,"PartialOrd"],[8,"Future"],[3,"Context"],[4,"Poll"],[3,"TypeId"]]},\
"enum_primitive":{"doc":"This crate exports a macro <code>enum_from_primitive!</code> that wraps …","t":"INENLLLLLLLLLLLLLLLLLLLLLLOOOLLLLLLLLLLLLLLLLKLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["FromPrimitive","None","Option","Some","and","and_then","as_deref","as_deref_mut","as_mut","as_mut_slice","as_pin_mut","as_pin_ref","as_ref","as_slice","borrow","borrow_mut","branch","clone","clone_from","clone_into","cloned","cloned","cmp","copied","copied","default","enum_from_primitive","enum_from_primitive_impl","enum_from_primitive_impl_ty","eq","equivalent","expect","filter","flatten","fmt","from","from","from","from","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_iter","from_output","from_residual","from_residual","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","get_or_insert","get_or_insert_default","get_or_insert_with","hash","insert","inspect","into","into_iter","into_iter","into_iter","is_none","is_some","is_some_and","iter","iter_mut","map","map_or","map_or_else","ok_or","ok_or_else","or","or_else","partial_cmp","product","replace","sum","take","take_if","to_owned","transpose","try_from","try_into","type_id","unwrap","unwrap_or","unwrap_or_default","unwrap_or_else","unwrap_unchecked","unzip","xor","zip","zip_with"],"q":[[0,"enum_primitive"]],"d":["A generic trait for converting a number to a value.","No value.","The <code>Option</code> type. See the module level documentation for …","Some value of type <code>T</code>.","Returns <code>None</code> if the option is <code>None</code>, otherwise returns <code>optb</code>.","Returns <code>None</code> if the option is <code>None</code>, otherwise calls <code>f</code> with …","Converts from <code>Option&lt;T&gt;</code> (or <code>&amp;Option&lt;T&gt;</code>) to …","Converts from <code>Option&lt;T&gt;</code> (or <code>&amp;mut Option&lt;T&gt;</code>) to …","Converts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>.","Returns a mutable slice of the contained value, if any. If …","Converts from Pin&lt;&amp;mut Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;mut T&gt;&gt;.","Converts from Pin&lt;&amp;Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;T&gt;&gt;.","Converts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.","Returns a slice of the contained value, if any. If this is …","","","","","","","Maps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by cloning the contents …","Maps an <code>Option&lt;&amp;mut T&gt;</code> to an <code>Option&lt;T&gt;</code> by cloning the …","","Maps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by copying the contents …","Maps an <code>Option&lt;&amp;mut T&gt;</code> to an <code>Option&lt;T&gt;</code> by copying the …","Returns <code>None</code>.","Wrap this macro around an <code>enum</code> declaration to get an …","Helper macro for internal use by <code>enum_from_primitive!</code>.","Helper macro for internal use by <code>enum_from_primitive!</code>.","","","Returns the contained <code>Some</code> value, consuming the <code>self</code> value.","Returns <code>None</code> if the option is <code>None</code>, otherwise calls …","Converts from <code>Option&lt;Option&lt;T&gt;&gt;</code> to <code>Option&lt;T&gt;</code>.","","Returns the argument unchanged.","","Converts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.","Moves <code>val</code> into a new <code>Some</code>.","Converts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Takes each element in the <code>Iterator</code>: if it is <code>None</code>, no …","","","","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Inserts <code>value</code> into the option if it is <code>None</code>, then returns …","Inserts the default value into the option if it is <code>None</code>, …","Inserts a value computed from <code>f</code> into the option if it is …","","Inserts <code>value</code> into the option, then returns a mutable …","Calls the provided closure with a reference to the …","Calls <code>U::from(self)</code>.","","Returns a consuming iterator over the possibly contained …","","Returns <code>true</code> if the option is a <code>None</code> value.","Returns <code>true</code> if the option is a <code>Some</code> value.","Returns <code>true</code> if the option is a <code>Some</code> and the value inside …","Returns an iterator over the possibly contained value.","Returns a mutable iterator over the possibly contained …","Maps an <code>Option&lt;T&gt;</code> to <code>Option&lt;U&gt;</code> by applying a function to a …","Returns the provided default result (if none), or applies …","Computes a default function result (if none), or applies a …","Transforms the <code>Option&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping …","Transforms the <code>Option&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping …","Returns the option if it contains a value, otherwise …","Returns the option if it contains a value, otherwise calls …","","Takes each element in the <code>Iterator</code>: if it is a <code>None</code>, no …","Replaces the actual value in the option by the value given …","Takes each element in the <code>Iterator</code>: if it is a <code>None</code>, no …","Takes the value out of the option, leaving a <code>None</code> in its …","Takes the value out of the option, but only if the …","","Transposes an <code>Option</code> of a <code>Result</code> into a <code>Result</code> of an <code>Option</code>…","","","","Returns the contained <code>Some</code> value, consuming the <code>self</code> value.","Returns the contained <code>Some</code> value or a provided default.","Returns the contained <code>Some</code> value or a default.","Returns the contained <code>Some</code> value or computes it from a …","Returns the contained <code>Some</code> value, consuming the <code>self</code> value,","Unzips an option containing a tuple of two options.","Returns <code>Some</code> if exactly one of <code>self</code>, <code>optb</code> is <code>Some</code>, …","Zips <code>self</code> with another <code>Option</code>.","Zips <code>self</code> and another <code>Option</code> with function <code>f</code>."],"i":[0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,49,49,49,49,49,49,49,49,1,1,1,1,49,49,49,49,49,49,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,[[1,1],1],[[1,2],1],[[[1,[3]]],1],[[[1,[4]]],1],[1,1],[1,5],[[[6,[1]]],[[1,[6]]]],[[[6,[1]]],[[1,[6]]]],[1,1],[1,5],[[]],[[]],[1,7],[[[1,[8]]],[[1,[8]]]],[[[1,[8]],[1,[8]]]],[[]],[[[1,[8]]],[[1,[8]]]],[[[1,[8]]],[[1,[8]]]],[[[1,[9]],[1,[9]]],10],[[[1,[11]]],[[1,[11]]]],[[[1,[11]]],[[1,[11]]]],[[],1],0,0,0,[[[1,[[12,[[12,[[12,[12]]]]]]]],[1,[[12,[[12,[[12,[12]]]]]]]]],13],[[],13],[[1,14]],[[1,2],1],[[[1,[1]]],1],[[[1,[15]],16],[[18,[17]]]],[[]],[19],[1,1],[[],1],[1,1],[20,1],[21,1],[22,1],[23,1],[24,1],[25,1],[26,1],[27,1],[28,[[1,[29]]]],[[],1],[[[1,[30]]],1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[37,1],[1],[[[1,[38]]],38],[[1,2]],[[[1,[39]],40]],[1],[[1,2],1],[[]],[1,41],[1,42],[1,43],[1,13],[1,13],[[1,2],13],[1,43],[1,41],[[1,2],1],[[1,2]],[[1,2,2]],[1,18],[[1,2],18],[[1,1],1],[[1,2],1],[[[1,[[44,[[44,[[44,[44]]]]]]]],[1,[[44,[[44,[[44,[44]]]]]]]]],[[1,[10]]]],[45,[[1,[46]]]],[1,1],[45,[[1,[47]]]],[1,1],[[1,2],1],[[]],[[[1,[18]]],[[18,[1]]]],[[],18],[[],18],[[],48],[1],[1],[[[1,[38]]],38],[[1,2]],[1],[1],[[1,1],1],[[1,1],1],[[1,1,2],1]],"c":[],"p":[[4,"Option"],[8,"FnOnce"],[8,"Deref"],[8,"DerefMut"],[15,"slice"],[3,"Pin"],[4,"ControlFlow"],[8,"Clone"],[8,"Ord"],[4,"Ordering"],[8,"Copy"],[8,"PartialEq"],[15,"bool"],[15,"str"],[8,"Debug"],[3,"Formatter"],[3,"Error"],[4,"Result"],[15,"never"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[8,"IntoIterator"],[8,"FromIterator"],[4,"Infallible"],[3,"Yeet"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u8"],[15,"usize"],[8,"Default"],[8,"Hash"],[8,"Hasher"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[8,"PartialOrd"],[8,"Iterator"],[8,"Product"],[8,"Sum"],[3,"TypeId"],[8,"FromPrimitive"]],"a":{"flatmap":[5]}},\
"event_loop":{"doc":"A Piston event loop for games and interactive applications","t":"RRRIDDLMLLLLLLLLLLLLLKLLLLLMLMLLLLKLLLLLLLLMLLLLLLLLLMLM","n":["DEFAULT_MAX_FPS","DEFAULT_UPS","DEFAULT_UPS_RESET","EventLoop","EventSettings","Events","bench_mode","bench_mode","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","get_event_settings","get_event_settings","get_event_settings","into","into","lazy","lazy","max_fps","max_fps","new","new","next","set_bench_mode","set_event_settings","set_event_settings","set_event_settings","set_lazy","set_max_fps","set_swap_buffers","set_ups","set_ups_reset","swap_buffers","swap_buffers","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ups","ups","ups_reset","ups_reset"],"q":[[0,"event_loop"]],"d":["The default maximum frames per second.","The default updates per second.","The default delayed updates reset.","Methods implemented for changing event loop settings.","Stores event loop settings.","An event loop iterator","Enable or disable benchmark mode. When enabled, it will …","Enable or disable benchmark mode. When enabled, it will …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns event loop settings.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Enable or disable rendering only when receiving input. …","Enable or disable rendering only when receiving input. …","The maximum number of frames per second","The maximum number of frames per second","Creates new with default settings.","Creates a new event iterator with default UPS and FPS …","Returns the next event.","Enable or disable benchmark mode. When enabled, it will …","Sets event loop settings.","","","Enable or disable rendering only when receiving input. …","The maximum number of frames per second","Enable or disable automatic swapping of buffers.","The number of updates per second","The number of delayed updates before skipping them to …","Enable or disable automatic swapping of buffers.","Enable or disable automatic swapping of buffers.","","","","","","","","","The number of updates per second","The number of updates per second","The number of delayed updates before skipping them to …","The number of delayed updates before skipping them to …"],"i":[0,0,0,0,0,0,12,2,2,3,2,3,2,3,2,3,2,2,3,2,3,12,2,3,2,3,12,2,12,2,2,3,3,12,12,2,3,12,12,12,12,12,12,2,2,3,2,3,2,3,2,3,12,2,12,2],"f":[0,0,0,0,0,0,[1],0,[[]],[[]],[[]],[[]],[2,2],[3,3],[[]],[[]],[[],2],[[2,4],5],[[3,4],5],[[]],[[]],[[],2],[2,2],[3,2],[[]],[[]],[1],0,[6],0,[[],2],[2,3],[[3,7],[[9,[8]]]],[1],[2],[[2,2]],[[3,2]],[1],[6],[1],[6],[6],[1],0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[6],0,[6],0],"c":[],"p":[[15,"bool"],[3,"EventSettings"],[3,"Events"],[3,"Formatter"],[6,"Result"],[15,"u64"],[8,"Window"],[4,"Event"],[4,"Option"],[4,"Result"],[3,"TypeId"],[8,"EventLoop"]]},\
"exr":{"doc":"Read and write OpenEXR images. This library uses no …","t":"AAAAAAADDLLLLALLLLLLMLLLLLLLFLLLLLLLLLLMLLLLMMALMMFAALLLLLLLLFADEDDDDNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDGGDLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLMLLLLLLLLMLLLLDIDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNIIENLLLLLLLLLLLLLLLLLKLLKLLKLLLLLLKLLKLLLKLLLLLLLDIDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLKLLFLNNGGENNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENNDGNGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDGEIDNNSGDEGDIDGGENSGGGGGGNDSSNNDDNNSLKMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLMMMMLLLLLLAMMALALLMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLALMMMMIIEINQQDDNIIQQLLLLLLKLLLLLLLKLKKKMLLLLLLLLLLLLLLLLLLLLLMMLLLLLKLLLLLKLLLLFLLLLLLLLLMDLLLLLLLLLLLLLLLLLLMMLLLLLLDALLLLLLLLLLLALLAALFFFFFFAALLLLDDDIQQILLLLLLLLLLLLLKLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLKLKMLLLLLLLLLLLLDQQIDIQLLLLLLLLLKLLLLLLLKLLLLLLLLLLLLKLLLLLKLLLLLLLLDQIDDDIDQLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLKLLKLLMMLLLLLLLLLLLLLLLLLLLLDDDIQLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDIGQQIQDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLIIIQDDQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLLLMLLLIDGLLLLLLLLLLLLLLLLLLLLKIDLLALLLLLLLLLLLALLALLLLLLLLKFFDIIQIQDDIIQLLLLLLKLLLLLLKKLLLLLLLLLLLLLKLLLLLLLLKKKLLLLLLLLLLLLLLLLLLKDDIIQLLLLLLLLKLLLLLLLLLLKLLLLLLKLLLLLLLLLLLLDDIIIQQLLLLLLLLKKLLLLLLLLLKLLLLLLKLLLLKKLLLLLLLLNENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEGDGGDNDNALLLLLLLLFFLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMLLLLAMLLLLLLLLLMMAFFLLLLLMFFAMLLLLLLLLLLLLLLLLLLLLESENDDNDNCNNNGNNNGENNNNNDNNNNNNNDNDNNEENGNGNNDNGNNENNDNGGNNDNDNNNLMMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMLLLLLLLLLLLLLMMMMMMFLLLLLLLLLLLLLLLLMMMMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMFLLLLLLLLLMLFLLLLLLLLLLLLLLLLLMMRRRRRRRRRRRRRRRRRRRRRRRRRRRDDDMMMMLLLLLLLMMMMLLLLLLMMLMMMLLLLLLLMLLLLMLLLMMMLLLMMLLLLLLLMMLLLLLLMMMMMMMMLLLMMLMLLMMMMMMMLLMMMMMAMLLLLLLLLLLLLLMLMMMLLLLLLLLMMMLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFFFFFCCCSSSCSSSSSSSSSSCCSSSSSSCCSSSSSSSSSSCSSSSSSSCSCCDCCCSLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLCCCCCCCCCCCCCCCC","n":["block","compression","error","image","math","meta","prelude","BlockIndex","UncompressedBlock","borrow","borrow","borrow_mut","borrow_mut","chunk","clone","clone","clone_into","clone_into","collect_block_data_from_lines","compress_to_chunk","data","decompress_chunk","deref","deref","deref_mut","deref_mut","drop","drop","enumerate_ordered_header_block_indices","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_lines","hash","index","init","init","into","into","layer","level","lines","lines","pixel_position","pixel_size","read","reader","samples","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write","writer","Chunk","CompressedBlock","CompressedDeepScanLineBlock","CompressedDeepTileBlock","CompressedScanLineBlock","CompressedTileBlock","DeepScanLine","DeepTile","ScanLine","Tile","TileCoordinates","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compressed_block","compressed_pixel_offset_table","compressed_pixel_offset_table","compressed_pixels","compressed_pixels","compressed_sample_data","compressed_sample_data","coordinates","coordinates","decompressed_sample_data_size","decompressed_sample_data_size","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_largest_resolution_level","layer_index","level_index","read","read","read","read","read","read","tile_index","to_absolute_indices","to_data_indices","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write","write","y_coordinate","y_coordinate","LineIndex","LineRef","LineRefMut","LineSlice","borrow","borrow","borrow_mut","borrow_mut","channel","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","init","init","into","into","layer","level","lines_in_block","location","position","read_samples","read_samples","read_samples_into_slice","read_samples_into_slice","sample_count","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value","write_samples","write_samples","write_samples_from_slice","write_samples_from_slice","AllChunksReader","ChunksReader","FilteredChunksReader","OnProgressChunksReader","ParallelBlockDecompressor","Reader","SequentialBlockDecompressor","all_chunks","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decompress_next_block","decompress_next_block","decompress_parallel","decompress_sequential","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","expected_chunk_count","expected_chunk_count","expected_chunk_count","expected_chunk_count","filter_chunks","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","headers","headers","init","init","init","init","init","init","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_meta_data","meta_data","meta_data","meta_data","meta_data","meta_data","meta_data","meta_data","new","new_with_thread_pool","next","next","next","next","next","on_progress","parallel_decompressor","read_from_buffered","read_next_chunk","sequential_decompressor","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","F16","F32","FromNativeSample","IntoNativeSample","Sample","U32","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","f16","f32","fmt","from","from","from","from","from","from_f16","from_f16","from_f16s","from_f32","from_f32","from_f32s","from_u32","from_u32","from_u32s","init","into","is_nan","is_zero","to_f16","to_f16","to_f16","to_f32","to_f32","to_f32","to_owned","to_u32","to_u32","to_u32","try_from","try_into","type_id","u32","validate_result","ChunkWriter","ChunksWriter","OnProgressChunkWriter","ParallelBlocksCompressor","SequentialBlocksCompressor","SortedBlocksWriter","add_block_to_compression_queue","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compress_all_blocks_parallel","compress_all_blocks_sequential","compress_block","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","init","inner_chunks_writer","inner_chunks_writer","inner_chunks_writer","into","into","into","into","into","new","new","new","new_with_thread_pool","on_progress","parallel_blocks_compressor","sequential_blocks_compressor","total_chunks_count","total_chunks_count","total_chunks_count","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write_all_queued_chunks","write_chunk","write_chunk","write_chunk","write_chunks_with","write_or_stash_chunk","B44","B44A","ByteVec","Bytes","Compression","DWAA","DWAB","PIZ","PXR24","RLE","Uncompressed","ZIP1","ZIP16","borrow","borrow_mut","byte_size","clone","clone_into","compress_image_section","decompress_image_section","deref","deref_mut","drop","eq","fmt","fmt","from","init","into","is_lossless_for","may_loose_data","read","scan_lines_per_block","supports_deep_data","supports_nan","to_owned","to_string","try_from","try_into","type_id","write","Aborted","Error","Invalid","Io","IoError","IoResult","NotSupported","Result","UnitResult","borrow","borrow","borrow_mut","borrow_mut","cause","deref","deref","deref_mut","deref_mut","description","downcast","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_raw_os_error","get_mut","get_ref","init","init","into","into","into_inner","kind","last_os_error","new","other","raw_os_error","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","AnyChannel","AnyChannels","AnyImage","Blocks","CheckDuplicates","Encoding","F16","F32","FAST_LOSSLESS","FlatImage","FlatSampleIterator","FlatSamples","FlatSamplesPixel","Image","IntoSample","Layer","Layers","LevelMaps","Levels","Mip","PREFERRED_SAMPLE_TYPE","PixelImage","PixelLayersImage","RgbChannels","RgbaChannels","RgbaImage","RgbaLayersImage","Rip","RipMaps","SMALL_FAST_LOSSLESS","SMALL_LOSSLESS","ScanLines","Singular","SpecificChannels","SpecificChannelsBuilder","Tiles","U32","UNCOMPRESSED","absolute_bounds","already_contains","attributes","attributes","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","build","channel_data","channels","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compression","create_level_writer","create_samples_writer","create_samples_writer","create_writer","create_writer","create_writer","create_writer","crop","crop","crop_nowhere","crop_where","crop_where_eq","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","encoding","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_channels","from_encoded_channels","from_layer","from_layers","get_by_level","get_by_level_mut","get_level","get_level_index","get_level_mut","infer_channel_list","infer_channel_list","infer_headers","infer_headers","infer_level_modes","infer_level_modes","infer_level_modes","infer_level_modes","init","init","init","init","init","init","init","init","init","init","init","init","inspect_sample","inspect_sample","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","layer_data","len","level_count","level_mode","levels_as_slice","levels_as_slice_mut","levels_with_resolution","line_order","list","map_data","name","new","new","new","new","next","nth","pixel_vec","pixels","quantize_linearly","read","reallocate_cropped","recursive","rgb","rgba","sample_data","sample_type","sample_type","sample_type","sample_vec_at","samples_at","sampling","size","size_hint","sort","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_result","validate_result","validate_result","validate_result","validate_result","validate_result","validate_result","validate_result","validate_results","value_by_flat_index","values","values_as_f32","with_channel","with_channel_details","with_layer","with_pixel_fn","with_pixels","write","write","level_data","level_data","rounding_mode","rounding_mode","ApplyCroppedView","Crop","CropResult","CropWhere","Cropped","Cropped","Cropped","CroppedChannels","CroppedWriter","Empty","GetBounds","InspectSample","Reallocated","Sample","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone_into","clone_into","clone_into","create_writer","crop","crop_layer","crop_nowhere","crop_where","crop_where_eq","cropped_bounds","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","extract_uncompressed_block","fmt","fmt","fmt","from","from","from","full_bounds","full_channels","infer_channel_list","infer_level_modes","init","init","init","inspect_sample","into","into","into","or_crop_to_1x1_if_empty","or_none_if_empty","reallocate_cropped","to_owned","to_owned","to_owned","try_crop","try_find_smaller_bounds","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","original","PixelVec","borrow","borrow_mut","clone","clone_into","compute_pixel_index","constructor","deref","deref_mut","drop","eq","equivalent","fmt","from","get_pixel","get_pixel","init","into","new","pixels","resolution","set_pixel","to_owned","try_from","try_into","type_id","validate_result","ReadBuilder","any_channels","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","fmt","from","image","init","into","layers","levels","no_deep_data","read","read_all_data_from_file","read_all_flat_layers_from_file","read_all_rgba_layers_from_file","read_first_flat_layer_from_file","read_first_rgba_layer_from_file","samples","specific_channels","to_owned","try_from","try_into","type_id","AnyChannelReader","AnyChannelsReader","ReadAnyChannels","ReadSamples","Reader","Samples","SamplesReader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create_channels_reader","create_sample_reader","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","filter_block","filter_block","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_channels","into_samples","read_block","read_line","read_samples","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ImageWithAttributesReader","Layers","Layers","LayersReader","ReadImage","ReadLayers","Reader","all_attributes","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_layers_reader","deref","deref","deref_mut","deref_mut","drop","drop","eq","filter_block","fmt","fmt","from","from","from_buffered","from_chunks","from_file","from_unbuffered","init","init","into","into","into_layers","new","new","non_parallel","on_progress","pedantic","read_block","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","AllLayersReader","Channels","ChannelsReader","FirstValidLayerReader","LayerReader","ReadAllLayers","ReadChannels","ReadFirstValidLayer","Reader","all_layers","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create_channels_reader","create_layers_reader","create_layers_reader","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","filter_block","filter_block","filter_block","first_valid_layer","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","into_channels","into_layers","into_layers","read_block","read_block","read_block","read_channels","read_channels","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","AllLevelsReader","ReadAllLevels","ReadLargestLevel","ReadSamplesLevel","Reader","all_channels","all_channels","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create_sample_reader","create_samples_level_reader","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","filter_block","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_samples","read_line","read_samples","read_samples","rgb_channels","rgba_channels","specific_channels","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","FlatSamplesReader","ReadFlatSamples","all_resolution_levels","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_sample_reader","create_samples_level_reader","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","filter_block","fmt","fmt","from","from","init","init","into","into","into_samples","largest_resolution_level","read_line","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","CollectPixels","OptionalSampleReader","ReadOptionalChannel","ReadRequiredChannel","ReadSpecificChannel","ReadZeroChannels","RecursiveChannelDescriptions","RecursivePixel","RecursivePixelReader","RecursivePixelReader","SampleReader","SpecificChannelsReader","already_contains","already_contains","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect_pixels","create_channels_reader","create_recursive_reader","create_recursive_reader","create_recursive_reader","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","filter_block","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_descriptions","init","init","init","init","init","init","into","into","into","into","into","into","into_channels","optional","read_block","read_pixels","required","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","IntoNonRecursive","IntoRecursive","IntoTuple","NonRecursive","NoneMore","Recursive","Recursive","already_contains","already_contains","borrow","borrow","borrow_mut","borrow_mut","channel_descriptions_list","channel_descriptions_list","channel_descriptions_list","clone","clone","clone_into","clone_into","create_recursive_reader","create_recursive_writer","create_recursive_writer","create_recursive_writer","create_writer","create_writer","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","extract_uncompressed_block","extract_uncompressed_block","fmt","fmt","from","from","get_descriptions","get_descriptions","get_descriptions","infer_headers","infer_headers","init","init","inner","into","into","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_non_recursive","into_recursive","into_recursive","into_recursive","into_tuple","into_tuple","into_tuple","new","read_pixels","read_pixels","read_pixels","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","validate_result","validate_result","value","write_pixels","write_pixels","write_pixels","ValidateResult","ValidationOptions","ValidationResult","assert_equals_result","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","validate_result","WritableImage","WriteImageWithOptions","borrow","borrow_mut","channels","clone","clone_into","deref","deref_mut","drop","eq","fmt","from","infer_meta_data","init","into","layers","non_parallel","on_progress","samples","skip_compatibility_checks","to_buffered","to_file","to_owned","to_unbuffered","try_from","try_into","type_id","write","write_rgb_file","write_rgba_file","AnyChannelsWriter","ChannelsWriter","GetPixel","Pixel","RecursivePixelWriter","RecursiveWriter","SampleWriter","SpecificChannelsWriter","WritableChannels","WritableChannelsDescription","Writer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","channel_descriptions_list","clone","clone","clone","clone_into","clone_into","clone_into","create_recursive_writer","create_writer","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","equivalent","equivalent","extract_uncompressed_block","extract_uncompressed_block","extract_uncompressed_block","fmt","fmt","fmt","from","from","from","get_pixel","infer_channel_list","infer_level_modes","init","init","init","into","into","into","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_pixels","AllLayersWriter","LayerWriter","LayersWriter","WritableLayers","Writer","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_writer","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","extract_uncompressed_block","extract_uncompressed_block","extract_uncompressed_block","fmt","fmt","from","from","infer_headers","init","init","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","FlatSamplesWriter","LevelsWriter","SamplesWriter","WritableLevel","WritableSamples","Writer","Writer","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_level_writer","create_samples_writer","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","extract_line","extract_line","extract_line","fmt","fmt","from","from","infer_level_modes","init","init","into","into","sample_type","sample_type","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Down","RoundingMode","Up","Vec2","add","area","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","div","drop","drop","eq","eq","equivalent","equivalent","flat_index_for_size","fmt","fmt","from","from","from","hash","hash","height","init","init","into","into","max","min","mul","neg","sub","to_i32","to_owned","to_owned","to_usize","try_from","try_from","try_from","try_into","try_into","type_id","type_id","width","x","y","BlockDescription","Headers","MetaData","OffsetTable","OffsetTables","Requirements","ScanLines","TileIndices","Tiles","attribute","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_block_position_and_size","calculate_block_size","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_ordered_block_data","collect_ordered_blocks","compute_block_count","compute_chunk_count","compute_level_count","compute_level_size","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","enumerate_ordered_header_block_indices","eq","eq","eq","eq","equivalent","equivalent","equivalent","file_format_version","fmt","fmt","fmt","fmt","from","from","from","from","has_deep_data","has_long_names","has_multiple_layers","has_tiles","hash","hash","hash","header","headers","init","init","init","init","into","into","into","into","is_multilayer","is_single_layer_and_tiled","location","magic_number","mip_map_indices","mip_map_levels","read","read_from_buffered","read_from_file","read_from_unbuffered","read_offset_tables","requirements","rip_map_indices","rip_map_levels","sequence_end","size","skip_offset_tables","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","validate","write","AttributeValue","BYTE_SIZE","BlockType","BlockType","ChannelDescription","ChannelList","ChannelList","Chromaticities","Chromaticities","Compression","Compression","Cube","Custom","DataWindow","Decreasing","DeepScanLine","DeepTile","DisplayWindow","EnvironmentMap","EnvironmentMap","F16","F32","F32","F64","FloatRect","FloatRect","FloatVec2","FloatVec3","I32","Increasing","IntVec2","IntVec3","IntegerBounds","IntegerBounds","KeyCode","KeyCode","LatitudeLongitude","LevelMode","LineOrder","LineOrder","Matrix3x3","Matrix3x3","Matrix4x4","Matrix4x4","MipMap","Preview","Preview","Rational","Rational","RipMap","SampleType","ScanLine","Singular","Text","Text","TextBytes","TextSlice","TextVector","Tile","TileDescription","TileDescription","TimeCode","TimeCode","U32","Unspecified","as_slice","binary_group_flags","binary_groups","block_type_strings","blue","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_size","byte_size","byte_size","byte_size","byte_size","byte_size","byte_size","byte_size","byte_size","byte_size","byte_size","byte_size","byte_size","byte_size","bytes","bytes_per_pixel","bytes_per_sample","channels_with_byte_offset","chars","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","color_frame","contains","count","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_frame","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_case_insensitive","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field_phase","film_manufacturer_code","film_roll_prefix","film_type","find_index_of_channel","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes_unchecked","from_dimensions","from_film24_time","from_slice_unchecked","from_tv50_time","from_tv60_time","green","guess_quantization_linearity","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hours","i32_sized_byte_size","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_text","kind_name","level_mode","list","max","max","min","minutes","name","named","new","new","new","new_or_none","new_or_panic","null_terminated_byte_size","pack_time_as_film24_u32","pack_time_as_tv50_u32","pack_time_as_tv60_u32","pack_user_data_as_u32","parse","partial_cmp","perforation_offset","perforations_per_count","perforations_per_frame","pixel_data","position","quantize_linearly","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read_i32_sized","read_null_terminated","read_sized","red","rounding_mode","sample_type","sampling","seconds","size","size","subsampled_pixels","subsampled_resolution","tile_size","to_chromaticities","to_f32","to_i32","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_text","to_text_bytes","to_time_code","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_names","uniform_sample_type","validate","validate","validate","validate","validate","validate","validate","validate","validate","validate_bytes","white","with_origin","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write_i32_sized","write_null_terminated","zero","bytes","kind","DEEP_SCAN_LINE","DEEP_TILE","SCAN_LINE","TILE","CHANNEL_LIST","CHROMATICITIES","COMPRESSION","ENVIRONMENT_MAP","F32","F32BOX2","F32MATRIX3X3","F32MATRIX4X4","F32VEC2","F32VEC3","F64","I32","I32BOX2","I32VEC2","I32VEC3","KEY_CODE","LINE_ORDER","PREVIEW","RATIONAL","TEXT","TEXT_VECTOR","TILES","TIME_CODE","Header","ImageAttributes","LayerAttributes","adopted_neutral","altitude","aperture","blocks","blocks_increasing_y_order","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capture_date","channels","chromaticities","chunk_count","clone","clone","clone","clone_into","clone_into","clone_into","comments","compression","data_window","deep","deep_data_version","deep_image_state","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","display_window","drop","drop","drop","enumerate_ordered_blocks","environment_map","eq","eq","eq","exposure","far_clip_plane","film_key_code","fmt","fmt","fmt","focus","frames_per_second","from","from","from","get_absolute_block_pixel_coordinates","get_block_data_indices","get_block_data_window_pixel_coordinates","get_scan_line_block_tile_coordinates","horizontal_density","horizontal_field_of_view","init","init","init","into","into","into","iso_speed","latitude","layer_name","layer_position","layer_size","line_order","longitude","look_modification_transform_name","max_block_byte_size","max_block_pixel_size","max_pixel_file_bytes","max_samples_per_pixel","multi_view_names","named","near_clip_plane","new","new","original_data_window","other","other","own_attributes","owner","pixel_aspect","preview","read","read_all","rendering_transform_name","screen_window_center","screen_window_width","shared_attributes","software_name","standard_names","time_code","to_owned","to_owned","to_owned","total_pixel_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","utc_offset","validate","vertical_field_of_view","view_name","white_luminance","with_attributes","with_camera_frustum","with_display_window","with_encoding","with_position","with_position","with_shared_attributes","with_size","world_to_camera","world_to_normalized_device","wrap_mode_name","write","write_all","ADOPTED_NEUTRAL","ALL","ALTITUDE","APERTURE","BLOCK_TYPE","CAPTURE_DATE","CHANNELS","CHROMATICITIES","CHUNKS","COMMENTS","COMPRESSION","DATA_WINDOW","DEEP_DATA_VERSION","DEEP_IMAGE_STATE","DISPLAY_WINDOW","DWA_COMPRESSION_LEVEL","ENVIRONMENT_MAP","EXPOSURE_TIME","FAR","FOCUS","FOV_X","FOV_Y","FRAMES_PER_SECOND","ISO_SPEED","KEY_CODE","LATITUDE","LINE_ORDER","LONGITUDE","LOOK_MOD_TRANSFORM","MAX_SAMPLES","MULTI_VIEW","NAME","NEAR","ORIGINAL_DATA_WINDOW","OWNER","PIXEL_ASPECT","PREVIEW","RENDERING_TRANSFORM","SOFTWARE","TILES","TIME_CODE","UTC_OFFSET","VIEW","WHITE_LUMINANCE","WINDOW_CENTER","WINDOW_WIDTH","WORLD_TO_CAMERA","WORLD_TO_NDC","WRAP_MODES","X_DENSITY","BYTES","is_exr","validate_exr","write","byte_size","has_come","write","AttributeValue","ChannelDescription","Compression","DIGITS","E","EPSILON","Error","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","INFINITY","ImageAttributes","IntegerBounds","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","LayerAttributes","LineOrder","MANTISSA_DIGITS","MAX","MAX_10_EXP","MAX_EXP","MAX_SUBNORMAL","MIN","MIN_10_EXP","MIN_EXP","MIN_POSITIVE","MIN_POSITIVE_SUBNORMAL","MetaData","NAN","NEG_INFINITY","NEG_ONE","NEG_ZERO","ONE","PI","RADIX","Result","SQRT_2","Sample","SampleType","SmallVec","Text","TileDescription","Vec2","ZERO","add","add","add","add","add_assign","add_assign","append","as_mut","as_mut_ptr","as_mut_slice","as_ptr","as_ref","as_slice","attribute","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capacity","clamp","classify","clear","clone","clone","clone_from","clone_into","clone_into","cmp","copysign","dedup","dedup_by","dedup_by_key","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","div_assign","div_assign","drain","drop","drop","drop","eq","eq","equivalent","extend","extend_from_slice","f16","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_be_bytes","from_bits","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_elem","from_f16","from_f32","from_f32","from_f32_const","from_f32s","from_f64","from_f64_const","from_iter","from_le_bytes","from_ne_bytes","from_raw_parts","from_slice","from_str","from_u32","from_vec","ge","grow","gt","hash","index","index_mut","init","init","inline_size","insert","insert_from_slice","insert_many","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_vec","is_empty","is_finite","is_infinite","is_nan","is_normal","is_sign_negative","is_sign_positive","le","len","lt","max","min","mul","mul","mul","mul","mul_assign","mul_assign","neg","neg","new","partial_cmp","partial_cmp","pop","product","product","push","read_all_data_from_file","read_all_flat_layers_from_file","read_all_rgba_layers_from_file","read_first_flat_layer_from_file","read_first_rgba_layer_from_file","rem","rem","rem","rem","rem_assign","rem_assign","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","signum","spilled","sub","sub","sub","sub","sub_assign","sub_assign","sum","sum","swap_remove","to_be_bytes","to_bits","to_f16","to_f32","to_f32","to_f32_const","to_f64","to_f64_const","to_le_bytes","to_ne_bytes","to_owned","to_owned","to_string","to_u32","total_cmp","traits","truncate","try_from","try_from","try_grow","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","validate_result","validate_result","with_capacity","write_rgb_file","write_rgba_file","ApplyCroppedView","Crop","CropResult","CropWhere","CroppedChannels","GetPixel","InspectSample","ReadChannels","ReadImage","ReadLayers","ReadSamples","ReadSpecificChannel","WritableImage","read"],"q":[[0,"exr"],[7,"exr::block"],[63,"exr::block::chunk"],[213,"exr::block::lines"],[268,"exr::block::reader"],[389,"exr::block::samples"],[440,"exr::block::writer"],[529,"exr::compression"],[570,"exr::error"],[626,"exr::image"],[955,"exr::image::Levels"],[959,"exr::image::crop"],[1042,"exr::image::crop::CropResult"],[1043,"exr::image::pixel_vec"],[1070,"exr::image::read"],[1101,"exr::image::read::any_channels"],[1168,"exr::image::read::image"],[1220,"exr::image::read::layers"],[1327,"exr::image::read::levels"],[1395,"exr::image::read::samples"],[1437,"exr::image::read::specific_channels"],[1553,"exr::image::recursive"],[1665,"exr::image::validate_results"],[1689,"exr::image::write"],[1720,"exr::image::write::channels"],[1790,"exr::image::write::layers"],[1834,"exr::image::write::samples"],[1882,"exr::math"],[1940,"exr::meta"],[2056,"exr::meta::attribute"],[2552,"exr::meta::attribute::AttributeValue"],[2554,"exr::meta::attribute::block_type_strings"],[2558,"exr::meta::attribute::type_names"],[2581,"exr::meta::header"],[2714,"exr::meta::header::standard_names"],[2764,"exr::meta::magic_number"],[2768,"exr::meta::sequence_end"],[2771,"exr::prelude"],[3031,"exr::prelude::traits"]],"d":["This is the low-level interface for the raw blocks of an …","Contains the compression attribute definition and methods …","Error type definitions.","Data structures that represent a complete exr image. …","Simple math utilities.","Describes all meta data possible in an exr file. Contains …","Export the most important items from <code>exrs</code>. <em>Note: This </em>…","Specifies where a block of pixel data should be placed in …","Contains a block of pixel data and where that data should …","","","","","Read and write already compressed pixel data blocks. Does …","","","","","Create an uncompressed block byte vector by requesting one …","Consume this block by compressing it, returning a <code>Chunk</code>.","Uncompressed pixel values of the whole block. One or more …","Decompress the possibly compressed chunk and returns an …","","","","","","","This iterator tells you the block indices of all blocks …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create an uncompressed block by requesting one line of …","","Location of the data inside the image.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Index of the layer.","Index of the mip or rip level in the image.","Extract lines from a block of pixel bytes.","Iterate all the lines in this block. Each line contains …","Index of the top left pixel from the block within the data …","Number of pixels in this block, extending to the right and …","Immediately reads the meta data from the file. Then, …","Composable structures to handle reading an image.","Extract pixel samples from a block of pixel bytes.","","","","","","","","","Immediately writes the meta data to the file. Then, calls …","Composable structures to handle writing an image.","A generic block of pixel information. Contains pixel data …","The raw, possibly compressed pixel data of a file. Each …","This <code>Block</code> consists of one or more deep scan lines. …","This <code>Block</code> is a tile of deep data. Corresponds to type …","A <code>Block</code> of possibly compressed flat scan lines. …","This <code>Block</code> is a tile of flat (non-deep) data. Corresponds …","Scan line blocks of deep data.","Tiles of deep data.","Scan line blocks of flat data.","Tiles of flat data.","Indicates the position and resolution level of a <code>TileBlock</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The compressed pixel contents.","The pixel offset table is a list of integers, one for each …","The pixel offset table is a list of integers, one for each …","One or more scan lines may be stored together as a scan …","One or more scan lines may be stored together as a scan …","One or more scan lines may be stored together as a scan …","One or more scan lines may be stored together as a scan …","The tile location.","The tile location.","Count of samples.","Count of samples.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns if this is the original resolution or a smaller …","The index of the layer that the block belongs to. This is …","Index of the Mip/Rip level.","Read the value without validating.","Read the value without validating.","Read the value without validating.","Read the value without validating.","Read the value without validating.","Read the value without validating.","Index of the tile, not pixel position.","Absolute coordinates inside the global 2D space of a file, …","The indices which can be used to index into the arrays of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","The block’s y coordinate is the pixel space y coordinate …","The block’s y coordinate is the pixel space y coordinate …","Specifies where a row of pixels lies inside an image. This …","An reference to a single line of pixels. May go across the …","A reference to a single mutable line of pixels. May go …","A single line of pixels. Use LineRef or LineRefMut for …","","","","","The channel index of the layer.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Index of the layer.","Index of the mip or rip level in the image.","Iterates the lines of this block index in interleaved …","Where this line is located inside the image.","Position of the most left pixel of the row.","Iterate over all samples in this line, from left to right. …","Iterate over all samples in this line, from left to right. …","Read the samples (f16, f32, u32 values) from this line …","Read the samples (f16, f32, u32 values) from this line …","The width of the line; the number of samples in this row, …","","","","","","","","","The raw bytes of the pixel line, either <code>&amp;[u8]</code> or <code>&amp;mut [u8]</code>.","Iterate over all samples in this line, from left to right. …","Iterate over all samples in this line, from left to right. …","Writes the samples (f16, f32, u32 values) into this line …","Writes the samples (f16, f32, u32 values) into this line …","Decode all chunks in the file without seeking. The decoded …","Decode chunks in the file. The decoded chunks can be …","Decode the desired chunks and skip the unimportant chunks …","Decode chunks in the file without seeking. Calls the …","Decompress the chunks in a file in parallel. The first …","Decode the meta data from a byte source, keeping the …","Read all chunks from the file, decompressing each chunk …","Prepare to read all the chunks from the file. Does not …","","","","","","","","","","","","","Read and then decompress a single block of pixels from the …","Fill the pool with decompression jobs. Returns the first …","Decompress all blocks in the file, using multiple cpu …","Return an iterator that decompresses the chunks in this …","","","","","","","","","","","","","","","","","","","The number of chunks that this reader will return in total.","","","","Prepare to read some the chunks from the file. Does not …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The decoded exr headers from the file.","The decoded exr meta data from the file.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Obtain the meta data ownership.","The decoded exr meta data from the file.","The decoded exr meta data from the file.","","","","The extracted meta data from the image file.","The extracted meta data of the image file.","Create a new decompressor. Does not immediately spawn any …","Create a new decompressor. Does not immediately spawn any …","","","","","","Create a new reader that calls the provided progress …","Return an iterator that decompresses the chunks with …","Start the reading process. Immediately decodes the meta …","Read the next compressed chunk from the file. Equivalent …","Prepare reading the chunks sequentially, only a single …","","","","","","","","","","","","","","","","","","","","","","","","A 16-bit float sample.","A 32-bit float sample.","Create an arbitrary sample type from one of the defined …","Convert any type into one of the supported sample types. …","A single red, green, blue, or alpha value.","An unsigned integer sample.","","","","","","","","","","Create a sample containing a 16-bit float.","Create a sample containing a 32-bit float.","","","","","","Returns the argument unchanged.","Create this sample from a f16, trying to represent the …","","Convert all values from the slice into this type. This …","Create this sample from a f32, trying to represent the …","","Convert all values from the slice into this type. This …","Create this sample from a u32, trying to represent the …","","Convert all values from the slice into this type. This …","","Calls <code>U::from(self)</code>.","Is this value not a number?","Is this value zero or negative zero?","Convert this sample to an f16, trying to represent the …","Convert the sample to an f16 value. This has lower …","","Convert this sample to an f32, trying to represent the …","Convert the sample to an f32 value. Note: An f32 can only …","","","Convert this sample to an u16, trying to represent the …","","Convert the sample to a u32. Rounds floats to integers the …","","","","Create a sample containing a 32-bit integer.","","Can consume compressed pixel chunks, writing them a file. …","Write chunks to a byte destination. Then write each chunk …","A new writer that triggers a callback for each block …","Compress blocks to a chunk writer with multiple threads.","Compress blocks to a chunk writer in this thread.","Write blocks that appear in any order and reorder them …","Add a single block to the compressor queue. The index of …","","","","","","","","","","","Compresses all blocks to the file. The index of the block …","Compresses all blocks to the file. The index of the block …","Compress a single block immediately. The index of the …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Where the chunks will be written to.","This is where the compressed blocks are written to.","This is where the compressed blocks are written to.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","New sorting writer. Returns <code>None</code> if sorting is not …","New blocks writer.","New blocks writer. Returns none if sequential compression …","New blocks writer. Returns none if sequential compression …","Obtain a new writer that calls the specified closure for …","Obtain a new writer that can compress blocks to chunks on …","Obtain a new writer that can compress blocks to chunks, …","The total number of chunks that the complete file will …","The total number of chunks that the complete file will …","","","","","","","","","","","","","","","","","Wait until all currently compressing chunks in the …","Any more calls will result in an error and have no effect. …","Any more calls will result in an error and have no effect. …","","Write an exr file by writing one chunk after another in a …","Write the chunk or stash it. In the closure, write all …","This is a lossy compression method for f16 images. It’s …","This is a lossy compression method for f16 images. All f32 …","A byte vector.","A byte slice.","Specifies which compression method to use. Use …","<strong>This lossy compression is not yet supported by this </strong>…","<strong>This lossy compression is not yet supported by this </strong>…","PIZ compression works well for noisy and natural images. …","Like <code>ZIP1</code>, but reduces precision of <code>f32</code> images to <code>f24</code>. …","Produces slightly smaller files that can still be read and …","Store uncompressed values. Produces large files that can …","Uses ZIP compression to compress each line. Slowly …","Uses ZIP compression to compress blocks of 16 lines. …","","","Number of bytes this would consume in an exr file.","","","Compress the image section of bytes.","Decompress the image section of bytes.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Most compression methods will reconstruct the exact pixel …","Most compression methods will reconstruct the exact pixel …","Read the value without validating.","For scan line images and deep scan line images, one or …","Deep data can only be compressed using RLE or ZIP …","Most compression methods will reconstruct the exact pixel …","","","","","","Without validation, write this instance to the byte stream.","Reading or Writing the file has been aborted by the caller.","An error that may happen while reading or writing an exr …","The contents of the image are contradicting or …","The underlying byte stream could not be read successfully, …","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…","A specialized <code>Result</code> type for I/O operations.","The contents of the file are not supported by this …","A result that may contain an exr error.","A result that, if ok, contains nothing, and otherwise …","","","","","","","","","","","Attempt to downgrade the inner error to <code>E</code> if any.","","","","","","","Returns the argument unchanged.","","Converts a <code>alloc::ffi::NulError</code> into a <code>Error</code>.","Converts an <code>ErrorKind</code> into an <code>Error</code>.","","Returns the argument unchanged.","","Creates a new instance of an <code>Error</code> from a particular OS …","Returns a mutable reference to the inner error wrapped by …","Returns a reference to the inner error wrapped by this …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>Error</code>, returning its inner error (if any).","Returns the corresponding <code>ErrorKind</code> for this error.","Returns an error representing the last OS error which …","Creates a new I/O error from a known kind of error as well …","Creates a new I/O error from an arbitrary error payload.","Returns the OS error that this error represents (if any).","","","","","","","","","","","A single arbitrary channel. <code>Samples</code> can currently only be …","A dynamic list of arbitrary channels. <code>Samples</code> can …","This image type contains all supported exr features and …","How the image pixels are split up into separate blocks.","This check can be executed at compile time if the channel …","How the pixels are split up and compressed.","A vector of non-deep <code>f16</code> values.","A vector of non-deep <code>f32</code> values.","Run-length encoding with tiles of 64x64 pixels. This is …","This image type contains the most common exr features and …","Iterate over all channels of a single pixel in the image","A vector of non-deep values (one value per pixel per …","A list of samples representing a single pixel. Does not …","The complete exr image. <code>Layers</code> can be either a single <code>Layer</code>…","Convert this type into one of the known sample types. Also …","A single Layer, including fancy attributes and compression …","A list of layers. <code>Channels</code> can be <code>SpecificChannels</code> or …","A list of resolution levels. <code>Samples</code> can currently only be …","One or multiple resolution levels of the same image. …","Contains uniformly scaled smaller versions of the original.","The native sample types that this type should be converted …","This image type contains a single layer containing a …","This image type contains multiple layers, with each layer …","Contains information about the channels in an rgb image, …","Contains information about the channels in an rgba image, …","This image type contains a single layer containing a …","This image type contains multiple layers, with each layer …","Contains any possible combination of smaller versions of …","In addition to the full resolution image, this layer also …","PIZ compression with tiles of 256x256 pixels. Small …","ZIP compression with blocks of 16 lines. Slow, but …","The image is divided into scan line blocks. The number of …","A single image without smaller versions of itself. If you …","A grid of pixels. The pixels are written to your custom …","Used to construct a <code>SpecificChannels</code>. Call …","The image is divided into tile blocks. Also specifies the …","A vector of non-deep <code>u32</code> values.","No compression. Massive space requirements. Fast, because …","Sometimes called “data window”","Check for duplicate channel names.","Attributes that apply to the whole image file. These …","Attributes that apply to this layer. May still contain …","Describes how the pixels of this layer are divided into …","","","","","","","","","","","","","","","","","","","","","","","","","","Start building some specific channels. On the result of …","The actual pixel data. Either <code>SpecificChannels</code> or …","A description of the channels in the file, as opposed to …","","","","","","","","","","","","","","","","","","","","","","","How the pixel data of all channels in this layer is …","","","","","","","","Crop away unwanted pixels. Includes automatic detection of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an empty image, to be filled with layers later on. …","How the pixels are split up and compressed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Uses empty attributes and fast compression.","Uses empty attributes.","Uses the display position and size to the channel position …","Create an image with multiple layers. The layer can be a …","Return a level by level index. Level <code>0</code> has the largest …","Return a mutable level reference by level index. Level <code>0</code> …","Get a resolution level by index, sorted by size, …","Flatten the 2D level index to a one dimensional index.","Get a resolution level by index, sorted by size, …","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The layers contained in the image file. Can be either a …","The number of samples in the image. Should be the width …","The number of levels that were generated along the x-axis …","Whether this stores multiple resolution levels.","Get a slice of all resolution levels, sorted by size, …","Get a mutable slice of all resolution levels, sorted by …","Panics for images with Scanline encoding.","In what order the tiles of this header occur in the file. …","This list must be sorted alphabetically, by channel name. …","A flattened list containing the individual levels","One of “R”, “G”, or “B” most of the time.","Create an image with one or multiple layers. The layer can …","Create a layer with the specified size, attributes, …","Create some pixels with channel information. The <code>Channels</code> …","Create a new channel without subsampling.","","","Provides a predefined pixel storage. Currently only …","Your custom pixel storage","This attribute only tells lossy compression methods …","Read an exr image.","","A generic wrapper which can be used to represent recursive …","Create an image with red, green, and blue channels. You …","Create an image with red, green, blue, and alpha channels. …","The actual pixel data. Can be <code>FlatSamples</code> or …","","","","Use <code>samples_at</code> if you can borrow from this layer","Lookup all channels of a single pixel in the image","How many of the samples are skipped compared to the other …","The pixel resolution of this layer. See <code>layer.attributes</code> …","","A new list of arbitrary channels. Sorts the list to make …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This does an approximate comparison for all channels, even …","","","","","","","Compare the result of a round trip test with the original …","Lookup a single value, by flat index. The flat index can …","All samples in this storage as iterator. Matches the …","Views all samples in this storage as f32. Matches the …","Add another channel to this image. Does not add the actual …","Add another channel to this image. Does not add the actual …","Add another layer to this image. The layer type does not …","Specify the contents of the image. The pixel type must be …","Specify the actual pixel contents of the image. You can …","Write an exr image to a file.","","The smaller versions of the original.","The smaller versions of the original.","Whether to round up or down when calculating Mip/Rip …","Whether to round up or down when calculating Mip/Rip …","Realize a cropped view of the original data, by actually …","Crop some pixels ways when specifying a smaller rectangle","Cropping an image fails if the image is fully transparent. …","Crop away unwanted pixels from the border if they match …","The image contained some pixels and has been cropped or …","The type of  this image after cropping (probably the same …","The type of the cropped image (probably the same as the …","A smaller window into an existing pixel storage","A writer for the cropped view layer","All pixels in the image would be discarded, removing the …","Something that has a two-dimensional rectangular shape","Inspect the pixels in this image to determine where to …","The simpler type after cropping is realized","The type of pixel in this pixel grid.","","","","","","","The bounding rectangle of this pixel grid.","","","","","","","","Crop the image to exclude unwanted pixels. Panics for …","Wrap a layer in a cropped view with adjusted bounds, but …","Convert this data to cropped data without discarding any …","Crop away unwanted pixels from the border if they match …","Crop away unwanted pixels from the border if they match …","The cropped pixel storage bounds","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The uncropped pixel storage bounds","The uncropped pixel storage","","","","","","Index is not in world coordinates, but within the data …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the image was fully empty, crop to one single pixel of …","If the image was fully empty, return <code>None</code>, otherwise …","Make the cropping real by reallocating the underlying …","","","","Reduce your image to a smaller part, usually to save …","Return the smallest bounding rectangle including all …","","","","","","","","","","The fully discarded image which caused the cropping to fail","Store all samples in a single array. All samples will be …","","","","","Compute the flat index of a specific pixel. Returns a …","Create a new flattened pixel storage, filled with default …","","","","","","","Returns the argument unchanged.","Examine a pixel of a <code>PixelVec&lt;T&gt;</code> image. Can usually be …","","","Calls <code>U::from(self)</code>.","Create a new flattened pixel storage, checking the length …","The flattened vector contains all rows one after another. …","The resolution of this layer.","Update a pixel of a <code>PixelVec&lt;T&gt;</code> image. Can usually be used …","","","","","","Utilizes the builder pattern to configure an image reader. …","How to read arbitrary channels.","","","","","","","","","","","Returns the argument unchanged.","The last wrapper of image readers, finally containing the […","","Calls <code>U::from(self)</code>.","How to read either a single or a list of layers.","How to read a set of resolution levels.","Specify to handle only one sample per channel, disabling …","Create a reader which can be used to load an exr image. …","All resolution levels, all channels, all layers. Does not …","No deep data, no resolution levels, all channels, all …","No deep data, no resolution levels, rgba channels, all …","No deep data, no resolution levels, all channels, first …","No deep data, no resolution levels, rgba channels, …","How to read samples (a grid of <code>f32</code>, <code>f16</code> or <code>u32</code> values).","How to read arbitrary but specific selection of arbitrary …","","","","","Processes pixel blocks from a file and accumulates them …","Processes pixel blocks from a file and accumulates them …","A template that creates an AnyChannelsReader for each …","A template that creates a new [<code>SampleReader</code>] for each …","The type of the temporary samples reader","The type of resulting sample storage","Processes pixel blocks from a file and accumulates them …","","","","","","","","","","","","","","Create a single reader for a single channel of a layer","","","","","","","","","","","","","","","","Specify whether a single block of pixels should be loaded …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Deliver the final accumulated sample storage for the image","","Load a single pixel line, which has not been filtered, …","The sample reading specification","","","","","","","","","","","","","Processes blocks from a file and collects them into a …","The type of the resulting Layers","The type of resulting layers","Processes pixel blocks from a file and accumulates them …","Specify whether to read the image in parallel, whether to …","A template that creates a <code>LayerReader</code> for each layer in …","The type of the temporary layer reader","Specify that all attributes should be read from an image. …","","","","","","","","","Create a single reader for a single layer","","","","","","","","Specify whether a single block of pixels should be loaded …","","","Returns the argument unchanged.","Returns the argument unchanged.","Read the exr image from a buffered reader. Use […","Read the exr image from an initialized chunks reader that …","Read the exr image from a file. Use […","Buffer the reader and then read the exr image from it. Use …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Deliver the final accumulated layers for the image","Uses relaxed error handling and parallel decompression.","A new image reader with image attributes.","Specify that multiple pixel blocks should never be …","Specify a function to be called regularly throughout the …","Specify that any missing or unusual information should …","Load a single pixel block, which has not been filtered, …","","","","","","","","","Processes pixel blocks from a file and accumulates them …","The type of the resulting channel collection","Processes pixel blocks from a file and accumulates them …","Processes pixel blocks from a file and accumulates them …","Processes pixel blocks from a file and accumulates them …","Specify to read all channels, aborting if any one is …","A template that creates a <code>ChannelsReader</code> once for all …","Specify to read only the first layer which meets the …","The type of the temporary channels reader","Reads all layers, including an empty list. Aborts if any …","","","","","","","","","","","","","","","","","","","","","Create a single reader for all channels of a specific layer","","","","","","","","","","","","","","","","","","","","","","","","","Specify whether a single block of pixels should be loaded …","","","Read only the first layer which meets the previously …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Deliver the final accumulated channel collection for the …","","","Load a single pixel block, which has not been filtered, …","","","The channel reading specification","The channel reading specification","","","","","","","","","","","","","","","","","","","","","Processes pixel blocks from a file and accumulates them …","Specify to read all contained resolution levels from the …","Specify to read only the highest resolution level, …","A template that creates a <code>SamplesReader</code> once for each …","The type of the temporary level reader","Read all arbitrary channels in each layer.","Read all arbitrary channels in each layer.","","","","","","","","","","","","","","Create a single reader for a single resolution level","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The sample reading specification","The sample reading specification","Read only layers that contain rgb channels. Skips any …","Read only layers that contain rgba channels. Skips any …","Read only layers that contain the specified channels, …","","","","","","","","","","","","","Processes pixel blocks from a file and accumulates them …","Specify to read only flat samples and no “deep data”","Specify to read all contained resolution levels from the …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Specify to read only the highest resolution level, …","","","","","","","","","","Specifies how to collect all the specified channels into a …","Reader for a single channel. Generic over the concrete …","Used to read another specific channel from an image. …","Used to read another specific channel from an image. …","Can be attached one more channel reader. Call <code>required</code> or …","Read zero channels from an image. Call <code>with_named_channel</code> …","The channel descriptions from the image. Will be converted …","The pixel type. Will be converted to a tuple at the end of …","A reader containing sub-readers for reading the pixel …","A separate internal reader for the pixels. Will be of type …","Reader for a single channel. Generic over the concrete …","The reader that holds the temporary data that is required …","","","","","","","","","","","","","","","","","","","","","","","","","","","Using two closures, define how to store the pixels. The …","","Create a separate internal reader for the pixels of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the channel descriptions based on the channels in …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Plan to read an additional channel from the image, with …","","Read the line of pixels.","Plan to read an additional channel from the image, with …","","","","","","","","","","","","","","","","","","","","","","","","","Convert this recursive type into a tuple. This is nice as …","Create a recursive type from this tuple.","Convert this recursive type into a tuple. This is nice as …","The resulting tuple type.","No more recursion. Can be used within any …","A recursive type-level linked list of <code>Value</code> entries. …","The recursive type resulting from this tuple.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","The remaining values of this linked list, probably either …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this recursive type to a nice tuple.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a recursive type from this tuple.","","","Convert this recursive type to a nice tuple.","","","Create a new recursive type. Equivalent to the manual …","","","","","","","","","","","","","","The next item in this linked list.","","","","Compare two objects, but with a few special quirks. …","Whether to do accurate or approximate comparison.","If invalid, contains the error message.","Compare self with the other. Panics if not equal.","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Compare self with the other. Exceptional behaviour:","Enables an image to be written to a file. Call …","A temporary writer which can be configured and used to …","","","How to read arbitrary channels and rgb channels.","","","","","","","","Returns the argument unchanged.","Generate file meta data for this image. The meta data …","","Calls <code>U::from(self)</code>.","How to write either a single or a list of layers.","Do not compress multiple pixel blocks on multiple threads …","Specify a function to be called regularly throughout the …","How to write samples (a grid of <code>f32</code>, <code>f16</code> or <code>u32</code> values).","Skip some checks that ensure a file can be opened by other …","Write the exr image to a writer. Use <code>to_file</code> instead, if …","Write the exr image to a file. Use <code>to_unbuffered</code> instead, …","","Buffer the writer and then write the exr image to it. Use …","","","","Create a temporary writer which can be configured and used …","An oversimplified function for “just write the damn file …","An oversimplified function for “just write the damn file …","A temporary writer for an arbitrary list of channels","A temporary writer for a list of channels","Define how to get a pixel from your custom pixel storage. …","The pixel tuple containing <code>f32</code>, <code>f16</code>, <code>u32</code> and <code>Sample</code> values.","Write pixels to a slice of bytes. The top level writer …","A type that has a recursive entry for each channel in the …","Write the pixels of a single channel, unconditionally. …","A temporary writer for a layer of channels, alpha being …","Enables an image containing this list of channels to be …","A tuple containing either <code>ChannelsDescription</code> or …","The type of temporary writer","","","","","","","Return all the channels that should actually end up in the …","","","","","","","Create the temporary writer, accepting the sorted list of …","Create a temporary writer for this list of channels","","","","","","","","","","","","","","Deliver a block of pixels, containing all channel data, to …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Inspect a single pixel at the requested position. Will be …","Generate the file meta data for this list of channel","Generate the file meta data of whether and how resolution …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Write pixels to a slice of bytes. Recursively do this for …","A temporary writer for an arbitrary list of layers","A temporary writer for a single layer","A temporary writer for a list of channels","Enables an image containing this list of layers to be …","The type of temporary writer","","","","","","","","","Create a temporary writer for this list of layers","","","","","","","","","","","Deliver a block of pixels from a single layer to be stored …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Generate the file meta data for this list of layers","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","A temporary writer for a predefined non-deep sample storage","A temporary writer for multiple resolution levels","A temporary writer for one or more resolution levels …","Enable an image with this single level sample grid to be …","Enable an image with this sample grid to be written to a …","The type of the temporary writer for this sample storage","The type of the temporary writer for this single level of …","","","","","","","","","Create a temporary writer for this single level of samples","Create a temporary writer for this sample storage","","","","","","","","","","Deliver a single short horizontal list of samples for a …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Generate the file meta data regarding resolution levels","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Generate the file meta data regarding the number type of …","Generate the file meta data regarding the number type of …","","","","","","","","","Round down.","Round up or down in specific calculations.","Round up.","Simple two-dimensional vector of any numerical type. …","","Seeing this vector as a dimension or size (width and …","","","","","","","","","","","","","","","","","","","","","Convert this two-dimensional coordinate to an index suited …","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","The second component of this 2D vector.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the vector with the maximum of either coordinates.","Returns the vector with the minimum of either coordinates.","","","","Panics for too large values","","","Try to convert to <code>Vec2&lt;usize&gt;</code>, returning an error on …","","Try to convert all components of this vector to a new type,","","","","","","The first component of this 2D vector.","The first component of this 2D vector.","The second component of this 2D vector.","How the image pixels are split up into separate blocks.","List of <code>Header</code>s.","Contains the complete meta data of an exr image. Defines …","The offset table is an ordered list of indices referencing …","List of <code>OffsetTable</code>s.","A summary of requirements that must be met to read this …","The image is divided into scan line blocks. The number of …","Locates a rectangular section of pixels in an image.","The image is divided into tile blocks. Also specifies the …","Contains all meta data attributes. Each layer can have any …","","","","","","","","","Compute the start position and size of a block inside a …","Calculate the size of a single block. If this is the last …","","","","","","","","","Go through all the block indices in the correct order and …","Go through all the block indices in the correct order and …","Compute the number of tiles required to contain all values.","Compute the number of chunks that an image is divided …","Calculate number of mip levels in a given resolution.","Calculate the size of a single mip level by index.","","","","","","","","","","","","","This iterator tells you the block indices of all blocks …","","","","","","","","This library supports reading version 1 and 2, and writing …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","This image contains at least one layer with deep data.","Whether this file has strings with a length greater than …","Whether this file contains multiple layers.","Whether this image is tiled. If false, this image is …","","","","Contains collections of common attributes. Defines some …","One header to describe each layer in this file.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this file declared to contain multiple layers?","If true, this image has tiled blocks and contains only a …","Index of the tile.","The first four bytes of each exr file. Used to abort …","Iterates over all mip map level indices of a given size. …","Iterates over all mip map level resolutions of a given …","Read the value without validating.","Read the exr meta data from a reader. Use <code>read_from_file</code> …","Read the exr meta data from a file. Use …","Buffer the reader and then read the exr meta data from it. …","Read one offset table from the reader for each header.","Some flags summarizing the features that must be supported …","Iterates over all rip map level indices of a given size. …","Iterates over all rip map level resolutions of a given …","A <code>0_u8</code> at the end of a sequence.","Pixel size of the tile.","Skip the offset tables by advancing the reader by the …","","","","","","","","","","","","","","","","","Validates this meta data. Returns the minimal possible …","Validate this instance.","Without validation, write this instance to the byte stream.","Contains one of all possible attributes. Includes a …","Number of bytes this would consume in an exr file.","layer type, specifies block type and deepness.","Deep or flat and tiled or scan line.","A single channel in an layer. Does not contain the actual …","A List of channels. Channels must be sorted alphabetically.","Channel meta data.","The color space of the pixels.","Color space definition.","","Compression method of this layer.","This image contains the six sides of a cube.","A custom attribute. Contains the type name of this value.","The integer rectangle describing where an layer is placed …","The blocks in the file are ordered in ascending rows from …","Corresponds to the string value <code>deepscanline</code>.","Corresponds to the string value <code>deeptile</code>.","The integer rectangle limiting which part of the infinite …","If this attribute is present, it describes how this …","This image is an environment map.","This channel contains 16-bit float values.","32-bit float","This channel contains 32-bit float values.","64-bit float","A rectangular section anywhere in 2D float space.","2D float rectangle.","2D float vector.","3D float vector.","32-bit signed integer","The blocks in the file are ordered in descending rows from …","2D integer vector.","3D integer vector.","A rectangular section anywhere in 2D integer space. Valid …","2D integer rectangle.","Uniquely identifies a motion picture film frame.","Film roll information.","This image is an environment map projected like a world …","Whether to also store increasingly smaller versions of the …","In what order the <code>Block</code>s of pixel data appear in a file.","Order of the bocks in the file.","A float matrix with three rows and three columns.","A 3x3 matrix of floats.","A float matrix with four rows and four columns.","A 4x4 matrix of floats.","Levels with a similar aspect ratio.","A small <code>rgba</code> image of <code>i8</code> values that approximates the real …","8-bit rgba Preview of the image.","An integer dividend and divisor, together forming a ratio.","An integer dividend and divisor.","Levels with all possible aspect ratios.","The type of samples in this channel.","Corresponds to the string value <code>scanlineimage</code>.","Only a single level.","A byte array with each byte being a char. This is not UTF …","A string of byte-chars.","The raw bytes that make up a string in an exr file. Each <code>u8</code>…","A byte slice, interpreted as text","List of texts.","Corresponds to the string value <code>tiledimage</code>.","Describes how the layer is divided into tiles. Specifies …","How to tile up the image.","Contains time information for this frame within a sequence.","Timepoint and more.","This channel contains 32-bit unsigned int values.","The blocks are not ordered in a specific way inside the …","The internal ASCII bytes this text is made of.","Flags for <code>TimeCode.binary_groups</code>.","The user-defined control codes. Every entry in this array …","The string literals used to represent a <code>BlockType</code> in a …","“Blue” location on the CIE XY chromaticity diagram.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of bytes this attribute would consume in an exr …","Number of bytes this would consume in an exr file.","Number of bytes this would consume in an exr file.","Number of bytes this would consume in an exr file.","Number of bytes this would consume in an exr file.","Number of bytes this would consume in an exr file.","Number of bytes this would consume in an exr file.","Number of bytes this would consume in an exr file.","Number of bytes this would consume in an exr file.","Number of bytes this would consume in an exr file.","Number of bytes this would consume in an exr file.","Number of bytes this would consume in an exr file.","Number of bytes this would consume in an exr file.","Number of bytes this would consume in an exr file.","The underlying bytes that represent this text.","The number of bytes that one pixel in this image needs.","How many bytes a single sample takes up.","Iterate over the channels, and adds to each channel the …","Iterate over the individual chars in this text, similar to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this is a color frame.","Returns whether the specified rectangle is equal to or …","Specifies the film count.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this is a drop frame.","Returns the top-right coordinate of the rectangle. The row …","","","Compare this <code>exr::Text</code> with a plain <code>&amp;str</code>.","","","","","","","","","","","","","","","","Compare this <code>exr::Text</code> with a plain <code>&amp;str</code> ignoring …","","","","","","","","","","","","","","Field Phase.","Identifies a film manufacturer.","Specifies the film roll prefix.","Identifies a film type.","Return the index of the channel with the exact name, case …","","","","","","","","","","","","","","","","","","Frame Indices 0 - 29 are valid.","Returns the argument unchanged.","Returns the argument unchanged.","Panics if the string contains an unsupported character","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>Text</code> from the specified bytes object, without …","Create a box with a size starting at zero.","Unpack a time code from one TV60 encoded u32 value and the …","Create a <code>Text</code> from a slice of bytes, without checking any …","Unpack a time code from one TV50 encoded u32 value and the …","Unpack a time code from one TV60 encoded u32 value and the …","“Green” location on the CIE XY chromaticity diagram.","Choose whether to compress samples linearly or not, based …","","","","","","","","","","","","","Hours 0 - 23 are valid.","The byte count this string would occupy if it were encoded …","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return <code>Ok(Text)</code> if this attribute is a text.","The exr name string of the type that an attribute can have.","Whether to also store smaller versions of the image.","The channels in this list.","Returns the maximum coordinate that a value in this …","The bottom right corner location of the rectangle …","The top left corner location of the rectangle (inclusive)","Minutes 0 - 59 are valid.","One of “R”, “G”, or “B” most of the time.","Create a new channel with the specified properties and a …","Create a box with a size and an origin point.","Does not validate channel order.","Create a new channel with the specified properties and a …","Create a <code>Text</code> from an <code>str</code> reference. Returns <code>None</code> if this …","Create a <code>Text</code> from an <code>str</code> reference. Panics if this string …","The byte count this string would occupy if it were encoded …","Pack the SMPTE time code into a u32 value, according to …","Pack the SMPTE time code into a u32 value, according to …","Pack the SMPTE time code into a u32 value, according to …","Pack the user data <code>u8</code> array into one u32. User data values …","Return a <code>BlockType</code> object from the specified attribute …","","Specifies the perforation offset.","Specifies the perforation count of each single film.","Specifies the perforation count of each single frame.","An array with a length of 4 × width × height. The pixels …","The top left corner of this rectangle. The <code>Box2I32</code> …","This attribute only tells lossy compression methods …","Read the attribute without validating. The result may be <code>Ok</code>…","Read the value without validating. Returns …","Read the time code, without validating, extracting from …","Read the value without validating.","Read the value without validating.","Read the value without validating.","Read the value without validating.","Read the value without validating.","Read the value without validating.","Read the value without validating.","Read the value without validating.","Read the value without validating.","Read the value without validating.","Read the value without validating.","Read the length of a string and then the contents with …","Read a string until the null-terminator is found. Then …","Read the contents with that length.","“Red” location on the CIE XY chromaticity diagram.","Whether to round up or down when calculating Mip/Rip …","U32, F16 or F32.","How many of the samples are skipped compared to the other …","Seconds 0 - 59 are valid.","How many pixels to include in this <code>Box2I32</code>. Extends to the …","The dimensions of the preview image.","The count of pixels this channel contains, respecting …","The resolution pf this channel, respecting subsampling.","The size of each tile. Stays the same number of pixels …","Return <code>Ok(Chromaticities)</code> if this attribute is a …","Return <code>Ok(f32)</code> if this attribute is an f32.","Return <code>Ok(i32)</code> if this attribute is an i32.","","","","","","","","","","","","","","","","","","Return <code>Ok(Text)</code> if this attribute is a text.","Returns the raw attribute text value this type is …","Return <code>Ok(TimeCode)</code> if this attribute is a time code.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains string literals identifying the type of an …","The sample type of all channels, if all channels have the …","Validate this attribute.","Validate this instance.","Check whether this string is valid, adjusting <code>long_names</code> …","Returns an error if this time code is considered invalid.","Validate this instance.","Check if channels are valid and sorted.","Validate this instance.","Validate this instance.","Validate this instance.","Check whether some bytes are valid, adjusting <code>long_names</code> …","“White” location on the CIE XY chromaticity diagram.","Create a new rectangle which is offset by the specified …","Without validation, write this attribute to the byte …","Without validation, write this instance to the byte stream.","Write this time code to the byte stream, encoded as TV60 …","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Without validation, write this instance to the byte stream.","Write the length of a string and then the contents with …","Write the string contents and a null-terminator.","Create a box with no size located at (0,0).","The value, stored in little-endian byte order, of the …","The name of the type this attribute is an instance of.","Type attribute text value of deep scan lines","Type attribute text value of deep tiles","Type attribute text value of flat scan lines","Type attribute text value of flat tiles","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","The byte-string name of this attribute type as it appears …","Describes a single layer in a file. A file can have any …","Includes mandatory fields like pixel aspect or display …","Does not include the attributes required for reading the …","The adopted neutral of the colors. Specifies the CIE (x,y) …","Geographical image location.","Camera aperture measured in f-stops. Equals the focal …","Describes how the pixels of this layer are divided into …","Iterate over all tile indices in this header in …","","","","","","","The date of image creation, in <code>YYYY:MM:DD hh:mm:ss</code> format.","List of channels in this layer.","The chromaticities attribute of the image. See the …","Number of chunks, that is, scan line blocks or tiles, that …","","","","","","","Additional textual information.","How the pixel data of all channels in this layer is …","The rectangle describing the bounding box of this layer …","Whether this layer contains deep data.","This library supports only deep data version 1.","Specifies whether the pixels in a deep image are sorted …","","","","","","","","The rectangle anywhere in the global infinite 2D space …","","","","Iterate over all blocks, in the order specified by the …","If this is an environment map, specifies how to interpret …","","","","Exposure time in seconds.","The far clip plane of the virtual camera projection.","Identifies film manufacturer, film type, film roll and …","","","","Camera focus in meters.","Frames per second if this is a frame in a sequence.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calculate the pixel index rectangle inside this header. Is …","Return the tile index, converting scan line block …","Calculate the position of a block in the global infinite …","Computes the absolute tile coordinate data indices, which …","The horizontal density, in pixels per inch. The image’s …","The field of view angle, along the horizontal axis, in …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iso-speed of the camera sensor.","Geographical image location.","The name of this layer. Required if this file contains …","The top left corner of the rectangle that positions this …","The resolution of this layer. Equivalent to the size of …","In what order the tiles of this header occur in the file.","Geographical image location.","Name of the color transform function that computes the …","Maximum byte length of an uncompressed or compressed …","The default pixel resolution of a single block (tile or …","Approximates the maximum number of bytes that the pixels …","Maximum number of samples in a single pixel in a deep …","Specifies the view names for multi-view, for example …","Create default layer attributes with a data position of …","The near clip plane of the virtual camera projection.","Create a new Header with the specified name, display …","Set the display position and size of this image.","If the image was cropped, contains the original data …","Contains custom attributes. Does not contain the …","Contains custom attributes. Does not contain the …","Does not include the attributes required for reading the …","Name of the owner.","Aspect ratio of each pixel in this header.","An 8-bit rgba image representing the rendered image.","Read the value without validating.","Read the headers without validating them.","Name of the color transform function that is applied for …","Part of the perspective projection. Default should be …","Part of the perspective projection. Default should be <code>1</code>.","Includes mandatory fields like pixel aspect or display …","The name of the software that produced this image.","Collection of required attribute names.","The time code of the image.","","","","Returns the number of bytes that the pixels of this header …","","","","","","","","","","Time offset from UTC.","Validate this instance.","The field of view angle, along the horizontal axis, in …","Name of the view, which is typically either <code>&quot;right&quot;</code> or …","The white luminance of the colors. Defines the luminance …","Set <strong>all</strong> attributes of the header that are not shared with …","Set all common camera projection attributes at once.","Set the display window, that is, the global clipping …","Set compression, tiling, and line order. Automatically …","Set the offset of this layer.","Set the data position of this layer.","Set <strong>all</strong> attributes of the header that are shared with all …","Set the display position to zero and use the specified …","The matrix that transforms 3D points from the world to the …","The matrix that transforms 3D points from the world to the …","Specifies how texture map images are extrapolated. Values …","Without validation, write this instance to the byte stream.","Without validation, write the headers to the byte stream.","The byte-string name of this required attribute as it …","A list containing all reserved names.","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The byte-string name of this required attribute as it …","The first four bytes of each exr file.","Consumes four bytes from the reader and returns whether …","Validate this image. If it is an exr file, return <code>Ok(())</code>.","Without validation, write this instance to the byte stream.","Number of bytes this would consume in an exr file.","Peeks the next byte. If it is zero, consumes the byte and …","Without validation, write this instance to the byte stream.","","","","Approximate number of <code>f16</code> significant digits in base 10","<code>f16</code> Euler’s number (ℯ)","<code>f16</code> machine epsilon value","","<code>f16</code> 1/π","<code>f16</code> 1/√2","<code>f16</code> 2/π","<code>f16</code> 2/√π","<code>f16</code> π/2","<code>f16</code> π/3","<code>f16</code> π/4","<code>f16</code> π/6","<code>f16</code> π/8","<code>f16</code> positive Infinity (+∞)","","","<code>f16</code> 𝗅𝗇 10","<code>f16</code> 𝗅𝗇 2","<code>f16</code> 𝗅𝗈𝗀₁₀2","<code>f16</code> 𝗅𝗈𝗀₁₀ℯ","<code>f16</code> 𝗅𝗈𝗀₂10","<code>f16</code> 𝗅𝗈𝗀₂ℯ","","","Number of <code>f16</code> significant digits in base 2","Largest finite <code>f16</code> value","Maximum possible <code>f16</code> power of 10 exponent","Maximum possible <code>f16</code> power of 2 exponent","Maximum subnormal <code>f16</code> value","Smallest finite <code>f16</code> value","Minimum possible normal <code>f16</code> power of 10 exponent","One greater than the minimum possible normal <code>f16</code> power of …","Smallest positive normal <code>f16</code> value","Minimum positive subnormal <code>f16</code> value","","<code>f16</code> Not a Number (NaN)","<code>f16</code> negative infinity (-∞)","<code>f16</code> -1","<code>f16</code> -0","<code>f16</code> 1","<code>f16</code> Archimedes’ constant (π)","The radix or base of the internal representation of <code>f16</code>","","<code>f16</code> √2","","","A <code>Vec</code>-like container that can store a small number of …","","","","<code>f16</code> 0","","","","","","","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","","","","","","","","The number of items the vector can hold without …","Restrict a value to a certain interval unless it is NaN.","Returns the floating point category of the number.","Remove all elements from the vector.","","","","","","","Returns a number composed of the magnitude of <code>self</code> and the …","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","","","","","","","","","","","","Creates a draining iterator that removes the specified …","","","","","","","","Copy elements from a slice and append them to the vector.","A 16-bit floating point type implementing the IEEE …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Creates a floating point value from its representation as …","Constructs a 16-bit floating point value from the raw bits.","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Constructs a 16-bit floating point value from a 32-bit …","","Constructs a 16-bit floating point value from a 32-bit …","","Constructs a 16-bit floating point value from a 64-bit …","Constructs a 16-bit floating point value from a 64-bit …","","Creates a floating point value from its representation as …","Creates a floating point value from its representation as …","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","","","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","","Re-allocate to set the capacity to …","","","","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the <code>SmallVec</code> into an <code>A</code> if possible. Otherwise …","","","","Convert a <code>SmallVec</code> to a <code>Vec</code>, without reallocating if the …","Returns <code>true</code> if the vector is empty","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if this value is ±∞ and <code>false</code>. otherwise.","Returns <code>true</code> if this value is <code>NaN</code> and <code>false</code> otherwise.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if and only if <code>self</code> has a negative sign, …","Returns <code>true</code> if and only if <code>self</code> has a positive sign, …","","The number of elements stored in the vector","","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","","","","","","","","","Construct an empty vector","","","Remove an item from the end of the vector and return it, …","","","Append an item to the vector.","","","","","","","","","","","","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns a number that represents the sign of <code>self</code>.","Returns <code>true</code> if the data has spilled into a separate …","","","","","","","","","Remove the element at position <code>index</code>, replacing it with …","Returns the memory representation of the underlying bit …","Converts a <code>f16</code> into the underlying bit representation.","","","Converts a <code>f16</code> value into a <code>f32</code> value.","Converts a <code>f16</code> value into a <code>f32</code> value.","Converts a <code>f16</code> value into a <code>f64</code> value.","Converts a <code>f16</code> value into a <code>f64</code> value.","Returns the memory representation of the underlying bit …","Returns the memory representation of the underlying bit …","","","","","Returns the ordering between <code>self</code> and <code>other</code>.","Import this specifically if you want to be explicit but …","Shorten the vector, keeping the first <code>len</code> elements and …","","","Re-allocate to set the capacity to …","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,1,2,0,1,2,1,2,2,2,2,2,1,2,1,2,1,2,0,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,1,0,2,1,1,0,0,0,1,2,1,2,1,2,1,2,0,0,0,0,0,0,0,0,27,27,27,27,0,9,27,28,29,30,31,32,9,27,28,29,30,31,32,9,27,28,29,30,31,32,9,27,28,29,30,31,32,9,31,32,28,29,31,32,29,32,31,32,9,27,28,29,30,31,32,9,27,28,29,30,31,32,9,27,28,29,30,31,32,30,30,9,27,28,29,30,31,32,9,27,28,29,30,31,32,30,9,27,28,29,30,31,32,9,27,28,29,30,31,32,30,9,30,9,28,29,30,31,32,30,30,30,9,27,28,29,30,31,32,9,27,28,29,30,31,32,9,27,28,29,30,31,32,9,27,28,29,30,31,32,9,28,29,30,31,32,28,31,0,0,0,0,36,37,36,37,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,37,36,37,36,37,37,37,37,36,37,40,36,40,36,37,36,37,36,37,36,37,36,37,36,41,36,41,36,0,0,0,0,0,0,0,20,20,47,42,48,44,46,20,47,42,48,44,46,44,46,43,43,20,47,42,48,44,46,20,47,42,48,44,46,20,47,42,48,44,46,43,47,42,48,20,20,47,42,48,44,46,20,47,42,48,44,46,43,20,20,47,42,48,44,46,20,47,42,48,44,46,47,42,48,44,46,20,43,20,47,42,48,44,46,46,46,47,42,48,44,46,43,43,20,43,43,47,42,48,44,46,20,47,42,48,44,46,20,47,42,48,44,46,20,47,42,48,44,46,49,49,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,153,49,153,153,49,153,153,49,153,49,49,49,49,167,49,49,167,49,49,49,167,49,49,49,49,49,49,49,0,0,0,0,0,0,59,61,62,63,60,59,61,62,63,60,59,58,58,60,61,62,63,60,59,61,62,63,60,59,61,62,63,60,59,61,62,63,60,59,61,62,63,60,59,61,62,63,60,59,63,60,59,61,62,63,60,59,63,60,59,59,58,58,58,58,61,62,61,62,63,60,59,61,62,63,60,59,61,62,63,60,59,59,58,61,62,0,63,64,64,0,0,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,76,0,76,76,0,0,76,0,0,68,76,68,76,68,68,76,68,76,68,68,68,76,68,68,76,76,68,68,68,68,76,76,76,68,68,68,68,76,68,76,68,68,68,68,68,68,68,76,68,76,68,76,68,76,68,76,0,0,0,0,0,0,94,94,87,0,0,0,0,0,0,0,0,0,0,92,116,0,0,0,0,0,0,92,0,87,87,88,92,0,0,88,94,87,82,113,86,82,87,86,82,87,88,89,90,91,92,93,94,85,95,86,82,87,88,89,90,91,92,93,94,85,95,82,89,82,89,86,82,87,88,89,90,91,92,93,94,95,86,82,87,88,89,90,91,92,93,94,95,87,94,92,94,98,82,89,90,0,82,82,82,82,87,86,82,87,88,89,90,91,92,93,94,85,95,86,82,87,88,89,90,91,92,93,94,85,95,86,82,87,88,89,90,91,92,93,94,85,95,86,82,86,82,87,88,89,90,91,92,93,94,95,88,89,92,93,86,82,87,88,89,90,91,92,93,94,85,95,86,82,87,88,89,90,91,92,93,94,85,95,86,86,86,86,93,93,92,93,92,89,90,98,82,89,90,92,94,86,82,87,88,89,90,91,92,93,94,85,95,82,82,86,82,87,88,89,90,91,92,93,94,85,95,95,86,94,93,92,92,92,82,87,90,93,91,86,82,89,91,95,95,0,89,91,0,82,0,89,89,91,92,94,94,82,82,91,82,95,90,86,82,87,88,89,90,91,92,93,94,95,86,82,87,88,89,90,91,92,93,94,85,95,86,82,87,88,89,90,91,92,93,94,85,95,86,82,87,88,89,90,91,92,93,94,85,95,86,82,82,89,90,91,92,94,0,94,94,94,85,85,86,85,85,0,86,220,221,220,221,0,0,0,0,102,120,222,0,0,102,0,0,223,224,102,108,118,102,108,118,121,102,108,118,102,108,118,108,120,108,222,222,222,108,102,108,118,102,108,118,102,108,118,102,108,118,102,108,118,102,108,118,102,108,118,108,108,108,108,102,108,118,224,102,108,118,102,102,223,102,108,118,120,0,102,108,118,102,108,118,102,108,118,225,0,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,0,0,123,123,123,123,123,123,123,123,123,123,123,0,123,123,0,0,123,0,0,0,0,0,0,0,0,123,123,123,123,0,0,0,0,135,136,0,132,133,134,132,133,134,132,133,134,132,133,134,132,135,132,133,134,132,133,134,132,133,134,132,133,134,132,133,134,136,133,132,133,134,132,133,134,132,133,134,132,133,134,133,136,133,136,132,132,133,134,132,133,134,132,133,134,132,133,134,0,140,141,0,0,0,140,140,138,139,138,139,138,139,138,139,140,138,139,138,139,138,139,139,141,138,139,138,139,138,138,138,138,138,139,138,139,141,138,139,138,138,138,141,138,139,138,139,138,139,138,139,0,148,0,0,0,0,0,0,147,147,142,143,144,145,146,142,143,144,145,146,142,143,144,145,146,142,143,144,145,146,147,142,143,142,143,144,145,146,142,143,144,145,146,142,143,144,145,146,142,143,144,145,146,142,143,148,144,145,147,142,143,144,145,146,142,143,144,145,146,142,143,144,145,146,142,143,144,145,146,148,144,145,148,144,145,142,143,142,143,144,145,146,142,143,144,145,146,142,143,144,145,146,142,143,144,145,146,0,0,0,0,152,149,150,149,150,151,149,150,151,149,150,151,149,150,151,150,152,149,150,151,149,150,151,149,150,151,149,150,151,149,150,151,151,149,150,151,149,150,151,149,150,151,149,150,151,151,151,149,150,149,149,149,149,150,151,149,150,151,149,150,151,149,150,151,0,0,124,124,158,124,158,124,158,124,158,124,124,124,158,124,158,124,158,124,158,124,158,124,158,124,158,124,158,124,158,158,124,158,124,158,124,158,124,158,124,158,0,0,0,0,0,0,163,163,0,162,0,0,156,154,156,154,155,159,160,161,156,154,155,159,160,161,156,154,155,159,160,161,156,154,155,159,160,161,162,155,162,156,154,156,154,155,159,160,161,156,154,155,159,160,161,156,154,155,159,160,161,159,156,154,155,159,160,161,156,154,155,159,160,161,163,156,154,155,159,160,161,156,154,155,159,160,161,159,162,159,163,162,156,154,155,159,160,161,156,154,155,159,160,161,156,154,155,159,160,161,156,154,155,159,160,161,0,0,0,226,0,0,100,84,115,84,115,84,115,84,115,115,84,115,84,115,84,84,115,115,84,115,84,115,84,115,84,115,84,115,84,115,84,115,84,115,84,115,84,115,84,115,115,84,115,84,115,115,84,115,226,84,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,100,84,115,227,84,115,115,84,115,115,84,115,84,115,84,115,84,115,84,115,115,84,115,115,0,0,0,111,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,111,0,0,117,117,0,117,117,117,117,117,117,117,117,117,117,117,0,117,117,0,117,117,117,117,117,117,117,117,228,0,0,0,0,0,99,0,164,0,0,0,0,97,169,170,168,169,170,168,164,169,170,168,169,170,168,164,97,169,170,168,169,170,168,169,170,168,169,170,169,170,119,169,170,169,170,168,169,170,168,99,97,97,169,170,168,169,170,168,169,170,168,169,170,168,169,170,168,169,170,168,166,0,0,0,0,106,172,173,172,173,172,173,172,173,106,172,173,172,173,172,173,172,173,172,173,165,172,173,172,173,172,173,106,172,173,172,173,172,173,172,173,172,173,172,173,0,0,0,0,0,101,96,174,175,174,175,174,175,174,175,96,101,174,175,174,175,174,175,174,175,175,171,174,175,174,175,174,175,101,174,175,174,175,101,96,174,175,174,175,174,175,174,175,178,0,178,0,33,33,33,178,33,178,33,178,33,178,33,33,178,33,178,33,33,178,33,178,33,178,33,33,178,33,33,178,33,178,33,33,178,33,178,33,33,33,33,33,33,33,178,33,33,33,178,33,178,33,178,33,33,33,0,0,0,0,0,0,188,0,188,0,11,186,187,188,11,186,187,188,0,0,11,186,187,188,11,186,187,188,11,11,0,0,0,0,11,186,187,188,11,186,187,188,11,186,187,188,11,11,186,187,188,186,187,188,186,11,186,187,188,11,186,187,188,186,186,186,188,186,187,188,0,11,11,186,187,188,11,186,187,188,186,186,187,0,0,0,186,11,11,11,11,11,0,0,0,187,11,11,186,187,188,11,186,187,188,11,186,187,188,11,186,187,188,11,186,186,0,194,0,191,0,0,191,0,191,0,191,197,191,0,199,192,192,0,0,191,66,191,66,191,0,191,191,191,191,199,191,191,0,191,0,191,197,0,0,191,0,191,0,191,105,0,191,0,191,105,0,192,105,0,191,0,0,191,192,0,191,0,191,66,199,83,194,194,0,196,191,83,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,191,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,0,191,192,34,195,3,114,66,196,197,198,199,193,200,83,3,66,3,83,191,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,191,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,83,194,34,198,83,194,34,191,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,191,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,191,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,194,34,191,83,83,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,83,83,194,192,34,3,114,66,197,198,199,193,200,105,194,198,198,198,3,191,83,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,194,191,83,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,83,34,194,83,194,194,196,114,83,194,192,34,3,114,66,197,198,199,200,105,194,83,191,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,191,83,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,191,191,200,3,34,195,195,194,114,114,34,3,114,83,83,83,194,194,194,194,192,83,198,198,198,193,34,114,0,191,194,34,195,3,114,66,196,197,198,199,193,200,83,83,83,196,200,114,114,194,34,193,114,114,200,191,191,191,191,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,83,191,192,191,191,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,191,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,191,83,194,192,34,195,3,114,66,196,197,198,199,193,200,105,0,3,0,191,83,194,34,3,114,193,200,83,196,34,0,191,194,192,34,195,3,114,66,196,197,198,199,193,200,83,83,34,229,229,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,107,107,107,7,7,7,103,107,7,103,107,107,7,103,7,7,103,107,7,103,107,107,7,7,7,7,107,107,7,103,107,7,103,107,103,7,103,107,7,107,7,103,107,107,107,107,7,103,107,107,107,7,103,107,7,7,7,7,107,107,7,103,107,7,103,107,107,107,107,107,7,7,107,107,7,7,7,7,107,107,107,7,103,107,103,107,7,107,103,107,7,7,107,107,107,7,107,0,103,7,103,107,7,7,103,107,7,103,107,7,103,107,107,7,107,107,107,7,107,7,7,7,107,7,103,107,107,107,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,50,50,0,50,50,50,50,50,50,50,50,50,50,0,0,50,50,50,50,50,50,0,0,50,50,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,0,50,0,0,0,0,0,0,50,50,50,50,50,50,50,110,110,110,110,110,110,110,0,110,110,50,110,110,50,110,50,50,110,110,50,110,110,50,110,50,110,110,110,110,50,110,110,50,110,110,50,50,50,50,50,50,50,110,110,110,50,110,50,110,110,110,0,110,50,50,50,50,50,50,50,50,110,110,110,110,110,50,50,50,50,50,50,110,110,110,110,50,50,50,50,50,50,50,110,50,50,110,110,50,50,110,50,110,50,110,110,110,110,50,110,110,110,110,110,50,110,110,110,110,110,110,110,50,50,50,50,50,50,50,110,50,50,50,50,50,50,50,50,50,50,50,110,110,50,110,50,50,110,0,0,0,0,0,50,50,50,50,50,50,110,110,110,110,110,110,110,110,110,50,110,50,50,50,50,50,50,50,50,110,50,50,50,50,50,50,50,50,50,50,110,50,50,50,50,0,110,110,50,110,110,50,110,110,110,50,110,50,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[1,1],[2,2],[[]],[[]],[[3,1,4],[[6,[5]]]],[[2,[8,[7]]],[[10,[9]]]],0,[[9,11,12],[[10,[2]]]],[13],[13],[13],[13],[13],[13],[[[8,[7]]],14],[[1,1],12],[[2,2],12],[[],12],[[],12],[[1,15],16],[[2,15],16],[[]],[[]],[[3,1,4],2],[[1,17]],0,[[],13],[[],13],[[]],[[]],0,0,0,[[2,3],14],0,0,[[[0,[18,19]],12],[[10,[[20,[[0,[18,19]]]]]]]],0,0,[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[[0,[23,19]],24,12,25],26],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[30,30],12],[[],12],[[9,15],16],[[27,15],16],[[28,15],16],[[29,15],16],[[30,15],16],[[31,15],16],[[32,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[30,17]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,12],0,0,[[18,11],[[10,[9]]]],[[18,13],[[10,[28]]]],[[18,13],[[10,[29]]]],[18,[[10,[30]]]],[[18,13],[[10,[31]]]],[[18,13],[[10,[32]]]],0,[[30,[33,[13]],34],[[10,[34]]]],[[30,[33,[13]],[33,[13]]],[[10,[34]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[9,23,13],26],[[28,23],26],[[29,23],26],[[30,23],26],[[31,23],26],[[32,23],26],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[[36,[35]]],[[36,[35]]]],[37,37],[[]],[[]],[13],[13],[13],[13],[13],[13],[[[36,[38]],[36,[38]]],12],[[37,37],12],[[],12],[[],12],[[[36,[39]],15],16],[[37,15],16],[[]],[[]],[[37,17]],[[],13],[[],13],[[]],[[]],0,0,[[1,3],14],0,0,[40,14],[[[36,[[8,[5]]]]],14],[[40,[8,[0]]],26],[[[36,[[8,[5]]]],[8,[0]]],26],0,[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],0,[[41,4],26],[[[36,[[8,[5]]]],4],26],[[41,[8,[0]]],26],[[[36,[[8,[5]]]],[8,[0]]],26],0,0,0,0,0,0,0,[[[20,[[0,[18,19]]]],12],[[10,[[42,[[0,[18,19]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[43]]],[[45,[[10,[2]]]]]],[[[46,[43]]],[[45,[[10,[2]]]]]],[[12,4],26],[[12,4],26],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[],13],[[[47,[[0,[18,19]]]]],13],[[[42,[[0,[18,19]]]]],13],[[[48,[43,4]]],13],[[[20,[[0,[18,19]]]],12,4],[[10,[[47,[[0,[18,19]]]]]]]],[[[20,[39]],15],16],[[[47,[39]],15],16],[[[42,[39]],15],16],[[[48,[39,39]],15],16],[[[44,[[0,[39,43]]]],15],16],[[[46,[[0,[39,43]]]],15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[7]]]],[[[20,[[0,[18,19]]]]],[[8,[7]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[[0,[18,19]]]]],11],[[],11],[[[20,[[0,[18,19]]]]],11],[[[47,[[0,[18,19]]]]],11],[[[42,[[0,[18,19]]]]],11],[[[48,[43,4]]],11],[[[44,[43]]],11],[[[46,[43]]],11],[[43,12],[[21,[[46,[43]],43]]]],[[43,12,25],[[21,[[46,[43]],43]]]],[[[47,[[0,[18,19]]]]],45],[[[42,[[0,[18,19]]]]],45],[[[48,[43,4]]],45],[[[44,[43]]],45],[[[46,[43]]],45],[4,[[48,[4]]]],[12,[[21,[46]]]],[[[0,[18,19]],12],[[10,[[20,[[0,[18,19]]]]]]]],[[],[[45,[[10,[9]]]]]],[12,44],[[[47,[[0,[18,19]]]]]],[[[42,[[0,[18,19]]]]]],[[[48,[43,4]]]],[[[44,[43]]]],[[[46,[43]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,[[]],[[]],[49,49],[[]],[[],49],[13],[13],[13],[[49,49],12],[50,49],[51,49],[[49,15],16],[50,49],[51,49],[[[45,[[0,[[52,[49]],53]]]]],49],[54,49],[[]],[50],[50,49],[[[8,[50]],8]],[51],[51,49],[[[8,[51]],8]],[54],[54,49],[[[8,[54]],8]],[[],13],[[]],[49,12],[49,12],[[],50],[49,50],[49,50],[[],51],[49,51],[49,51],[[]],[[],54],[49,54],[49,54],[[],21],[[],21],[[],22],[54,49],[[49,49,55,56],57],0,0,0,0,0,0,[[[59,[58]],13,2],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,14],26],[[11,14],26],[[[60,[58]],13,2],26],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[[61,[39]],15],16],[[[62,[39,39]],15],16],[[[63,[39]],15],16],[[[60,[39]],15],16],[[[59,[39]],15],16],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[[63,[58]]],58],[[[60,[58]]],58],[[[59,[58]]],58],[[]],[[]],[[]],[[]],[[]],[[11,58],[[63,[58]]]],[[11,58],[[60,[58]]]],[[11,58],[[45,[[59,[58]]]]]],[[11,58,25],[[45,[[59,[58]]]]]],[4,[[62,[4]]]],[11,[[45,[59]]]],[11,60],[[],13],[[[61,[[0,[23,19]]]]],13],[[[62,[58,4]]],13],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[[59,[58]]],26],[[13,9],26],[[[61,[[0,[23,19]]]],13,9],26],[[[62,[58,4]],13,9],26],[[[0,[23,19]],24,12,25],26],[[[63,[58]],13,13,9],26],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],13],[64,64],[[]],[[64,7,65,34],[[10,[65]]]],[[64,7,65,34,12],[[10,[65]]]],[13],[13],[13],[[64,64],12],[[64,15],16],[[64,15],16],[[]],[[],13],[[]],[[64,66],12],[64,12],[18,[[10,[64]]]],[64,13],[64,12],[64,12],[[]],[[],67],[[],21],[[],21],[[],22],[[64,23],26],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[68,[[45,[69]]]],[13],[13],[13],[13],[68,70],[68,[[21,[[74,[[0,[69,71,72]],73]],68]]]],[13],[13],[[68,15],[[21,[75]]]],[[68,15],[[21,[75]]]],[[76,15],16],[[76,15],16],[[]],[77,68],[78,68],[79,68],[80,76],[[]],[68,76],[81,68],[68,[[45,[69]]]],[68,[[45,[69]]]],[[],13],[[],13],[[]],[[]],[68,[[45,[[74,[69,73]]]]]],[68,79],[[],68],[[79,[52,[[74,[69,73]]]]],68],[[[52,[[74,[69,73]]]]],68],[68,[[45,[81]]]],[68,[[45,[69]]]],[76,[[45,[69]]]],[[],67],[[],67],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[82,34],[83,12],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82,34],[[],[[85,[84,84]]]],0,0,[[[86,[35]]],[[86,[35]]]],[[[82,[35]]],[[82,[35]]]],[87,87],[88,88],[[[89,[35,35]]],[[89,[35,35]]]],[[[90,[35]]],[[90,[35]]]],[[[91,[35]]],[[91,[35]]]],[[[92,[35]]],[[92,[35]]]],[[[93,[35]]],[[93,[35]]]],[94,94],[95,95],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[94,[33,[13]]]],[[[92,[96]],7]],[[94,7]],[[[98,[97]],[8,[7]]]],[[[82,[97]],[8,[7]]]],[[[89,[99,[0,[72,35,100]]]],7]],[[[90,[101]],7]],0,[[82,34]],[[]],[56,102],[52,102],[[],87],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[103,[[86,[84]]]],0,[[[86,[38]],[86,[38]]],12],[[[82,[38]],[82,[38]]],12],[[87,87],12],[[88,88],12],[[[89,[38,38]],[89,[38,38]]],12],[[[90,[38]],[90,[38]]],12],[[[91,[38]],[91,[38]]],12],[[[92,[38]],[92,[38]]],12],[[[93,[38]],[93,[38]]],12],[[94,94],12],[[95,95],12],[[],12],[[],12],[[],12],[[],12],[[[86,[39]],15],16],[[[82,[39]],15],16],[[87,15],16],[[88,15],16],[[[89,[39,39]],15],16],[[[90,[39]],15],16],[[[91,[39]],15],16],[[[92,[39]],15],16],[[[93,[39]],15],16],[[94,15],16],[[[85,[39,39]],15],16],[[95,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[[33,[13]]]],97],[[86,[[82,[97]]]]]],[[[52,[[33,[13]]]],87,97],[[86,[[82,[97]]]]]],[[[82,[97]]],[[86,[[82,[97]]]]]],[[103,[52,[[98,[97]]]]],[[86,[[98,[97]]]]]],[[93,[33,[13]]],45],[[93,[33,[13]]],45],[[92,[33,[13]]],10],[[93,[33,[13]]],13],[[92,[33,[13]]],10],[[[89,[99,[0,[72,35,100]]]]],3],[[[90,[101]]],3],[[[98,[97]],103],24],[[[82,[97]],103],24],[[[89,[99,[0,[72,35,100]]]]]],[[[90,[101]]]],[[[92,[96]]]],[94],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[82,[[90,[94]]]],[33,[13]]],104],[[[82,[[89,[99]]]],[33,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[94,13],0,[92,105],[92,8],[92,8],[[82,92],[[74,[14]]]],0,0,0,0,[[103,106],[[86,[106]]]],[[[52,[[33,[13]]]],107,87,97],[[82,[97]]]],[[[0,[72,35,100]],99],[[89,[99,[0,[72,35,100]]]]]],[[[52,[83]],101],[[91,[101]]]],[95,45],[[95,13],45],0,0,0,0,[[[82,[[108,[[90,[94]]]]]]]],0,[99,[[89,[99]]]],[99,[[89,[99]]]],0,[[[92,[96]]],66],[94,66],[94,66],[[[82,[[90,[94]]]],[33,[13]]],104],[[[82,[[90,[94]]]],[33,[13]]],95],0,0,[95],[[[110,[[109,[91]]]]],90],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[86,[111]],[86,[111]],55,56],57],[[[82,[89]],[82,[89]],55,56],57],[[[82,[[90,[101]]]],[82,[[90,[101]]]],55,56],57],[[[89,[111,112]],[89,[111,112]],55,56],57],[[[90,[111]],[90,[111]],55,56],57],[[[91,[111]],[91,[111]],55,56],57],[[[92,[111]],[92,[111]],55,56],57],[[94,94,55,56],57],0,[[94,13],49],[94,14],[94,14],[[[85,[113]],[52,[83]]],[[85,[[115,[113,114]],[115,[116]]]]]],[[[85,[113]],114],[[85,[[115,[113,114]],[115,[[52,[[52,[[52,[52]]]]]]]]]]]],[[[86,[106]],[82,[97]]],[[86,[[115,[106,[82,[97]]]]]]]],[[[85,[113]],[0,[72,56]]],[[89,[[0,[72,56]],113]]]],[[[85,[113]],99],[[89,[99,113]]]],0,[86,117],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[[102,[35,35]]],[[102,[35,35]]]],[[[108,[35]]],[[108,[35]]]],[[[118,[35]]],[[118,[35]]]],[[]],[[]],[[]],[[[108,[97]],7]],[34],[[34,82],[[82,[108]]]],[[]],[56,102],[[[52,[38]]],102],0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[[[102,[38,38]],[102,[38,38]]],12],[[[108,[38]],[108,[38]]],12],[[[118,[38]],[118,[38]]],12],[[],12],[[],12],[[[118,[119]],7,1],[[6,[5]]]],[[[102,[39,39]],15],16],[[[108,[39]],15],16],[[[118,[39]],15],16],[[]],[[]],[[]],0,0,[[[108,[97]]],3],[[[108,[97]]]],[[],13],[[],13],[[],13],[[[33,[13]]]],[[]],[[]],[[]],[[[102,[[0,[120,121]]]]]],[102,45],[[]],[[]],[[]],[[]],[[[45,[34]]],102],[[34,56],[[45,[34]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],0,0,[[]],[[]],[[[122,[35]]],[[122,[35]]]],[[]],[[122,[33,[13]]],13],[[[33,[13]]],[[122,[[0,[53,35]]]]]],[13],[13],[13],[[[122,[38]],[122,[38]]],12],[[],12],[[122,15],16],[[]],[[[122,[72]],[33,[13]]],72],[[[122,[[0,[35,72]]]],[33,[13]]]],[[],13],[[]],[[[52,[[33,[13]]]],6],122],0,0,[[122,[33,[13]]]],[[]],[[],21],[[],21],[[],22],[[[122,[111]],[122,[111]],55,56],57],0,0,[[]],[[]],[123,123],[[]],[13],[13],[13],[[123,123],12],[[],12],[[123,15],16],[[]],0,[[],13],[[]],0,0,[123,124],[[],123],[[[126,[125]]],[[10,[127]]]],[[[126,[125]]],[[10,[128]]]],[[[126,[125]],56,56],[[10,[[130,[129]]]]]],[[[126,[125]]],[[10,[[86,[[82,[[90,[94]]]]]]]]]],[[[126,[125]],56,56],[[10,[[131,[129]]]]]],0,0,[[]],[[],21],[[],21],[[],22],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[132,[35]]],[[132,[35]]]],[[[133,[35]]],[[133,[35]]]],[[[134,[35]]],[[134,[35]]]],[[]],[[]],[[]],[[[132,[135]],7],10],[[7,114],10],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[[132,[38]],[132,[38]]],12],[[[133,[38]],[133,[38]]],12],[[[134,[38]],[134,[38]]],12],[[],12],[[],12],[[],12],[30,12],[[[133,[136]],30],12],[[[132,[39]],15],16],[[[133,[39]],15],16],[[[134,[39]],15],16],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[[133,[136]]]],[[]],[[[133,[136]],7,2],26],[40,26],0,[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,[137,[[138,[137]]]],[[]],[[]],[[]],[[]],[[[138,[35,35]]],[[138,[35,35]]]],[[[139,[35]]],[[139,[35]]]],[[]],[[]],[[[8,[7]]],10],[13],[13],[13],[13],[13],[13],[[[139,[38]],[139,[38]]],12],[[11,30,1],12],[[[138,[39,39]],15],16],[[[139,[39]],15],16],[[]],[[]],[[[138,[4,140]],[0,[18,19]]],[[10,[86]]]],[[[138,[4,140]],[20,[[0,[18,19]]]]],[[10,[86]]]],[[[138,[4,140]],[126,[125]]],[[10,[86]]]],[[[138,[4,140]],[0,[18,19]]],[[10,[86]]]],[[],13],[[],13],[[]],[[]],[[]],[4,[[138,[4]]]],[[[8,[7]],141],[[10,[[139,[141]]]]]],[[[138,[4]]],[[138,[4]]]],[[[138,[4]],4],[[138,[4]]]],[[[138,[4]]],[[138,[4]]]],[[[8,[7]],2],26],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,0,0,0,0,[137,[[142,[137]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[142,[35]]],[[142,[35]]]],[[[143,[35]]],[[143,[35]]]],[[[144,[35]]],[[144,[35]]]],[[[145,[35]]],[[145,[35]]]],[[[146,[35]]],[[146,[35]]]],[[]],[[]],[[]],[[]],[[]],[7,10],[[[142,[147]],[8,[7]]],10],[[[143,[147]],[8,[7]]],10],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[[142,[38]],[142,[38]]],12],[[[143,[38]],[143,[38]]],12],[[[144,[38]],[144,[38]]],12],[[[145,[38]],[145,[38]]],12],[[[146,[38]],[146,[38]]],12],[[],12],[[],12],[30,12],[[[144,[148]],11,30,1],12],[[[145,[148]],11,30,1],12],[137,[[143,[137]]]],[[[142,[39]],15],16],[[[143,[39]],15],16],[[[144,[39]],15],16],[[[145,[39]],15],16],[[[146,[39]],15],16],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[[144,[148]]]],[[[145,[148]]]],[[7,2],26],[[[144,[148]],[8,[7]],2],26],[[[145,[148]],[8,[7]],2],26],0,0,[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,[149,132],[150,[[132,[150]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[149,[35]]],[[149,[35]]]],[[[150,[35]]],[[150,[35]]]],[[[151,[35]]],[[151,[35]]]],[[]],[[]],[[]],[[[150,[152]],7,114],10],[[7,114,[33,[13]],[33,[13]]],10],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[[149,[38]],[149,[38]]],12],[[[150,[38]],[150,[38]]],12],[[[151,[38]],[151,[38]]],12],[[],12],[[],12],[[],12],[[[151,[136]],30],12],[[[149,[39]],15],16],[[[150,[39]],15],16],[[[151,[39]],15],16],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[[151,[136]]]],[[[151,[136]],40],26],0,0,[[149,56,56],[[155,[[154,[[154,[[154,[84,153]],153]],153]],56,56]]]],[[149,56,56],[[155,[[156,[[154,[[154,[[154,[84,153]],153]],153]],153]],56,56]]]],[149,157],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],0,0,[124,[[150,[124]]]],[[]],[[]],[[]],[[]],[124,124],[158,158],[[]],[[]],[[124,7,114],10],[[124,7,114,[33,[13]],[33,[13]]],10],[13],[13],[13],[13],[13],[13],[[124,124],12],[[158,158],12],[[],12],[[158,30],12],[[124,15],16],[[158,15],16],[[]],[[]],[[],13],[[],13],[[]],[[]],[158,94],[124,[[149,[124]]]],[[158,40],26],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,[[[156,[113]],83],12],[[[154,[113]],83],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[156,[35,35]]],[[156,[35,35]]]],[[[154,[35,35]]],[[154,[35,35]]]],[[[155,[35,35,35,35,35]]],[[155,[35,35,35,35,35]]]],[[[159,[35,35,35,35]]],[[159,[35,35,35,35]]]],[[[160,[35]]],[[160,[35]]]],[[[161,[35]]],[[161,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[56,56],[[155,[56,56]]]],[[[155,[162,56,56]],7],10],[3,10],[[[156,[162,153]],3],10],[[[154,[162,153]],3],10],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[[159,[56,163]],30],12],[[[156,[39,39]],15],16],[[[154,[39,39]],15],16],[[[155,[39,39,39,39,39]],15],16],[[[159,[39,39,39,39]],15],16],[[[160,[39]],15],16],[[[161,[39]],15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[[159,[56,163]]]],[[[52,[83]]],156],[[[159,[56,163]],7,2],26],[[[8,[5]],8,56]],[[[52,[83]]],154],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,[[84,83],12],[[[115,[113,114]],83],12],[[]],[[]],[[]],[[]],[84,[[110,[[109,[114]]]]]],[[[115,[164,114]]],[[110,[[109,[114]]]]]],[[[115,[164,[45,[114]]]]],[[110,[[109,[114]]]]]],[84,84],[[[115,[35,35]]],[[115,[35,35]]]],[[]],[[]],[[84,3],10],[[84,3]],[[[115,[164,114]],3]],[[[115,[164,[45,[114]]]],3]],[[84,[8,[7]]]],[[[115,[106,[82,[97]]]],[8,[7]]]],[[],84],[[],[[115,[53,53]]]],[13],[13],[13],[13],[13],[13],[[84,84],12],[[[115,[38,38]],[115,[38,38]]],12],[[],12],[[],12],[[84,[8,[7]],1],[[6,[5]]]],[[[115,[165]],[8,[7]],1],[[6,[5]]]],[[84,15],16],[[[115,[39,39]],15],16],[[]],[[]],[84],[[[115,[163,[160,[153]]]]]],[[[115,[163,[161,[153]]]]]],[[84,103],24],[[[115,[106,[82,[97]]]],103],24],[[],13],[[],13],0,[[]],[[]],[[]],[84],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[84]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[84]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[84]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[84]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[84]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[84]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[84]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[84]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[84]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[[115,[115]]]]]]]]]]]]]]]]]]]],[[]],[84],[[[115,[100]]]],[[]],[[]],[[]],[[],115],[[84,[8,[5]],8,56]],[[[115,[163,[160,[153]]]],[8,[5]],8,56]],[[[115,[163,[161,[153]]]],[8,[5]],8,56]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[84,84,55,56],57],[[[115,[111,111]],[115,[111,111]],55,56],57],0,[[84,[8,[5]],8,56]],[[[115,[166,[45,[[168,[167]]]]]],[8,[5]],8,56]],[[[115,[166,[168,[167]]]],[8,[5]],8,56]],0,0,0,[[]],[[]],[[]],[55,55],[[]],[[],55],[13],[13],[13],[[55,55],12],[[],12],[[55,15],16],[[]],[[55,17]],[[],13],[[]],[[]],[[],21],[[],21],[[],22],[[55,56],57],0,0,[[]],[[]],0,[[[117,[35,35]]],[[117,[35,35]]]],[[]],[13],[13],[13],[[[117,[38,38]],[117,[38,38]]],12],[[[117,[39,39]],15],16],[[]],[[[117,[106,4]]],24],[[],13],[[]],0,[[[117,[106,4]]],[[117,[106,4]]]],[[[117,[106,4]],4],[[117,[106,4]]]],0,[[[117,[106,4]]],[[117,[106,4]]]],[[[117,[106,4]],[0,[23,19]]],26],[[[117,[106,4]],[126,[125]]],26],[[]],[[[117,[106,4]],[0,[23,19]]],26],[[],21],[[],21],[[],22],[[],117],[[[126,[125]],13,13,[0,[72,56]]],26],[[[126,[125]],13,13,[0,[72,56]]],26],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[110,[[109,[114]]]]]],[[[169,[35]]],[[169,[35]]]],[[[170,[35,35,35]]],[[170,[35,35,35]]]],[[[168,[35]]],[[168,[35]]]],[[]],[[]],[[]],[3],[7],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[[169,[38]],[169,[38]]],12],[[[170,[38,38,38]],[170,[38,38,38]]],12],[[],12],[[],12],[[7,1],[[6,[5]]]],[[[169,[171]],7,1],[[6,[5]]]],[[[170,[[0,[72,166]],99,72]],7,1],[[6,[5]]]],[[[169,[39]],15],16],[[[170,[39,39,39]],15],16],[[[168,[39]],15],16],[[]],[[]],[[]],[[[33,[13]]]],[[],3],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[[8,[5]],8,56]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[[172,[35]]],[[172,[35]]]],[[[173,[35]]],[[173,[35]]]],[[]],[[]],[[[8,[7]]]],[13],[13],[13],[13],[13],[13],[[[172,[38]],[172,[38]]],12],[[[173,[38]],[173,[38]]],12],[[],12],[[],12],[[[8,[7]],1],[[6,[5]]]],[[[172,[119]],[8,[7]],1],[[6,[5]]]],[[[173,[119]],[8,[7]],1],[[6,[5]]]],[[[172,[39]],15],16],[[[173,[39]],15],16],[[]],[[]],[103,24],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[174,174],[[[175,[35]]],[[175,[35]]]],[[]],[[]],[[[33,[13]]]],[7],[13],[13],[13],[13],[13],[13],[[174,174],12],[[[175,[38]],[175,[38]]],12],[[],12],[41],[[174,41]],[[[175,[171]],41]],[[174,15],16],[[[175,[39]],15],16],[[]],[[]],[[]],[[],13],[[],13],[[]],[[]],[[],66],[[],66],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],0,0,0,0,[[[33,[[176,[[176,[[176,[176]]]]]]]],[33,[[176,[[176,[[176,[176]]]]]]]]]],[[[33,[[177,[[177,[[177,[177]]]]]]]]],[[177,[[177,[[177,[[177,[177]]]]]]]]]],[[]],[[]],[[]],[[]],[[[33,[35]]],[[33,[35]]]],[178,178],[[]],[[]],[[],[[33,[53]]]],[13],[13],[13],[13],[[[33,[[179,[[179,[[179,[179]]]]]]]],[33,[[179,[[179,[[179,[179]]]]]]]]]],[13],[13],[[[33,[38]],[33,[38]]],12],[[178,178],12],[[],12],[[],12],[[[33,[[0,[180,39,181,177,176]]]],[33,[[0,[180,39,181,177,176]]]]],[[0,[180,39,181,177,176]]]],[[[33,[39]],15],16],[[178,15],16],[[]],[[],33],[[]],[[[33,[182]],17]],[[178,17]],[33],[[],13],[[],13],[[]],[[]],[[[33,[181]],[33,[181]]],[[33,[181]]]],[[[33,[181]],[33,[181]]],[[33,[181]]]],[[[33,[[177,[[177,[[177,[177]]]]]]]],[33,[[177,[[177,[[177,[177]]]]]]]]]],[[[33,[183]]]],[[[33,[[184,[[184,[[184,[184]]]]]]]],[33,[[184,[[184,[[184,[184]]]]]]]]]],[[[33,[13]]],[[33,[81]]]],[[]],[[]],[[[33,[81]],70],[[10,[[33,[13]]]]]],[[],21],[33,[[21,[[33,[185]]]]]],[[],21],[[],21],[[],21],[[],22],[[],22],[33],[33],[33],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[13,13,13],10],[[13,13,13],[[10,[13]]]],[11,11],[186,186],[187,187],[188,188],[[]],[[]],[[]],[[]],[[11,4],14],[[11,4],14],[[13,13],13],[[64,[33,[13]],188],13],[[178,13],13],[[178,13,13],13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[11,14],[[11,11],12],[[186,186],12],[[187,187],12],[[188,188],12],[[],12],[[],12],[[],12],0,[[11,15],16],[[186,15],16],[[187,15],16],[[188,15],16],[[]],[[]],[[]],[[]],0,0,0,[188,12],[[186,17]],[[187,17]],[[188,17]],0,0,[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[186,12],0,0,0,[[178,[33,[13]]],14],[[178,[33,[13]]],14],[18,[[10,[186]]]],[[18,12],[[10,[11]]]],[[[126,[125]],12],[[10,[11]]]],[[18,12],[[10,[11]]]],[[[0,[18]],24],[[10,[189]]]],0,[[178,[33,[13]]],14],[[178,[33,[13]]],14],0,0,[[[0,[18]],24],[[10,[13]]]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[[8,[7]],12],[[10,[186]]]],[186,26],[[186,23],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[83,190],0,0,0,0,[[]],[83,190],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[83,191],13],[191,13],[192,13],[[],13],[[],13],[3,13],[114,13],[[],13],[[],13],[[],13],[[],13],[[],13],[193,13],[[],13],[83,[[8,[5]]]],0,[66,13],[3,14],[83,14],[191,191],[83,83],[194,194],[192,192],[34,34],[195,195],[3,3],[114,114],[66,66],[196,196],[197,197],[198,198],[199,199],[193,193],[200,200],[105,105],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[83,83],201],0,[[34,34],12],0,[[],83],[[],194],[[],34],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],0,[34,[[33,[81]]]],[[191,191],12],[[83,70],12],[[83,70],12],[[83,83],12],[[194,194],12],[[192,192],12],[[34,34],12],[[195,195],12],[[3,3],12],[[114,114],12],[[66,66],12],[[196,196],12],[[197,197],12],[[198,198],12],[[199,199],12],[[193,193],12],[[200,200],12],[[105,105],12],[[83,70],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,[[3,83],[[45,[13]]]],[[191,15],16],[[83,15],16],[[83,15],16],[[194,15],16],[[192,15],16],[[34,15],16],[[195,15],16],[[3,15],16],[[114,15],16],[[66,15],16],[[196,15],16],[[197,15],16],[[198,15],16],[[199,15],16],[[193,15],16],[[200,15],16],[[105,15],16],0,[[]],[[]],[70,83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[202,83],[[[52,[[33,[13]]]]],34],[[54,54],194],[190,83],[[54,54],194],[[54,54],194],0,[83,12],[[83,17]],[[194,17]],[[192,17]],[[34,17]],[[3,17]],[[114,17]],[[66,17]],[[197,17]],[[198,17]],[[199,17]],[[200,17]],[[105,17]],0,[83,13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[83,67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[191,[[10,[83]]]],[191,[[8,[5]]]],0,0,[34,[[33,[81]]]],0,0,0,0,[[[52,[83]],66],114],[[[52,[[33,[81]]]],[52,[[33,[13]]]]],34],[[[110,[[109,[114]]]]],3],[[[52,[83]],66,12],114],[[[126,[70]]],[[45,[83]]]],[[[126,[70]]],83],[83,13],[194,[[10,[54]]]],[194,[[10,[54]]]],[194,[[10,[54]]]],[194,54],[83,[[10,[192]]]],[[83,83],[[45,[201]]]],0,0,0,0,0,0,[[[0,[18]],13],10],[[[0,[18]],83,13],[[10,[[10,[191]]]]]],[18,[[10,[194]]]],[18,[[10,[34]]]],[18,[[10,[195]]]],[[[0,[18]]],[[10,[3]]]],[18,[[10,[114]]]],[18,[[10,[66]]]],[18,[[10,[196]]]],[18,[[10,[197]]]],[18,[[10,[198]]]],[18,[[10,[199]]]],[18,[[10,[193]]]],[18,[[10,[200]]]],[[18,13],[[10,[83]]]],[[18,13],[[10,[83]]]],[[18,13],[[10,[83]]]],0,0,0,0,0,0,0,[[114,[33,[13]]],13],[[114,[33,[13]]],[[33,[13]]]],0,[191,[[10,[196]]]],[191,[[10,[51]]]],[191,[[10,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],67],[191,[[10,[83]]]],[192,[[8,[5]]]],[191,[[10,[194]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,[[83,191,12,12,34,12],26],[[191,12,34,12],26],[[83,12,[45,[12]]],26],[[194,12],26],[[34,[45,[[33,[13]]]]],26],[[3,12,34,12],26],[[114,12,34,12],26],[[193,12],26],[200,26],[[190,12,[45,[12]]],26],0,[[34,[33,[81]]],34],[[[8,[5]],191,23],26],[[191,23],26],[[194,23],26],[[192,23],26],[[34,23],26],[[195,23],26],[[3,23],26],[[114,23],26],[[66,23],26],[[196,23],26],[[197,23],26],[[198,23],26],[[199,23],26],[[193,23],26],[[200,23],26],[[83,23],26],[[83,23],26],[[],34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[7,[[0,[14,203,204]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[7,7],[103,103],[107,107],[[]],[[]],[[]],0,0,[7,34],0,0,0,[[],107],[13],[13],[13],[13],[13],[13],0,[13],[13],[13],[7,[[0,[14,71]]]],0,[[7,7],12],[[103,103],12],[[107,107],12],0,0,0,[[7,15],16],[[103,15],16],[[107,15],16],0,0,[[]],[[]],[[]],[[7,30],[[10,[34]]]],[[7,27],[[10,[30]]]],[[7,30],[[10,[34]]]],[[7,81],[[10,[30]]]],0,0,[[],13],[[],13],[[],13],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[7,13],[7,[[33,[13]]]],[7,13],0,0,[[[52,[83]]],107],0,[[83,[52,[[33,[13]]]],[110,[[109,[114]]]]],7],[34,103],0,0,0,0,0,0,0,[[[0,[18]],186,12],[[10,[7]]]],[[[0,[18]],186,12],[[10,[24]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[7,13],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],0,[[7,12,12,12],26],0,0,0,[[7,107],7],[[107,205,205,[52,[[33,[51]]]],[206,[51]]],107],[[7,34],7],[[7,64,188,199],7],[[7,[33,[81]]],7],[[107,[33,[81]]],107],[[7,103],7],[[[52,[[33,[13]]]]],103],0,0,0,[[7,23],26],[[[8,[7]],23,12],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,[[10,[12]]]],[18,26],[23,10],[[],13],[[[0,[18]]],[[10,[12]]]],[23,26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[50,50]],[[50,50]],[[50,50]],[[50,50]],[[50,50]],[[50,50]],[[[110,[207]],[110,[207]]]],[[[110,[207]]],8],[[[110,[207]]]],[[[110,[207]]],8],[[[110,[207]]]],[[[110,[207]]],8],[[[110,[207]]],8],0,[[[110,[207]]],8],[[]],[[]],[[[110,[207]]],8],[[]],[[]],[[[110,[207]]],13],[[50,50,50],50],[50,208],[[[110,[207]]]],[[[110,[207]]],[[110,[207]]]],[50,50],[[[110,[207]],[110,[207]]]],[[]],[[]],[[[110,[207]],[110,[207]]],201],[[50,50],50],[[[110,[207]]]],[[[110,[207]],4]],[[[110,[207]],4]],[[],[[110,[207]]]],[[],50],[[[110,[207]]],8],[13],[13],[[[110,[207]]],8],[13],[13],[[50,50]],[[50,50]],[[50,50]],[[50,50]],[[50,50]],[[50,50]],[[[110,[207]],[209,[13]]],[[210,[207]]]],[13],[[[110,[207]]]],[13],[[[110,[207]],[110,[207]]],12],[[50,50],12],[[],12],[[[110,[207]],211]],[[[110,[207]],8]],0,[[[110,[207]],15],[[21,[75]]]],[[50,15],[[21,[75]]]],[[50,15],[[21,[75]]]],[[50,15],[[21,[75]]]],[[50,15],[[21,[75]]]],[[50,15],[[21,[75]]]],[[50,15],[[21,[75]]]],[[50,15],[[21,[75]]]],[[50,15],[[21,[75]]]],[[[6,[73]]],[[110,[207]]]],[207,[[110,[207]]]],[8,[[110,[207]]]],[212],[[]],[[]],[5,50],[213,50],[49,50],[[[109,[5]]],50],[214,50],[207,[[110,[207]]]],[[207,13],[[110,[207]]]],[[[215,[207]],13],[[110,[207]]]],[13,[[110,[207]]]],[50,50],[51,50],[51,50],[51,50],[[[8,[51]],[8,[50]]]],[216,50],[216,50],[211,[[110,[207]]]],[[[109,[5]]],50],[[[109,[5]]],50],[[13,13],[[110,[207]]]],[8,[[110,[207]]]],[70,[[21,[50,217]]]],[54,50],[[[6,[73]]],[[110,[207]]]],[[50,50],12],[[[110,[207]],13]],[[50,50],12],[[[110,[207]],17]],[[[110,[207]],[218,[8]]]],[[[110,[207]],[218,[8]]]],[[],13],[[],13],[[[110,[207]]],13],[[[110,[207]],13]],[[[110,[207]],13,8]],[[[110,[207]],13,211]],[[]],[[]],[[[110,[207]]],[[74,[8,73]]]],[[[110,[207]]],[[21,[207,[110,[207]]]]]],[[[110,[207]]]],[[[110,[207]]]],[[[110,[207]]]],[[[110,[207]]],[[6,[73]]]],[[[110,[207]]],12],[50,12],[50,12],[50,12],[50,12],[50,12],[50,12],[[50,50],12],[[[110,[207]]],13],[[50,50],12],[[50,50],50],[[50,50],50],[[50,50]],[[50,50]],[[50,50]],[[50,50]],[[50,50]],[[50,50]],[50],[50],[[],[[110,[207]]]],[[[110,[207]],[110,[207]]],[[45,[201]]]],[[50,50],[[45,[201]]]],[[[110,[207]]],45],[14,50],[14,50],[[[110,[207]]]],0,0,0,0,0,[[50,50]],[[50,50]],[[50,50]],[[50,50]],[[50,50]],[[50,50]],[[[110,[207]],13]],[[[110,[207]],13]],[[[110,[207]],13]],[[[110,[207]],13]],[[[110,[207]],13,4]],[[[110,[207]],4]],[[[110,[207]],4]],[[[110,[207]],13]],[[[110,[207]]]],[50,50],[[[110,[207]]],12],[[50,50]],[[50,50]],[[50,50]],[[50,50]],[[50,50]],[[50,50]],[14,50],[14,50],[[[110,[207]],13]],[50,[[109,[5]]]],[50,214],[50,50],[50,51],[50,51],[50,51],[50,216],[50,216],[50,[[109,[5]]]],[50,[[109,[5]]]],[[]],[[]],[[],67],[50,54],[[50,50],201],0,[[[110,[207]],13]],[[],21],[[],21],[[[110,[207]],13],[[21,[219]]]],[[],21],[[],21],[[[110,[207]],13],[[21,[219]]]],[[[110,[207]],13],[[21,[219]]]],[[],22],[[],22],[[[110,[207]],[110,[207]],55,56],57],[[50,50,55,56],57],[13,[[110,[207]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"BlockIndex"],[3,"UncompressedBlock"],[3,"ChannelList"],[8,"FnMut"],[15,"u8"],[3,"Vec"],[3,"Header"],[15,"slice"],[3,"Chunk"],[6,"Result"],[3,"MetaData"],[15,"bool"],[15,"usize"],[8,"Iterator"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[8,"Read"],[8,"Seek"],[3,"Reader"],[4,"Result"],[3,"TypeId"],[8,"Write"],[6,"Headers"],[8,"FnOnce"],[6,"UnitResult"],[4,"CompressedBlock"],[3,"CompressedScanLineBlock"],[3,"CompressedTileBlock"],[3,"TileCoordinates"],[3,"CompressedDeepScanLineBlock"],[3,"CompressedDeepTileBlock"],[3,"Vec2"],[3,"IntegerBounds"],[8,"Clone"],[3,"LineSlice"],[3,"LineIndex"],[8,"PartialEq"],[8,"Debug"],[6,"LineRef"],[6,"LineRefMut"],[3,"AllChunksReader"],[8,"ChunksReader"],[3,"SequentialBlockDecompressor"],[4,"Option"],[3,"ParallelBlockDecompressor"],[3,"FilteredChunksReader"],[3,"OnProgressChunksReader"],[4,"Sample"],[3,"f16"],[15,"f32"],[8,"Into"],[8,"Default"],[15,"u32"],[3,"ValidationOptions"],[8,"Fn"],[6,"ValidationResult"],[8,"ChunksWriter"],[3,"ParallelBlocksCompressor"],[3,"SequentialBlocksCompressor"],[3,"ChunkWriter"],[3,"OnProgressChunkWriter"],[3,"SortedBlocksWriter"],[4,"Compression"],[6,"ByteVec"],[4,"SampleType"],[3,"String"],[3,"IoError"],[8,"Error"],[15,"str"],[8,"Send"],[8,"Sync"],[3,"Global"],[3,"Box"],[3,"Error"],[4,"Error"],[3,"IntoInnerError"],[3,"NulError"],[4,"ErrorKind"],[3,"TryFromIntError"],[15,"i32"],[3,"Layer"],[3,"Text"],[3,"NoneMore"],[3,"SpecificChannelsBuilder"],[3,"Image"],[3,"Encoding"],[4,"Blocks"],[3,"SpecificChannels"],[3,"AnyChannels"],[3,"AnyChannel"],[4,"Levels"],[3,"RipMaps"],[4,"FlatSamples"],[3,"FlatSampleIterator"],[8,"WritableLevel"],[8,"WritableChannels"],[6,"Layers"],[8,"GetPixel"],[8,"IntoRecursive"],[8,"WritableSamples"],[4,"CropResult"],[3,"ImageAttributes"],[6,"FlatSamplesPixel"],[4,"LevelMode"],[8,"WritableLayers"],[3,"LayerAttributes"],[3,"CroppedChannels"],[15,"array"],[3,"SmallVec"],[8,"ValidateResult"],[8,"Eq"],[8,"CheckDuplicates"],[3,"ChannelDescription"],[3,"Recursive"],[8,"IntoSample"],[3,"WriteImageWithOptions"],[3,"CroppedWriter"],[8,"ChannelsWriter"],[8,"Crop"],[8,"GetBounds"],[3,"PixelVec"],[3,"ReadBuilder"],[3,"ReadFlatSamples"],[3,"Path"],[8,"AsRef"],[6,"AnyImage"],[6,"FlatImage"],[6,"RgbaChannels"],[6,"PixelLayersImage"],[6,"PixelImage"],[3,"ReadAnyChannels"],[3,"AnyChannelsReader"],[3,"AnyChannelReader"],[8,"ReadSamples"],[8,"SamplesReader"],[8,"Sized"],[3,"ReadImage"],[3,"ImageWithAttributesReader"],[8,"ReadLayers"],[8,"LayersReader"],[3,"ReadAllLayers"],[3,"ReadFirstValidLayer"],[3,"AllLayersReader"],[3,"FirstValidLayerReader"],[3,"LayerReader"],[8,"ReadChannels"],[8,"ChannelsReader"],[3,"ReadLargestLevel"],[3,"ReadAllLevels"],[3,"AllLevelsReader"],[8,"ReadSamplesLevel"],[8,"FromNativeSample"],[3,"ReadRequiredChannel"],[3,"CollectPixels"],[3,"ReadOptionalChannel"],[6,"ReadZeroChannels"],[3,"FlatSamplesReader"],[3,"SpecificChannelsReader"],[3,"SampleReader"],[3,"OptionalSampleReader"],[8,"ReadSpecificChannel"],[8,"RecursivePixelReader"],[8,"WritableChannelsDescription"],[8,"LayersWriter"],[8,"RecursivePixelWriter"],[8,"IntoNativeSample"],[3,"SampleWriter"],[3,"AnyChannelsWriter"],[3,"SpecificChannelsWriter"],[8,"SamplesWriter"],[3,"AllLayersWriter"],[3,"LayerWriter"],[3,"FlatSamplesWriter"],[3,"LevelsWriter"],[8,"Add"],[8,"Mul"],[4,"RoundingMode"],[8,"Div"],[8,"Copy"],[8,"Ord"],[8,"Hash"],[8,"Neg"],[8,"Sub"],[8,"TryFrom"],[3,"Requirements"],[3,"TileIndices"],[4,"BlockDescription"],[6,"OffsetTables"],[6,"TextSlice"],[4,"AttributeValue"],[4,"BlockType"],[3,"Preview"],[3,"TimeCode"],[3,"FloatRect"],[3,"Chromaticities"],[4,"EnvironmentMap"],[3,"KeyCode"],[4,"LineOrder"],[3,"TileDescription"],[4,"Ordering"],[6,"TextBytes"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[6,"Matrix4x4"],[3,"Range"],[8,"Array"],[4,"FpCategory"],[8,"RangeBounds"],[3,"Drain"],[8,"IntoIterator"],[15,"never"],[15,"i8"],[15,"u16"],[19,"MaybeUninit"],[15,"f64"],[3,"ParseFloatError"],[8,"SliceIndex"],[4,"CollectionAllocErr"],[13,"Mip"],[13,"Rip"],[8,"CropWhere"],[8,"ApplyCroppedView"],[8,"InspectSample"],[13,"Empty"],[8,"IntoNonRecursive"],[8,"IntoTuple"],[8,"WritableImage"],[13,"Custom"]],"a":{"errno":[612],"getlasterror":[612]}},\
"fdeflate":{"doc":"A fast deflate implementation.","t":"NNNNEDENDNNNNNNNNNNNNDNLLLLLLLLLLFLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["BadCodeLengthHuffmanTree","BadDistanceHuffmanTree","BadLiteralLengthHuffmanTree","BadZlibHeader","BoundedDecompressionError","Compressor","DecompressionError","DecompressionError","Decompressor","DistanceTooFarBack","ExtraInput","InputStartsWithRun","InsufficientInput","InvalidBlockType","InvalidCodeLengthRepeat","InvalidDistanceCode","InvalidHdist","InvalidHlit","InvalidLiteralLengthCode","InvalidUncompressedBlockLength","OutputTooLarge","StoredOnlyCompressor","WrongChecksum","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compress_to_vec","compressed_size","decompress_to_vec","decompress_to_vec_bounded","default","eq","finish","finish","fmt","from","from","from","from","from","from","ignore_adler32","into","into","into","into","into","is_done","new","new","new","read","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write_data","write_data","inner","partial_output"],"q":[[0,"fdeflate"],[76,"fdeflate::BoundedDecompressionError"]],"d":["The stream doesn’t specify a valid huffman tree.","The stream doesn’t specify a valid huffman tree.","The stream doesn’t specify a valid huffman tree.","The zlib header is corrupt.","An error encountered while decompressing a deflate stream …","Compressor that produces fdeflate compressed streams.","An error encountered while decompressing a deflate stream.","The input is not a valid deflate stream.","Decompressor for arbitrary zlib streams.","The stream contains a back-reference that is too far back.","Extra input data.","The stream contains contains back-reference as the first …","All input was consumed, but the end of the stream hasn’t …","A block header specifies an invalid block type.","Attempted to repeat a previous code before reading any …","The stream contains a distance code that was not allowed …","Too many distance codes were specified.","Too many literals were specified.","The stream contains a literal/length code that was not …","An uncompressed block’s NLEN value is invalid.","The output is too large.","Compressor that only writes the stored blocks.","The deflate stream checksum is incorrect.","","","","","","","","","","","Compresses the given data.","Return the number of bytes that will be written to the …","Decompress the given data.","Decompress the given data, returning an error if the …","","","Write the remainder of the stream and return the inner …","Finish writing the final block and return the underlying …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Ignore the checksum at the end of the stream.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the decompressor has finished …","Create a new Compressor.","Creates a new <code>StoredOnlyCompressor</code> that writes to the …","Create a new decompressor.","Decompresses a chunk of data.","","","","","","","","","","","","","","","","Write data to the compressor.","Writes the given data to the underlying writer.","The underlying error.","The output decoded so far."],"i":[5,5,5,5,0,0,0,7,0,5,5,5,5,5,5,5,5,5,5,5,7,0,5,11,14,8,7,5,11,14,8,7,5,0,14,0,0,8,5,11,14,5,11,14,8,7,7,5,8,11,14,8,7,5,8,11,14,8,8,11,14,8,7,5,11,14,8,7,5,11,14,8,7,5,11,14,18,19],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[3,[1]]]],[4,4],[[[2,[1]]],[[6,[[3,[1]],5]]]],[[[2,[1]],4],[[6,[[3,[1]],7]]]],[[],8],[[5,5],9],[[[11,[10]]],[[12,[10]]]],[[[14,[[0,[10,13]]]]],[[12,[[0,[10,13]]]]]],[[5,15],16],[[]],[[]],[[]],[5,7],[[]],[[]],[8],[[]],[[]],[[]],[[]],[[]],[8,9],[10,[[12,[[11,[10]]]]]],[[[0,[10,13]]],[[12,[[14,[[0,[10,13]]]]]]]],[[],8],[[8,[2,[1]],[2,[1]],4,9],[[6,[5]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],17],[[],17],[[],17],[[],17],[[],17],[[[11,[10]],[2,[1]]],12],[[[14,[[0,[10,13]]]],[2,[1]]],12],0,0],"c":[],"p":[[15,"u8"],[15,"slice"],[3,"Vec"],[15,"usize"],[4,"DecompressionError"],[4,"Result"],[4,"BoundedDecompressionError"],[3,"Decompressor"],[15,"bool"],[8,"Write"],[3,"Compressor"],[6,"Result"],[8,"Seek"],[3,"StoredOnlyCompressor"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[13,"DecompressionError"],[13,"OutputTooLarge"]]},\
"flate2":{"doc":"A DEFLATE-based stream compression/decompression library","t":"NDDDDDDDDNNEENDDNNNNENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BufError","Compress","CompressError","Compression","Crc","CrcReader","CrcWriter","Decompress","DecompressError","Finish","Finish","FlushCompress","FlushDecompress","Full","GzBuilder","GzHeader","None","None","Ok","Partial","Status","StreamEnd","Sync","Sync","amount","best","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf_read","bufread","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","combine","comment","comment","compress","compress_vec","consume","crc","crc","decompress","decompress_vec","default","default","default","default","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extra","extra","fast","filename","filename","fill_buf","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_ref","get_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","level","message","message","mtime","mtime","mtime_as_datetime","needs_dictionary","new","new","new","new","new","new","new","none","operating_system","operating_system","read","read","read","reset","reset","reset","reset","reset","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","total_in","total_in","total_out","total_out","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","write","write","write","DeflateDecoder","DeflateEncoder","GzDecoder","GzEncoder","MultiGzDecoder","ZlibDecoder","ZlibEncoder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","flush","flush","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","header","header","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","new","new","new","new","new","new","new","new_with_compress","new_with_decompress","read","read","read","read","read","read","read","reset","reset","reset","reset","reset_data","total_in","total_in","total_in","total_in","total_out","total_out","total_out","total_out","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write","write","DeflateDecoder","DeflateEncoder","GzDecoder","GzEncoder","MultiGzDecoder","ZlibDecoder","ZlibEncoder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","flush","flush","flush","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","header","header","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","new","new","new","new","new","new","new","new_with_buf","new_with_buf","new_with_compress","new_with_decompress","new_with_decompress_and_buf","read","read","read","read","read","read","read","reset","reset","reset","reset","total_in","total_in","total_in","total_in","total_out","total_out","total_out","total_out","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write","write","write","DeflateDecoder","DeflateEncoder","GzDecoder","GzEncoder","MultiGzDecoder","ZlibDecoder","ZlibEncoder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","drop","finish","finish","finish","finish","finish","finish","finish","flush","flush","flush","flush","flush","flush","flush","flush_finish","flush_finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","header","header","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_compress","new_with_decompress","read","read","read","read","read","read","reset","reset","reset","reset","total_in","total_in","total_in","total_in","total_out","total_out","total_out","total_out","try_finish","try_finish","try_finish","try_finish","try_finish","try_finish","try_finish","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write","write","write"],"q":[[0,"flate2"],[221,"flate2::bufread"],[348,"flate2::read"],[479,"flate2::write"]],"d":["Indicates that forward progress is not possible due to …","Raw in-memory compression stream for blocks of data.","Error returned when a compression object is used …","When compressing data, the compression level can be …","The CRC calculated by a <code>CrcReader</code>.","A wrapper around a <code>Read</code> that calculates the CRC.","A wrapper around a <code>Write</code> that calculates the CRC.","Raw in-memory decompression stream for blocks of data.","Error returned when a decompression object finds that the …","Pending input is processed and pending output is flushed.","Pending input is processed and pending output is flushed.","Values which indicate the form of flushing to be used when …","Values which indicate the form of flushing to be used when …","All output is flushed as with <code>Flush::Sync</code> and the …","A builder structure to create a new gzip Encoder.","A structure representing the header of a gzip stream.","A typical parameter for passing to …","A typical parameter for passing to …","Indicates success.","All pending output is flushed to the output buffer, but …","Possible status results of compressing some data or …","Indicates that all input has been consumed and all output …","All pending output is flushed to the output buffer and the …","All pending output is flushed to the output buffer and the …","The number of bytes that have been used to calculate the …","Optimize for the size of data being encoded.","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume this builder, creating a reader encoder in the …","Types which operate over <code>BufRead</code> streams, both encoders …","","","","","","","","","","","Combine the CRC with the CRC for the subsequent block of …","Returns the <code>comment</code> field of this gzip stream’s header, …","Configure the <code>comment</code> field in the gzip header.","Compresses the input data into the output, consuming only …","Compresses the input data into the extra space of the …","","Get the Crc for this <code>CrcReader</code>.","Get the Crc for this <code>CrcWriter</code>.","Decompresses the input data into the output, consuming …","Decompresses the input data into the extra space in the …","","","","","","","","","","","","","","Returns the <code>extra</code> field of this gzip stream’s header, if …","Configure the <code>extra</code> field in the gzip header.","Optimize for the best speed of encoding.","Returns the <code>filename</code> field of this gzip stream’s header, …","Configure the <code>filename</code> field in the gzip header.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the reader that is wrapped by …","Get a mutable reference to the writer that is wrapped by …","Get the reader that is wrapped by this <code>CrcReader</code> by …","Get the writer that is wrapped by this <code>CrcWriter</code> by …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the reader that is wrapped by this <code>CrcReader</code>.","Get the writer that is wrapped by this <code>CrcWriter</code>.","Returns an integer representing the compression level, …","Retrieve the implementation’s message about why the …","Retrieve the implementation’s message about why the …","This gives the most recent modification time of the …","Configure the <code>mtime</code> field in the gzip header.","Returns the most recent modification time represented by a …","Indicates whether decompression failed due to requiring a …","Create a new CRC.","Create a new <code>CrcReader</code>.","Create a new <code>CrcWriter</code>.","Create a new blank builder with no header by default.","Creates a new object ready for compressing data that it’…","Creates a new object ready for decompressing data that it…","Creates a new description of the compression level with an …","No compression is to be performed, this may actually …","Returns the <code>operating_system</code> field of this gzip stream’s …","Configure the <code>operating_system</code> field in the gzip header.","Types which operate over <code>Read</code> streams, both encoders and …","","Consume this builder, creating a reader encoder in the …","Reset the CRC.","Reset the Crc in this <code>CrcReader</code>.","Reset the Crc in this <code>CrcWriter</code>.","Quickly resets this compressor without having to …","Performs the equivalent of replacing this decompression …","Returns the current crc32 checksum.","","","","","","","","Returns the total number of input bytes which have been …","Returns the total number of input bytes which have been …","Returns the total number of output bytes which have been …","Returns the total number of output bytes which have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the CRC with the bytes in <code>data</code>.","Types which operate over <code>Write</code> streams, both encoders and …","","Consume this builder, creating a writer encoder in the …","A DEFLATE decoder, or decompressor.","A DEFLATE encoder, or compressor.","A decoder for a single member of a gzip file.","A gzip streaming encoder","A gzip streaming decoder that decodes a gzip file that may …","A ZLIB decoder, or decompressor.","A ZLIB encoder, or compressor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying reader.","Acquires a mutable reference to the underlying stream.","Acquires a mutable reference to the underlying stream.","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying stream","Acquires a reference to the underlying reader","Acquires a reference to the underlying stream","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader","Acquires a reference to the underlying stream","Returns the header associated with this stream, if it was …","Returns the current header associated with this stream, if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this encoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Returns the underlying stream, consuming this encoder","Consumes this decoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Consumes this encoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Creates a new encoder which will read uncompressed data …","Creates a new decoder which will decompress data read from …","Creates a new encoder which will use the given compression …","Creates a new decoder from the given reader, immediately …","Creates a new decoder from the given reader, immediately …","Creates a new encoder which will read uncompressed data …","Creates a new decoder which will decompress data read from …","Creates a new encoder with the given <code>compression</code> settings …","Creates a new decoder which will decompress data read from …","","","","","","","","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Resets the state of this decoder’s data","Returns the number of bytes that have been read into this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that have been read into this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","A DEFLATE decoder, or decompressor.","A DEFLATE encoder, or compressor.","A decoder for a single member of a gzip file.","A gzip streaming encoder","A gzip streaming decoder that decodes a gzip file that may …","A ZLIB decoder, or decompressor.","A ZLIB encoder, or compressor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying reader.","Acquires a mutable reference to the underlying stream.","Acquires a mutable reference to the underlying stream.","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying stream","Acquires a reference to the underlying reader","Acquires a reference to the underlying stream","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader.","Acquires a reference to the underlying stream","Acquires a reference to the underlying stream","Returns the header associated with this stream, if it was …","Returns the current header associated with this stream, if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this encoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Returns the underlying stream, consuming this encoder","Consumes this decoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Consumes this encoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Creates a new encoder which will read uncompressed data …","Creates a new decoder which will decompress data read from …","Creates a new encoder which will use the given compression …","Creates a new decoder from the given reader, immediately …","Creates a new decoder from the given reader, immediately …","Creates a new encoder which will read uncompressed data …","Creates a new decoder which will decompress data read from …","Same as <code>new</code>, but the intermediate buffer for data is …","Creates a new decoder which will decompress data read from …","Creates a new encoder with the given <code>compression</code> settings …","Creates a new decoder which will decompress data read from …","Creates a new decoder which will decompress data read from …","","","","","","","","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Returns the number of bytes that have been read into this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that have been read into this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A DEFLATE decoder, or decompressor.","A DEFLATE encoder, or compressor.","A decoder for a single member of a gzip file.","A gzip streaming encoder","A gzip streaming decoder that decodes a gzip file with …","A ZLIB decoder, or decompressor.","A ZLIB encoder, or compressor.","","","","","","","","","","","","","","","","Consumes this encoder, flushing the output stream.","Consumes this encoder, flushing the output stream.","Finish encoding this stream, returning the underlying …","Consumes this decoder, flushing the output stream.","Consumes this decoder, flushing the output stream.","Consumes this encoder, flushing the output stream.","Consumes this encoder, flushing the output stream.","","","","","","","","Consumes this encoder, flushing the output stream.","Consumes this encoder, flushing the output stream.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Returns the header associated with this stream.","Returns the header associated with the current member.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new encoder which will write compressed data to …","Creates a new decoder which will write uncompressed data …","Creates a new encoder which will use the given compression …","Creates a new decoder which will write uncompressed data …","Creates a new decoder which will write uncompressed data …","Creates a new encoder which will write compressed data to …","Creates a new decoder which will write uncompressed data …","Creates a new encoder which will write compressed data to …","Creates a new decoder which will write uncompressed data …","","","","","","","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Returns the number of bytes that have been written to this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that have been written to this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[10,0,0,0,0,0,0,0,0,8,9,0,0,8,0,0,8,9,10,8,0,10,8,9,1,3,1,19,21,7,4,16,22,8,9,23,17,10,3,1,19,21,7,4,16,22,8,9,23,17,10,3,4,0,7,8,9,10,3,7,8,9,10,3,1,7,4,16,16,19,19,21,22,22,1,7,4,3,7,8,9,10,3,8,9,10,3,7,4,3,7,4,19,21,1,19,21,7,4,16,22,8,9,23,23,17,17,10,3,1,19,21,7,4,16,22,8,9,23,17,10,3,19,21,19,21,1,19,21,7,4,16,22,8,9,23,17,10,3,19,21,3,23,17,7,4,7,23,1,19,21,4,16,22,3,3,7,4,0,19,4,1,19,21,16,22,1,7,8,9,10,3,23,17,16,22,16,22,1,19,21,7,4,16,22,8,9,23,17,10,3,1,19,21,7,4,16,22,8,9,23,17,10,3,1,19,21,7,4,16,22,8,9,23,17,10,3,1,0,21,4,0,0,0,0,0,0,0,38,39,6,40,43,41,42,38,39,6,40,43,41,42,38,39,6,40,41,42,38,39,6,40,43,41,42,38,39,6,40,43,41,42,38,39,6,40,43,41,42,38,39,6,40,43,41,42,40,43,38,39,6,40,43,41,42,38,39,6,40,43,41,42,38,39,6,40,43,41,42,41,42,38,39,6,40,43,41,42,38,39,41,42,39,38,39,41,42,38,39,41,42,38,39,6,40,43,41,42,38,39,6,40,43,41,42,38,39,6,40,43,41,42,38,39,6,40,41,42,0,0,0,0,0,0,0,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,46,47,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,45,49,48,49,49,44,45,33,46,47,48,49,44,45,48,49,44,45,48,49,44,45,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,0,0,0,0,0,0,0,50,51,37,52,53,54,55,50,51,37,52,53,54,55,37,50,51,37,52,53,54,55,50,51,37,52,53,54,55,50,54,50,51,37,52,53,54,55,50,51,37,52,53,54,55,50,51,37,52,53,54,55,50,51,37,52,53,54,55,52,53,50,51,37,52,53,54,55,50,51,37,52,53,54,55,54,55,50,51,37,52,54,55,50,51,54,55,50,51,54,55,50,51,54,55,50,51,37,52,53,54,55,50,51,37,52,53,54,55,50,51,37,52,53,54,55,50,51,37,52,53,54,55,50,51,37,52,53,54,55],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,5,3],[[6,[5]]]],0,[7,7],[8,8],[9,9],[10,10],[3,3],[[]],[[]],[[]],[[]],[[]],[[1,1]],[7,[[13,[[12,[11]]]]]],[[4,[15,[[14,[11]]]]],4],[[16,[12,[11]],[12,[11]],8],[[18,[10,17]]]],[[16,[12,[11]],[14,[11]],8],[[18,[10,17]]]],[[[19,[5]],20]],[19,1],[21,1],[[22,[12,[11]],[12,[11]],9],[[18,[10,23]]]],[[22,[12,[11]],[14,[11]],9],[[18,[10,23]]]],[[],1],[[],7],[[],4],[[],3],[[7,7],24],[[8,8],24],[[9,9],24],[[10,10],24],[[3,3],24],[[],24],[[],24],[[],24],[[],24],[7,[[13,[[12,[11]]]]]],[[4,[15,[[14,[11]]]]],4],[[],3],[7,[[13,[[12,[11]]]]]],[[4,[15,[[14,[11]]]]],4],[[[19,[5]]],[[25,[[12,[11]]]]]],[[[21,[26]]],25],[[1,27],28],[[[19,[29]],27],28],[[[21,[29]],27],28],[[7,27],28],[[4,27],28],[[16,27],28],[[22,27],28],[[8,27],28],[[9,27],28],[[23,27],28],[[23,27],28],[[17,27],28],[[17,27],28],[[10,27],28],[[3,27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19],[21],[19],[21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19],[21],[3,2],[23,[[13,[30]]]],[17,[[13,[30]]]],[7,2],[[4,2],4],[7,[[13,[31]]]],[23,[[13,[2]]]],[[],1],[32,[[19,[32]]]],[26,[[21,[26]]]],[[],4],[[3,24],16],[24,22],[2,3],[[],3],[7,11],[[4,11],4],0,[[[19,[32]],[12,[11]]],[[25,[20]]]],[[4,32,3],[[33,[32]]]],[1],[19],[21],[16],[[22,24]],[1,2],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[16,35],[22,35],[16,35],[22,35],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[1,[12,[11]]]],0,[[[21,[26]],[12,[11]]],[[25,[20]]]],[[4,26,3],[[37,[26]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[[0,[5,26]]]]],25],[[[39,[[0,[5,26]]]]],25],[[[6,[[0,[5,26]]]]],25],[[[40,[[0,[5,26]]]]],25],[[[41,[[0,[5,26]]]]],25],[[[42,[[0,[5,26]]]]],25],[[[38,[29]],27],28],[[[39,[29]],27],28],[[[6,[29]],27],28],[[[40,[29]],27],28],[[[43,[29]],27],28],[[[41,[29]],27],28],[[[42,[29]],27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38],[39],[6],[40],[43],[41],[42],[38],[39],[6],[40],[43],[41],[42],[40,[[13,[7]]]],[43,[[13,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38],[39],[6],[40],[43],[41],[42],[[5,3],[[38,[5]]]],[5,[[39,[5]]]],[[5,3],[[6,[5]]]],[5,[[40,[5]]]],[5,[[43,[5]]]],[[5,3],[[41,[5]]]],[5,[[42,[5]]]],[[5,16],[[41,[5]]]],[[5,22],[[42,[5]]]],[[[38,[5]],[12,[11]]],[[25,[20]]]],[[[39,[5]],[12,[11]]],[[25,[20]]]],[[[6,[5]],[12,[11]]],[[25,[20]]]],[[[40,[5]],[12,[11]]],[[25,[20]]]],[[[43,[5]],[12,[11]]],[[25,[20]]]],[[[41,[5]],[12,[11]]],[[25,[20]]]],[[[42,[5]],[12,[11]]],[[25,[20]]]],[38],[39],[41],[42],[39],[38,35],[39,35],[41,35],[42,35],[38,35],[39,35],[41,35],[42,35],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[38,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[39,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[6,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[40,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[41,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[42,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[[0,[32,26]]]]],25],[[[45,[[0,[32,26]]]]],25],[[[33,[[0,[32,26]]]]],25],[[[46,[[0,[32,26]]]]],25],[[[47,[[0,[32,26]]]]],25],[[[48,[[0,[32,26]]]]],25],[[[49,[[0,[32,26]]]]],25],[[[44,[29]],27],28],[[[45,[29]],27],28],[[[33,[29]],27],28],[[[46,[29]],27],28],[[[47,[29]],27],28],[[[48,[29]],27],28],[[[49,[29]],27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44],[45],[33],[46],[47],[48],[49],[44],[45],[33],[46],[47],[48],[49],[46,[[13,[7]]]],[47,[[13,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44],[45],[33],[46],[47],[48],[49],[[32,3],[[44,[32]]]],[32,[[45,[32]]]],[[32,3],[[33,[32]]]],[32,[[46,[32]]]],[32,[[47,[32]]]],[[32,3],[[48,[32]]]],[32,[[49,[32]]]],[[32,[14,[11]]],[[45,[32]]]],[[32,[14,[11]]],[[49,[32]]]],[[32,16],[[48,[32]]]],[[32,22],[[49,[32]]]],[[32,[14,[11]],22],[[49,[32]]]],[[[44,[32]],[12,[11]]],[[25,[20]]]],[[[45,[32]],[12,[11]]],[[25,[20]]]],[[[33,[32]],[12,[11]]],[[25,[20]]]],[[[46,[32]],[12,[11]]],[[25,[20]]]],[[[47,[32]],[12,[11]]],[[25,[20]]]],[[[48,[32]],[12,[11]]],[[25,[20]]]],[[[49,[32]],[12,[11]]],[[25,[20]]]],[44],[45],[48],[49],[44,35],[45,35],[48,35],[49,35],[44,35],[45,35],[48,35],[49,35],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[44,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[45,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[33,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[46,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[47,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[48,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[49,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[26]]]],[[[50,[26]]],[[25,[26]]]],[[[51,[26]]],[[25,[26]]]],[[[37,[26]]],[[25,[26]]]],[[[52,[26]]],[[25,[26]]]],[[[53,[26]]],[[25,[26]]]],[[[54,[26]]],[[25,[26]]]],[[[55,[26]]],[[25,[26]]]],[[[50,[26]]],25],[[[51,[26]]],25],[[[37,[26]]],25],[[[52,[26]]],25],[[[53,[26]]],25],[[[54,[26]]],25],[[[55,[26]]],25],[[[50,[26]]],[[25,[26]]]],[[[54,[26]]],[[25,[26]]]],[[[50,[[0,[29,26]]]],27],28],[[[51,[[0,[29,26]]]],27],28],[[[37,[[0,[29,26]]]],27],28],[[[52,[[0,[29,26]]]],27],28],[[[53,[[0,[29,26]]]],27],28],[[[54,[[0,[29,26]]]],27],28],[[[55,[[0,[29,26]]]],27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[26]]],26],[[[51,[26]]],26],[[[37,[26]]],26],[[[52,[26]]],26],[[[53,[26]]],26],[[[54,[26]]],26],[[[55,[26]]],26],[[[50,[26]]],26],[[[51,[26]]],26],[[[37,[26]]],26],[[[52,[26]]],26],[[[53,[26]]],26],[[[54,[26]]],26],[[[55,[26]]],26],[[[52,[26]]],[[13,[7]]]],[[[53,[26]]],[[13,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,3],[[50,[26]]]],[26,[[51,[26]]]],[[26,3],[[37,[26]]]],[26,[[52,[26]]]],[26,[[53,[26]]]],[[26,3],[[54,[26]]]],[26,[[55,[26]]]],[[26,16],[[54,[26]]]],[[26,22],[[55,[26]]]],[[[50,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[51,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[37,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[52,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[54,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[55,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[50,[26]],26],[[25,[26]]]],[[[51,[26]],26],[[25,[26]]]],[[[54,[26]],26],[[25,[26]]]],[[[55,[26]],26],[[25,[26]]]],[[[50,[26]]],35],[[[51,[26]]],35],[[[54,[26]]],35],[[[55,[26]]],35],[[[50,[26]]],35],[[[51,[26]]],35],[[[54,[26]]],35],[[[55,[26]]],35],[[[50,[26]]],25],[[[51,[26]]],25],[[[37,[26]]],25],[[[52,[26]]],25],[[[53,[26]]],25],[[[54,[26]]],25],[[[55,[26]]],25],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[50,[26]],[12,[11]]],[[25,[20]]]],[[[51,[26]],[12,[11]]],[[25,[20]]]],[[[37,[26]],[12,[11]]],[[25,[20]]]],[[[52,[26]],[12,[11]]],[[25,[20]]]],[[[53,[26]],[12,[11]]],[[25,[20]]]],[[[54,[26]],[12,[11]]],[[25,[20]]]],[[[55,[26]],[12,[11]]],[[25,[20]]]]],"c":[],"p":[[3,"Crc"],[15,"u32"],[3,"Compression"],[3,"GzBuilder"],[8,"BufRead"],[3,"GzEncoder"],[3,"GzHeader"],[4,"FlushCompress"],[4,"FlushDecompress"],[4,"Status"],[15,"u8"],[15,"slice"],[4,"Option"],[3,"Vec"],[8,"Into"],[3,"Compress"],[3,"CompressError"],[4,"Result"],[3,"CrcReader"],[15,"usize"],[3,"CrcWriter"],[3,"Decompress"],[3,"DecompressError"],[15,"bool"],[6,"Result"],[8,"Write"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"str"],[3,"SystemTime"],[8,"Read"],[3,"GzEncoder"],[3,"String"],[15,"u64"],[3,"TypeId"],[3,"GzEncoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"MultiGzDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"]]},\
"float":{"doc":"Traits for generic floats in game programming","t":"IIIIIIIIIIIIKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK","n":["Cast","Float","FromPrimitive","Max","Min","One","Powf","Radians","Signum","Sqrt","Trig","Zero","_180","_360","_90","acos","acosh","asin","asinh","atan","atan2","atanh","cast","cos","cosh","deg_to_rad","from_f32","from_f64","from_i32","from_isize","from_u32","max","min","one","powf","rad_to_deg","signum","sin","sinh","sqrt","tan","tanh","zero"],"q":[[0,"float"]],"d":["Casts into another type.","Convenience trait for floats.","Trait for converting from different numeric types","Maximum value.","Minimum value.","Number 1.","Floating number power.","Useful constants for radians.","The sign of the number.","Square root.","Basic trigonometry functions","Number 0.","Returns radians corresponding to 180 degrees.","Returns radians corresponding to 360 degrees.","Returns radians corresponding to 90 degrees.","Returns inverse cosine of self.","Returns inverse hyperbolic cosine of self.","Returns inverse sine of self.","Returns inverse hyperbolic sine of self.","Returns inverse tangent of self.","Returns the four quadrant arctangent of self (y) and other …","Returns inverse hyperbolic tangent of self.","Casts into other type.","Returns cosine of self.","Returns hyperbolic cosine of self.","Convert a value to radians from degrees. Equivalent to …","from a f32","from a f64","from a i32","from a isze","from a u32","Returns the maximum value of self or other.","Returns the minimum value of self or other.","Returns 1.","Returns floating power of the number.","Convert a value to degrees from radians. Equivalent to …","Returns number representing the sign of self","Returns sine of self.","Returns hyperbolic sine of self.","Returns square root.","Returns tangent of self.","Returns hyperbolic tangent of self.","Returns 0."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,7,7,7,7,7,7,7,8,7,7,6,9,9,9,9,9,10,11,12,13,6,14,7,7,15,7,7,16],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2],[3],[4],[5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[15,"f32"],[15,"f64"],[15,"i32"],[15,"isize"],[15,"u32"],[8,"Radians"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"],[8,"Max"],[8,"Min"],[8,"One"],[8,"Powf"],[8,"Signum"],[8,"Sqrt"],[8,"Zero"]]},\
"flume":{"doc":"Flume","t":"NNNNNDNNDDDEEDEDNNDEEDLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFL","n":["Disconnected","Disconnected","Disconnected","Disconnected","Disconnected","Drain","Empty","Full","IntoIter","Iter","Receiver","RecvError","RecvTimeoutError","SendError","SendTimeoutError","Sender","Timeout","Timeout","TryIter","TryRecvError","TrySendError","WeakSender","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded","capacity","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","downgrade","drain","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_disconnected","is_disconnected","is_empty","is_empty","is_full","is_full","iter","len","len","len","next","next","next","next","receiver_count","receiver_count","recv","recv_deadline","recv_timeout","same_channel","same_channel","send","send_deadline","send_timeout","sender_count","sender_count","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_iter","try_recv","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbounded","upgrade"],"q":[[0,"flume"]],"d":["All channel receivers were dropped and so the message has …","All channel receivers were dropped and so the message has …","All senders were dropped and no messages are waiting in …","All senders were dropped and no messages are waiting in …","All senders were dropped and no messages are waiting in …","An fixed-sized iterator over the msgs drained from a …","The channel was empty when the receive was attempted.","The channel the message is sent on has a finite capacity …","An owned iterator over the msgs received from a channel.","An iterator over the msgs received from a channel.","The receiving end of a channel.","An error that may be emitted when attempting to wait for a …","An error that may be emitted when attempting to wait for a …","An error that may be emitted when attempting to send a …","An error that may be emitted when sending a value into a …","A transmitting end of a channel.","A timeout occurred when attempting to send the message.","A timeout occurred when attempting to receive a message.","An non-blocking iterator over the msgs received from a …","An error that may be emitted when attempting to fetch a …","An error that may be emitted when attempting to send a …","A sender that does not prevent the channel from being …","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a channel with a maximum capacity.","If the channel is bounded, returns its capacity.","If the channel is bounded, returns its capacity.","Clone this sender. <code>Sender</code> acts as a handle to the ending a …","Clone this receiver. <code>Receiver</code> acts as a handle to the …","","","","","","","","","","","","","","","Creates a <code>WeakSender</code> that does not keep the channel open.","Take all msgs currently sitting in the channel and produce …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume the error, yielding the message that failed to …","Consume the error, yielding the message that failed to …","Consume the error, yielding the message that failed to …","Creates a self-owned but semantically equivalent …","","","","","","Returns true if all receivers for this channel have been …","Returns true if all senders for this channel have been …","Returns true if the channel is empty. Note: Zero-capacity …","Returns true if the channel is empty. Note: Zero-capacity …","Returns true if the channel is full. Note: Zero-capacity …","Returns true if the channel is full. Note: Zero-capacity …","Create a blocking iterator over the values received on the …","Returns the number of messages in the channel","Returns the number of messages in the channel.","","","","","","Get the number of receivers that currently exist.","Get the number of receivers that currently exist, …","Wait for an incoming value from the channel associated …","Wait for an incoming value from the channel associated …","Wait for an incoming value from the channel associated …","Returns whether the senders are belong to the same channel.","Returns whether the receivers are belong to the same …","Send a value into the channel, returning an error if all …","Send a value into the channel, returning an error if all …","Send a value into the channel, returning an error if all …","Get the number of senders that currently exist, including …","Get the number of senders that currently exist.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A non-blocking iterator over the values received on the …","Attempt to fetch an incoming value from the channel …","Attempt to send a value into the channel. If the channel …","","","","","","","","","","","","","","Create a channel with no maximum capacity.","Tries to upgrade the <code>WeakSender</code> to a <code>Sender</code>, in order to …"],"i":[7,8,9,10,11,0,10,7,0,0,0,0,0,0,0,0,8,11,0,0,0,0,2,12,4,19,20,21,6,7,8,9,10,11,13,2,12,4,19,20,21,6,7,8,9,10,11,13,0,2,4,2,4,6,7,8,9,10,11,2,4,6,7,8,9,10,11,2,4,2,4,6,7,8,9,10,11,6,7,8,9,10,11,2,4,6,6,7,7,8,8,9,9,10,10,11,11,13,2,12,4,19,20,21,6,7,7,8,8,9,10,10,11,11,13,2,12,4,19,20,21,6,7,8,9,10,11,13,6,7,8,4,4,19,20,21,13,2,4,2,4,2,4,4,2,4,13,19,20,21,13,2,4,4,4,4,2,4,2,2,2,2,4,2,4,6,7,8,9,10,11,6,7,8,9,10,11,2,12,4,19,20,21,6,7,8,9,10,11,13,2,12,4,19,20,21,6,7,8,9,10,11,13,4,4,2,2,12,4,19,20,21,6,7,8,9,10,11,13,0,12],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2,[[3,[1]]]],[4,[[3,[1]]]],[2,2],[4,4],[[[6,[5]]],[[6,[5]]]],[[[7,[5]]],[[7,[5]]]],[[[8,[5]]],[[8,[5]]]],[9,9],[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,12],[4,13],[2],[4],[[[6,[14]],[6,[14]]],15],[[[7,[14]],[7,[14]]],15],[[[8,[14]],[8,[14]]],15],[[9,9],15],[[10,10],15],[[11,11],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[2,16],17],[[4,16],17],[[6,16],17],[[6,16],17],[[7,16],17],[[7,16],17],[[8,16],17],[[8,16],17],[[9,16],17],[[9,16],17],[[10,16],17],[[10,16],17],[[11,16],17],[[11,16],17],[[[13,[18]],16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,7],[6,8],[[]],[[]],[[]],[9,10],[[]],[9,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[7],[8],[4],[4],[[]],[[]],[[]],[[]],[2,15],[4,15],[2,15],[4,15],[2,15],[4,15],[4,19],[2,1],[4,1],[13,1],[19,3],[20,3],[21,3],[13,3],[2,1],[4,1],[4,[[22,[9]]]],[[4,23],[[22,[11]]]],[[4,24],[[22,[11]]]],[[2,2],15],[[4,4],15],[2,[[22,[6]]]],[[2,23],[[22,[8]]]],[[2,24],[[22,[8]]]],[2,1],[4,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[4,20],[4,[[22,[10]]]],[2,[[22,[7]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[12,[[3,[2]]]]],"c":[],"p":[[15,"usize"],[3,"Sender"],[4,"Option"],[3,"Receiver"],[8,"Clone"],[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[4,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[3,"WeakSender"],[3,"Drain"],[8,"PartialEq"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Iter"],[3,"TryIter"],[3,"IntoIter"],[4,"Result"],[3,"Instant"],[3,"Duration"],[3,"String"],[3,"TypeId"]]},\
"fnv":{"doc":"An implementation of the Fowler–Noll–Vo hash function.","t":"GGGDLLLLLLLLLLL","n":["FnvBuildHasher","FnvHashMap","FnvHashSet","FnvHasher","borrow","borrow_mut","default","finish","from","into","try_from","try_into","type_id","with_key","write"],"q":[[0,"fnv"]],"d":["A builder for default FNV hashers.","A <code>HashMap</code> using a default FNV hasher.","A <code>HashSet</code> using a default FNV hasher.","An implementation of the Fowler–Noll–Vo hash function.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Create an FNV hasher starting with a state corresponding …",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,[[]],[[]],[[],1],[1,2],[[]],[[]],[[],3],[[],3],[[],4],[2,1],[[1,[6,[5]]]]],"c":[],"p":[[3,"FnvHasher"],[15,"u64"],[4,"Result"],[3,"TypeId"],[15,"u8"],[15,"slice"]]},\
"gif":{"doc":"GIF en- and decoding library Build Status","t":"NDNNNENNNDDEDEDEEEENNNDNNNNNNENNNENNNNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLMLLLLLLLLLLLALLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMNENNNNENEDNNNNNNNNENNNDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLM","n":["Any","AnyExtension","Application","Background","Bytes","ColorOutput","Comment","Control","Control","DecodeOptions","Decoder","DecodingError","DecodingFormatError","DisposalMethod","Encoder","EncodingError","EncodingFormatError","Extension","ExtensionData","Finite","Format","Format","Frame","Indexed","Infinite","InvalidMinCodeSize","Io","Io","Keep","MemoryLimit","MissingColorPalette","Previous","RGBA","Repeat","Repetitions","Text","TooManyColors","Unlimited","V87a","V89a","Version","allow_unknown_blocks","bg_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer_size","build","check_frame_consistency","check_lzw_end_code","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","delay","dispose","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fill_buffer","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_indexed_pixels","from_palette_pixels","from_rgb","from_rgb_speed","from_rgba","from_rgba_speed","from_u8","from_u8","get_mut","get_ref","global_palette","hash","hash","height","height","interlaced","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_iter","into_known","left","line_length","make_lzw_pre_encoded","needs_user_input","new","new","new","new_control_ext","next_frame_info","palette","palette","read_info","read_into_buffer","read_next_frame","repeat","set_color_output","set_memory_limit","set_repeat","skip_frame_decoding","source","source","source","streaming_decoder","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","top","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","width","write_extension","write_frame","write_lzw_pre_encoded_frame","write_raw_extension","delay","flags","trns","BackgroundColor","Block","BlockFinished","BlockStart","BytesDecoded","DataEnd","Decoded","Extension","FrameDataType","FrameDecoder","FrameMetadata","GlobalPalette","HeaderEnd","Image","Lzw","LzwDataCopied","None","Nothing","OutputBuffer","Pixels","Repetitions","Slice","StreamingDecoder","SubBlockFinished","Trailer","Vec","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_size","clone","clone","clone_into","clone_into","current_frame","current_frame_mut","decode_lzw_encoded_frame","decode_lzw_encoded_frame_into_buffer","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from_u8","height","into","into","into","into","into","into","last_ext","new","new","set_global_palette","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update","version","width","min_code_size"],"q":[[0,"gif"],[283,"gif::ExtensionData"],[286,"gif::streaming_decoder"],[379,"gif::streaming_decoder::FrameDataType"]],"d":["StreamingDecoder is not required to take any action.","A newtype wrapper around an arbitrary extension ID.","Application extension.","Restore to background color.","Limit the amount of memory that can be used for a single …","Output mode for the image data","Comment extension.","Control extension. Use <code>ExtensionData::new_control_ext</code> to …","Control extension.","Options for opening a GIF decoder. <code>DecodeOptions::read_info</code>…","GIF decoder. Create <code>DecodeOptions</code> to get started, and call …","Decoding error.","An error returned in the case of the image not being …","Disposal method","GIF encoder.","Encoding error.","The image has incorrect properties, making it impossible …","Known GIF extension labels.","Extension data.","Finite number of repetitions","Returned if the image is found to be malformed.","Returned if the to image is not encodable as a gif.","A GIF frame","The decoder returns the raw indexed data.","Infinite number of repetitions","LZW data is not valid for GIF. This may happen when wrong …","Wraps <code>std::io::Error</code>.","Wraps <code>std::io::Error</code>.","Do not dispose.","The maximum amount of memory the decoder is allowed to use …","The image has no color palette which is required.","Restore to previous.","The decoder expands the image data to 32bit RGBA. This …","Number of repetitions","Sets the number of repetitions","Plain Text extension.","The image has too many colors.","Enforce no memory limit.","Version 87a, from May 1987.","Version 89a, from July 1989.","One version number of the GIF standard.","Configure if unknown blocks are allowed to be decoded.","Index of the background color in the global palette","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Buffer containing the image data. Only indices unless …","Output buffer size","Return a builder that allows configuring limits etc.","Configure if frames must be within the screen descriptor.","Configure if LZW encoded blocks must end with a marker end …","","","","","","","","","","","","","","","","","","","","","","Frame delay in units of 10 ms.","Disposal method.","","","","","","","","","","","","","Reads data of the current frame into a pre-allocated …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Creates a frame from indexed pixels in the global palette.","Creates a frame from a palette and indexed pixels.","Creates a frame from pixels in RGB format.","Creates a frame from pixels in RGB format.","Creates a frame from pixels in RGBA format.","Creates a frame from pixels in RGBA format.","Converts <code>u8</code> to <code>Option&lt;Self&gt;</code>","Converts <code>u8</code> to a <code>Extension</code> if it is known.","Gets a mutable reference to the writer instance used by …","Gets a reference to the writer instance used by this …","The global color palette","","","Height of the image","Height of the frame.","True if the image is interlaced.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Abort decoding and recover the <code>io::Read</code> instance","Finishes writing, and returns the <code>io::Write</code> instance used …","","Decode the label as a known extension.","Offset from the left border of the canvas.","Line length of the current frame","Replace frame’s buffer with a LZW-compressed one for use …","True if the frame needs user input to be displayed.","Create a new decoder with default options.","Creates a new encoder.","Creates a new decoder builder","Constructor for control extension data.","Returns the next frame info","Returns the color palette relevant for the frame that has …","Frame local color palette if available.","Reads the logical screen descriptor including the global …","Reads the data of the current frame into a pre-allocated …","Reads the next frame from the image.","Number of loop repetitions","Configure how color data is decoded.","Configure a memory limit for decoding.","Write an extension block that signals a repeat behaviour.","Configure whether to skip decoding frames.","","","","Low-level, advanced decoder. Prefer <code>Decoder</code> instead, which …","","","","","","","","","","","","","","Offset from the top border of the canvas.","Transparent index (if available).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Width of the image","Width of the frame.","Writes an extension to the image.","Writes a frame to the image.","Writes a frame to the image, but expects <code>Frame.buffer</code> to …","Writes a raw extension to the image.","Frame delay.","Flags.","Transparent index.","Index of the background color in the global palette.","Known GIF block labels.","Decoded the last (or only) sub-block of a block.","The start of a block. <code>BlockStart(Block::Trailer)</code> is the …","Decoded some data of the current frame. Size is in bytes, …","No more data available the current frame.","Indicates whether a certain object has been decoded","Extension block.","Varies depending on <code>skip_frame_decoding</code>","Decoder for <code>Frame::make_lzw_pre_encoded</code>","Decoded all information of the next frame, except the …","Global palette.","Palette and optional <code>Application</code> extension have been …","Image block.","Raw LZW data","Copied (or consumed and discarded) compressed data of the …","Discard bytes","Decoded nothing.","Destination to write to for <code>StreamingDecoder::update</code>","<code>Frame.buffer</code> will be regular pixel data","Loop count is known","Overwrite bytes","GIF decoder which emits low-level events for items in the …","Decoded a sub-block. More sub-block are available.","Image trailer.","Append LZW bytes","","","","","","","","","","","","","Number of bytes required for …","","","","","Current frame info as a ref.","Current frame info as a mutable ref.","Converts the frame in-place, replacing its LZW buffer with …","Converts into the given buffer. It must be [<code>buffer_size()</code>] …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts <code>u8</code> to <code>Option&lt;Self&gt;</code>","Height of the image","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the data of the last extension that has been …","See also <code>set_global_palette</code>","Creates a new streaming decoder","Palette used for RGBA conversion","","","","","","","","","","","","","","","","","","","","","Updates the internal state of the decoder.","The version number of the GIF standard used in this image.","Width of the image","Needed for decoding"],"i":[7,0,9,7,13,0,9,35,9,0,0,0,0,0,0,0,0,0,0,14,19,25,0,12,14,24,19,25,7,0,24,7,12,0,35,9,24,13,11,11,0,1,4,4,35,16,7,8,9,10,23,19,11,12,13,1,24,25,14,4,35,16,7,8,9,10,23,19,11,12,13,1,24,25,14,10,4,4,1,1,7,8,9,10,11,12,13,1,14,7,8,9,10,11,12,13,1,14,10,1,14,10,10,16,7,8,9,11,12,14,7,8,9,11,14,4,7,8,9,10,23,23,19,19,11,12,13,1,24,24,25,25,14,4,35,16,7,8,8,9,10,23,19,19,19,19,11,12,13,1,24,25,25,25,14,10,10,10,10,10,10,7,9,16,16,4,8,11,4,10,10,4,35,16,7,8,9,10,23,19,11,12,13,1,24,25,14,4,16,4,8,10,4,10,10,4,16,1,35,4,4,10,1,4,4,4,1,1,16,1,23,19,25,0,7,8,9,10,11,12,13,1,14,23,19,24,25,10,10,4,35,16,7,8,9,10,23,19,11,12,13,1,24,25,14,4,35,16,7,8,9,10,23,19,11,12,13,1,24,25,14,4,35,16,7,8,9,10,23,19,11,12,13,1,24,25,14,4,10,16,16,16,16,45,45,45,43,0,43,43,43,43,0,40,0,0,43,43,43,40,41,43,44,43,0,41,43,44,0,43,40,44,39,42,44,40,41,43,39,42,44,40,41,43,39,40,41,40,41,42,42,39,39,40,40,40,41,43,39,42,44,40,41,43,40,42,39,42,44,40,41,43,42,39,42,39,40,41,39,42,44,40,41,43,39,42,44,40,41,43,39,42,44,40,41,43,42,42,42,46],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[[[4,[3]]],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[4,[3]]],5],[[],1],[[1,2]],[[1,2]],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[1,1],[14,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],1],[[],14],0,0,[[[16,[15]]]],[[7,7],2],[[8,8],2],[[9,9],2],[[11,11],2],[[12,12],2],[[14,14],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[4,[3]],[18,[17]]],[[20,[2,19]]]],[[7,21],22],[[8,21],22],[[9,21],22],[[10,21],22],[[23,21],22],[[23,21],22],[[19,21],22],[[19,21],22],[[11,21],22],[[12,21],22],[[13,21],22],[[1,21],22],[[24,21],22],[[24,21],22],[[25,21],22],[[25,21],22],[[14,21],22],[[]],[[]],[[]],[[]],[[]],[9,8],[[]],[[]],[[]],[26,19],[[]],[27,19],[23,19],[[]],[[]],[[]],[[]],[[]],[[]],[24,25],[26,25],[[]],[[28,28,[30,[[29,[17]]]],[6,[17]]],10],[[28,28,[30,[[29,[17]]]],[30,[[29,[17]]]],[6,[17]]],10],[[28,28,[18,[17]]],10],[[28,28,[18,[17]],31],10],[[28,28,[18,[17]]],10],[[28,28,[18,[17]],31],10],[17,[[6,[7]]]],[17,[[6,[9]]]],[[[16,[15]]],15],[[[16,[15]]],15],[[[4,[3]]],[[6,[[18,[17]]]]]],[[8,32]],[[11,32]],[[[4,[3]]],28],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],[[33,[3]]]],[[[16,[15]]],[[34,[15]]]],[[[4,[3]]]],[8,[[6,[9]]]],0,[[[4,[3]]],5],[10],0,[3,[[20,[[4,[3]],19]]]],[[15,28,28,[18,[17]]],[[20,[[16,[15]],25]]]],[[],1],[[28,7,2,[6,[17]]],35],[[[4,[3]]],[[20,[[6,[10]],19]]]],[[[4,[3]]],[[20,[[18,[17]],19]]]],0,[[1,3],[[20,[[4,[3]],19]]]],[[[4,[3]],[18,[17]]],[[20,[19]]]],[[[4,[3]]],[[20,[[6,[10]],19]]]],[[[4,[3]]],14],[[1,12]],[[1,13]],[[[16,[15]],14],[[20,[25]]]],[[1,2]],[23,[[6,[36]]]],[19,[[6,[36]]]],[25,[[6,[36]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[[],37],[[],37],[[],37],0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[[4,[3]]],28],0,[[[16,[15]],35],[[20,[25]]]],[[[16,[15]],10],[[20,[25]]]],[[[16,[15]],10],[[20,[25]]]],[[[16,[15]],8,[18,[[18,[17]]]]],34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[39,10],5],[40,40],[41,41],[[]],[[]],[42,10],[42,10],[[39,10],[[20,[19]]]],[[39,10,[18,[17]]],[[20,[19]]]],[[40,40],2],[[],2],[[40,21],22],[[41,21],22],[[43,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[17,[[6,[40]]]],[42,28],[[]],[[]],[[]],[[]],[[]],[[]],[42],[1,39],[[],42],[[39,[29,[17]]]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[42,[18,[17]],44],[[20,[19]]]],[42,11],[42,28],0],"c":[],"p":[[3,"DecodeOptions"],[15,"bool"],[8,"Read"],[3,"Decoder"],[15,"usize"],[4,"Option"],[4,"DisposalMethod"],[3,"AnyExtension"],[4,"Extension"],[3,"Frame"],[4,"Version"],[4,"ColorOutput"],[4,"MemoryLimit"],[4,"Repeat"],[8,"Write"],[3,"Encoder"],[15,"u8"],[15,"slice"],[4,"DecodingError"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"DecodingFormatError"],[4,"EncodingFormatError"],[4,"EncodingError"],[3,"Error"],[4,"ErrorKind"],[15,"u16"],[3,"Vec"],[8,"Into"],[15,"i32"],[8,"Hasher"],[3,"BufReader"],[6,"Result"],[4,"ExtensionData"],[8,"Error"],[3,"String"],[3,"TypeId"],[3,"FrameDecoder"],[4,"Block"],[4,"FrameDataType"],[3,"StreamingDecoder"],[4,"Decoded"],[4,"OutputBuffer"],[13,"Control"],[13,"Lzw"]]},\
"gl":{"doc":"Usage","tn":["ACTIVE_ATOMIC_COUNTER_BUFFERS","ACTIVE_ATTRIBUTES","ACTIVE_ATTRIBUTE_MAX_LENGTH","ACTIVE_PROGRAM","ACTIVE_RESOURCES","ACTIVE_SUBROUTINES","ACTIVE_SUBROUTINE_MAX_LENGTH","ACTIVE_SUBROUTINE_UNIFORMS","ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","ACTIVE_TEXTURE","ACTIVE_UNIFORMS","ACTIVE_UNIFORM_BLOCKS","ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","ACTIVE_UNIFORM_MAX_LENGTH","ACTIVE_VARIABLES","ALIASED_LINE_WIDTH_RANGE","ALL_BARRIER_BITS","ALL_SHADER_BITS","ALPHA","ALREADY_SIGNALED","ALWAYS","AND","AND_INVERTED","AND_REVERSE","ANY_SAMPLES_PASSED","ANY_SAMPLES_PASSED_CONSERVATIVE","ARRAY_BUFFER","ARRAY_BUFFER_BINDING","ARRAY_SIZE","ARRAY_STRIDE","ATOMIC_COUNTER_BARRIER_BIT","ATOMIC_COUNTER_BUFFER","ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","ATOMIC_COUNTER_BUFFER_BINDING","ATOMIC_COUNTER_BUFFER_DATA_SIZE","ATOMIC_COUNTER_BUFFER_INDEX","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","ATOMIC_COUNTER_BUFFER_SIZE","ATOMIC_COUNTER_BUFFER_START","ATTACHED_SHADERS","AUTO_GENERATE_MIPMAP","ActiveShaderProgram","ActiveShaderProgram","ActiveTexture","ActiveTexture","AttachShader","AttachShader","BACK","BACK_LEFT","BACK_RIGHT","BGR","BGRA","BGRA_INTEGER","BGR_INTEGER","BLEND","BLEND_COLOR","BLEND_DST","BLEND_DST_ALPHA","BLEND_DST_RGB","BLEND_EQUATION","BLEND_EQUATION_ALPHA","BLEND_EQUATION_RGB","BLEND_SRC","BLEND_SRC_ALPHA","BLEND_SRC_RGB","BLOCK_INDEX","BLUE","BLUE_INTEGER","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","BUFFER","BUFFER_ACCESS","BUFFER_ACCESS_FLAGS","BUFFER_BINDING","BUFFER_DATA_SIZE","BUFFER_IMMUTABLE_STORAGE","BUFFER_MAPPED","BUFFER_MAP_LENGTH","BUFFER_MAP_OFFSET","BUFFER_MAP_POINTER","BUFFER_SIZE","BUFFER_STORAGE_FLAGS","BUFFER_UPDATE_BARRIER_BIT","BUFFER_USAGE","BUFFER_VARIABLE","BYTE","BeginConditionalRender","BeginConditionalRender","BeginQuery","BeginQuery","BeginQueryIndexed","BeginQueryIndexed","BeginTransformFeedback","BeginTransformFeedback","BindAttribLocation","BindAttribLocation","BindBuffer","BindBuffer","BindBufferBase","BindBufferBase","BindBufferRange","BindBufferRange","BindBuffersBase","BindBuffersBase","BindBuffersRange","BindBuffersRange","BindFragDataLocation","BindFragDataLocation","BindFragDataLocationIndexed","BindFragDataLocationIndexed","BindFramebuffer","BindFramebuffer","BindImageTexture","BindImageTexture","BindImageTextures","BindImageTextures","BindProgramPipeline","BindProgramPipeline","BindRenderbuffer","BindRenderbuffer","BindSampler","BindSampler","BindSamplers","BindSamplers","BindTexture","BindTexture","BindTextureUnit","BindTextureUnit","BindTextures","BindTextures","BindTransformFeedback","BindTransformFeedback","BindVertexArray","BindVertexArray","BindVertexBuffer","BindVertexBuffer","BindVertexBuffers","BindVertexBuffers","BlendColor","BlendColor","BlendEquation","BlendEquation","BlendEquationSeparate","BlendEquationSeparate","BlendEquationSeparatei","BlendEquationSeparatei","BlendEquationi","BlendEquationi","BlendFunc","BlendFunc","BlendFuncSeparate","BlendFuncSeparate","BlendFuncSeparatei","BlendFuncSeparatei","BlendFunci","BlendFunci","BlitFramebuffer","BlitFramebuffer","BlitNamedFramebuffer","BlitNamedFramebuffer","BufferData","BufferData","BufferStorage","BufferStorage","BufferSubData","BufferSubData","CAVEAT_SUPPORT","CCW","CLAMP_READ_COLOR","CLAMP_TO_BORDER","CLAMP_TO_EDGE","CLEAR","CLEAR_BUFFER","CLEAR_TEXTURE","CLIENT_MAPPED_BUFFER_BARRIER_BIT","CLIENT_STORAGE_BIT","CLIP_DEPTH_MODE","CLIP_DISTANCE0","CLIP_DISTANCE1","CLIP_DISTANCE2","CLIP_DISTANCE3","CLIP_DISTANCE4","CLIP_DISTANCE5","CLIP_DISTANCE6","CLIP_DISTANCE7","CLIP_ORIGIN","COLOR","COLOR_ATTACHMENT0","COLOR_ATTACHMENT1","COLOR_ATTACHMENT10","COLOR_ATTACHMENT11","COLOR_ATTACHMENT12","COLOR_ATTACHMENT13","COLOR_ATTACHMENT14","COLOR_ATTACHMENT15","COLOR_ATTACHMENT16","COLOR_ATTACHMENT17","COLOR_ATTACHMENT18","COLOR_ATTACHMENT19","COLOR_ATTACHMENT2","COLOR_ATTACHMENT20","COLOR_ATTACHMENT21","COLOR_ATTACHMENT22","COLOR_ATTACHMENT23","COLOR_ATTACHMENT24","COLOR_ATTACHMENT25","COLOR_ATTACHMENT26","COLOR_ATTACHMENT27","COLOR_ATTACHMENT28","COLOR_ATTACHMENT29","COLOR_ATTACHMENT3","COLOR_ATTACHMENT30","COLOR_ATTACHMENT31","COLOR_ATTACHMENT4","COLOR_ATTACHMENT5","COLOR_ATTACHMENT6","COLOR_ATTACHMENT7","COLOR_ATTACHMENT8","COLOR_ATTACHMENT9","COLOR_BUFFER_BIT","COLOR_CLEAR_VALUE","COLOR_COMPONENTS","COLOR_ENCODING","COLOR_LOGIC_OP","COLOR_RENDERABLE","COLOR_WRITEMASK","COMMAND_BARRIER_BIT","COMPARE_REF_TO_TEXTURE","COMPATIBLE_SUBROUTINES","COMPILE_STATUS","COMPRESSED_R11_EAC","COMPRESSED_RED","COMPRESSED_RED_RGTC1","COMPRESSED_RG","COMPRESSED_RG11_EAC","COMPRESSED_RGB","COMPRESSED_RGB8_ETC2","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGBA","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGBA_BPTC_UNORM","COMPRESSED_RGB_BPTC_SIGNED_FLOAT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","COMPRESSED_RG_RGTC2","COMPRESSED_SIGNED_R11_EAC","COMPRESSED_SIGNED_RED_RGTC1","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_SIGNED_RG_RGTC2","COMPRESSED_SRGB","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB_ALPHA","COMPRESSED_SRGB_ALPHA_BPTC_UNORM","COMPRESSED_TEXTURE_FORMATS","COMPUTE_SHADER","COMPUTE_SHADER_BIT","COMPUTE_SUBROUTINE","COMPUTE_SUBROUTINE_UNIFORM","COMPUTE_TEXTURE","COMPUTE_WORK_GROUP_SIZE","CONDITION_SATISFIED","CONSTANT_ALPHA","CONSTANT_COLOR","CONTEXT_COMPATIBILITY_PROFILE_BIT","CONTEXT_CORE_PROFILE_BIT","CONTEXT_FLAGS","CONTEXT_FLAG_DEBUG_BIT","CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","CONTEXT_FLAG_ROBUST_ACCESS_BIT","CONTEXT_LOST","CONTEXT_PROFILE_MASK","CONTEXT_RELEASE_BEHAVIOR","CONTEXT_RELEASE_BEHAVIOR_FLUSH","COPY","COPY_INVERTED","COPY_READ_BUFFER","COPY_READ_BUFFER_BINDING","COPY_WRITE_BUFFER","COPY_WRITE_BUFFER_BINDING","CULL_FACE","CULL_FACE_MODE","CURRENT_PROGRAM","CURRENT_QUERY","CURRENT_VERTEX_ATTRIB","CW","CheckFramebufferStatus","CheckFramebufferStatus","CheckNamedFramebufferStatus","CheckNamedFramebufferStatus","ClampColor","ClampColor","Clear","Clear","ClearBufferData","ClearBufferData","ClearBufferSubData","ClearBufferSubData","ClearBufferfi","ClearBufferfi","ClearBufferfv","ClearBufferfv","ClearBufferiv","ClearBufferiv","ClearBufferuiv","ClearBufferuiv","ClearColor","ClearColor","ClearDepth","ClearDepth","ClearDepthf","ClearDepthf","ClearNamedBufferData","ClearNamedBufferData","ClearNamedBufferSubData","ClearNamedBufferSubData","ClearNamedFramebufferfi","ClearNamedFramebufferfi","ClearNamedFramebufferfv","ClearNamedFramebufferfv","ClearNamedFramebufferiv","ClearNamedFramebufferiv","ClearNamedFramebufferuiv","ClearNamedFramebufferuiv","ClearStencil","ClearStencil","ClearTexImage","ClearTexImage","ClearTexSubImage","ClearTexSubImage","ClientWaitSync","ClientWaitSync","ClipControl","ClipControl","ColorMask","ColorMask","ColorMaski","ColorMaski","ColorP3ui","ColorP3ui","ColorP3uiv","ColorP3uiv","ColorP4ui","ColorP4ui","ColorP4uiv","ColorP4uiv","CompileShader","CompileShader","CompressedTexImage1D","CompressedTexImage1D","CompressedTexImage2D","CompressedTexImage2D","CompressedTexImage3D","CompressedTexImage3D","CompressedTexSubImage1D","CompressedTexSubImage1D","CompressedTexSubImage2D","CompressedTexSubImage2D","CompressedTexSubImage3D","CompressedTexSubImage3D","CompressedTextureSubImage1D","CompressedTextureSubImage1D","CompressedTextureSubImage2D","CompressedTextureSubImage2D","CompressedTextureSubImage3D","CompressedTextureSubImage3D","CopyBufferSubData","CopyBufferSubData","CopyImageSubData","CopyImageSubData","CopyNamedBufferSubData","CopyNamedBufferSubData","CopyTexImage1D","CopyTexImage1D","CopyTexImage2D","CopyTexImage2D","CopyTexSubImage1D","CopyTexSubImage1D","CopyTexSubImage2D","CopyTexSubImage2D","CopyTexSubImage3D","CopyTexSubImage3D","CopyTextureSubImage1D","CopyTextureSubImage1D","CopyTextureSubImage2D","CopyTextureSubImage2D","CopyTextureSubImage3D","CopyTextureSubImage3D","CreateBuffers","CreateBuffers","CreateFramebuffers","CreateFramebuffers","CreateProgram","CreateProgram","CreateProgramPipelines","CreateProgramPipelines","CreateQueries","CreateQueries","CreateRenderbuffers","CreateRenderbuffers","CreateSamplers","CreateSamplers","CreateShader","CreateShader","CreateShaderProgramv","CreateShaderProgramv","CreateTextures","CreateTextures","CreateTransformFeedbacks","CreateTransformFeedbacks","CreateVertexArrays","CreateVertexArrays","CullFace","CullFace","DEBUG_CALLBACK_FUNCTION","DEBUG_CALLBACK_USER_PARAM","DEBUG_GROUP_STACK_DEPTH","DEBUG_LOGGED_MESSAGES","DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","DEBUG_OUTPUT","DEBUG_OUTPUT_SYNCHRONOUS","DEBUG_SEVERITY_HIGH","DEBUG_SEVERITY_LOW","DEBUG_SEVERITY_MEDIUM","DEBUG_SEVERITY_NOTIFICATION","DEBUG_SOURCE_API","DEBUG_SOURCE_APPLICATION","DEBUG_SOURCE_OTHER","DEBUG_SOURCE_SHADER_COMPILER","DEBUG_SOURCE_THIRD_PARTY","DEBUG_SOURCE_WINDOW_SYSTEM","DEBUG_TYPE_DEPRECATED_BEHAVIOR","DEBUG_TYPE_ERROR","DEBUG_TYPE_MARKER","DEBUG_TYPE_OTHER","DEBUG_TYPE_PERFORMANCE","DEBUG_TYPE_POP_GROUP","DEBUG_TYPE_PORTABILITY","DEBUG_TYPE_PUSH_GROUP","DEBUG_TYPE_UNDEFINED_BEHAVIOR","DECR","DECR_WRAP","DELETE_STATUS","DEPTH","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_ATTACHMENT","DEPTH_BUFFER_BIT","DEPTH_CLAMP","DEPTH_CLEAR_VALUE","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_COMPONENT24","DEPTH_COMPONENT32","DEPTH_COMPONENT32F","DEPTH_COMPONENTS","DEPTH_FUNC","DEPTH_RANGE","DEPTH_RENDERABLE","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","DEPTH_STENCIL_TEXTURE_MODE","DEPTH_TEST","DEPTH_WRITEMASK","DISPATCH_INDIRECT_BUFFER","DISPATCH_INDIRECT_BUFFER_BINDING","DISPLAY_LIST","DITHER","DONT_CARE","DOUBLE","DOUBLEBUFFER","DOUBLE_MAT2","DOUBLE_MAT2x3","DOUBLE_MAT2x4","DOUBLE_MAT3","DOUBLE_MAT3x2","DOUBLE_MAT3x4","DOUBLE_MAT4","DOUBLE_MAT4x2","DOUBLE_MAT4x3","DOUBLE_VEC2","DOUBLE_VEC3","DOUBLE_VEC4","DRAW_BUFFER","DRAW_BUFFER0","DRAW_BUFFER1","DRAW_BUFFER10","DRAW_BUFFER11","DRAW_BUFFER12","DRAW_BUFFER13","DRAW_BUFFER14","DRAW_BUFFER15","DRAW_BUFFER2","DRAW_BUFFER3","DRAW_BUFFER4","DRAW_BUFFER5","DRAW_BUFFER6","DRAW_BUFFER7","DRAW_BUFFER8","DRAW_BUFFER9","DRAW_FRAMEBUFFER","DRAW_FRAMEBUFFER_BINDING","DRAW_INDIRECT_BUFFER","DRAW_INDIRECT_BUFFER_BINDING","DST_ALPHA","DST_COLOR","DYNAMIC_COPY","DYNAMIC_DRAW","DYNAMIC_READ","DYNAMIC_STORAGE_BIT","DebugMessageCallback","DebugMessageCallback","DebugMessageControl","DebugMessageControl","DebugMessageInsert","DebugMessageInsert","DeleteBuffers","DeleteBuffers","DeleteFramebuffers","DeleteFramebuffers","DeleteProgram","DeleteProgram","DeleteProgramPipelines","DeleteProgramPipelines","DeleteQueries","DeleteQueries","DeleteRenderbuffers","DeleteRenderbuffers","DeleteSamplers","DeleteSamplers","DeleteShader","DeleteShader","DeleteSync","DeleteSync","DeleteTextures","DeleteTextures","DeleteTransformFeedbacks","DeleteTransformFeedbacks","DeleteVertexArrays","DeleteVertexArrays","DepthFunc","DepthFunc","DepthMask","DepthMask","DepthRange","DepthRange","DepthRangeArrayv","DepthRangeArrayv","DepthRangeIndexed","DepthRangeIndexed","DepthRangef","DepthRangef","DetachShader","DetachShader","Disable","Disable","DisableVertexArrayAttrib","DisableVertexArrayAttrib","DisableVertexAttribArray","DisableVertexAttribArray","Disablei","Disablei","DispatchCompute","DispatchCompute","DispatchComputeIndirect","DispatchComputeIndirect","DrawArrays","DrawArrays","DrawArraysIndirect","DrawArraysIndirect","DrawArraysInstanced","DrawArraysInstanced","DrawArraysInstancedBaseInstance","DrawArraysInstancedBaseInstance","DrawBuffer","DrawBuffer","DrawBuffers","DrawBuffers","DrawElements","DrawElements","DrawElementsBaseVertex","DrawElementsBaseVertex","DrawElementsIndirect","DrawElementsIndirect","DrawElementsInstanced","DrawElementsInstanced","DrawElementsInstancedBaseInstance","DrawElementsInstancedBaseInstance","DrawElementsInstancedBaseVertex","DrawElementsInstancedBaseVertex","DrawElementsInstancedBaseVertexBaseInstance","DrawElementsInstancedBaseVertexBaseInstance","DrawRangeElements","DrawRangeElements","DrawRangeElementsBaseVertex","DrawRangeElementsBaseVertex","DrawTransformFeedback","DrawTransformFeedback","DrawTransformFeedbackInstanced","DrawTransformFeedbackInstanced","DrawTransformFeedbackStream","DrawTransformFeedbackStream","DrawTransformFeedbackStreamInstanced","DrawTransformFeedbackStreamInstanced","ELEMENT_ARRAY_BARRIER_BIT","ELEMENT_ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER_BINDING","EQUAL","EQUIV","EXTENSIONS","Enable","Enable","EnableVertexArrayAttrib","EnableVertexArrayAttrib","EnableVertexAttribArray","EnableVertexAttribArray","Enablei","Enablei","EndConditionalRender","EndConditionalRender","EndQuery","EndQuery","EndQueryIndexed","EndQueryIndexed","EndTransformFeedback","EndTransformFeedback","FALSE","FASTEST","FILL","FILTER","FIRST_VERTEX_CONVENTION","FIXED","FIXED_ONLY","FLOAT","FLOAT_32_UNSIGNED_INT_24_8_REV","FLOAT_MAT2","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4","FLOAT_MAT4x2","FLOAT_MAT4x3","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","FRACTIONAL_EVEN","FRACTIONAL_ODD","FRAGMENT_INTERPOLATION_OFFSET_BITS","FRAGMENT_SHADER","FRAGMENT_SHADER_BIT","FRAGMENT_SHADER_DERIVATIVE_HINT","FRAGMENT_SUBROUTINE","FRAGMENT_SUBROUTINE_UNIFORM","FRAGMENT_TEXTURE","FRAMEBUFFER","FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","FRAMEBUFFER_ATTACHMENT_LAYERED","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","FRAMEBUFFER_ATTACHMENT_RED_SIZE","FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","FRAMEBUFFER_BARRIER_BIT","FRAMEBUFFER_BINDING","FRAMEBUFFER_BLEND","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_DEFAULT","FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","FRAMEBUFFER_DEFAULT_HEIGHT","FRAMEBUFFER_DEFAULT_LAYERS","FRAMEBUFFER_DEFAULT_SAMPLES","FRAMEBUFFER_DEFAULT_WIDTH","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","FRAMEBUFFER_INCOMPLETE_READ_BUFFER","FRAMEBUFFER_RENDERABLE","FRAMEBUFFER_RENDERABLE_LAYERED","FRAMEBUFFER_SRGB","FRAMEBUFFER_UNDEFINED","FRAMEBUFFER_UNSUPPORTED","FRONT","FRONT_AND_BACK","FRONT_FACE","FRONT_LEFT","FRONT_RIGHT","FULL_SUPPORT","FUNC_ADD","FUNC_REVERSE_SUBTRACT","FUNC_SUBTRACT","FenceSync","FenceSync","Finish","Finish","Flush","Flush","FlushMappedBufferRange","FlushMappedBufferRange","FlushMappedNamedBufferRange","FlushMappedNamedBufferRange","FnPtr","FramebufferParameteri","FramebufferParameteri","FramebufferRenderbuffer","FramebufferRenderbuffer","FramebufferTexture","FramebufferTexture","FramebufferTexture1D","FramebufferTexture1D","FramebufferTexture2D","FramebufferTexture2D","FramebufferTexture3D","FramebufferTexture3D","FramebufferTextureLayer","FramebufferTextureLayer","FrontFace","FrontFace","GEOMETRY_INPUT_TYPE","GEOMETRY_OUTPUT_TYPE","GEOMETRY_SHADER","GEOMETRY_SHADER_BIT","GEOMETRY_SHADER_INVOCATIONS","GEOMETRY_SUBROUTINE","GEOMETRY_SUBROUTINE_UNIFORM","GEOMETRY_TEXTURE","GEOMETRY_VERTICES_OUT","GEQUAL","GET_TEXTURE_IMAGE_FORMAT","GET_TEXTURE_IMAGE_TYPE","GREATER","GREEN","GREEN_INTEGER","GUILTY_CONTEXT_RESET","GenBuffers","GenBuffers","GenFramebuffers","GenFramebuffers","GenProgramPipelines","GenProgramPipelines","GenQueries","GenQueries","GenRenderbuffers","GenRenderbuffers","GenSamplers","GenSamplers","GenTextures","GenTextures","GenTransformFeedbacks","GenTransformFeedbacks","GenVertexArrays","GenVertexArrays","GenerateMipmap","GenerateMipmap","GenerateTextureMipmap","GenerateTextureMipmap","GetActiveAtomicCounterBufferiv","GetActiveAtomicCounterBufferiv","GetActiveAttrib","GetActiveAttrib","GetActiveSubroutineName","GetActiveSubroutineName","GetActiveSubroutineUniformName","GetActiveSubroutineUniformName","GetActiveSubroutineUniformiv","GetActiveSubroutineUniformiv","GetActiveUniform","GetActiveUniform","GetActiveUniformBlockName","GetActiveUniformBlockName","GetActiveUniformBlockiv","GetActiveUniformBlockiv","GetActiveUniformName","GetActiveUniformName","GetActiveUniformsiv","GetActiveUniformsiv","GetAttachedShaders","GetAttachedShaders","GetAttribLocation","GetAttribLocation","GetBooleani_v","GetBooleani_v","GetBooleanv","GetBooleanv","GetBufferParameteri64v","GetBufferParameteri64v","GetBufferParameteriv","GetBufferParameteriv","GetBufferPointerv","GetBufferPointerv","GetBufferSubData","GetBufferSubData","GetCompressedTexImage","GetCompressedTexImage","GetCompressedTextureImage","GetCompressedTextureImage","GetCompressedTextureSubImage","GetCompressedTextureSubImage","GetDebugMessageLog","GetDebugMessageLog","GetDoublei_v","GetDoublei_v","GetDoublev","GetDoublev","GetError","GetError","GetFloati_v","GetFloati_v","GetFloatv","GetFloatv","GetFragDataIndex","GetFragDataIndex","GetFragDataLocation","GetFragDataLocation","GetFramebufferAttachmentParameteriv","GetFramebufferAttachmentParameteriv","GetFramebufferParameteriv","GetFramebufferParameteriv","GetGraphicsResetStatus","GetGraphicsResetStatus","GetInteger64i_v","GetInteger64i_v","GetInteger64v","GetInteger64v","GetIntegeri_v","GetIntegeri_v","GetIntegerv","GetIntegerv","GetInternalformati64v","GetInternalformati64v","GetInternalformativ","GetInternalformativ","GetMultisamplefv","GetMultisamplefv","GetNamedBufferParameteri64v","GetNamedBufferParameteri64v","GetNamedBufferParameteriv","GetNamedBufferParameteriv","GetNamedBufferPointerv","GetNamedBufferPointerv","GetNamedBufferSubData","GetNamedBufferSubData","GetNamedFramebufferAttachmentParameteriv","GetNamedFramebufferAttachmentParameteriv","GetNamedFramebufferParameteriv","GetNamedFramebufferParameteriv","GetNamedRenderbufferParameteriv","GetNamedRenderbufferParameteriv","GetObjectLabel","GetObjectLabel","GetObjectPtrLabel","GetObjectPtrLabel","GetPointerv","GetPointerv","GetProgramBinary","GetProgramBinary","GetProgramInfoLog","GetProgramInfoLog","GetProgramInterfaceiv","GetProgramInterfaceiv","GetProgramPipelineInfoLog","GetProgramPipelineInfoLog","GetProgramPipelineiv","GetProgramPipelineiv","GetProgramResourceIndex","GetProgramResourceIndex","GetProgramResourceLocation","GetProgramResourceLocation","GetProgramResourceLocationIndex","GetProgramResourceLocationIndex","GetProgramResourceName","GetProgramResourceName","GetProgramResourceiv","GetProgramResourceiv","GetProgramStageiv","GetProgramStageiv","GetProgramiv","GetProgramiv","GetQueryBufferObjecti64v","GetQueryBufferObjecti64v","GetQueryBufferObjectiv","GetQueryBufferObjectiv","GetQueryBufferObjectui64v","GetQueryBufferObjectui64v","GetQueryBufferObjectuiv","GetQueryBufferObjectuiv","GetQueryIndexediv","GetQueryIndexediv","GetQueryObjecti64v","GetQueryObjecti64v","GetQueryObjectiv","GetQueryObjectiv","GetQueryObjectui64v","GetQueryObjectui64v","GetQueryObjectuiv","GetQueryObjectuiv","GetQueryiv","GetQueryiv","GetRenderbufferParameteriv","GetRenderbufferParameteriv","GetSamplerParameterIiv","GetSamplerParameterIiv","GetSamplerParameterIuiv","GetSamplerParameterIuiv","GetSamplerParameterfv","GetSamplerParameterfv","GetSamplerParameteriv","GetSamplerParameteriv","GetShaderInfoLog","GetShaderInfoLog","GetShaderPrecisionFormat","GetShaderPrecisionFormat","GetShaderSource","GetShaderSource","GetShaderiv","GetShaderiv","GetString","GetString","GetStringi","GetStringi","GetSubroutineIndex","GetSubroutineIndex","GetSubroutineUniformLocation","GetSubroutineUniformLocation","GetSynciv","GetSynciv","GetTexImage","GetTexImage","GetTexLevelParameterfv","GetTexLevelParameterfv","GetTexLevelParameteriv","GetTexLevelParameteriv","GetTexParameterIiv","GetTexParameterIiv","GetTexParameterIuiv","GetTexParameterIuiv","GetTexParameterfv","GetTexParameterfv","GetTexParameteriv","GetTexParameteriv","GetTextureImage","GetTextureImage","GetTextureLevelParameterfv","GetTextureLevelParameterfv","GetTextureLevelParameteriv","GetTextureLevelParameteriv","GetTextureParameterIiv","GetTextureParameterIiv","GetTextureParameterIuiv","GetTextureParameterIuiv","GetTextureParameterfv","GetTextureParameterfv","GetTextureParameteriv","GetTextureParameteriv","GetTextureSubImage","GetTextureSubImage","GetTransformFeedbackVarying","GetTransformFeedbackVarying","GetTransformFeedbacki64_v","GetTransformFeedbacki64_v","GetTransformFeedbacki_v","GetTransformFeedbacki_v","GetTransformFeedbackiv","GetTransformFeedbackiv","GetUniformBlockIndex","GetUniformBlockIndex","GetUniformIndices","GetUniformIndices","GetUniformLocation","GetUniformLocation","GetUniformSubroutineuiv","GetUniformSubroutineuiv","GetUniformdv","GetUniformdv","GetUniformfv","GetUniformfv","GetUniformiv","GetUniformiv","GetUniformuiv","GetUniformuiv","GetVertexArrayIndexed64iv","GetVertexArrayIndexed64iv","GetVertexArrayIndexediv","GetVertexArrayIndexediv","GetVertexArrayiv","GetVertexArrayiv","GetVertexAttribIiv","GetVertexAttribIiv","GetVertexAttribIuiv","GetVertexAttribIuiv","GetVertexAttribLdv","GetVertexAttribLdv","GetVertexAttribPointerv","GetVertexAttribPointerv","GetVertexAttribdv","GetVertexAttribdv","GetVertexAttribfv","GetVertexAttribfv","GetVertexAttribiv","GetVertexAttribiv","GetnColorTable","GetnColorTable","GetnCompressedTexImage","GetnCompressedTexImage","GetnConvolutionFilter","GetnConvolutionFilter","GetnHistogram","GetnHistogram","GetnMapdv","GetnMapdv","GetnMapfv","GetnMapfv","GetnMapiv","GetnMapiv","GetnMinmax","GetnMinmax","GetnPixelMapfv","GetnPixelMapfv","GetnPixelMapuiv","GetnPixelMapuiv","GetnPixelMapusv","GetnPixelMapusv","GetnPolygonStipple","GetnPolygonStipple","GetnSeparableFilter","GetnSeparableFilter","GetnTexImage","GetnTexImage","GetnUniformdv","GetnUniformdv","GetnUniformfv","GetnUniformfv","GetnUniformiv","GetnUniformiv","GetnUniformuiv","GetnUniformuiv","HALF_FLOAT","HIGH_FLOAT","HIGH_INT","Hint","Hint","IMAGE_1D","IMAGE_1D_ARRAY","IMAGE_2D","IMAGE_2D_ARRAY","IMAGE_2D_MULTISAMPLE","IMAGE_2D_MULTISAMPLE_ARRAY","IMAGE_2D_RECT","IMAGE_3D","IMAGE_BINDING_ACCESS","IMAGE_BINDING_FORMAT","IMAGE_BINDING_LAYER","IMAGE_BINDING_LAYERED","IMAGE_BINDING_LEVEL","IMAGE_BINDING_NAME","IMAGE_BUFFER","IMAGE_CLASS_10_10_10_2","IMAGE_CLASS_11_11_10","IMAGE_CLASS_1_X_16","IMAGE_CLASS_1_X_32","IMAGE_CLASS_1_X_8","IMAGE_CLASS_2_X_16","IMAGE_CLASS_2_X_32","IMAGE_CLASS_2_X_8","IMAGE_CLASS_4_X_16","IMAGE_CLASS_4_X_32","IMAGE_CLASS_4_X_8","IMAGE_COMPATIBILITY_CLASS","IMAGE_CUBE","IMAGE_CUBE_MAP_ARRAY","IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","IMAGE_FORMAT_COMPATIBILITY_TYPE","IMAGE_PIXEL_FORMAT","IMAGE_PIXEL_TYPE","IMAGE_TEXEL_SIZE","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","INCR","INCR_WRAP","INFO_LOG_LENGTH","INNOCENT_CONTEXT_RESET","INT","INTERLEAVED_ATTRIBS","INTERNALFORMAT_ALPHA_SIZE","INTERNALFORMAT_ALPHA_TYPE","INTERNALFORMAT_BLUE_SIZE","INTERNALFORMAT_BLUE_TYPE","INTERNALFORMAT_DEPTH_SIZE","INTERNALFORMAT_DEPTH_TYPE","INTERNALFORMAT_GREEN_SIZE","INTERNALFORMAT_GREEN_TYPE","INTERNALFORMAT_PREFERRED","INTERNALFORMAT_RED_SIZE","INTERNALFORMAT_RED_TYPE","INTERNALFORMAT_SHARED_SIZE","INTERNALFORMAT_STENCIL_SIZE","INTERNALFORMAT_STENCIL_TYPE","INTERNALFORMAT_SUPPORTED","INT_2_10_10_10_REV","INT_IMAGE_1D","INT_IMAGE_1D_ARRAY","INT_IMAGE_2D","INT_IMAGE_2D_ARRAY","INT_IMAGE_2D_MULTISAMPLE","INT_IMAGE_2D_MULTISAMPLE_ARRAY","INT_IMAGE_2D_RECT","INT_IMAGE_3D","INT_IMAGE_BUFFER","INT_IMAGE_CUBE","INT_IMAGE_CUBE_MAP_ARRAY","INT_SAMPLER_1D","INT_SAMPLER_1D_ARRAY","INT_SAMPLER_2D","INT_SAMPLER_2D_ARRAY","INT_SAMPLER_2D_MULTISAMPLE","INT_SAMPLER_2D_MULTISAMPLE_ARRAY","INT_SAMPLER_2D_RECT","INT_SAMPLER_3D","INT_SAMPLER_BUFFER","INT_SAMPLER_CUBE","INT_SAMPLER_CUBE_MAP_ARRAY","INT_VEC2","INT_VEC3","INT_VEC4","INVALID_ENUM","INVALID_FRAMEBUFFER_OPERATION","INVALID_INDEX","INVALID_OPERATION","INVALID_VALUE","INVERT","ISOLINES","IS_PER_PATCH","IS_ROW_MAJOR","InvalidateBufferData","InvalidateBufferData","InvalidateBufferSubData","InvalidateBufferSubData","InvalidateFramebuffer","InvalidateFramebuffer","InvalidateNamedFramebufferData","InvalidateNamedFramebufferData","InvalidateNamedFramebufferSubData","InvalidateNamedFramebufferSubData","InvalidateSubFramebuffer","InvalidateSubFramebuffer","InvalidateTexImage","InvalidateTexImage","InvalidateTexSubImage","InvalidateTexSubImage","IsBuffer","IsBuffer","IsEnabled","IsEnabled","IsEnabledi","IsEnabledi","IsFramebuffer","IsFramebuffer","IsProgram","IsProgram","IsProgramPipeline","IsProgramPipeline","IsQuery","IsQuery","IsRenderbuffer","IsRenderbuffer","IsSampler","IsSampler","IsShader","IsShader","IsSync","IsSync","IsTexture","IsTexture","IsTransformFeedback","IsTransformFeedback","IsVertexArray","IsVertexArray","KEEP","LAST_VERTEX_CONVENTION","LAYER_PROVOKING_VERTEX","LEFT","LEQUAL","LESS","LINE","LINEAR","LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINES","LINES_ADJACENCY","LINE_LOOP","LINE_SMOOTH","LINE_SMOOTH_HINT","LINE_STRIP","LINE_STRIP_ADJACENCY","LINE_WIDTH","LINE_WIDTH_GRANULARITY","LINE_WIDTH_RANGE","LINK_STATUS","LOCATION","LOCATION_COMPONENT","LOCATION_INDEX","LOGIC_OP_MODE","LOSE_CONTEXT_ON_RESET","LOWER_LEFT","LOW_FLOAT","LOW_INT","LineWidth","LineWidth","LinkProgram","LinkProgram","LogicOp","LogicOp","MAJOR_VERSION","MANUAL_GENERATE_MIPMAP","MAP_COHERENT_BIT","MAP_FLUSH_EXPLICIT_BIT","MAP_INVALIDATE_BUFFER_BIT","MAP_INVALIDATE_RANGE_BIT","MAP_PERSISTENT_BIT","MAP_READ_BIT","MAP_UNSYNCHRONIZED_BIT","MAP_WRITE_BIT","MATRIX_STRIDE","MAX","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","MAX_ATOMIC_COUNTER_BUFFER_SIZE","MAX_CLIP_DISTANCES","MAX_COLOR_ATTACHMENTS","MAX_COLOR_TEXTURE_SAMPLES","MAX_COMBINED_ATOMIC_COUNTERS","MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","MAX_COMBINED_CLIP_AND_CULL_DISTANCES","MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","MAX_COMBINED_DIMENSIONS","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","MAX_COMBINED_IMAGE_UNIFORMS","MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","MAX_COMBINED_SHADER_OUTPUT_RESOURCES","MAX_COMBINED_SHADER_STORAGE_BLOCKS","MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_COMPUTE_ATOMIC_COUNTERS","MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","MAX_COMPUTE_IMAGE_UNIFORMS","MAX_COMPUTE_SHADER_STORAGE_BLOCKS","MAX_COMPUTE_SHARED_MEMORY_SIZE","MAX_COMPUTE_TEXTURE_IMAGE_UNITS","MAX_COMPUTE_UNIFORM_BLOCKS","MAX_COMPUTE_UNIFORM_COMPONENTS","MAX_COMPUTE_WORK_GROUP_COUNT","MAX_COMPUTE_WORK_GROUP_INVOCATIONS","MAX_COMPUTE_WORK_GROUP_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_CULL_DISTANCES","MAX_DEBUG_GROUP_STACK_DEPTH","MAX_DEBUG_LOGGED_MESSAGES","MAX_DEBUG_MESSAGE_LENGTH","MAX_DEPTH","MAX_DEPTH_TEXTURE_SAMPLES","MAX_DRAW_BUFFERS","MAX_DUAL_SOURCE_DRAW_BUFFERS","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_ELEMENT_INDEX","MAX_FRAGMENT_ATOMIC_COUNTERS","MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","MAX_FRAGMENT_IMAGE_UNIFORMS","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_INTERPOLATION_OFFSET","MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_FRAMEBUFFER_HEIGHT","MAX_FRAMEBUFFER_LAYERS","MAX_FRAMEBUFFER_SAMPLES","MAX_FRAMEBUFFER_WIDTH","MAX_GEOMETRY_ATOMIC_COUNTERS","MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","MAX_GEOMETRY_IMAGE_UNIFORMS","MAX_GEOMETRY_INPUT_COMPONENTS","MAX_GEOMETRY_OUTPUT_COMPONENTS","MAX_GEOMETRY_OUTPUT_VERTICES","MAX_GEOMETRY_SHADER_INVOCATIONS","MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","MAX_GEOMETRY_UNIFORM_BLOCKS","MAX_GEOMETRY_UNIFORM_COMPONENTS","MAX_HEIGHT","MAX_IMAGE_SAMPLES","MAX_IMAGE_UNITS","MAX_INTEGER_SAMPLES","MAX_LABEL_LENGTH","MAX_LAYERS","MAX_NAME_LENGTH","MAX_NUM_ACTIVE_VARIABLES","MAX_NUM_COMPATIBLE_SUBROUTINES","MAX_PATCH_VERTICES","MAX_PROGRAM_TEXEL_OFFSET","MAX_PROGRAM_TEXTURE_GATHER_OFFSET","MAX_RECTANGLE_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_SAMPLES","MAX_SAMPLE_MASK_WORDS","MAX_SERVER_WAIT_TIMEOUT","MAX_SHADER_STORAGE_BLOCK_SIZE","MAX_SHADER_STORAGE_BUFFER_BINDINGS","MAX_SUBROUTINES","MAX_SUBROUTINE_UNIFORM_LOCATIONS","MAX_TESS_CONTROL_ATOMIC_COUNTERS","MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","MAX_TESS_CONTROL_IMAGE_UNIFORMS","MAX_TESS_CONTROL_INPUT_COMPONENTS","MAX_TESS_CONTROL_OUTPUT_COMPONENTS","MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","MAX_TESS_CONTROL_UNIFORM_BLOCKS","MAX_TESS_CONTROL_UNIFORM_COMPONENTS","MAX_TESS_EVALUATION_ATOMIC_COUNTERS","MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","MAX_TESS_EVALUATION_IMAGE_UNIFORMS","MAX_TESS_EVALUATION_INPUT_COMPONENTS","MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","MAX_TESS_EVALUATION_UNIFORM_BLOCKS","MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","MAX_TESS_GEN_LEVEL","MAX_TESS_PATCH_COMPONENTS","MAX_TEXTURE_BUFFER_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_LOD_BIAS","MAX_TEXTURE_SIZE","MAX_TRANSFORM_FEEDBACK_BUFFERS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_UNIFORM_LOCATIONS","MAX_VARYING_COMPONENTS","MAX_VARYING_FLOATS","MAX_VARYING_VECTORS","MAX_VERTEX_ATOMIC_COUNTERS","MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_ATTRIB_BINDINGS","MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","MAX_VERTEX_ATTRIB_STRIDE","MAX_VERTEX_IMAGE_UNIFORMS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_SHADER_STORAGE_BLOCKS","MAX_VERTEX_STREAMS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VIEWPORTS","MAX_VIEWPORT_DIMS","MAX_WIDTH","MEDIUM_FLOAT","MEDIUM_INT","MIN","MINOR_VERSION","MIN_FRAGMENT_INTERPOLATION_OFFSET","MIN_MAP_BUFFER_ALIGNMENT","MIN_PROGRAM_TEXEL_OFFSET","MIN_PROGRAM_TEXTURE_GATHER_OFFSET","MIN_SAMPLE_SHADING_VALUE","MIPMAP","MIRRORED_REPEAT","MIRROR_CLAMP_TO_EDGE","MULTISAMPLE","MapBuffer","MapBuffer","MapBufferRange","MapBufferRange","MapNamedBuffer","MapNamedBuffer","MapNamedBufferRange","MapNamedBufferRange","MemoryBarrier","MemoryBarrier","MemoryBarrierByRegion","MemoryBarrierByRegion","MinSampleShading","MinSampleShading","MultiDrawArrays","MultiDrawArrays","MultiDrawArraysIndirect","MultiDrawArraysIndirect","MultiDrawElements","MultiDrawElements","MultiDrawElementsBaseVertex","MultiDrawElementsBaseVertex","MultiDrawElementsIndirect","MultiDrawElementsIndirect","MultiTexCoordP1ui","MultiTexCoordP1ui","MultiTexCoordP1uiv","MultiTexCoordP1uiv","MultiTexCoordP2ui","MultiTexCoordP2ui","MultiTexCoordP2uiv","MultiTexCoordP2uiv","MultiTexCoordP3ui","MultiTexCoordP3ui","MultiTexCoordP3uiv","MultiTexCoordP3uiv","MultiTexCoordP4ui","MultiTexCoordP4ui","MultiTexCoordP4uiv","MultiTexCoordP4uiv","NAME_LENGTH","NAND","NEAREST","NEAREST_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","NEGATIVE_ONE_TO_ONE","NEVER","NICEST","NONE","NOOP","NOR","NOTEQUAL","NO_ERROR","NO_RESET_NOTIFICATION","NUM_ACTIVE_VARIABLES","NUM_COMPATIBLE_SUBROUTINES","NUM_COMPRESSED_TEXTURE_FORMATS","NUM_EXTENSIONS","NUM_PROGRAM_BINARY_FORMATS","NUM_SAMPLE_COUNTS","NUM_SHADER_BINARY_FORMATS","NUM_SHADING_LANGUAGE_VERSIONS","NamedBufferData","NamedBufferData","NamedBufferStorage","NamedBufferStorage","NamedBufferSubData","NamedBufferSubData","NamedFramebufferDrawBuffer","NamedFramebufferDrawBuffer","NamedFramebufferDrawBuffers","NamedFramebufferDrawBuffers","NamedFramebufferParameteri","NamedFramebufferParameteri","NamedFramebufferReadBuffer","NamedFramebufferReadBuffer","NamedFramebufferRenderbuffer","NamedFramebufferRenderbuffer","NamedFramebufferTexture","NamedFramebufferTexture","NamedFramebufferTextureLayer","NamedFramebufferTextureLayer","NamedRenderbufferStorage","NamedRenderbufferStorage","NamedRenderbufferStorageMultisample","NamedRenderbufferStorageMultisample","NormalP3ui","NormalP3ui","NormalP3uiv","NormalP3uiv","OBJECT_TYPE","OFFSET","ONE","ONE_MINUS_CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_SRC1_ALPHA","ONE_MINUS_SRC1_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_SRC_COLOR","OR","OR_INVERTED","OR_REVERSE","OUT_OF_MEMORY","ObjectLabel","ObjectLabel","ObjectPtrLabel","ObjectPtrLabel","PACK_ALIGNMENT","PACK_COMPRESSED_BLOCK_DEPTH","PACK_COMPRESSED_BLOCK_HEIGHT","PACK_COMPRESSED_BLOCK_SIZE","PACK_COMPRESSED_BLOCK_WIDTH","PACK_IMAGE_HEIGHT","PACK_LSB_FIRST","PACK_ROW_LENGTH","PACK_SKIP_IMAGES","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","PACK_SWAP_BYTES","PATCHES","PATCH_DEFAULT_INNER_LEVEL","PATCH_DEFAULT_OUTER_LEVEL","PATCH_VERTICES","PIXEL_BUFFER_BARRIER_BIT","PIXEL_PACK_BUFFER","PIXEL_PACK_BUFFER_BINDING","PIXEL_UNPACK_BUFFER","PIXEL_UNPACK_BUFFER_BINDING","POINT","POINTS","POINT_FADE_THRESHOLD_SIZE","POINT_SIZE","POINT_SIZE_GRANULARITY","POINT_SIZE_RANGE","POINT_SPRITE_COORD_ORIGIN","POLYGON_MODE","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_FILL","POLYGON_OFFSET_LINE","POLYGON_OFFSET_POINT","POLYGON_OFFSET_UNITS","POLYGON_SMOOTH","POLYGON_SMOOTH_HINT","PRIMITIVES_GENERATED","PRIMITIVE_RESTART","PRIMITIVE_RESTART_FIXED_INDEX","PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","PRIMITIVE_RESTART_INDEX","PROGRAM","PROGRAM_BINARY_FORMATS","PROGRAM_BINARY_LENGTH","PROGRAM_BINARY_RETRIEVABLE_HINT","PROGRAM_INPUT","PROGRAM_OUTPUT","PROGRAM_PIPELINE","PROGRAM_PIPELINE_BINDING","PROGRAM_POINT_SIZE","PROGRAM_SEPARABLE","PROVOKING_VERTEX","PROXY_TEXTURE_1D","PROXY_TEXTURE_1D_ARRAY","PROXY_TEXTURE_2D","PROXY_TEXTURE_2D_ARRAY","PROXY_TEXTURE_2D_MULTISAMPLE","PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","PROXY_TEXTURE_3D","PROXY_TEXTURE_CUBE_MAP","PROXY_TEXTURE_CUBE_MAP_ARRAY","PROXY_TEXTURE_RECTANGLE","PatchParameterfv","PatchParameterfv","PatchParameteri","PatchParameteri","PauseTransformFeedback","PauseTransformFeedback","PixelStoref","PixelStoref","PixelStorei","PixelStorei","PointParameterf","PointParameterf","PointParameterfv","PointParameterfv","PointParameteri","PointParameteri","PointParameteriv","PointParameteriv","PointSize","PointSize","PolygonMode","PolygonMode","PolygonOffset","PolygonOffset","PopDebugGroup","PopDebugGroup","PrimitiveRestartIndex","PrimitiveRestartIndex","ProgramBinary","ProgramBinary","ProgramParameteri","ProgramParameteri","ProgramUniform1d","ProgramUniform1d","ProgramUniform1dv","ProgramUniform1dv","ProgramUniform1f","ProgramUniform1f","ProgramUniform1fv","ProgramUniform1fv","ProgramUniform1i","ProgramUniform1i","ProgramUniform1iv","ProgramUniform1iv","ProgramUniform1ui","ProgramUniform1ui","ProgramUniform1uiv","ProgramUniform1uiv","ProgramUniform2d","ProgramUniform2d","ProgramUniform2dv","ProgramUniform2dv","ProgramUniform2f","ProgramUniform2f","ProgramUniform2fv","ProgramUniform2fv","ProgramUniform2i","ProgramUniform2i","ProgramUniform2iv","ProgramUniform2iv","ProgramUniform2ui","ProgramUniform2ui","ProgramUniform2uiv","ProgramUniform2uiv","ProgramUniform3d","ProgramUniform3d","ProgramUniform3dv","ProgramUniform3dv","ProgramUniform3f","ProgramUniform3f","ProgramUniform3fv","ProgramUniform3fv","ProgramUniform3i","ProgramUniform3i","ProgramUniform3iv","ProgramUniform3iv","ProgramUniform3ui","ProgramUniform3ui","ProgramUniform3uiv","ProgramUniform3uiv","ProgramUniform4d","ProgramUniform4d","ProgramUniform4dv","ProgramUniform4dv","ProgramUniform4f","ProgramUniform4f","ProgramUniform4fv","ProgramUniform4fv","ProgramUniform4i","ProgramUniform4i","ProgramUniform4iv","ProgramUniform4iv","ProgramUniform4ui","ProgramUniform4ui","ProgramUniform4uiv","ProgramUniform4uiv","ProgramUniformMatrix2dv","ProgramUniformMatrix2dv","ProgramUniformMatrix2fv","ProgramUniformMatrix2fv","ProgramUniformMatrix2x3dv","ProgramUniformMatrix2x3dv","ProgramUniformMatrix2x3fv","ProgramUniformMatrix2x3fv","ProgramUniformMatrix2x4dv","ProgramUniformMatrix2x4dv","ProgramUniformMatrix2x4fv","ProgramUniformMatrix2x4fv","ProgramUniformMatrix3dv","ProgramUniformMatrix3dv","ProgramUniformMatrix3fv","ProgramUniformMatrix3fv","ProgramUniformMatrix3x2dv","ProgramUniformMatrix3x2dv","ProgramUniformMatrix3x2fv","ProgramUniformMatrix3x2fv","ProgramUniformMatrix3x4dv","ProgramUniformMatrix3x4dv","ProgramUniformMatrix3x4fv","ProgramUniformMatrix3x4fv","ProgramUniformMatrix4dv","ProgramUniformMatrix4dv","ProgramUniformMatrix4fv","ProgramUniformMatrix4fv","ProgramUniformMatrix4x2dv","ProgramUniformMatrix4x2dv","ProgramUniformMatrix4x2fv","ProgramUniformMatrix4x2fv","ProgramUniformMatrix4x3dv","ProgramUniformMatrix4x3dv","ProgramUniformMatrix4x3fv","ProgramUniformMatrix4x3fv","ProvokingVertex","ProvokingVertex","PushDebugGroup","PushDebugGroup","QUADS","QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","QUERY","QUERY_BUFFER","QUERY_BUFFER_BARRIER_BIT","QUERY_BUFFER_BINDING","QUERY_BY_REGION_NO_WAIT","QUERY_BY_REGION_NO_WAIT_INVERTED","QUERY_BY_REGION_WAIT","QUERY_BY_REGION_WAIT_INVERTED","QUERY_COUNTER_BITS","QUERY_NO_WAIT","QUERY_NO_WAIT_INVERTED","QUERY_RESULT","QUERY_RESULT_AVAILABLE","QUERY_RESULT_NO_WAIT","QUERY_TARGET","QUERY_WAIT","QUERY_WAIT_INVERTED","QueryCounter","QueryCounter","R11F_G11F_B10F","R16","R16F","R16I","R16UI","R16_SNORM","R32F","R32I","R32UI","R3_G3_B2","R8","R8I","R8UI","R8_SNORM","RASTERIZER_DISCARD","READ_BUFFER","READ_FRAMEBUFFER","READ_FRAMEBUFFER_BINDING","READ_ONLY","READ_PIXELS","READ_PIXELS_FORMAT","READ_PIXELS_TYPE","READ_WRITE","RED","RED_INTEGER","REFERENCED_BY_COMPUTE_SHADER","REFERENCED_BY_FRAGMENT_SHADER","REFERENCED_BY_GEOMETRY_SHADER","REFERENCED_BY_TESS_CONTROL_SHADER","REFERENCED_BY_TESS_EVALUATION_SHADER","REFERENCED_BY_VERTEX_SHADER","RENDERBUFFER","RENDERBUFFER_ALPHA_SIZE","RENDERBUFFER_BINDING","RENDERBUFFER_BLUE_SIZE","RENDERBUFFER_DEPTH_SIZE","RENDERBUFFER_GREEN_SIZE","RENDERBUFFER_HEIGHT","RENDERBUFFER_INTERNAL_FORMAT","RENDERBUFFER_RED_SIZE","RENDERBUFFER_SAMPLES","RENDERBUFFER_STENCIL_SIZE","RENDERBUFFER_WIDTH","RENDERER","REPEAT","REPLACE","RESET_NOTIFICATION_STRATEGY","RG","RG16","RG16F","RG16I","RG16UI","RG16_SNORM","RG32F","RG32I","RG32UI","RG8","RG8I","RG8UI","RG8_SNORM","RGB","RGB10","RGB10_A2","RGB10_A2UI","RGB12","RGB16","RGB16F","RGB16I","RGB16UI","RGB16_SNORM","RGB32F","RGB32I","RGB32UI","RGB4","RGB5","RGB565","RGB5_A1","RGB8","RGB8I","RGB8UI","RGB8_SNORM","RGB9_E5","RGBA","RGBA12","RGBA16","RGBA16F","RGBA16I","RGBA16UI","RGBA16_SNORM","RGBA2","RGBA32F","RGBA32I","RGBA32UI","RGBA4","RGBA8","RGBA8I","RGBA8UI","RGBA8_SNORM","RGBA_INTEGER","RGB_INTEGER","RG_INTEGER","RIGHT","ReadBuffer","ReadBuffer","ReadPixels","ReadPixels","ReadnPixels","ReadnPixels","ReleaseShaderCompiler","ReleaseShaderCompiler","RenderbufferStorage","RenderbufferStorage","RenderbufferStorageMultisample","RenderbufferStorageMultisample","ResumeTransformFeedback","ResumeTransformFeedback","SAMPLER","SAMPLER_1D","SAMPLER_1D_ARRAY","SAMPLER_1D_ARRAY_SHADOW","SAMPLER_1D_SHADOW","SAMPLER_2D","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_2D_MULTISAMPLE","SAMPLER_2D_MULTISAMPLE_ARRAY","SAMPLER_2D_RECT","SAMPLER_2D_RECT_SHADOW","SAMPLER_2D_SHADOW","SAMPLER_3D","SAMPLER_BINDING","SAMPLER_BUFFER","SAMPLER_CUBE","SAMPLER_CUBE_MAP_ARRAY","SAMPLER_CUBE_MAP_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","SAMPLES","SAMPLES_PASSED","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_ALPHA_TO_ONE","SAMPLE_BUFFERS","SAMPLE_COVERAGE","SAMPLE_COVERAGE_INVERT","SAMPLE_COVERAGE_VALUE","SAMPLE_MASK","SAMPLE_MASK_VALUE","SAMPLE_POSITION","SAMPLE_SHADING","SCISSOR_BOX","SCISSOR_TEST","SEPARATE_ATTRIBS","SET","SHADER","SHADER_BINARY_FORMATS","SHADER_COMPILER","SHADER_IMAGE_ACCESS_BARRIER_BIT","SHADER_IMAGE_ATOMIC","SHADER_IMAGE_LOAD","SHADER_IMAGE_STORE","SHADER_SOURCE_LENGTH","SHADER_STORAGE_BARRIER_BIT","SHADER_STORAGE_BLOCK","SHADER_STORAGE_BUFFER","SHADER_STORAGE_BUFFER_BINDING","SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","SHADER_STORAGE_BUFFER_SIZE","SHADER_STORAGE_BUFFER_START","SHADER_TYPE","SHADING_LANGUAGE_VERSION","SHORT","SIGNALED","SIGNED_NORMALIZED","SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","SMOOTH_LINE_WIDTH_GRANULARITY","SMOOTH_LINE_WIDTH_RANGE","SMOOTH_POINT_SIZE_GRANULARITY","SMOOTH_POINT_SIZE_RANGE","SRC1_ALPHA","SRC1_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","SRC_COLOR","SRGB","SRGB8","SRGB8_ALPHA8","SRGB_ALPHA","SRGB_READ","SRGB_WRITE","STACK_OVERFLOW","STACK_UNDERFLOW","STATIC_COPY","STATIC_DRAW","STATIC_READ","STENCIL","STENCIL_ATTACHMENT","STENCIL_BACK_FAIL","STENCIL_BACK_FUNC","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_BACK_WRITEMASK","STENCIL_BUFFER_BIT","STENCIL_CLEAR_VALUE","STENCIL_COMPONENTS","STENCIL_FAIL","STENCIL_FUNC","STENCIL_INDEX","STENCIL_INDEX1","STENCIL_INDEX16","STENCIL_INDEX4","STENCIL_INDEX8","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_REF","STENCIL_RENDERABLE","STENCIL_TEST","STENCIL_VALUE_MASK","STENCIL_WRITEMASK","STEREO","STREAM_COPY","STREAM_DRAW","STREAM_READ","SUBPIXEL_BITS","SYNC_CONDITION","SYNC_FENCE","SYNC_FLAGS","SYNC_FLUSH_COMMANDS_BIT","SYNC_GPU_COMMANDS_COMPLETE","SYNC_STATUS","SampleCoverage","SampleCoverage","SampleMaski","SampleMaski","SamplerParameterIiv","SamplerParameterIiv","SamplerParameterIuiv","SamplerParameterIuiv","SamplerParameterf","SamplerParameterf","SamplerParameterfv","SamplerParameterfv","SamplerParameteri","SamplerParameteri","SamplerParameteriv","SamplerParameteriv","Scissor","Scissor","ScissorArrayv","ScissorArrayv","ScissorIndexed","ScissorIndexed","ScissorIndexedv","ScissorIndexedv","SecondaryColorP3ui","SecondaryColorP3ui","SecondaryColorP3uiv","SecondaryColorP3uiv","ShaderBinary","ShaderBinary","ShaderSource","ShaderSource","ShaderStorageBlockBinding","ShaderStorageBlockBinding","StencilFunc","StencilFunc","StencilFuncSeparate","StencilFuncSeparate","StencilMask","StencilMask","StencilMaskSeparate","StencilMaskSeparate","StencilOp","StencilOp","StencilOpSeparate","StencilOpSeparate","TESS_CONTROL_OUTPUT_VERTICES","TESS_CONTROL_SHADER","TESS_CONTROL_SHADER_BIT","TESS_CONTROL_SUBROUTINE","TESS_CONTROL_SUBROUTINE_UNIFORM","TESS_CONTROL_TEXTURE","TESS_EVALUATION_SHADER","TESS_EVALUATION_SHADER_BIT","TESS_EVALUATION_SUBROUTINE","TESS_EVALUATION_SUBROUTINE_UNIFORM","TESS_EVALUATION_TEXTURE","TESS_GEN_MODE","TESS_GEN_POINT_MODE","TESS_GEN_SPACING","TESS_GEN_VERTEX_ORDER","TEXTURE","TEXTURE0","TEXTURE1","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE2","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE3","TEXTURE30","TEXTURE31","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE_1D","TEXTURE_1D_ARRAY","TEXTURE_2D","TEXTURE_2D_ARRAY","TEXTURE_2D_MULTISAMPLE","TEXTURE_2D_MULTISAMPLE_ARRAY","TEXTURE_3D","TEXTURE_ALPHA_SIZE","TEXTURE_ALPHA_TYPE","TEXTURE_BASE_LEVEL","TEXTURE_BINDING_1D","TEXTURE_BINDING_1D_ARRAY","TEXTURE_BINDING_2D","TEXTURE_BINDING_2D_ARRAY","TEXTURE_BINDING_2D_MULTISAMPLE","TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","TEXTURE_BINDING_3D","TEXTURE_BINDING_BUFFER","TEXTURE_BINDING_CUBE_MAP","TEXTURE_BINDING_CUBE_MAP_ARRAY","TEXTURE_BINDING_RECTANGLE","TEXTURE_BLUE_SIZE","TEXTURE_BLUE_TYPE","TEXTURE_BORDER_COLOR","TEXTURE_BUFFER","TEXTURE_BUFFER_BINDING","TEXTURE_BUFFER_DATA_STORE_BINDING","TEXTURE_BUFFER_OFFSET","TEXTURE_BUFFER_OFFSET_ALIGNMENT","TEXTURE_BUFFER_SIZE","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","TEXTURE_COMPRESSED","TEXTURE_COMPRESSED_BLOCK_HEIGHT","TEXTURE_COMPRESSED_BLOCK_SIZE","TEXTURE_COMPRESSED_BLOCK_WIDTH","TEXTURE_COMPRESSED_IMAGE_SIZE","TEXTURE_COMPRESSION_HINT","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_ARRAY","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_SEAMLESS","TEXTURE_DEPTH","TEXTURE_DEPTH_SIZE","TEXTURE_DEPTH_TYPE","TEXTURE_FETCH_BARRIER_BIT","TEXTURE_FIXED_SAMPLE_LOCATIONS","TEXTURE_GATHER","TEXTURE_GATHER_SHADOW","TEXTURE_GREEN_SIZE","TEXTURE_GREEN_TYPE","TEXTURE_HEIGHT","TEXTURE_IMAGE_FORMAT","TEXTURE_IMAGE_TYPE","TEXTURE_IMMUTABLE_FORMAT","TEXTURE_IMMUTABLE_LEVELS","TEXTURE_INTERNAL_FORMAT","TEXTURE_LOD_BIAS","TEXTURE_MAG_FILTER","TEXTURE_MAX_LEVEL","TEXTURE_MAX_LOD","TEXTURE_MIN_FILTER","TEXTURE_MIN_LOD","TEXTURE_RECTANGLE","TEXTURE_RED_SIZE","TEXTURE_RED_TYPE","TEXTURE_SAMPLES","TEXTURE_SHADOW","TEXTURE_SHARED_SIZE","TEXTURE_STENCIL_SIZE","TEXTURE_SWIZZLE_A","TEXTURE_SWIZZLE_B","TEXTURE_SWIZZLE_G","TEXTURE_SWIZZLE_R","TEXTURE_SWIZZLE_RGBA","TEXTURE_TARGET","TEXTURE_UPDATE_BARRIER_BIT","TEXTURE_VIEW","TEXTURE_VIEW_MIN_LAYER","TEXTURE_VIEW_MIN_LEVEL","TEXTURE_VIEW_NUM_LAYERS","TEXTURE_VIEW_NUM_LEVELS","TEXTURE_WIDTH","TEXTURE_WRAP_R","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TIMEOUT_EXPIRED","TIMEOUT_IGNORED","TIMESTAMP","TIME_ELAPSED","TOP_LEVEL_ARRAY_SIZE","TOP_LEVEL_ARRAY_STRIDE","TRANSFORM_FEEDBACK","TRANSFORM_FEEDBACK_ACTIVE","TRANSFORM_FEEDBACK_BARRIER_BIT","TRANSFORM_FEEDBACK_BINDING","TRANSFORM_FEEDBACK_BUFFER","TRANSFORM_FEEDBACK_BUFFER_ACTIVE","TRANSFORM_FEEDBACK_BUFFER_BINDING","TRANSFORM_FEEDBACK_BUFFER_INDEX","TRANSFORM_FEEDBACK_BUFFER_MODE","TRANSFORM_FEEDBACK_BUFFER_PAUSED","TRANSFORM_FEEDBACK_BUFFER_SIZE","TRANSFORM_FEEDBACK_BUFFER_START","TRANSFORM_FEEDBACK_BUFFER_STRIDE","TRANSFORM_FEEDBACK_PAUSED","TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","TRANSFORM_FEEDBACK_VARYING","TRANSFORM_FEEDBACK_VARYINGS","TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","TRIANGLES","TRIANGLES_ADJACENCY","TRIANGLE_FAN","TRIANGLE_STRIP","TRIANGLE_STRIP_ADJACENCY","TRUE","TYPE","TexBuffer","TexBuffer","TexBufferRange","TexBufferRange","TexCoordP1ui","TexCoordP1ui","TexCoordP1uiv","TexCoordP1uiv","TexCoordP2ui","TexCoordP2ui","TexCoordP2uiv","TexCoordP2uiv","TexCoordP3ui","TexCoordP3ui","TexCoordP3uiv","TexCoordP3uiv","TexCoordP4ui","TexCoordP4ui","TexCoordP4uiv","TexCoordP4uiv","TexImage1D","TexImage1D","TexImage2D","TexImage2D","TexImage2DMultisample","TexImage2DMultisample","TexImage3D","TexImage3D","TexImage3DMultisample","TexImage3DMultisample","TexParameterIiv","TexParameterIiv","TexParameterIuiv","TexParameterIuiv","TexParameterf","TexParameterf","TexParameterfv","TexParameterfv","TexParameteri","TexParameteri","TexParameteriv","TexParameteriv","TexStorage1D","TexStorage1D","TexStorage2D","TexStorage2D","TexStorage2DMultisample","TexStorage2DMultisample","TexStorage3D","TexStorage3D","TexStorage3DMultisample","TexStorage3DMultisample","TexSubImage1D","TexSubImage1D","TexSubImage2D","TexSubImage2D","TexSubImage3D","TexSubImage3D","TextureBarrier","TextureBarrier","TextureBuffer","TextureBuffer","TextureBufferRange","TextureBufferRange","TextureParameterIiv","TextureParameterIiv","TextureParameterIuiv","TextureParameterIuiv","TextureParameterf","TextureParameterf","TextureParameterfv","TextureParameterfv","TextureParameteri","TextureParameteri","TextureParameteriv","TextureParameteriv","TextureStorage1D","TextureStorage1D","TextureStorage2D","TextureStorage2D","TextureStorage2DMultisample","TextureStorage2DMultisample","TextureStorage3D","TextureStorage3D","TextureStorage3DMultisample","TextureStorage3DMultisample","TextureSubImage1D","TextureSubImage1D","TextureSubImage2D","TextureSubImage2D","TextureSubImage3D","TextureSubImage3D","TextureView","TextureView","TransformFeedbackBufferBase","TransformFeedbackBufferBase","TransformFeedbackBufferRange","TransformFeedbackBufferRange","TransformFeedbackVaryings","TransformFeedbackVaryings","UNDEFINED_VERTEX","UNIFORM","UNIFORM_ARRAY_STRIDE","UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","UNIFORM_BARRIER_BIT","UNIFORM_BLOCK","UNIFORM_BLOCK_ACTIVE_UNIFORMS","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","UNIFORM_BLOCK_BINDING","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_INDEX","UNIFORM_BLOCK_NAME_LENGTH","UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BUFFER","UNIFORM_BUFFER_BINDING","UNIFORM_BUFFER_OFFSET_ALIGNMENT","UNIFORM_BUFFER_SIZE","UNIFORM_BUFFER_START","UNIFORM_IS_ROW_MAJOR","UNIFORM_MATRIX_STRIDE","UNIFORM_NAME_LENGTH","UNIFORM_OFFSET","UNIFORM_SIZE","UNIFORM_TYPE","UNKNOWN_CONTEXT_RESET","UNPACK_ALIGNMENT","UNPACK_COMPRESSED_BLOCK_DEPTH","UNPACK_COMPRESSED_BLOCK_HEIGHT","UNPACK_COMPRESSED_BLOCK_SIZE","UNPACK_COMPRESSED_BLOCK_WIDTH","UNPACK_IMAGE_HEIGHT","UNPACK_LSB_FIRST","UNPACK_ROW_LENGTH","UNPACK_SKIP_IMAGES","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SWAP_BYTES","UNSIGNALED","UNSIGNED_BYTE","UNSIGNED_BYTE_2_3_3_REV","UNSIGNED_BYTE_3_3_2","UNSIGNED_INT","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_10_10_10_2","UNSIGNED_INT_24_8","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_8_8_8_8","UNSIGNED_INT_8_8_8_8_REV","UNSIGNED_INT_ATOMIC_COUNTER","UNSIGNED_INT_IMAGE_1D","UNSIGNED_INT_IMAGE_1D_ARRAY","UNSIGNED_INT_IMAGE_2D","UNSIGNED_INT_IMAGE_2D_ARRAY","UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","UNSIGNED_INT_IMAGE_2D_RECT","UNSIGNED_INT_IMAGE_3D","UNSIGNED_INT_IMAGE_BUFFER","UNSIGNED_INT_IMAGE_CUBE","UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","UNSIGNED_INT_SAMPLER_1D","UNSIGNED_INT_SAMPLER_1D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","UNSIGNED_INT_SAMPLER_2D_RECT","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_BUFFER","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","UNSIGNED_NORMALIZED","UNSIGNED_SHORT","UNSIGNED_SHORT_1_5_5_5_REV","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_4_4_4_4_REV","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","UNSIGNED_SHORT_5_6_5_REV","UPPER_LEFT","Uniform1d","Uniform1d","Uniform1dv","Uniform1dv","Uniform1f","Uniform1f","Uniform1fv","Uniform1fv","Uniform1i","Uniform1i","Uniform1iv","Uniform1iv","Uniform1ui","Uniform1ui","Uniform1uiv","Uniform1uiv","Uniform2d","Uniform2d","Uniform2dv","Uniform2dv","Uniform2f","Uniform2f","Uniform2fv","Uniform2fv","Uniform2i","Uniform2i","Uniform2iv","Uniform2iv","Uniform2ui","Uniform2ui","Uniform2uiv","Uniform2uiv","Uniform3d","Uniform3d","Uniform3dv","Uniform3dv","Uniform3f","Uniform3f","Uniform3fv","Uniform3fv","Uniform3i","Uniform3i","Uniform3iv","Uniform3iv","Uniform3ui","Uniform3ui","Uniform3uiv","Uniform3uiv","Uniform4d","Uniform4d","Uniform4dv","Uniform4dv","Uniform4f","Uniform4f","Uniform4fv","Uniform4fv","Uniform4i","Uniform4i","Uniform4iv","Uniform4iv","Uniform4ui","Uniform4ui","Uniform4uiv","Uniform4uiv","UniformBlockBinding","UniformBlockBinding","UniformMatrix2dv","UniformMatrix2dv","UniformMatrix2fv","UniformMatrix2fv","UniformMatrix2x3dv","UniformMatrix2x3dv","UniformMatrix2x3fv","UniformMatrix2x3fv","UniformMatrix2x4dv","UniformMatrix2x4dv","UniformMatrix2x4fv","UniformMatrix2x4fv","UniformMatrix3dv","UniformMatrix3dv","UniformMatrix3fv","UniformMatrix3fv","UniformMatrix3x2dv","UniformMatrix3x2dv","UniformMatrix3x2fv","UniformMatrix3x2fv","UniformMatrix3x4dv","UniformMatrix3x4dv","UniformMatrix3x4fv","UniformMatrix3x4fv","UniformMatrix4dv","UniformMatrix4dv","UniformMatrix4fv","UniformMatrix4fv","UniformMatrix4x2dv","UniformMatrix4x2dv","UniformMatrix4x2fv","UniformMatrix4x2fv","UniformMatrix4x3dv","UniformMatrix4x3dv","UniformMatrix4x3fv","UniformMatrix4x3fv","UniformSubroutinesuiv","UniformSubroutinesuiv","UnmapBuffer","UnmapBuffer","UnmapNamedBuffer","UnmapNamedBuffer","UseProgram","UseProgram","UseProgramStages","UseProgramStages","VALIDATE_STATUS","VENDOR","VERSION","VERTEX_ARRAY","VERTEX_ARRAY_BINDING","VERTEX_ATTRIB_ARRAY_BARRIER_BIT","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","VERTEX_ATTRIB_ARRAY_DIVISOR","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_INTEGER","VERTEX_ATTRIB_ARRAY_LONG","VERTEX_ATTRIB_ARRAY_NORMALIZED","VERTEX_ATTRIB_ARRAY_POINTER","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_BINDING","VERTEX_ATTRIB_RELATIVE_OFFSET","VERTEX_BINDING_BUFFER","VERTEX_BINDING_DIVISOR","VERTEX_BINDING_OFFSET","VERTEX_BINDING_STRIDE","VERTEX_PROGRAM_POINT_SIZE","VERTEX_SHADER","VERTEX_SHADER_BIT","VERTEX_SUBROUTINE","VERTEX_SUBROUTINE_UNIFORM","VERTEX_TEXTURE","VIEWPORT","VIEWPORT_BOUNDS_RANGE","VIEWPORT_INDEX_PROVOKING_VERTEX","VIEWPORT_SUBPIXEL_BITS","VIEW_CLASS_128_BITS","VIEW_CLASS_16_BITS","VIEW_CLASS_24_BITS","VIEW_CLASS_32_BITS","VIEW_CLASS_48_BITS","VIEW_CLASS_64_BITS","VIEW_CLASS_8_BITS","VIEW_CLASS_96_BITS","VIEW_CLASS_BPTC_FLOAT","VIEW_CLASS_BPTC_UNORM","VIEW_CLASS_RGTC1_RED","VIEW_CLASS_RGTC2_RG","VIEW_CLASS_S3TC_DXT1_RGB","VIEW_CLASS_S3TC_DXT1_RGBA","VIEW_CLASS_S3TC_DXT3_RGBA","VIEW_CLASS_S3TC_DXT5_RGBA","VIEW_COMPATIBILITY_CLASS","ValidateProgram","ValidateProgram","ValidateProgramPipeline","ValidateProgramPipeline","VertexArrayAttribBinding","VertexArrayAttribBinding","VertexArrayAttribFormat","VertexArrayAttribFormat","VertexArrayAttribIFormat","VertexArrayAttribIFormat","VertexArrayAttribLFormat","VertexArrayAttribLFormat","VertexArrayBindingDivisor","VertexArrayBindingDivisor","VertexArrayElementBuffer","VertexArrayElementBuffer","VertexArrayVertexBuffer","VertexArrayVertexBuffer","VertexArrayVertexBuffers","VertexArrayVertexBuffers","VertexAttrib1d","VertexAttrib1d","VertexAttrib1dv","VertexAttrib1dv","VertexAttrib1f","VertexAttrib1f","VertexAttrib1fv","VertexAttrib1fv","VertexAttrib1s","VertexAttrib1s","VertexAttrib1sv","VertexAttrib1sv","VertexAttrib2d","VertexAttrib2d","VertexAttrib2dv","VertexAttrib2dv","VertexAttrib2f","VertexAttrib2f","VertexAttrib2fv","VertexAttrib2fv","VertexAttrib2s","VertexAttrib2s","VertexAttrib2sv","VertexAttrib2sv","VertexAttrib3d","VertexAttrib3d","VertexAttrib3dv","VertexAttrib3dv","VertexAttrib3f","VertexAttrib3f","VertexAttrib3fv","VertexAttrib3fv","VertexAttrib3s","VertexAttrib3s","VertexAttrib3sv","VertexAttrib3sv","VertexAttrib4Nbv","VertexAttrib4Nbv","VertexAttrib4Niv","VertexAttrib4Niv","VertexAttrib4Nsv","VertexAttrib4Nsv","VertexAttrib4Nub","VertexAttrib4Nub","VertexAttrib4Nubv","VertexAttrib4Nubv","VertexAttrib4Nuiv","VertexAttrib4Nuiv","VertexAttrib4Nusv","VertexAttrib4Nusv","VertexAttrib4bv","VertexAttrib4bv","VertexAttrib4d","VertexAttrib4d","VertexAttrib4dv","VertexAttrib4dv","VertexAttrib4f","VertexAttrib4f","VertexAttrib4fv","VertexAttrib4fv","VertexAttrib4iv","VertexAttrib4iv","VertexAttrib4s","VertexAttrib4s","VertexAttrib4sv","VertexAttrib4sv","VertexAttrib4ubv","VertexAttrib4ubv","VertexAttrib4uiv","VertexAttrib4uiv","VertexAttrib4usv","VertexAttrib4usv","VertexAttribBinding","VertexAttribBinding","VertexAttribDivisor","VertexAttribDivisor","VertexAttribFormat","VertexAttribFormat","VertexAttribI1i","VertexAttribI1i","VertexAttribI1iv","VertexAttribI1iv","VertexAttribI1ui","VertexAttribI1ui","VertexAttribI1uiv","VertexAttribI1uiv","VertexAttribI2i","VertexAttribI2i","VertexAttribI2iv","VertexAttribI2iv","VertexAttribI2ui","VertexAttribI2ui","VertexAttribI2uiv","VertexAttribI2uiv","VertexAttribI3i","VertexAttribI3i","VertexAttribI3iv","VertexAttribI3iv","VertexAttribI3ui","VertexAttribI3ui","VertexAttribI3uiv","VertexAttribI3uiv","VertexAttribI4bv","VertexAttribI4bv","VertexAttribI4i","VertexAttribI4i","VertexAttribI4iv","VertexAttribI4iv","VertexAttribI4sv","VertexAttribI4sv","VertexAttribI4ubv","VertexAttribI4ubv","VertexAttribI4ui","VertexAttribI4ui","VertexAttribI4uiv","VertexAttribI4uiv","VertexAttribI4usv","VertexAttribI4usv","VertexAttribIFormat","VertexAttribIFormat","VertexAttribIPointer","VertexAttribIPointer","VertexAttribL1d","VertexAttribL1d","VertexAttribL1dv","VertexAttribL1dv","VertexAttribL2d","VertexAttribL2d","VertexAttribL2dv","VertexAttribL2dv","VertexAttribL3d","VertexAttribL3d","VertexAttribL3dv","VertexAttribL3dv","VertexAttribL4d","VertexAttribL4d","VertexAttribL4dv","VertexAttribL4dv","VertexAttribLFormat","VertexAttribLFormat","VertexAttribLPointer","VertexAttribLPointer","VertexAttribP1ui","VertexAttribP1ui","VertexAttribP1uiv","VertexAttribP1uiv","VertexAttribP2ui","VertexAttribP2ui","VertexAttribP2uiv","VertexAttribP2uiv","VertexAttribP3ui","VertexAttribP3ui","VertexAttribP3uiv","VertexAttribP3uiv","VertexAttribP4ui","VertexAttribP4ui","VertexAttribP4uiv","VertexAttribP4uiv","VertexAttribPointer","VertexAttribPointer","VertexBindingDivisor","VertexBindingDivisor","VertexP2ui","VertexP2ui","VertexP2uiv","VertexP2uiv","VertexP3ui","VertexP3ui","VertexP3uiv","VertexP3uiv","VertexP4ui","VertexP4ui","VertexP4uiv","VertexP4uiv","Viewport","Viewport","ViewportArrayv","ViewportArrayv","ViewportIndexedf","ViewportIndexedf","ViewportIndexedfv","ViewportIndexedfv","WAIT_FAILED","WRITE_ONLY","WaitSync","WaitSync","XOR","ZERO","ZERO_TO_ONE","borrow","borrow_mut","from","into","load_with","new","try_from","try_into","type_id","types","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","GLDEBUGPROC","GLDEBUGPROCAMD","GLDEBUGPROCARB","GLDEBUGPROCKHR","GLbitfield","GLboolean","GLbyte","GLchar","GLcharARB","GLclampd","GLclampf","GLclampx","GLdouble","GLeglImageOES","GLenum","GLfixed","GLfloat","GLhalf","GLhalfARB","GLhalfNV","GLhandleARB","GLint","GLint64","GLint64EXT","GLintptr","GLintptrARB","GLshort","GLsizei","GLsizeiptr","GLsizeiptrARB","GLsync","GLubyte","GLuint","GLuint64","GLuint64EXT","GLushort","GLvdpauSurfaceNV","GLvoid","__GLsync","_cl_context","_cl_event","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"gl"],[2747,"gl::ActiveShaderProgram"],[2749,"gl::ActiveTexture"],[2751,"gl::AttachShader"],[2753,"gl::BeginConditionalRender"],[2755,"gl::BeginQuery"],[2757,"gl::BeginQueryIndexed"],[2759,"gl::BeginTransformFeedback"],[2761,"gl::BindAttribLocation"],[2763,"gl::BindBuffer"],[2765,"gl::BindBufferBase"],[2767,"gl::BindBufferRange"],[2769,"gl::BindBuffersBase"],[2771,"gl::BindBuffersRange"],[2773,"gl::BindFragDataLocation"],[2775,"gl::BindFragDataLocationIndexed"],[2777,"gl::BindFramebuffer"],[2779,"gl::BindImageTexture"],[2781,"gl::BindImageTextures"],[2783,"gl::BindProgramPipeline"],[2785,"gl::BindRenderbuffer"],[2787,"gl::BindSampler"],[2789,"gl::BindSamplers"],[2791,"gl::BindTexture"],[2793,"gl::BindTextureUnit"],[2795,"gl::BindTextures"],[2797,"gl::BindTransformFeedback"],[2799,"gl::BindVertexArray"],[2801,"gl::BindVertexBuffer"],[2803,"gl::BindVertexBuffers"],[2805,"gl::BlendColor"],[2807,"gl::BlendEquation"],[2809,"gl::BlendEquationSeparate"],[2811,"gl::BlendEquationSeparatei"],[2813,"gl::BlendEquationi"],[2815,"gl::BlendFunc"],[2817,"gl::BlendFuncSeparate"],[2819,"gl::BlendFuncSeparatei"],[2821,"gl::BlendFunci"],[2823,"gl::BlitFramebuffer"],[2825,"gl::BlitNamedFramebuffer"],[2827,"gl::BufferData"],[2829,"gl::BufferStorage"],[2831,"gl::BufferSubData"],[2833,"gl::CheckFramebufferStatus"],[2835,"gl::CheckNamedFramebufferStatus"],[2837,"gl::ClampColor"],[2839,"gl::Clear"],[2841,"gl::ClearBufferData"],[2843,"gl::ClearBufferSubData"],[2845,"gl::ClearBufferfi"],[2847,"gl::ClearBufferfv"],[2849,"gl::ClearBufferiv"],[2851,"gl::ClearBufferuiv"],[2853,"gl::ClearColor"],[2855,"gl::ClearDepth"],[2857,"gl::ClearDepthf"],[2859,"gl::ClearNamedBufferData"],[2861,"gl::ClearNamedBufferSubData"],[2863,"gl::ClearNamedFramebufferfi"],[2865,"gl::ClearNamedFramebufferfv"],[2867,"gl::ClearNamedFramebufferiv"],[2869,"gl::ClearNamedFramebufferuiv"],[2871,"gl::ClearStencil"],[2873,"gl::ClearTexImage"],[2875,"gl::ClearTexSubImage"],[2877,"gl::ClientWaitSync"],[2879,"gl::ClipControl"],[2881,"gl::ColorMask"],[2883,"gl::ColorMaski"],[2885,"gl::ColorP3ui"],[2887,"gl::ColorP3uiv"],[2889,"gl::ColorP4ui"],[2891,"gl::ColorP4uiv"],[2893,"gl::CompileShader"],[2895,"gl::CompressedTexImage1D"],[2897,"gl::CompressedTexImage2D"],[2899,"gl::CompressedTexImage3D"],[2901,"gl::CompressedTexSubImage1D"],[2903,"gl::CompressedTexSubImage2D"],[2905,"gl::CompressedTexSubImage3D"],[2907,"gl::CompressedTextureSubImage1D"],[2909,"gl::CompressedTextureSubImage2D"],[2911,"gl::CompressedTextureSubImage3D"],[2913,"gl::CopyBufferSubData"],[2915,"gl::CopyImageSubData"],[2917,"gl::CopyNamedBufferSubData"],[2919,"gl::CopyTexImage1D"],[2921,"gl::CopyTexImage2D"],[2923,"gl::CopyTexSubImage1D"],[2925,"gl::CopyTexSubImage2D"],[2927,"gl::CopyTexSubImage3D"],[2929,"gl::CopyTextureSubImage1D"],[2931,"gl::CopyTextureSubImage2D"],[2933,"gl::CopyTextureSubImage3D"],[2935,"gl::CreateBuffers"],[2937,"gl::CreateFramebuffers"],[2939,"gl::CreateProgram"],[2941,"gl::CreateProgramPipelines"],[2943,"gl::CreateQueries"],[2945,"gl::CreateRenderbuffers"],[2947,"gl::CreateSamplers"],[2949,"gl::CreateShader"],[2951,"gl::CreateShaderProgramv"],[2953,"gl::CreateTextures"],[2955,"gl::CreateTransformFeedbacks"],[2957,"gl::CreateVertexArrays"],[2959,"gl::CullFace"],[2961,"gl::DebugMessageCallback"],[2963,"gl::DebugMessageControl"],[2965,"gl::DebugMessageInsert"],[2967,"gl::DeleteBuffers"],[2969,"gl::DeleteFramebuffers"],[2971,"gl::DeleteProgram"],[2973,"gl::DeleteProgramPipelines"],[2975,"gl::DeleteQueries"],[2977,"gl::DeleteRenderbuffers"],[2979,"gl::DeleteSamplers"],[2981,"gl::DeleteShader"],[2983,"gl::DeleteSync"],[2985,"gl::DeleteTextures"],[2987,"gl::DeleteTransformFeedbacks"],[2989,"gl::DeleteVertexArrays"],[2991,"gl::DepthFunc"],[2993,"gl::DepthMask"],[2995,"gl::DepthRange"],[2997,"gl::DepthRangeArrayv"],[2999,"gl::DepthRangeIndexed"],[3001,"gl::DepthRangef"],[3003,"gl::DetachShader"],[3005,"gl::Disable"],[3007,"gl::DisableVertexArrayAttrib"],[3009,"gl::DisableVertexAttribArray"],[3011,"gl::Disablei"],[3013,"gl::DispatchCompute"],[3015,"gl::DispatchComputeIndirect"],[3017,"gl::DrawArrays"],[3019,"gl::DrawArraysIndirect"],[3021,"gl::DrawArraysInstanced"],[3023,"gl::DrawArraysInstancedBaseInstance"],[3025,"gl::DrawBuffer"],[3027,"gl::DrawBuffers"],[3029,"gl::DrawElements"],[3031,"gl::DrawElementsBaseVertex"],[3033,"gl::DrawElementsIndirect"],[3035,"gl::DrawElementsInstanced"],[3037,"gl::DrawElementsInstancedBaseInstance"],[3039,"gl::DrawElementsInstancedBaseVertex"],[3041,"gl::DrawElementsInstancedBaseVertexBaseInstance"],[3043,"gl::DrawRangeElements"],[3045,"gl::DrawRangeElementsBaseVertex"],[3047,"gl::DrawTransformFeedback"],[3049,"gl::DrawTransformFeedbackInstanced"],[3051,"gl::DrawTransformFeedbackStream"],[3053,"gl::DrawTransformFeedbackStreamInstanced"],[3055,"gl::Enable"],[3057,"gl::EnableVertexArrayAttrib"],[3059,"gl::EnableVertexAttribArray"],[3061,"gl::Enablei"],[3063,"gl::EndConditionalRender"],[3065,"gl::EndQuery"],[3067,"gl::EndQueryIndexed"],[3069,"gl::EndTransformFeedback"],[3071,"gl::FenceSync"],[3073,"gl::Finish"],[3075,"gl::Flush"],[3077,"gl::FlushMappedBufferRange"],[3079,"gl::FlushMappedNamedBufferRange"],[3081,"gl::FramebufferParameteri"],[3083,"gl::FramebufferRenderbuffer"],[3085,"gl::FramebufferTexture"],[3087,"gl::FramebufferTexture1D"],[3089,"gl::FramebufferTexture2D"],[3091,"gl::FramebufferTexture3D"],[3093,"gl::FramebufferTextureLayer"],[3095,"gl::FrontFace"],[3097,"gl::GenBuffers"],[3099,"gl::GenFramebuffers"],[3101,"gl::GenProgramPipelines"],[3103,"gl::GenQueries"],[3105,"gl::GenRenderbuffers"],[3107,"gl::GenSamplers"],[3109,"gl::GenTextures"],[3111,"gl::GenTransformFeedbacks"],[3113,"gl::GenVertexArrays"],[3115,"gl::GenerateMipmap"],[3117,"gl::GenerateTextureMipmap"],[3119,"gl::GetActiveAtomicCounterBufferiv"],[3121,"gl::GetActiveAttrib"],[3123,"gl::GetActiveSubroutineName"],[3125,"gl::GetActiveSubroutineUniformName"],[3127,"gl::GetActiveSubroutineUniformiv"],[3129,"gl::GetActiveUniform"],[3131,"gl::GetActiveUniformBlockName"],[3133,"gl::GetActiveUniformBlockiv"],[3135,"gl::GetActiveUniformName"],[3137,"gl::GetActiveUniformsiv"],[3139,"gl::GetAttachedShaders"],[3141,"gl::GetAttribLocation"],[3143,"gl::GetBooleani_v"],[3145,"gl::GetBooleanv"],[3147,"gl::GetBufferParameteri64v"],[3149,"gl::GetBufferParameteriv"],[3151,"gl::GetBufferPointerv"],[3153,"gl::GetBufferSubData"],[3155,"gl::GetCompressedTexImage"],[3157,"gl::GetCompressedTextureImage"],[3159,"gl::GetCompressedTextureSubImage"],[3161,"gl::GetDebugMessageLog"],[3163,"gl::GetDoublei_v"],[3165,"gl::GetDoublev"],[3167,"gl::GetError"],[3169,"gl::GetFloati_v"],[3171,"gl::GetFloatv"],[3173,"gl::GetFragDataIndex"],[3175,"gl::GetFragDataLocation"],[3177,"gl::GetFramebufferAttachmentParameteriv"],[3179,"gl::GetFramebufferParameteriv"],[3181,"gl::GetGraphicsResetStatus"],[3183,"gl::GetInteger64i_v"],[3185,"gl::GetInteger64v"],[3187,"gl::GetIntegeri_v"],[3189,"gl::GetIntegerv"],[3191,"gl::GetInternalformati64v"],[3193,"gl::GetInternalformativ"],[3195,"gl::GetMultisamplefv"],[3197,"gl::GetNamedBufferParameteri64v"],[3199,"gl::GetNamedBufferParameteriv"],[3201,"gl::GetNamedBufferPointerv"],[3203,"gl::GetNamedBufferSubData"],[3205,"gl::GetNamedFramebufferAttachmentParameteriv"],[3207,"gl::GetNamedFramebufferParameteriv"],[3209,"gl::GetNamedRenderbufferParameteriv"],[3211,"gl::GetObjectLabel"],[3213,"gl::GetObjectPtrLabel"],[3215,"gl::GetPointerv"],[3217,"gl::GetProgramBinary"],[3219,"gl::GetProgramInfoLog"],[3221,"gl::GetProgramInterfaceiv"],[3223,"gl::GetProgramPipelineInfoLog"],[3225,"gl::GetProgramPipelineiv"],[3227,"gl::GetProgramResourceIndex"],[3229,"gl::GetProgramResourceLocation"],[3231,"gl::GetProgramResourceLocationIndex"],[3233,"gl::GetProgramResourceName"],[3235,"gl::GetProgramResourceiv"],[3237,"gl::GetProgramStageiv"],[3239,"gl::GetProgramiv"],[3241,"gl::GetQueryBufferObjecti64v"],[3243,"gl::GetQueryBufferObjectiv"],[3245,"gl::GetQueryBufferObjectui64v"],[3247,"gl::GetQueryBufferObjectuiv"],[3249,"gl::GetQueryIndexediv"],[3251,"gl::GetQueryObjecti64v"],[3253,"gl::GetQueryObjectiv"],[3255,"gl::GetQueryObjectui64v"],[3257,"gl::GetQueryObjectuiv"],[3259,"gl::GetQueryiv"],[3261,"gl::GetRenderbufferParameteriv"],[3263,"gl::GetSamplerParameterIiv"],[3265,"gl::GetSamplerParameterIuiv"],[3267,"gl::GetSamplerParameterfv"],[3269,"gl::GetSamplerParameteriv"],[3271,"gl::GetShaderInfoLog"],[3273,"gl::GetShaderPrecisionFormat"],[3275,"gl::GetShaderSource"],[3277,"gl::GetShaderiv"],[3279,"gl::GetString"],[3281,"gl::GetStringi"],[3283,"gl::GetSubroutineIndex"],[3285,"gl::GetSubroutineUniformLocation"],[3287,"gl::GetSynciv"],[3289,"gl::GetTexImage"],[3291,"gl::GetTexLevelParameterfv"],[3293,"gl::GetTexLevelParameteriv"],[3295,"gl::GetTexParameterIiv"],[3297,"gl::GetTexParameterIuiv"],[3299,"gl::GetTexParameterfv"],[3301,"gl::GetTexParameteriv"],[3303,"gl::GetTextureImage"],[3305,"gl::GetTextureLevelParameterfv"],[3307,"gl::GetTextureLevelParameteriv"],[3309,"gl::GetTextureParameterIiv"],[3311,"gl::GetTextureParameterIuiv"],[3313,"gl::GetTextureParameterfv"],[3315,"gl::GetTextureParameteriv"],[3317,"gl::GetTextureSubImage"],[3319,"gl::GetTransformFeedbackVarying"],[3321,"gl::GetTransformFeedbacki64_v"],[3323,"gl::GetTransformFeedbacki_v"],[3325,"gl::GetTransformFeedbackiv"],[3327,"gl::GetUniformBlockIndex"],[3329,"gl::GetUniformIndices"],[3331,"gl::GetUniformLocation"],[3333,"gl::GetUniformSubroutineuiv"],[3335,"gl::GetUniformdv"],[3337,"gl::GetUniformfv"],[3339,"gl::GetUniformiv"],[3341,"gl::GetUniformuiv"],[3343,"gl::GetVertexArrayIndexed64iv"],[3345,"gl::GetVertexArrayIndexediv"],[3347,"gl::GetVertexArrayiv"],[3349,"gl::GetVertexAttribIiv"],[3351,"gl::GetVertexAttribIuiv"],[3353,"gl::GetVertexAttribLdv"],[3355,"gl::GetVertexAttribPointerv"],[3357,"gl::GetVertexAttribdv"],[3359,"gl::GetVertexAttribfv"],[3361,"gl::GetVertexAttribiv"],[3363,"gl::GetnColorTable"],[3365,"gl::GetnCompressedTexImage"],[3367,"gl::GetnConvolutionFilter"],[3369,"gl::GetnHistogram"],[3371,"gl::GetnMapdv"],[3373,"gl::GetnMapfv"],[3375,"gl::GetnMapiv"],[3377,"gl::GetnMinmax"],[3379,"gl::GetnPixelMapfv"],[3381,"gl::GetnPixelMapuiv"],[3383,"gl::GetnPixelMapusv"],[3385,"gl::GetnPolygonStipple"],[3387,"gl::GetnSeparableFilter"],[3389,"gl::GetnTexImage"],[3391,"gl::GetnUniformdv"],[3393,"gl::GetnUniformfv"],[3395,"gl::GetnUniformiv"],[3397,"gl::GetnUniformuiv"],[3399,"gl::Hint"],[3401,"gl::InvalidateBufferData"],[3403,"gl::InvalidateBufferSubData"],[3405,"gl::InvalidateFramebuffer"],[3407,"gl::InvalidateNamedFramebufferData"],[3409,"gl::InvalidateNamedFramebufferSubData"],[3411,"gl::InvalidateSubFramebuffer"],[3413,"gl::InvalidateTexImage"],[3415,"gl::InvalidateTexSubImage"],[3417,"gl::IsBuffer"],[3419,"gl::IsEnabled"],[3421,"gl::IsEnabledi"],[3423,"gl::IsFramebuffer"],[3425,"gl::IsProgram"],[3427,"gl::IsProgramPipeline"],[3429,"gl::IsQuery"],[3431,"gl::IsRenderbuffer"],[3433,"gl::IsSampler"],[3435,"gl::IsShader"],[3437,"gl::IsSync"],[3439,"gl::IsTexture"],[3441,"gl::IsTransformFeedback"],[3443,"gl::IsVertexArray"],[3445,"gl::LineWidth"],[3447,"gl::LinkProgram"],[3449,"gl::LogicOp"],[3451,"gl::MapBuffer"],[3453,"gl::MapBufferRange"],[3455,"gl::MapNamedBuffer"],[3457,"gl::MapNamedBufferRange"],[3459,"gl::MemoryBarrier"],[3461,"gl::MemoryBarrierByRegion"],[3463,"gl::MinSampleShading"],[3465,"gl::MultiDrawArrays"],[3467,"gl::MultiDrawArraysIndirect"],[3469,"gl::MultiDrawElements"],[3471,"gl::MultiDrawElementsBaseVertex"],[3473,"gl::MultiDrawElementsIndirect"],[3475,"gl::MultiTexCoordP1ui"],[3477,"gl::MultiTexCoordP1uiv"],[3479,"gl::MultiTexCoordP2ui"],[3481,"gl::MultiTexCoordP2uiv"],[3483,"gl::MultiTexCoordP3ui"],[3485,"gl::MultiTexCoordP3uiv"],[3487,"gl::MultiTexCoordP4ui"],[3489,"gl::MultiTexCoordP4uiv"],[3491,"gl::NamedBufferData"],[3493,"gl::NamedBufferStorage"],[3495,"gl::NamedBufferSubData"],[3497,"gl::NamedFramebufferDrawBuffer"],[3499,"gl::NamedFramebufferDrawBuffers"],[3501,"gl::NamedFramebufferParameteri"],[3503,"gl::NamedFramebufferReadBuffer"],[3505,"gl::NamedFramebufferRenderbuffer"],[3507,"gl::NamedFramebufferTexture"],[3509,"gl::NamedFramebufferTextureLayer"],[3511,"gl::NamedRenderbufferStorage"],[3513,"gl::NamedRenderbufferStorageMultisample"],[3515,"gl::NormalP3ui"],[3517,"gl::NormalP3uiv"],[3519,"gl::ObjectLabel"],[3521,"gl::ObjectPtrLabel"],[3523,"gl::PatchParameterfv"],[3525,"gl::PatchParameteri"],[3527,"gl::PauseTransformFeedback"],[3529,"gl::PixelStoref"],[3531,"gl::PixelStorei"],[3533,"gl::PointParameterf"],[3535,"gl::PointParameterfv"],[3537,"gl::PointParameteri"],[3539,"gl::PointParameteriv"],[3541,"gl::PointSize"],[3543,"gl::PolygonMode"],[3545,"gl::PolygonOffset"],[3547,"gl::PopDebugGroup"],[3549,"gl::PrimitiveRestartIndex"],[3551,"gl::ProgramBinary"],[3553,"gl::ProgramParameteri"],[3555,"gl::ProgramUniform1d"],[3557,"gl::ProgramUniform1dv"],[3559,"gl::ProgramUniform1f"],[3561,"gl::ProgramUniform1fv"],[3563,"gl::ProgramUniform1i"],[3565,"gl::ProgramUniform1iv"],[3567,"gl::ProgramUniform1ui"],[3569,"gl::ProgramUniform1uiv"],[3571,"gl::ProgramUniform2d"],[3573,"gl::ProgramUniform2dv"],[3575,"gl::ProgramUniform2f"],[3577,"gl::ProgramUniform2fv"],[3579,"gl::ProgramUniform2i"],[3581,"gl::ProgramUniform2iv"],[3583,"gl::ProgramUniform2ui"],[3585,"gl::ProgramUniform2uiv"],[3587,"gl::ProgramUniform3d"],[3589,"gl::ProgramUniform3dv"],[3591,"gl::ProgramUniform3f"],[3593,"gl::ProgramUniform3fv"],[3595,"gl::ProgramUniform3i"],[3597,"gl::ProgramUniform3iv"],[3599,"gl::ProgramUniform3ui"],[3601,"gl::ProgramUniform3uiv"],[3603,"gl::ProgramUniform4d"],[3605,"gl::ProgramUniform4dv"],[3607,"gl::ProgramUniform4f"],[3609,"gl::ProgramUniform4fv"],[3611,"gl::ProgramUniform4i"],[3613,"gl::ProgramUniform4iv"],[3615,"gl::ProgramUniform4ui"],[3617,"gl::ProgramUniform4uiv"],[3619,"gl::ProgramUniformMatrix2dv"],[3621,"gl::ProgramUniformMatrix2fv"],[3623,"gl::ProgramUniformMatrix2x3dv"],[3625,"gl::ProgramUniformMatrix2x3fv"],[3627,"gl::ProgramUniformMatrix2x4dv"],[3629,"gl::ProgramUniformMatrix2x4fv"],[3631,"gl::ProgramUniformMatrix3dv"],[3633,"gl::ProgramUniformMatrix3fv"],[3635,"gl::ProgramUniformMatrix3x2dv"],[3637,"gl::ProgramUniformMatrix3x2fv"],[3639,"gl::ProgramUniformMatrix3x4dv"],[3641,"gl::ProgramUniformMatrix3x4fv"],[3643,"gl::ProgramUniformMatrix4dv"],[3645,"gl::ProgramUniformMatrix4fv"],[3647,"gl::ProgramUniformMatrix4x2dv"],[3649,"gl::ProgramUniformMatrix4x2fv"],[3651,"gl::ProgramUniformMatrix4x3dv"],[3653,"gl::ProgramUniformMatrix4x3fv"],[3655,"gl::ProvokingVertex"],[3657,"gl::PushDebugGroup"],[3659,"gl::QueryCounter"],[3661,"gl::ReadBuffer"],[3663,"gl::ReadPixels"],[3665,"gl::ReadnPixels"],[3667,"gl::ReleaseShaderCompiler"],[3669,"gl::RenderbufferStorage"],[3671,"gl::RenderbufferStorageMultisample"],[3673,"gl::ResumeTransformFeedback"],[3675,"gl::SampleCoverage"],[3677,"gl::SampleMaski"],[3679,"gl::SamplerParameterIiv"],[3681,"gl::SamplerParameterIuiv"],[3683,"gl::SamplerParameterf"],[3685,"gl::SamplerParameterfv"],[3687,"gl::SamplerParameteri"],[3689,"gl::SamplerParameteriv"],[3691,"gl::Scissor"],[3693,"gl::ScissorArrayv"],[3695,"gl::ScissorIndexed"],[3697,"gl::ScissorIndexedv"],[3699,"gl::SecondaryColorP3ui"],[3701,"gl::SecondaryColorP3uiv"],[3703,"gl::ShaderBinary"],[3705,"gl::ShaderSource"],[3707,"gl::ShaderStorageBlockBinding"],[3709,"gl::StencilFunc"],[3711,"gl::StencilFuncSeparate"],[3713,"gl::StencilMask"],[3715,"gl::StencilMaskSeparate"],[3717,"gl::StencilOp"],[3719,"gl::StencilOpSeparate"],[3721,"gl::TexBuffer"],[3723,"gl::TexBufferRange"],[3725,"gl::TexCoordP1ui"],[3727,"gl::TexCoordP1uiv"],[3729,"gl::TexCoordP2ui"],[3731,"gl::TexCoordP2uiv"],[3733,"gl::TexCoordP3ui"],[3735,"gl::TexCoordP3uiv"],[3737,"gl::TexCoordP4ui"],[3739,"gl::TexCoordP4uiv"],[3741,"gl::TexImage1D"],[3743,"gl::TexImage2D"],[3745,"gl::TexImage2DMultisample"],[3747,"gl::TexImage3D"],[3749,"gl::TexImage3DMultisample"],[3751,"gl::TexParameterIiv"],[3753,"gl::TexParameterIuiv"],[3755,"gl::TexParameterf"],[3757,"gl::TexParameterfv"],[3759,"gl::TexParameteri"],[3761,"gl::TexParameteriv"],[3763,"gl::TexStorage1D"],[3765,"gl::TexStorage2D"],[3767,"gl::TexStorage2DMultisample"],[3769,"gl::TexStorage3D"],[3771,"gl::TexStorage3DMultisample"],[3773,"gl::TexSubImage1D"],[3775,"gl::TexSubImage2D"],[3777,"gl::TexSubImage3D"],[3779,"gl::TextureBarrier"],[3781,"gl::TextureBuffer"],[3783,"gl::TextureBufferRange"],[3785,"gl::TextureParameterIiv"],[3787,"gl::TextureParameterIuiv"],[3789,"gl::TextureParameterf"],[3791,"gl::TextureParameterfv"],[3793,"gl::TextureParameteri"],[3795,"gl::TextureParameteriv"],[3797,"gl::TextureStorage1D"],[3799,"gl::TextureStorage2D"],[3801,"gl::TextureStorage2DMultisample"],[3803,"gl::TextureStorage3D"],[3805,"gl::TextureStorage3DMultisample"],[3807,"gl::TextureSubImage1D"],[3809,"gl::TextureSubImage2D"],[3811,"gl::TextureSubImage3D"],[3813,"gl::TextureView"],[3815,"gl::TransformFeedbackBufferBase"],[3817,"gl::TransformFeedbackBufferRange"],[3819,"gl::TransformFeedbackVaryings"],[3821,"gl::Uniform1d"],[3823,"gl::Uniform1dv"],[3825,"gl::Uniform1f"],[3827,"gl::Uniform1fv"],[3829,"gl::Uniform1i"],[3831,"gl::Uniform1iv"],[3833,"gl::Uniform1ui"],[3835,"gl::Uniform1uiv"],[3837,"gl::Uniform2d"],[3839,"gl::Uniform2dv"],[3841,"gl::Uniform2f"],[3843,"gl::Uniform2fv"],[3845,"gl::Uniform2i"],[3847,"gl::Uniform2iv"],[3849,"gl::Uniform2ui"],[3851,"gl::Uniform2uiv"],[3853,"gl::Uniform3d"],[3855,"gl::Uniform3dv"],[3857,"gl::Uniform3f"],[3859,"gl::Uniform3fv"],[3861,"gl::Uniform3i"],[3863,"gl::Uniform3iv"],[3865,"gl::Uniform3ui"],[3867,"gl::Uniform3uiv"],[3869,"gl::Uniform4d"],[3871,"gl::Uniform4dv"],[3873,"gl::Uniform4f"],[3875,"gl::Uniform4fv"],[3877,"gl::Uniform4i"],[3879,"gl::Uniform4iv"],[3881,"gl::Uniform4ui"],[3883,"gl::Uniform4uiv"],[3885,"gl::UniformBlockBinding"],[3887,"gl::UniformMatrix2dv"],[3889,"gl::UniformMatrix2fv"],[3891,"gl::UniformMatrix2x3dv"],[3893,"gl::UniformMatrix2x3fv"],[3895,"gl::UniformMatrix2x4dv"],[3897,"gl::UniformMatrix2x4fv"],[3899,"gl::UniformMatrix3dv"],[3901,"gl::UniformMatrix3fv"],[3903,"gl::UniformMatrix3x2dv"],[3905,"gl::UniformMatrix3x2fv"],[3907,"gl::UniformMatrix3x4dv"],[3909,"gl::UniformMatrix3x4fv"],[3911,"gl::UniformMatrix4dv"],[3913,"gl::UniformMatrix4fv"],[3915,"gl::UniformMatrix4x2dv"],[3917,"gl::UniformMatrix4x2fv"],[3919,"gl::UniformMatrix4x3dv"],[3921,"gl::UniformMatrix4x3fv"],[3923,"gl::UniformSubroutinesuiv"],[3925,"gl::UnmapBuffer"],[3927,"gl::UnmapNamedBuffer"],[3929,"gl::UseProgram"],[3931,"gl::UseProgramStages"],[3933,"gl::ValidateProgram"],[3935,"gl::ValidateProgramPipeline"],[3937,"gl::VertexArrayAttribBinding"],[3939,"gl::VertexArrayAttribFormat"],[3941,"gl::VertexArrayAttribIFormat"],[3943,"gl::VertexArrayAttribLFormat"],[3945,"gl::VertexArrayBindingDivisor"],[3947,"gl::VertexArrayElementBuffer"],[3949,"gl::VertexArrayVertexBuffer"],[3951,"gl::VertexArrayVertexBuffers"],[3953,"gl::VertexAttrib1d"],[3955,"gl::VertexAttrib1dv"],[3957,"gl::VertexAttrib1f"],[3959,"gl::VertexAttrib1fv"],[3961,"gl::VertexAttrib1s"],[3963,"gl::VertexAttrib1sv"],[3965,"gl::VertexAttrib2d"],[3967,"gl::VertexAttrib2dv"],[3969,"gl::VertexAttrib2f"],[3971,"gl::VertexAttrib2fv"],[3973,"gl::VertexAttrib2s"],[3975,"gl::VertexAttrib2sv"],[3977,"gl::VertexAttrib3d"],[3979,"gl::VertexAttrib3dv"],[3981,"gl::VertexAttrib3f"],[3983,"gl::VertexAttrib3fv"],[3985,"gl::VertexAttrib3s"],[3987,"gl::VertexAttrib3sv"],[3989,"gl::VertexAttrib4Nbv"],[3991,"gl::VertexAttrib4Niv"],[3993,"gl::VertexAttrib4Nsv"],[3995,"gl::VertexAttrib4Nub"],[3997,"gl::VertexAttrib4Nubv"],[3999,"gl::VertexAttrib4Nuiv"],[4001,"gl::VertexAttrib4Nusv"],[4003,"gl::VertexAttrib4bv"],[4005,"gl::VertexAttrib4d"],[4007,"gl::VertexAttrib4dv"],[4009,"gl::VertexAttrib4f"],[4011,"gl::VertexAttrib4fv"],[4013,"gl::VertexAttrib4iv"],[4015,"gl::VertexAttrib4s"],[4017,"gl::VertexAttrib4sv"],[4019,"gl::VertexAttrib4ubv"],[4021,"gl::VertexAttrib4uiv"],[4023,"gl::VertexAttrib4usv"],[4025,"gl::VertexAttribBinding"],[4027,"gl::VertexAttribDivisor"],[4029,"gl::VertexAttribFormat"],[4031,"gl::VertexAttribI1i"],[4033,"gl::VertexAttribI1iv"],[4035,"gl::VertexAttribI1ui"],[4037,"gl::VertexAttribI1uiv"],[4039,"gl::VertexAttribI2i"],[4041,"gl::VertexAttribI2iv"],[4043,"gl::VertexAttribI2ui"],[4045,"gl::VertexAttribI2uiv"],[4047,"gl::VertexAttribI3i"],[4049,"gl::VertexAttribI3iv"],[4051,"gl::VertexAttribI3ui"],[4053,"gl::VertexAttribI3uiv"],[4055,"gl::VertexAttribI4bv"],[4057,"gl::VertexAttribI4i"],[4059,"gl::VertexAttribI4iv"],[4061,"gl::VertexAttribI4sv"],[4063,"gl::VertexAttribI4ubv"],[4065,"gl::VertexAttribI4ui"],[4067,"gl::VertexAttribI4uiv"],[4069,"gl::VertexAttribI4usv"],[4071,"gl::VertexAttribIFormat"],[4073,"gl::VertexAttribIPointer"],[4075,"gl::VertexAttribL1d"],[4077,"gl::VertexAttribL1dv"],[4079,"gl::VertexAttribL2d"],[4081,"gl::VertexAttribL2dv"],[4083,"gl::VertexAttribL3d"],[4085,"gl::VertexAttribL3dv"],[4087,"gl::VertexAttribL4d"],[4089,"gl::VertexAttribL4dv"],[4091,"gl::VertexAttribLFormat"],[4093,"gl::VertexAttribLPointer"],[4095,"gl::VertexAttribP1ui"],[4097,"gl::VertexAttribP1uiv"],[4099,"gl::VertexAttribP2ui"],[4101,"gl::VertexAttribP2uiv"],[4103,"gl::VertexAttribP3ui"],[4105,"gl::VertexAttribP3uiv"],[4107,"gl::VertexAttribP4ui"],[4109,"gl::VertexAttribP4uiv"],[4111,"gl::VertexAttribPointer"],[4113,"gl::VertexBindingDivisor"],[4115,"gl::VertexP2ui"],[4117,"gl::VertexP2uiv"],[4119,"gl::VertexP3ui"],[4121,"gl::VertexP3uiv"],[4123,"gl::VertexP4ui"],[4125,"gl::VertexP4uiv"],[4127,"gl::Viewport"],[4129,"gl::ViewportArrayv"],[4131,"gl::ViewportIndexedf"],[4133,"gl::ViewportIndexedfv"],[4135,"gl::WaitSync"],[4137,"gl::types"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ActiveTextureARB","","Fallbacks: AttachObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: BeginConditionalRenderNV","","Fallbacks: BeginQueryARB","","","","Fallbacks: BeginTransformFeedbackEXT, …","","Fallbacks: BindAttribLocationARB","","Fallbacks: BindBufferARB","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV","","","","","","Fallbacks: BindFragDataLocationEXT","","Fallbacks: BindFragDataLocationIndexedEXT","","","","","","","","","","","","","","","","Fallbacks: BindTextureEXT","","","","","","","","Fallbacks: BindVertexArrayOES","","","","","","Fallbacks: BlendColorEXT","","Fallbacks: BlendEquationEXT","","Fallbacks: BlendEquationSeparateEXT","","Fallbacks: BlendEquationSeparateIndexedAMD, …","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, …","","","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR","","Fallbacks: BlendFuncSeparateIndexedAMD, …","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, …","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV","","","","Fallbacks: BufferDataARB","","Fallbacks: BufferStorageEXT","","Fallbacks: BufferSubDataARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: CheckFramebufferStatusEXT","","","","Fallbacks: ClampColorARB","","","","","","","","","","","","","","","","","","","","Fallbacks: ClearDepthfOES","","","","","","","","","","","","","","","","Fallbacks: ClearTexImageEXT","","Fallbacks: ClearTexSubImageEXT","","Fallbacks: ClientWaitSyncAPPLE","","Fallbacks: ClipControlEXT","","","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, …","","","","","","","","","","Fallbacks: CompileShaderARB","","Fallbacks: CompressedTexImage1DARB","","Fallbacks: CompressedTexImage2DARB","","Fallbacks: CompressedTexImage3DARB","","Fallbacks: CompressedTexSubImage1DARB","","Fallbacks: CompressedTexSubImage2DARB","","Fallbacks: CompressedTexSubImage3DARB","","","","","","","","Fallbacks: CopyBufferSubDataNV","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES","","","","Fallbacks: CopyTexImage1DEXT","","Fallbacks: CopyTexImage2DEXT","","Fallbacks: CopyTexSubImage1DEXT","","Fallbacks: CopyTexSubImage2DEXT","","Fallbacks: CopyTexSubImage3DEXT","","","","","","","","","","","","Fallbacks: CreateProgramObjectARB","","","","","","","","","","Fallbacks: CreateShaderObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR","","Fallbacks: DeleteBuffersARB","","Fallbacks: DeleteFramebuffersEXT","","","","","","Fallbacks: DeleteQueriesARB","","Fallbacks: DeleteRenderbuffersEXT","","","","","","Fallbacks: DeleteSyncAPPLE","","","","Fallbacks: DeleteTransformFeedbacksNV","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES","","","","","","","","","","","","Fallbacks: DepthRangefOES","","Fallbacks: DetachObjectARB","","","","","","Fallbacks: DisableVertexAttribArrayARB","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, …","","","","","","Fallbacks: DrawArraysEXT","","","","Fallbacks: DrawArraysInstancedANGLE, …","","Fallbacks: DrawArraysInstancedBaseInstanceEXT","","","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT","","","","Fallbacks: DrawElementsBaseVertexEXT, …","","","","Fallbacks: DrawElementsInstancedANGLE, …","","Fallbacks: DrawElementsInstancedBaseInstanceEXT","","Fallbacks: DrawElementsInstancedBaseVertexEXT, …","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT","","Fallbacks: DrawRangeElementsEXT","","Fallbacks: DrawRangeElementsBaseVertexEXT, …","","Fallbacks: DrawTransformFeedbackEXT, …","","Fallbacks: DrawTransformFeedbackInstancedEXT","","","","","","","","","","","","","","","","Fallbacks: EnableVertexAttribArrayARB","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, …","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX","","Fallbacks: EndQueryARB","","","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: FenceSyncAPPLE","","","","","","Fallbacks: FlushMappedBufferRangeAPPLE, …","","","","","","","Fallbacks: FramebufferRenderbufferEXT","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, …","","Fallbacks: FramebufferTexture1DEXT","","Fallbacks: FramebufferTexture2DEXT","","Fallbacks: FramebufferTexture3DEXT","","Fallbacks: FramebufferTextureLayerARB, …","","","","","","","","","","","","","","","","","","","","Fallbacks: GenBuffersARB","","Fallbacks: GenFramebuffersEXT","","","","Fallbacks: GenQueriesARB","","Fallbacks: GenRenderbuffersEXT","","","","","","Fallbacks: GenTransformFeedbacksNV","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES","","Fallbacks: GenerateMipmapEXT","","","","","","Fallbacks: GetActiveAttribARB","","","","","","","","Fallbacks: GetActiveUniformARB","","","","","","","","","","","","Fallbacks: GetAttribLocationARB","","Fallbacks: GetBooleanIndexedvEXT","","","","","","Fallbacks: GetBufferParameterivARB","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES","","Fallbacks: GetBufferSubDataARB","","Fallbacks: GetCompressedTexImageARB","","","","","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT","","","","","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, …","","","","Fallbacks: GetFragDataIndexEXT","","Fallbacks: GetFragDataLocationEXT","","Fallbacks: GetFramebufferAttachmentParameterivEXT","","","","Fallbacks: GetGraphicsResetStatusEXT, …","","","","Fallbacks: GetInteger64vAPPLE","","Fallbacks: GetIntegerIndexedvEXT","","","","","","","","Fallbacks: GetMultisamplefvNV","","","","","","","","","","","","","","","","Fallbacks: GetObjectLabelKHR","","Fallbacks: GetObjectPtrLabelKHR","","Fallbacks: GetPointervEXT, GetPointervKHR","","Fallbacks: GetProgramBinaryOES","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetQueryObjecti64vEXT","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT","","Fallbacks: GetQueryObjectui64vEXT","","Fallbacks: GetQueryObjectuivARB","","Fallbacks: GetQueryivARB","","Fallbacks: GetRenderbufferParameterivEXT","","Fallbacks: GetSamplerParameterIivEXT, …","","Fallbacks: GetSamplerParameterIuivEXT, …","","","","","","","","","","Fallbacks: GetShaderSourceARB","","","","","","","","","","","","Fallbacks: GetSyncivAPPLE","","","","","","","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetTransformFeedbackVaryingEXT","","","","","","","","","","","","Fallbacks: GetUniformLocationARB","","","","","","Fallbacks: GetUniformfvARB","","Fallbacks: GetUniformivARB","","Fallbacks: GetUniformuivEXT","","","","","","","","Fallbacks: GetVertexAttribIivEXT","","Fallbacks: GetVertexAttribIuivEXT","","Fallbacks: GetVertexAttribLdvEXT","","Fallbacks: GetVertexAttribPointervARB, …","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetnUniformfvEXT, GetnUniformfvKHR","","Fallbacks: GetnUniformivEXT, GetnUniformivKHR","","Fallbacks: GetnUniformuivKHR","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: IsBufferARB","","","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, …","","Fallbacks: IsFramebufferEXT","","","","","","Fallbacks: IsQueryARB","","Fallbacks: IsRenderbufferEXT","","","","","","Fallbacks: IsSyncAPPLE","","","","Fallbacks: IsTransformFeedbackNV","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: LinkProgramallbacks: MapBufferARB, MapBufferOES","","Fallbacks: MapBufferRangeEXT","","","","","","Fallbacks: MemoryBarrierEXT","","","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES","","Fallbacks: MultiDrawArraysEXT","","Fallbacks: MultiDrawArraysIndirectAMD, …","","Fallbacks: MultiDrawElementsEXT","","Fallbacks: MultiDrawElementsBaseVertexEXT","","Fallbacks: MultiDrawElementsIndirectAMD, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: NamedBufferStorageEXT","","Fallbacks: NamedBufferSubDataEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ObjectLabelKHR","","Fallbacks: ObjectPtrLabelKHR","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: PatchParameteriEXT, PatchParameteriOES","","Fallbacks: PauseTransformFeedbackNV","","","","","","Fallbacks: PointParameterfARB, PointParameterfEXT, …","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, …","","Fallbacks: PointParameteriNV","","Fallbacks: PointParameterivNV","","","","Fallbacks: PolygonModeNV","","","","Fallbacks: PopDebugGroupKHR","","","","Fallbacks: ProgramBinaryOES","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT","","","","","","Fallbacks: ProgramUniform1fEXT","","Fallbacks: ProgramUniform1fvEXT","","Fallbacks: ProgramUniform1iEXT","","Fallbacks: ProgramUniform1ivEXT","","Fallbacks: ProgramUniform1uiEXT","","Fallbacks: ProgramUniform1uivEXT","","","","","","Fallbacks: ProgramUniform2fEXT","","Fallbacks: ProgramUniform2fvEXT","","Fallbacks: ProgramUniform2iEXT","","Fallbacks: ProgramUniform2ivEXT","","Fallbacks: ProgramUniform2uiEXT","","Fallbacks: ProgramUniform2uivEXT","","","","","","Fallbacks: ProgramUniform3fEXT","","Fallbacks: ProgramUniform3fvEXT","","Fallbacks: ProgramUniform3iEXT","","Fallbacks: ProgramUniform3ivEXT","","Fallbacks: ProgramUniform3uiEXT","","Fallbacks: ProgramUniform3uivEXT","","","","","","Fallbacks: ProgramUniform4fEXT","","Fallbacks: ProgramUniform4fvEXT","","Fallbacks: ProgramUniform4iEXT","","Fallbacks: ProgramUniform4ivEXT","","Fallbacks: ProgramUniform4uiEXT","","Fallbacks: ProgramUniform4uivEXT","","","","Fallbacks: ProgramUniformMatrix2fvEXT","","","","Fallbacks: ProgramUniformMatrix2x3fvEXT","","","","Fallbacks: ProgramUniformMatrix2x4fvEXT","","","","Fallbacks: ProgramUniformMatrix3fvEXT","","","","Fallbacks: ProgramUniformMatrix3x2fvEXT","","","","Fallbacks: ProgramUniformMatrix3x4fvEXT","","","","Fallbacks: ProgramUniformMatrix4fvEXT","","","","Fallbacks: ProgramUniformMatrix4x2fvEXT","","","","Fallbacks: ProgramUniformMatrix4x3fvEXT","","Fallbacks: ProvokingVertexEXT","","Fallbacks: PushDebugGroupKHR","","","","","","","","","","","","","","","","","","","","","Fallbacks: QueryCounterEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR","","","","Fallbacks: RenderbufferStorageEXT","","Fallbacks: RenderbufferStorageMultisampleEXT, …","","Fallbacks: ResumeTransformFeedbackNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: SampleCoverageARB","","","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES","","Fallbacks: SamplerParameterIuivEXT, SamplerParameterIuivOES","","","","","","","","","","","","Fallbacks: ScissorArrayvNV, ScissorArrayvOES","","Fallbacks: ScissorIndexedNV, ScissorIndexedOES","","Fallbacks: ScissorIndexedvNV, ScissorIndexedvOES","","","","","","","","Fallbacks: ShaderSourceARB","","","","","","","","","","","","","","Fallbacks: StencilOpSeparateallbacks: TexBufferARB, TexBufferEXT, TexBufferOES","","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: TexImage3DEXT","","","","Fallbacks: TexParameterIivEXT, TexParameterIivOES","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES","","","","","","","","","","Fallbacks: TexStorage1DEXT","","Fallbacks: TexStorage2DEXT","","","","Fallbacks: TexStorage3DEXT","","Fallbacks: TexStorage3DMultisampleOES","","Fallbacks: TexSubImage1DEXT","","Fallbacks: TexSubImage2DEXT","","Fallbacks: TexSubImage3DEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: TextureViewEXT, TextureViewOES","","","","","","Fallbacks: TransformFeedbackVaryingsEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: Uniform1fARB","","Fallbacks: Uniform1fvARB","","Fallbacks: Uniform1iARB","","Fallbacks: Uniform1ivARB","","Fallbacks: Uniform1uiEXT","","Fallbacks: Uniform1uivEXT","","","","","","Fallbacks: Uniform2fARB","","Fallbacks: Uniform2fvARB","","Fallbacks: Uniform2iARB","","Fallbacks: Uniform2ivARB","","Fallbacks: Uniform2uiEXT","","Fallbacks: Uniform2uivEXT","","","","","","Fallbacks: Uniform3fARB","","Fallbacks: Uniform3fvARB","","Fallbacks: Uniform3iARB","","Fallbacks: Uniform3ivARB","","Fallbacks: Uniform3uiEXT","","Fallbacks: Uniform3uivEXT","","","","","","Fallbacks: Uniform4fARB","","Fallbacks: Uniform4fvARB","","Fallbacks: Uniform4iARB","","Fallbacks: Uniform4ivARB","","Fallbacks: Uniform4uiEXT","","Fallbacks: Uniform4uivEXT","","","","","","Fallbacks: UniformMatrix2fvARB","","","","Fallbacks: UniformMatrix2x3fvNV","","","","Fallbacks: UniformMatrix2x4fvNV","","","","Fallbacks: UniformMatrix3fvARB","","","","Fallbacks: UniformMatrix3x2fvNV","","","","Fallbacks: UniformMatrix3x4fvNV","","","","Fallbacks: UniformMatrix4fvARB","","","","Fallbacks: UniformMatrix4x2fvNV","","","","Fallbacks: UniformMatrix4x3fvNV","","","","Fallbacks: UnmapBufferARB, UnmapBufferOES","","","","Fallbacks: UseProgramObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ValidateProgramARB","","","","","","","","","","","","","","","","","","","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV","","Fallbacks: VertexAttrib4NbvARB","","Fallbacks: VertexAttrib4NivARB","","Fallbacks: VertexAttrib4NsvARB","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV","","Fallbacks: VertexAttrib4NuivARB","","Fallbacks: VertexAttrib4NusvARB","","Fallbacks: VertexAttrib4bvARB","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV","","Fallbacks: VertexAttrib4ivARB","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV","","Fallbacks: VertexAttrib4ubvARB","","Fallbacks: VertexAttrib4uivARB","","Fallbacks: VertexAttrib4usvARB","","","","Fallbacks: VertexAttribDivisorANGLE, …","","","","Fallbacks: VertexAttribI1iEXT","","Fallbacks: VertexAttribI1ivEXT","","Fallbacks: VertexAttribI1uiEXT","","Fallbacks: VertexAttribI1uivEXT","","Fallbacks: VertexAttribI2iEXT","","Fallbacks: VertexAttribI2ivEXT","","Fallbacks: VertexAttribI2uiEXT","","Fallbacks: VertexAttribI2uivEXT","","Fallbacks: VertexAttribI3iEXT","","Fallbacks: VertexAttribI3ivEXT","","Fallbacks: VertexAttribI3uiEXT","","Fallbacks: VertexAttribI3uivEXT","","Fallbacks: VertexAttribI4bvEXT","","Fallbacks: VertexAttribI4iEXT","","Fallbacks: VertexAttribI4ivEXT","","Fallbacks: VertexAttribI4svEXT","","Fallbacks: VertexAttribI4ubvEXT","","Fallbacks: VertexAttribI4uiEXT","","Fallbacks: VertexAttribI4uivEXT","","Fallbacks: VertexAttribI4usvEXT","","","","Fallbacks: VertexAttribIPointerEXT","","Fallbacks: VertexAttribL1dEXT","","Fallbacks: VertexAttribL1dvEXT","","Fallbacks: VertexAttribL2dEXT","","Fallbacks: VertexAttribL2dvEXT","","Fallbacks: VertexAttribL3dEXT","","Fallbacks: VertexAttribL3dvEXT","","Fallbacks: VertexAttribL4dEXT","","Fallbacks: VertexAttribL4dvEXT","","","","Fallbacks: VertexAttribLPointerEXT","","","","","","","","","","","","","","","","","","Fallbacks: VertexAttribPointerARB","","","","","","","","","","","","","","","","","","Fallbacks: ViewportArrayvNV, ViewportArrayvOES","","Fallbacks: ViewportIndexedfOES, ViewportIndexedfNV","","Fallbacks: ViewportIndexedfvOES, ViewportIndexedfvNV","","","","Fallbacks: WaitSyncAPPLE","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Load each OpenGL symbol using a custom load function. This …","Creates a <code>FnPtr</code> from a load attempteturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,0,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],0,[2],0,[[1,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],0,[[2,1]],0,[[2,1,1]],0,[2],0,[[1,1,3]],0,[[2,1]],0,[[2,1,1]],0,[[2,1,1,4,5]],0,[[2,1,6,1]],0,[[2,1,6,1,4,5]],0,[[1,1,3]],0,[[1,1,1,3]],0,[[2,1]],0,[[1,1,7,8,7,2,2]],0,[[1,6,1]],0,[1],0,[[2,1]],0,[[1,1]],0,[[1,6,1]],0,[[2,1]],0,[[1,1]],0,[[1,6,1]],0,[[2,1]],0,[1],0,[[1,1,4,6]],0,[[1,6,1,4,6]],0,[[9,9,9,9]],0,[2],0,[[2,2]],0,[[1,2,2]],0,[[1,2]],0,[[2,2]],0,[[2,2,2,2]],0,[[1,2,2,2,2]],0,[[1,2,2]],0,[[7,7,7,7,7,7,7,7,10,2]],0,[[1,1,7,7,7,7,7,7,7,7,10,2]],0,[[2,5,11,2]],0,[[2,5,11,10]],0,[[2,4,5,11]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,2],0,[[1,2],2],0,[[2,2]],0,[10],0,[[2,2,2,2,11]],0,[[2,2,4,5,2,2,11]],0,[[2,7,9,7]],0,[[2,7,9]],0,[[2,7,7]],0,[[2,7,1]],0,[[9,9,9,9]],0,[12],0,[9],0,[[1,2,2,2,11]],0,[[1,2,4,5,2,2,11]],0,[[1,2,7,9,7]],0,[[1,2,7,9]],0,[[1,2,7,7]],0,[[1,2,7,1]],0,[7],0,[[1,7,2,2,11]],0,[[1,7,7,7,7,6,6,6,2,2,11]],0,[[13,10,14],2],0,[[2,2]],0,[[8,8,8,8]],0,[[1,8,8,8,8]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[1],0,[[2,7,2,6,7,6,11]],0,[[2,7,2,6,6,7,6,11]],0,[[2,7,2,6,6,6,7,6,11]],0,[[2,7,7,6,2,6,11]],0,[[2,7,7,7,6,6,2,6,11]],0,[[2,7,7,7,7,6,6,6,2,6,11]],0,[[1,7,7,6,2,6,11]],0,[[1,7,7,7,6,6,2,6,11]],0,[[1,7,7,7,7,6,6,6,2,6,11]],0,[[2,2,4,4,5]],0,[[1,2,7,7,7,7,1,2,7,7,7,7,6,6,6]],0,[[1,1,4,4,5]],0,[[2,7,2,7,7,6,7]],0,[[2,7,2,7,7,6,6,7]],0,[[2,7,7,7,7,6]],0,[[2,7,7,7,7,7,6,6]],0,[[2,7,7,7,7,7,7,6,6]],0,[[1,7,7,7,7,6]],0,[[1,7,7,7,7,7,6,6]],0,[[1,7,7,7,7,7,7,6,6]],0,[[6,1]],0,[[6,1]],0,[[],1],0,[[6,1]],0,[[2,6,1]],0,[[6,1]],0,[[6,1]],0,[2,1],0,[[2,6,3],1],0,[[2,6,1]],0,[[6,1]],0,[[6,1]],0,[2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[15,11]],0,[[2,2,2,6,1,8]],0,[[2,2,1,2,6,3]],0,[[6,1]],0,[[6,1]],0,[1],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[1],0,[13],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[2],0,[8],0,[[12,12]],0,[[1,6,12]],0,[[1,12,12]],0,[[9,9]],0,[[1,1]],0,[2],0,[[1,1]],0,[1],0,[[2,1]],0,[[1,1,1]],0,[4],0,[[2,7,6]],0,[[2,11]],0,[[2,7,6,6]],0,[[2,7,6,6,1]],0,[2],0,[[6,2]],0,[[2,6,2,11]],0,[[2,6,2,11,7]],0,[[2,2,11]],0,[[2,6,2,11,6]],0,[[2,6,2,11,6,1]],0,[[2,6,2,11,6,7]],0,[[2,6,2,11,6,7,1]],0,[[2,1,1,6,2,11]],0,[[2,1,1,6,2,11,7]],0,[[2,1]],0,[[2,1,6]],0,[[2,1,1]],0,[[2,1,1,6]],0,0,0,0,0,0,0,[2],0,[[1,1]],0,[1],0,[[2,1]],0,[[]],0,[2],0,[[2,1]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,10],13],0,[[]],0,[[]],0,[[2,4,5]],0,[[1,4,5]],0,0,[[2,2,7]],0,[[2,2,2,1]],0,[[2,2,1,7]],0,[[2,2,2,1,7]],0,[[2,2,2,1,7]],0,[[2,2,2,1,7,7]],0,[[2,2,1,7,7]],0,[2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[2],0,[1],0,[[1,1,2,7]],0,[[1,1,6,6,7,2,3]],0,[[1,2,1,6,6,3]],0,[[1,2,1,6,6,3]],0,[[1,2,1,2,7]],0,[[1,1,6,6,7,2,3]],0,[[1,1,6,6,3]],0,[[1,1,2,7]],0,[[1,1,6,6,3]],0,[[1,6,1,2,7]],0,[[1,6,6,1]],0,[[1,3],7],0,[[2,1,8]],0,[[2,8]],0,[[2,2,16]],0,[[2,2,7]],0,[[2,2,11]],0,[[2,4,5,11]],0,[[2,7,11]],0,[[1,7,6,11]],0,[[1,7,7,7,7,6,6,6,6,11]],0,[[1,6,2,2,1,2,6,3],1],0,[[2,1,12]],0,[[2,12]],0,[[],2],0,[[2,1,9]],0,[[2,9]],0,[[1,3],7],0,[[1,3],7],0,[[2,2,2,7]],0,[[2,2,7]],0,[[],2],0,[[2,1,16]],0,[[2,16]],0,[[2,1,7]],0,[[2,7]],0,[[2,2,2,6,16]],0,[[2,2,2,6,7]],0,[[2,1,9]],0,[[1,2,16]],0,[[1,2,7]],0,[[1,2,11]],0,[[1,4,5,11]],0,[[1,2,2,7]],0,[[1,2,7]],0,[[1,2,7]],0,[[2,1,6,6,3]],0,[[11,6,6,3]],0,[[2,11]],0,[[1,6,6,2,11]],0,[[1,6,6,3]],0,[[1,2,2,7]],0,[[1,6,6,3]],0,[[1,2,7]],0,[[1,2,3],1],0,[[1,2,3],7],0,[[1,2,3],7],0,[[1,2,1,6,6,3]],0,[[1,2,1,6,2,6,6,7]],0,[[1,2,2,7]],0,[[1,2,7]],0,[[1,1,2,4]],0,[[1,1,2,4]],0,[[1,1,2,4]],0,[[1,1,2,4]],0,[[2,1,2,7]],0,[[1,2,16]],0,[[1,2,7]],0,[[1,2,14]],0,[[1,2,1]],0,[[2,2,7]],0,[[2,2,7]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,9]],0,[[1,2,7]],0,[[1,6,6,3]],0,[[2,2,7,7]],0,[[1,6,6,3]],0,[[1,2,7]],0,[2,17],0,[[2,1],17],0,[[1,2,3],1],0,[[1,2,3],7],0,[[13,2,6,6,7]],0,[[2,7,2,2,11]],0,[[2,7,2,9]],0,[[2,7,2,7]],0,[[2,2,7]],0,[[2,2,1]],0,[[2,2,9]],0,[[2,2,7]],0,[[1,7,2,2,6,11]],0,[[1,7,2,9]],0,[[1,7,2,7]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,9]],0,[[1,2,7]],0,[[1,7,7,7,7,6,6,6,2,2,6,11]],0,[[1,1,6,6,6,2,3]],0,[[1,2,1,16]],0,[[1,2,1,7]],0,[[1,2,7]],0,[[1,3],1],0,[[1,6,3,1]],0,[[1,3],7],0,[[2,7,1]],0,[[1,7,12]],0,[[1,7,9]],0,[[1,7,7]],0,[[1,7,1]],0,[[1,1,2,16]],0,[[1,1,2,7]],0,[[1,2,7]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,12]],0,[[1,2,11]],0,[[1,2,12]],0,[[1,2,9]],0,[[1,2,7]],0,[[2,2,2,6,11]],0,[[2,7,6,11]],0,[[2,2,2,6,11]],0,[[2,8,2,2,6,11]],0,[[2,2,6,12]],0,[[2,2,6,9]],0,[[2,2,6,7]],0,[[2,8,2,2,6,11]],0,[[2,6,9]],0,[[2,6,1]],0,[[2,6,18]],0,[[6,17]],0,[[2,2,2,6,11,6,11,11]],0,[[2,7,2,2,6,11]],0,[[1,7,6,12]],0,[[1,7,6,9]],0,[[1,7,6,7]],0,[[1,7,6,1]],0,0,0,0,[[2,2]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,[[1,4,5]],0,[[2,6,2]],0,[[1,6,2]],0,[[1,6,2,7,7,6,6]],0,[[2,6,2,7,7,6,6]],0,[[1,7]],0,[[1,7,7,7,7,6,6,6]],0,[1,8],0,[2,8],0,[[2,1],8],0,[1,8],0,[1,8],0,[1,8],0,[1,8],0,[1,8],0,[1,8],0,[1,8],0,[13,8],0,[1,8],0,[1,8],0,[1,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9],0,[1],0,[2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,2],11],0,[[2,4,5,10],11],0,[[1,2],11],0,[[1,4,5,10],11],0,[10],0,[10],0,[9],0,[[2,7,6,6]],0,[[2,11,6,6]],0,[[2,6,2,11,6]],0,[[2,6,2,11,6,7]],0,[[2,2,11,6,6]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,5,11,2]],0,[[1,5,11,10]],0,[[1,4,5,11]],0,[[1,2]],0,[[1,6,2]],0,[[1,2,7]],0,[[1,2]],0,[[1,2,2,1]],0,[[1,2,1,7]],0,[[1,2,1,7,7]],0,[[1,2,6,6]],0,[[1,6,2,6,6]],0,[[2,1]],0,[[2,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,1,6,3]],0,[[11,6,3]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,9]],0,[[2,7]],0,[[]],0,[[2,9]],0,[[2,7]],0,[[2,9]],0,[[2,9]],0,[[2,7]],0,[[2,7]],0,[9],0,[[2,2]],0,[[9,9]],0,[[]],0,[1],0,[[1,2,11,6]],0,[[1,2,7]],0,[[1,7,12]],0,[[1,7,6,12]],0,[[1,7,9]],0,[[1,7,6,9]],0,[[1,7,7]],0,[[1,7,6,7]],0,[[1,7,1]],0,[[1,7,6,1]],0,[[1,7,12,12]],0,[[1,7,6,12]],0,[[1,7,9,9]],0,[[1,7,6,9]],0,[[1,7,7,7]],0,[[1,7,6,7]],0,[[1,7,1,1]],0,[[1,7,6,1]],0,[[1,7,12,12,12]],0,[[1,7,6,12]],0,[[1,7,9,9,9]],0,[[1,7,6,9]],0,[[1,7,7,7,7]],0,[[1,7,6,7]],0,[[1,7,1,1,1]],0,[[1,7,6,1]],0,[[1,7,12,12,12,12]],0,[[1,7,6,12]],0,[[1,7,9,9,9,9]],0,[[1,7,6,9]],0,[[1,7,7,7,7,7]],0,[[1,7,6,7]],0,[[1,7,1,1,1,1]],0,[[1,7,6,1]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[2],0,[[2,1,6,3]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2],0,[[7,7,6,6,2,2,11]],0,[[7,7,6,6,2,2,6,11]],0,[[]],0,[[2,2,6,6]],0,[[2,6,2,6,6]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,8]],0,[[1,10]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,9]],0,[[1,2,9]],0,[[1,2,7]],0,[[1,2,7]],0,[[7,7,6,6]],0,[[1,6,7]],0,[[1,7,7,6,6]],0,[[1,7]],0,[[2,1]],0,[[2,1]],0,[[6,1,2,11,6]],0,[[1,6,3,7]],0,[[1,1,1]],0,[[2,7,1]],0,[[2,2,7,1]],0,[1],0,[[2,1]],0,[[2,2,2]],0,[[2,2,2,2]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,2,1]],0,[[2,2,1,4,5]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,7,7,6,7,2,2,11]],0,[[2,7,7,6,6,7,2,2,11]],0,[[2,6,2,6,6,8]],0,[[2,7,7,6,6,6,7,2,2,11]],0,[[2,6,2,6,6,6,8]],0,[[2,2,7]],0,[[2,2,1]],0,[[2,2,9]],0,[[2,2,9]],0,[[2,2,7]],0,[[2,2,7]],0,[[2,6,2,6]],0,[[2,6,2,6,6]],0,[[2,6,2,6,6,8]],0,[[2,6,2,6,6,6]],0,[[2,6,2,6,6,6,8]],0,[[2,7,7,6,2,2,11]],0,[[2,7,7,7,6,6,2,2,11]],0,[[2,7,7,7,7,6,6,6,2,2,11]],0,[[]],0,[[1,2,1]],0,[[1,2,1,4,5]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,9]],0,[[1,2,9]],0,[[1,2,7]],0,[[1,2,7]],0,[[1,6,2,6]],0,[[1,6,2,6,6]],0,[[1,6,2,6,6,8]],0,[[1,6,2,6,6,6]],0,[[1,6,2,6,6,6,8]],0,[[1,7,7,6,2,2,11]],0,[[1,7,7,7,6,6,2,2,11]],0,[[1,7,7,7,7,6,6,6,2,2,11]],0,[[1,2,1,2,1,1,1,1]],0,[[1,1,1]],0,[[1,1,1,4,5]],0,[[1,6,3,2]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[7,12]],0,[[7,6,12]],0,[[7,9]],0,[[7,6,9]],0,[[7,7]],0,[[7,6,7]],0,[[7,1]],0,[[7,6,1]],0,[[7,12,12]],0,[[7,6,12]],0,[[7,9,9]],0,[[7,6,9]],0,[[7,7,7]],0,[[7,6,7]],0,[[7,1,1]],0,[[7,6,1]],0,[[7,12,12,12]],0,[[7,6,12]],0,[[7,9,9,9]],0,[[7,6,9]],0,[[7,7,7,7]],0,[[7,6,7]],0,[[7,1,1,1]],0,[[7,6,1]],0,[[7,12,12,12,12]],0,[[7,6,12]],0,[[7,9,9,9,9]],0,[[7,6,9]],0,[[7,7,7,7,7]],0,[[7,6,7]],0,[[7,1,1,1,1]],0,[[7,6,1]],0,[[1,1,1]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[2,6,1]],0,[2,8],0,[1,8],0,[1],0,[[1,10,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,[1],0,[[1,1,1]],0,[[1,1,7,2,8,1]],0,[[1,1,7,2,1]],0,[[1,1,7,2,1]],0,[[1,1,1]],0,[[1,1]],0,[[1,1,1,4,6]],0,[[1,1,6,1,4,6]],0,[[1,12]],0,[[1,12]],0,[[1,9]],0,[[1,9]],0,[[1,19]],0,[[1,19]],0,[[1,12,12]],0,[[1,12]],0,[[1,9,9]],0,[[1,9]],0,[[1,19,19]],0,[[1,19]],0,[[1,12,12,12]],0,[[1,12]],0,[[1,9,9,9]],0,[[1,9]],0,[[1,19,19,19]],0,[[1,19]],0,[[1,20]],0,[[1,7]],0,[[1,19]],0,[[1,17,17,17,17]],0,[[1,17]],0,[[1,1]],0,[[1,18]],0,[[1,20]],0,[[1,12,12,12,12]],0,[[1,12]],0,[[1,9,9,9,9]],0,[[1,9]],0,[[1,7]],0,[[1,19,19,19,19]],0,[[1,19]],0,[[1,17]],0,[[1,1]],0,[[1,18]],0,[[1,1]],0,[[1,1]],0,[[1,7,2,8,1]],0,[[1,7]],0,[[1,7]],0,[[1,1]],0,[[1,1]],0,[[1,7,7]],0,[[1,7]],0,[[1,1,1]],0,[[1,1]],0,[[1,7,7,7]],0,[[1,7]],0,[[1,1,1,1]],0,[[1,1]],0,[[1,20]],0,[[1,7,7,7,7]],0,[[1,7]],0,[[1,19]],0,[[1,17]],0,[[1,1,1,1,1]],0,[[1,1]],0,[[1,18]],0,[[1,7,2,1]],0,[[1,7,2,6,11]],0,[[1,12]],0,[[1,12]],0,[[1,12,12]],0,[[1,12]],0,[[1,12,12,12]],0,[[1,12]],0,[[1,12,12,12,12]],0,[[1,12]],0,[[1,7,2,1]],0,[[1,7,2,6,11]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,7,2,8,6,11]],0,[[1,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[7,7,6,6]],0,[[1,6,9]],0,[[1,9,9,9,9]],0,[[1,9]],0,0,0,[[13,10,14]],0,0,0,[[]],[[]],[[]],[[]],[21],[11,22],[[],23],[[],23],[[],24],0,[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24]],"c":[],"p":[[6,"GLuint"],[6,"GLenum"],[6,"GLchar"],[6,"GLintptr"],[6,"GLsizeiptr"],[6,"GLsizei"],[6,"GLint"],[6,"GLboolean"],[6,"GLfloat"],[6,"GLbitfield"],[6,"c_void"],[6,"GLdouble"],[6,"GLsync"],[6,"GLuint64"],[6,"GLDEBUGPROC"],[6,"GLint64"],[6,"GLubyte"],[6,"GLushort"],[6,"GLshort"],[6,"GLbyte"],[8,"FnMut"],[3,"FnPtr"],[4,"Result"],[3,"TypeId"],[15,"bool"],[4,"__GLsync"],[4,"_cl_context"],[4,"_cl_event"]]},\
"glutin":{"doc":"The purpose of this library is to provide an OpenGL <code>context</code>…","t":"AAAAAAAAAAAAAAADLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLAAAADLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLDIEEDDDNNSSSIINSSSENQSNNLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKKLLLLLKLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLKLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMINEDDNNNNNIENNNEQIINNEQQIIEENNEQQDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMKKLLKKLLKLMLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLISSSSQEEDNNNNSIIISQQQESSQNNNNQLLLLLLLLLLLLLLLLLLLLLLLLLKLKLKLKLLKLLLLLLKKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLKLNNNNNNNNNNNNNNNDENNNNNGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCIQNNNIENDNDEDIEDDEQIENNNNDNNNLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLKLKLKLKLLLKLKLKLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLLLLMM","n":["api","config","context","display","error","platform","prelude","surface","egl","wgl","config","context","device","display","surface","Config","alpha_size","api","borrow","borrow_mut","clone","clone_into","color_buffer_type","config_surface_types","depth_size","display","eq","equivalent","float_pixels","fmt","from","hardware_accelerated","into","native_visual","num_samples","raw_config","srgb_capable","stencil_size","supports_transparency","to_owned","try_from","try_into","type_id","NotCurrentContext","PossiblyCurrentContext","borrow","borrow","borrow_mut","borrow_mut","config","config","context_api","context_api","display","display","fmt","fmt","from","from","into","into","is_current","make_current","make_current","make_current_draw_read","make_current_draw_read","make_current_surfaceless","make_current_surfaceless","make_not_current","raw_context","raw_context","treat_as_possibly_current","try_from","try_from","try_into","try_into","type_id","type_id","Device","borrow","borrow_mut","clone","clone_into","eq","equivalent","extensions","fmt","from","into","name","query_devices","raw_device","to_owned","try_from","try_into","type_id","vendor","Display","borrow","borrow_mut","clone","clone_into","create_context","create_pbuffer_surface","create_pixmap_surface","create_window_surface","device","extensions","find_configs","fmt","from","get_proc_address","into","new","raw_display","supported_features","to_owned","try_from","try_into","type_id","version_string","with_device","Surface","borrow","borrow_mut","buffer_age","config","display","drop","fmt","from","height","into","is_current","is_current_draw","is_current_read","is_single_buffered","raw_surface","resize","set_swap_interval","swap_buffers","swap_buffers_with_damage","try_from","try_into","type_id","width","config","context","display","surface","Config","alpha_size","api","apply_on_native_window","borrow","borrow_mut","clone","clone_into","color_buffer_type","config_surface_types","depth_size","display","eq","equivalent","float_pixels","fmt","from","hardware_accelerated","into","num_samples","raw_config","srgb_capable","stencil_size","supports_transparency","to_owned","try_from","try_into","type_id","NotCurrentContext","PossiblyCurrentContext","borrow","borrow","borrow_mut","borrow_mut","config","config","context_api","context_api","display","display","fmt","fmt","from","from","into","into","is_current","make_current","make_current","make_current_draw_read","make_current_draw_read","make_not_current","raw_context","raw_context","treat_as_possibly_current","try_from","try_from","try_into","try_into","type_id","type_id","Display","borrow","borrow_mut","clone","clone_into","create_context","create_pbuffer_surface","create_pixmap_surface","create_window_surface","extensions","find_configs","fmt","from","get_proc_address","into","new","raw_display","supported_features","to_owned","try_from","try_into","type_id","version_string","Surface","borrow","borrow_mut","buffer_age","config","display","drop","fmt","from","height","into","is_current","is_current_draw","is_current_read","is_single_buffered","raw_surface","resize","set_swap_interval","swap_buffers","try_from","try_into","type_id","width","Api","AsRawConfig","ColorBufferType","Config","ConfigSurfaceTypes","ConfigTemplate","ConfigTemplateBuilder","Egl","Egl","GLES1","GLES2","GLES3","GetGlConfig","GlConfig","Luminance","OPENGL","PBUFFER","PIXMAP","RawConfig","Rgb","Target","WINDOW","Wgl","Wgl","all","all","alpha_size","alpha_size","api","api","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","color_buffer_type","color_buffer_type","compatible_with_native_window","complement","complement","config","config_surface_types","config_surface_types","contains","contains","default","default","depth_size","depth_size","difference","difference","display","empty","empty","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","float_pixels","float_pixels","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hardware_accelerated","hardware_accelerated","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","new","not","not","num_samples","num_samples","partial_cmp","partial_cmp","prefer_hardware_accelerated","raw_config","raw_config","remove","remove","set","set","srgb_capable","srgb_capable","stencil_size","stencil_size","sub","sub","sub_assign","sub_assign","supports_transparency","supports_transparency","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","with_alpha_size","with_api","with_buffer_type","with_depth_size","with_float_pixels","with_multisampling","with_pbuffer_sizes","with_single_buffering","with_stencil_size","with_stereoscopy","with_surface_type","with_swap_interval","with_transparency","b_size","g_size","r_size","AsRawContext","Compatibility","ContextApi","ContextAttributes","ContextAttributesBuilder","Core","Egl","Egl","Egl","Flush","GlContext","GlProfile","Gles","NoError","None","NotCurrentContext","NotCurrentContext","NotCurrentGlContext","NotCurrentGlContextSurfaceAccessor","NotRobust","OpenGl","PossiblyCurrentContext","PossiblyCurrentContext","PossiblyCurrentContext","PossiblyCurrentContextGlSurfaceAccessor","PossiblyCurrentGlContext","RawContext","ReleaseBehavior","RobustLoseContextOnReset","RobustNoResetNotification","Robustness","Surface","Surface","Version","Wgl","Wgl","Wgl","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","config","config","context_api","context_api","context_api","default","default","default","default","default","display","display","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","is_current","is_current","major","make_current","make_current","make_current","make_current","make_current_draw_read","make_current_draw_read","make_current_draw_read","make_current_draw_read","make_not_current","make_not_current","minor","new","new","partial_cmp","raw_context","raw_context","raw_context","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","treat_as_possibly_current","treat_as_possibly_current","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_context_api","with_debug","with_profile","with_release_behavior","with_robustness","with_sharing","AsRawDisplay","CONTEXT_NO_ERROR","CONTEXT_RELEASE_BEHAVIOR","CONTEXT_ROBUSTNESS","CREATE_ES_CONTEXT","Config","Display","DisplayApiPreference","DisplayFeatures","Egl","Egl","Egl","EglThenWgl","FLOAT_PIXEL_FORMAT","GetDisplayExtensions","GetGlDisplay","GlDisplay","MULTISAMPLING_PIXEL_FORMATS","NotCurrentContext","PbufferSurface","PixmapSurface","RawDisplay","SRGB_FRAMEBUFFERS","SWAP_CONTROL","Target","Wgl","Wgl","Wgl","WglThenEgl","WindowSurface","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","create_context","create_context","create_pbuffer_surface","create_pbuffer_surface","create_pixmap_surface","create_pixmap_surface","create_window_surface","create_window_surface","difference","display","empty","eq","eq","equivalent","equivalent","extend","extensions","find_configs","find_configs","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_proc_address","get_proc_address","hash","insert","intersection","intersects","into","into","into","into","is_all","is_empty","new","not","partial_cmp","raw_display","raw_display","remove","set","sub","sub_assign","supported_features","supported_features","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","version_string","version_string","BadAccess","BadAttribute","BadConfig","BadContext","BadContextState","BadCurrentSurface","BadDisplay","BadMatch","BadNativePixmap","BadNativeWindow","BadParameter","BadPbuffer","BadPixmap","BadSurface","ContextLost","Error","ErrorKind","InitializationFailed","Misc","NotFound","NotSupported","OutOfMemory","Result","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","error_kind","fmt","fmt","fmt","fmt","from","from","from","from","hash","into","into","not_supported","raw_code","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","GlConfig","GlDisplay","GlSurface","NotCurrentGlContext","NotCurrentGlContextSurfaceAccessor","PossiblyCurrentContextGlSurfaceAccessor","PossiblyCurrentGlContext","AsRawSurface","Context","DontWait","Egl","Egl","GlSurface","NativePixmap","Pbuffer","PbufferSurface","Pixmap","PixmapSurface","RawSurface","Rect","ResizeableSurface","Surface","SurfaceAttributes","SurfaceAttributesBuilder","SurfaceType","SurfaceType","SurfaceTypeTrait","SwapInterval","Wait","Wgl","Wgl","Window","WindowSurface","WindowsPixmap","XcbPixmap","XlibPixmap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_age","buffer_age","build","build","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","display","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","hash","height","height","height","into","into","into","into","into","into","into","into","into","into","into","is_current","is_current","is_current_draw","is_current_draw","is_current_read","is_current_read","is_single_buffered","is_single_buffered","new","new","raw_surface","raw_surface","resize","resize","set_swap_interval","set_swap_interval","surface_type","surface_type","surface_type","surface_type","swap_buffers","swap_buffers","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","width","width","with_largest_pbuffer","with_single_buffer","with_single_buffer","with_srgb","x","y"],"q":[[0,"glutin"],[8,"glutin::api"],[10,"glutin::api::egl"],[15,"glutin::api::egl::config"],[43,"glutin::api::egl::context"],[78,"glutin::api::egl::device"],[97,"glutin::api::egl::display"],[122,"glutin::api::egl::surface"],[146,"glutin::api::wgl"],[150,"glutin::api::wgl::config"],[178,"glutin::api::wgl::context"],[211,"glutin::api::wgl::display"],[234,"glutin::api::wgl::surface"],[257,"glutin::config"],[487,"glutin::config::ColorBufferType"],[490,"glutin::context"],[685,"glutin::display"],[818,"glutin::error"],[875,"glutin::prelude"],[882,"glutin::surface"]],"d":["The underlying OpenGL platform Api.","Api config picking and creating utils.","OpenGL context creation and initialization.","The OpenGL platform display selection and creation.","Glutin error handling.","Platform-specific API helpers.","The glutin prelude.","A cross platform OpenGL surface representation.","EGL platform Api.","WGL Api.","Everything related to finding and manipulating the …","Everything related to <code>EGLContext</code> management.","Everything related to <code>EGLDevice</code>.","Everything related to <code>EGLDisplay</code>.","Everything related to <code>EGLSurface</code>.","A simple wrapper around <code>EGLConfig</code> that could be used with …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","The native visual identifier.","","","","","","","","","","A wrapper around <code>EGLContext</code> that is known to be not …","A wrapper around <code>EGLContext</code> that could be current for the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Make a <code>Self::PossiblyCurrentContext</code> indicating that the …","Make this context current on the calling thread.","","","","","","","","","","","Wrapper for <code>EGLDevice</code>.","","","","","","","Get the device extensions supported by this device.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get the name of the device.","Query the available devices.","Get a raw handle to the <code>EGLDevice</code>.","","","","","Get the vendor of the device.","A wrapper for the <code>EGLDisplay</code> and its supported extensions.","","","","","","","","","Get the <code>Device</code> the display is using.","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create EGL display with the native display.","","","","","","","","Create an EGL display using the specified device.","A wrapper around <code>EGLSurface</code>.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Swaps the underlying back buffers when the surface is not …","","","","","Handling of PIXELFORMATDESCRIPTOR and pixel format index.","WGL context handling.","WGL display initialization and extension loading.","A wrapper around <code>HWND</code> used for GL operations.","A wrapper around <code>PIXELFORMAT</code>.","","","Set the pixel format on the native window.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","A wrapper around the WGL context that is known to be not …","A wrapper around WGL context that could be current to the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A WGL display.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create WGL display.","","","","","","","","A Wrapper around <code>HWND</code>.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The Api supported by the config.","Get the raw config.","The buffer type baked by the config.","The GL configuration used to create <code>Surface</code> and <code>Context</code> in …","The types of the surface supported by the config.","The context configuration template that is used to find …","Builder for the <code>ConfigTemplate</code>.","The EGL config.","Raw EGL config.","Context supports OpenGL ES 1 API.","Context supports OpenGL ES 2 API.","Context supports OpenGL ES 3 API.","The trait to","The trait to group all common config option.","The backing buffer is using Luminance.","Context supports OpenGL API.","Context must support pbuffers.","Context must support pixmaps.","Raw config.","The backing buffer is using RGB format.","The config type.","Context must support windows.","The WGL config.","WGL pixel format index.","Returns the set containing all flags.","Returns the set containing all flags.","The size of the alpha.","","The <code>crate::config::Api</code> supported by the configuration.","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","Build the template to match the configs against.","","","","","","","","","","","","","","","","","The type of the underlying color buffer.","","Request config that can render to a particular native …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Get the GL config used to create a particular GL object.","The type of the surfaces that can be created with this …","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","The size of the depth buffer.","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","Whether the config uses floating pixels.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Whether the config is hardware accelerated.","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Create a new configuration template builder.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","The number of samples in multisample buffer.","","","","Wether the configuration should prefer hardware …","Obtain the <code>RawConfig</code> of the underlying Api.","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Whether the config supports creating srgb capable <code>Surface</code>.","","The size of the stencil buffer.","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Whether the config supports creating transparent surfaces.","","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Number of alpha bits in the color buffer.","The set of apis that are supported by configuration.","The type of the color buffer.","Number of bits in the depth buffer.","Wether the floating pixel formats should be used.","Whether multisampling configurations should be picked. The …","With the maximum sizes of pbuffer.","Wether the single buffer should be used.","Number of bits in the stencil buffer.","Wether the stereo pairs should be present.","The types of the surfaces that must be supported by the …","With supported swap intervals.","Wether the configuration should support transparency.","Size of the blue component in bits.","Size of the green component in bits.","Size of the red component in bits.","A trait that provides raw context.","Include all the immediate more functions and definitions.","The rendering Api context should support.","The attributes that are used to create a graphics context.","The builder to help customizing context","Include all the future-compatible functions and …","The EGL context.","The EGL context.","Raw EGL context.","Flushes the context that was previously current as if …","A trait to group common context operations.","Describes the requested OpenGL context profiles.","OpenGL Api version that should be used by the context.","The driver doesn’t check anything. This option is very …","Doesn’t do anything. Most notably doesn’t flush. Not …","A context that is known to be not current on the current …","The not current context type.","A trait to group common not current operations.","A trait that splits the methods accessing …","Not everything is checked. Your application can crash if …","OpenGL Api version that should be used by the context.","A context that is possibly current on the current thread.","The type of possibly current context.","The possibly current context produced when making not …","A trait that splits the methods accessing …","A trait to group common context operations.","Raw context.","The behavior of the driver when you change the current …","Everything is checked to avoid any crash. If a problem …","Everything is checked to avoid any crash. The driver will …","Specifies the tolerance of the OpenGL context to faults. …","The surface supported by the context.","The surface supported by the context.","The version used to index the Api.","The WGL context.","The WGL context.","HGLRC pointer.","","","","","","","","","","","","","","","","","","","","","Build the context attributes.","","","","","","","","","","","","","","","","","","","","Get the <code>ContextApi</code> used by the context.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this context is the current one in this …","","Major version of the Api.","Make <code>Self::Surface</code> on the calling thread producing the …","Make <code>Self::Surface</code> current on the calling thread.","","","The same as <code>Self::make_current</code>, but provides a way to set …","The same as <code>Self::make_current</code> but provides a way to set …","","","Make the context not current to the current thread and …","","Minor version of the Api.","Create new builder.","Create new version with the given <code>major</code> and <code>minor</code> values.","","Get the raw context handle.","","","","","","","","","","","Treat the not current context as possibly current. The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the desired OpenGL context api. See the docs of …","Sets the <em>debug</em> flag for the OpenGL context.","Set the desired OpenGL context profile. See the docs of …","The behavior when changing the current context. See the …","Sets the robustness of the OpenGL context. See the docs of …","Share the display lists with the given context.","Get the raw handle to the <code>Display</code>.","The display supports creating <code>no error</code> context.","The display supports creating context with explicit …","The display supports creating <code>robust</code> context.","The display supports creating OpenGL ES <code>context</code>.","A config that is used by the display.","The graphics display to handle underlying graphics …","Preference of the display that should be used.","The features and extensions supported by the <code>Display</code>.","Use only EGL.","The EGL display.","Raw EGL display.","Prefer EGL and fallback to WGL.","The display supports <code>floating</code> pixel formats.","Obtain the underlying api extensions.","Get the <code>Display</code>.","A trait to group common display operations.","The display supports pixel formats with <code>multisampling</code>.","A context that is being used by the display.","A pbuffer surface created by the display.","A pixmap surface created by the display.","Raw GL platform display.","The display supports creating surfaces backed by <code>SRGB</code> …","The display supports changing the <code>swap interval</code> on …","The display used by the object.","Use only WGL.","The WGL display.","Raw display is WGL.","Prefer WGL and fallback to EGL.","A window surface created by the display.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Create the graphics platform context.","","Create the surface that can be used to render into pbuffer.","","Create the surface that can be used to render into pixmap.","","Create the surface that can be used to render into native …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Obtain the GL display used to create a particular GL …","Returns an empty set of flags.","","","","","","Supported extensions by the display.","Find configurations matching the given <code>template</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Return the address of an OpenGL function.","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Create a graphics platform display from the given raw …","Returns the complement of this set of flags.","","A raw handle to the underlying Api display.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Get the features supported by the display.","","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Helper to obtain the information about the underlying …","","Can’t access a requested resource.","An recognized attribute value was passed.","Invalid config was passed.","The context is no longer valid.","The context is in bad state.","The current surface of the calling thread is no longer …","The display is no longer valid.","Arguments are inconsistent. For example when shared …","Bad native pixmap was provided.","Bad native window was provided.","One or more argument values are invalid.","The pbuffer is invalid.","The pixmap is invalid.","The surface is invalid.","The context was lost.","The error type for all the graphics platform operations.","A list specifying general categoires of native platform …","Failed to perform resource initialization.","The misc error that can’t be classified occurred.","The requested display wasn’t found or some required …","The operation is not supported by the platform.","An operation could not be completed, because it failed to …","A specialized <code>Result</code> type for graphics operations.","","","","","","","","","","","The underlying error kind.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Helper to check that error is <code>ErrorKind::NotSupported</code>.","The underlying raw code in case it’s present.","","","","","","","","","","","","","","","","","","Trait for accessing the raw GL surface.","The context to access surface data.","When this variant is used calling …","The EGL surface.","A pointer to EGLSurface.","A trait to group common operations on the surface.","A platform native pixmap.","Pbuffer surface.","Marker that used to type-gate methods for pbuffer.","Pixmap surface.","Marker that used to type-gate methods for pixmap.","Handle to the raw OpenGL surface.","The rect that is being used in various surface operations.","Marker indicating that the surface could be resized.","The GL surface that is used for rendering.","Attributes which are used for creating a particular …","Builder to get the required set of attributes initialized …","The underlying type of the surface.","The type of the surface.","The marker trait to indicate the type of the surface.","A swap interval.","The swap is synchronized to the <code>n</code>’th video frame. This …","The WGL surface.","HWND","The window surface.","Marker that used to type-gate methods for window.","HBITMAP handle for windows bitmap.","XID of X11 pixmap from xcb.","XID of X11 pixmap.","","","","","","","","","","","","","","","","","","","","","","","The age of the back buffer of that surface. The <code>0</code> …","","Build the surface attributes suitable to create a pixmap …","Build the surface attributes suitable to create a pbuffer …","Build the surface attributes suitable to create a window …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","The <strong>physical</strong> height of the underlying surface.","","Rect height.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether the surface is current on to the current …","","Check whether the surface is the current draw surface to …","","Check whether the surface is the current read surface to …","","Check whether the surface is single buffered.","","Get new surface attributes.","Helper to simplify rectangle creation.","Get the raw handle to the surface.","","Resize the surface to a new size.","","Set swap interval for the surface.","","Get the type of the surface.","","","","Swaps the underlying back buffers when the surface is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <strong>physical</strong> width of the underlying surface.","","Rect width.","Request the largest pbuffer.","Specify whether the single buffer should be used instead …","The same as in …","Specify whether the surface should support srgb or not. …","<code>X</code> of the origin.","<code>Y</code> of the origin."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,15,14,15,14,15,14,15,15,14,15,14,14,15,14,15,14,15,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,46,47,46,47,46,46,47,47,46,47,46,47,46,47,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,0,0,50,11,3,3,3,0,0,4,3,6,6,0,4,78,6,50,11,6,3,79,50,79,50,6,3,6,3,6,3,6,3,6,3,6,3,6,3,51,32,6,3,4,50,11,51,32,6,3,4,50,11,51,51,32,6,3,4,50,11,51,32,6,3,4,50,11,6,3,79,50,51,6,3,78,79,50,6,3,51,32,79,50,6,3,50,6,3,6,3,4,50,11,6,3,4,50,11,6,3,79,50,51,32,6,6,6,6,6,3,3,3,3,3,4,50,11,51,32,6,3,4,50,11,6,3,6,3,6,3,6,3,79,50,6,3,6,3,6,3,6,3,51,32,6,3,4,50,11,6,3,6,3,51,6,3,79,50,6,3,51,80,50,6,3,6,3,79,50,79,50,6,3,6,3,79,50,6,3,51,32,6,3,4,50,11,6,3,51,32,6,3,4,50,11,51,32,6,3,4,50,11,51,32,6,3,4,50,11,6,3,51,51,51,51,51,51,51,51,51,51,51,51,51,81,81,81,0,58,0,0,0,58,61,62,20,60,0,0,16,57,60,0,82,0,0,57,16,0,83,84,0,0,0,0,57,57,0,84,85,0,61,62,20,56,27,57,58,16,59,60,61,62,20,56,27,57,58,16,59,60,61,62,20,56,56,27,57,58,16,59,60,20,56,27,57,58,16,59,60,20,59,61,62,86,61,62,56,27,57,16,60,61,62,57,58,16,59,60,20,57,58,16,59,60,20,56,27,57,58,16,59,60,61,62,20,56,27,57,58,16,59,60,61,62,20,56,27,57,58,16,59,60,61,62,20,82,62,59,84,85,61,62,84,85,61,62,82,62,59,56,59,59,63,61,62,56,27,57,58,16,59,60,20,83,61,56,27,57,58,16,59,60,61,62,20,56,27,57,58,16,59,60,61,62,20,56,27,57,58,16,59,60,61,62,20,56,56,56,56,56,56,0,37,37,37,37,87,0,0,0,65,64,36,65,37,0,0,0,37,87,87,87,0,37,37,88,65,64,36,65,87,37,37,37,37,37,37,37,37,65,64,37,36,65,64,37,36,64,37,36,64,37,36,37,37,37,87,64,87,64,87,64,87,64,37,88,37,37,36,37,36,37,89,87,64,65,64,37,37,37,37,37,36,65,64,37,36,37,37,37,37,87,64,37,37,37,37,65,64,37,36,37,37,64,37,37,90,64,37,37,37,37,87,64,37,64,37,36,37,65,64,37,36,65,64,37,36,65,64,37,36,37,87,64,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,0,67,67,67,67,67,0,66,67,66,67,66,67,66,67,67,67,66,66,66,67,67,66,66,66,67,67,66,67,66,66,66,67,66,67,66,67,66,67,66,67,0,0,0,0,0,0,0,0,91,41,70,39,0,0,75,0,75,0,0,0,0,0,0,0,0,91,0,0,41,70,39,75,0,72,72,72,71,29,31,28,30,75,70,41,72,39,42,71,29,31,28,30,75,70,41,72,39,42,91,70,71,71,71,71,29,31,28,30,75,41,72,39,42,71,29,31,28,30,75,41,72,39,42,71,29,31,28,30,42,70,31,28,30,41,72,39,42,31,28,30,41,72,39,42,71,29,31,28,30,75,70,41,72,39,42,71,29,31,28,30,75,70,41,72,39,42,42,91,70,42,71,29,31,28,30,75,70,41,72,39,42,91,70,91,70,91,70,91,70,71,42,92,70,91,70,91,70,17,31,28,30,91,70,71,29,31,28,30,75,41,72,39,42,71,29,31,28,30,75,70,41,72,39,42,71,29,31,28,30,75,70,41,72,39,42,71,29,31,28,30,75,70,41,72,39,42,91,70,42,71,71,71,71,42,42],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,3],[[]],[[]],[1,1],[[]],[1,[[5,[4]]]],[1,6],[1,2],[1],[[1,1],7],[[],7],[1,7],[[1,8],9],[[]],[1,7],[[]],[1,10],[1,2],[1,11],[1,7],[1,2],[1,[[5,[7]]]],[[]],[[],12],[[],12],[[],13],0,0,[[]],[[]],[[]],[[]],[14],[15],[14,16],[15,16],[14],[15],[[14,8],9],[[15,8],9],[[]],[[]],[[]],[[]],[15,7],[[14,[18,[17]]],[[19,[15]]]],[15,19],[[14,[18,[17]],[18,[17]]],[[19,[15]]]],[15,19],[14,[[19,[15]]]],[15,19],[15,19],[14,20],[15,20],[14],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],0,[[]],[[]],[21,21],[[]],[[21,21],7],[[],7],[21,[[23,[22]]]],[[21,8],9],[[]],[[]],[21,[[5,[22]]]],[[],[[19,[24]]]],[21,25],[[]],[[],12],[[],12],[[],13],[21,[[5,[22]]]],0,[[]],[[]],[26,26],[[]],[[26,27],19],[[26,[29,[28]]],19],[[26,[29,[30]]],19],[[26,[29,[31]]],19],[26,[[19,[21]]]],[26,[[23,[22]]]],[[26,32],[[19,[[33,[24]]]]]],[[26,8],9],[[]],[[26,34],25],[[]],[35,[[19,[26]]]],[26,36],[26,37],[[]],[[],12],[[],12],[[],13],[26,38],[[21,[5,[35]]],[[19,[26]]]],0,[[]],[[]],[[[18,[17]]],10],[[[18,[17]]]],[[[18,[17]]]],[[[18,[17]]]],[[[18,[17]],8],9],[[]],[[[18,[17]]],[[5,[10]]]],[[]],[[[18,[17]]],7],[[[18,[17]]],7],[[[18,[17]]],7],[[[18,[17]]],7],[[[18,[17]]],39],[[[18,[17]],40,40]],[[[18,[17]],41],19],[[[18,[17]]],19],[[[18,[17]],15,[43,[42]]],19],[[],12],[[],12],[[],13],[[[18,[17]]],[[5,[10]]]],0,0,0,0,0,[44,2],[44,3],[[44,45],19],[[]],[[]],[44,44],[[]],[44,[[5,[4]]]],[44,6],[44,2],[44],[[44,44],7],[[],7],[44,7],[[44,8],9],[[]],[44,7],[[]],[44,2],[44,11],[44,7],[44,2],[44,[[5,[7]]]],[[]],[[],12],[[],12],[[],13],0,0,[[]],[[]],[[]],[[]],[46],[47],[46,16],[47,16],[46],[47],[[46,8],9],[[47,8],9],[[]],[[]],[[]],[[]],[46,7],[46,19],[47,19],[46,19],[47,19],[46,19],[46,20],[47,20],[47,46],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],0,[[]],[[]],[48,48],[[]],[[48,27],19],[[48,[29,[28]]],19],[[48,[29,[30]]],19],[[48,[29,[31]]],19],[48,[[23,[22]]]],[[48,32],[[19,[[33,[24]]]]]],[[48,8],9],[[]],[[48,34],25],[[]],[[35,[5,[45]]],[[19,[48]]]],[48,36],[48,37],[[]],[[],12],[[],12],[[],13],[48,38],0,[[]],[[]],[[[49,[17]]],10],[[[49,[17]]]],[[[49,[17]]]],[[[49,[17]]]],[[[49,[17]],8],9],[[]],[[[49,[17]]],[[5,[10]]]],[[]],[[[49,[17]]],7],[[[49,[17]]],7],[[[49,[17]]],7],[[[49,[17]]],7],[[[49,[17]]],39],[[[49,[17]],40,40]],[[[49,[17]],41],19],[[[49,[17]]],19],[[],12],[[],12],[[],13],[[[49,[17]]],[[5,[10]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],3],[[],2],[50,2],[[],3],[50,3],[[6,6],6],[[3,3],3],[[6,6]],[[3,3]],[[6,6],6],[[3,3],3],[[6,6]],[[3,3]],[6,2],[3,2],[[6,6],6],[[3,3],3],[[6,6]],[[3,3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,32],[51,51],[32,32],[6,6],[3,3],[4,4],[50,50],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],52],[[3,3],52],[[],[[5,[4]]]],[50,[[5,[4]]]],[[51,45],51],[6,6],[3,3],[[]],[[],6],[50,6],[[6,6],7],[[3,3],7],[[],51],[[],32],[[],2],[50,2],[[6,6],6],[[3,3],3],[50],[[],6],[[],3],[[6,6],7],[[3,3],7],[[4,4],7],[[50,50],7],[[11,11],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[6,53]],[[3,53]],[[],7],[50,7],[[51,8],9],[[32,8],9],[[6,8],9],[[6,8],9],[[6,8],9],[[6,8],9],[[6,8],9],[[3,8],9],[[3,8],9],[[3,8],9],[[3,8],9],[[3,8],9],[[4,8],9],[[50,8],9],[[11,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[5,[6]]]],[2,[[5,[3]]]],[2,6],[2,3],[2,6],[2,3],[53,6],[53,3],[[],7],[50,7],[[6,54]],[[3,54]],[[6,6]],[[3,3]],[[6,6],6],[[3,3],3],[[6,6],7],[[3,3],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,7],[3,7],[6,7],[3,7],[[],51],[6,6],[3,3],[[],2],[50,2],[[6,6],[[5,[52]]]],[[3,3],[[5,[52]]]],[[51,[5,[7]]],51],[[],11],[50,11],[[6,6]],[[3,3]],[[6,6,7]],[[3,3,7]],[[],7],[50,7],[[],2],[50,2],[[6,6],6],[[3,3],3],[[6,6]],[[3,3]],[[],[[5,[7]]]],[50,[[5,[7]]]],[[6,6],6],[[3,3],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6]],[[3,3]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[6,6],6],[[3,3],3],[[51,2],51],[[51,3],51],[[51,4],51],[[51,2],51],[[51,7],51],[[51,2],51],[[51,40,40],51],[[51,7],51],[[51,2],51],[[51,[5,[7]]],51],[[51,6],51],[[51,[5,[55]],[5,[55]]],51],[[51,7],51],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[56,[5,[45]]],27],[56,56],[27,27],[57,57],[58,58],[16,16],[59,59],[60,60],[20,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[59,59],52],[61],[62],[[],16],[61,16],[62,16],[[],56],[[],27],[[],57],[[],16],[[],60],[61],[62],[[57,57],7],[[58,58],7],[[16,16],7],[[59,59],7],[[60,60],7],[[20,20],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[56,8],9],[[27,8],9],[[57,8],9],[[58,8],9],[[16,8],9],[[59,8],9],[[60,8],9],[[61,8],9],[[62,8],9],[[20,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[62,7],0,[[],19],[[],19],[61,19],[62,19],[[],19],[[],19],[61,19],[62,19],[[],19],[62,19],0,[[],56],[[2,2],59],[[59,59],[[5,[52]]]],[[],20],[61,20],[62,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[56,16],56],[[56,7],56],[[56,58],56],[[56,60],56],[[56,57],56],[[56,63],56],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],37],[[37,37],37],[[37,37]],[[37,37],37],[[37,37]],[37,10],[[37,37],37],[[37,37]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,64],[37,37],[36,36],[[]],[[]],[[]],[[37,37],52],[37,37],[[37,37],7],[27,19],[[64,27],19],[[[29,[28]]],19],[[64,[29,[28]]],19],[[[29,[30]]],19],[[64,[29,[30]]],19],[[[29,[31]]],19],[[64,[29,[31]]],19],[[37,37],37],[[]],[[],37],[[37,37],7],[[36,36],7],[[],7],[[],7],[[37,53]],[[],[[23,[22]]]],[32,[[19,[[33,[24]]]]]],[[64,32],[[19,[[33,[24]]]]]],[[65,8],9],[[64,8],9],[[37,8],9],[[37,8],9],[[37,8],9],[[37,8],9],[[37,8],9],[[36,8],9],[[]],[[]],[[]],[[]],[10,[[5,[37]]]],[10,37],[10,37],[53,37],[34,25],[[64,34],25],[[37,54]],[[37,37]],[[37,37],37],[[37,37],7],[[]],[[]],[[]],[[]],[37,7],[37,7],[[35,65],[[19,[64]]]],[37,37],[[37,37],[[5,[52]]]],[[],36],[64,36],[[37,37]],[[37,37,7]],[[37,37],37],[[37,37]],[[],37],[64,37],[[37,37],37],[[]],[[]],[[]],[[37,37]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[37,37],37],[[],38],[64,38],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[66,66],[67,67],[[]],[[]],[[67,67],7],[[],7],[66,67],[[66,8],9],[[66,8],9],[[67,8],9],[[67,8],9],[[]],[67,66],[68,66],[[]],[[67,54]],[[]],[[]],[66,7],[66,[[5,[69]]]],[[]],[[]],[[],38],[[],38],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[[70,[17]]],10],[[[71,[30]],72],[[29,[30]]]],[[[71,[28]],40,40],[[29,[28]]]],[[[71,[31]],45,40,40],[[29,[31]]]],[[[71,[[0,[73,17,74]]]]],[[71,[[0,[73,17,74]]]]]],[[[29,[[0,[73,17]]]]],[[29,[[0,[73,17]]]]]],[31,31],[28,28],[30,30],[75,75],[41,41],[72,72],[39,39],[42,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[71,[[0,[74,17,74]]]]]],[[],[[29,[[0,[74,17]]]]]],[[],31],[[],28],[[],30],[[],42],[[[70,[17]]]],[[31,31],7],[[28,28],7],[[30,30],7],[[41,41],7],[[72,72],7],[[39,39],7],[[42,42],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[71,[[0,[76,17,74]]]],8],9],[[[29,[[0,[76,17]]]],8],9],[[31,8],9],[[28,8],9],[[30,8],9],[[75,8],9],[[[70,[[0,[76,17]]]],8],9],[[41,8],9],[[72,8],9],[[39,8],9],[[42,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[42,54]],[[],[[5,[10]]]],[[[70,[17]]],[[5,[10]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[[70,[17]]],7],[[],7],[[[70,[17]]],7],[[],7],[[[70,[17]]],7],[[],7],[[[70,[17]]],7],[[],[[71,[[0,[17,74]]]]]],[[77,77,77,77],42],[[],39],[[[70,[17]]],39],[[40,40]],[[[70,[17]],40,40]],[41,19],[[[70,[17]],41],19],[[],75],[[],75],[[],75],[[],75],[[],19],[[[70,[17]]],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[5,[10]]]],[[[70,[17]]],[[5,[10]]]],0,[[[71,[28]],7],[[71,[28]]]],[[[71,[31]],7],[[71,[31]]]],[[[71,[28]],7],[[71,[28]]]],[[[71,[[0,[17,74]]]],[5,[7]]],[[71,[[0,[17,74]]]]]],0,0],"c":[],"p":[[3,"Config"],[15,"u8"],[3,"Api"],[4,"ColorBufferType"],[4,"Option"],[3,"ConfigSurfaceTypes"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u32"],[4,"RawConfig"],[4,"Result"],[3,"TypeId"],[3,"NotCurrentContext"],[3,"PossiblyCurrentContext"],[4,"ContextApi"],[8,"SurfaceTypeTrait"],[3,"Surface"],[6,"Result"],[4,"RawContext"],[3,"Device"],[15,"str"],[3,"HashSet"],[8,"Iterator"],[4,"c_void"],[3,"Display"],[3,"ContextAttributes"],[3,"PbufferSurface"],[3,"SurfaceAttributes"],[3,"PixmapSurface"],[3,"WindowSurface"],[3,"ConfigTemplate"],[3,"Box"],[3,"CStr"],[4,"RawDisplayHandle"],[4,"RawDisplay"],[3,"DisplayFeatures"],[3,"String"],[4,"RawSurface"],[3,"NonZeroU32"],[4,"SwapInterval"],[3,"Rect"],[15,"slice"],[3,"Config"],[4,"RawWindowHandle"],[3,"PossiblyCurrentContext"],[3,"NotCurrentContext"],[3,"Display"],[3,"Surface"],[4,"Config"],[3,"ConfigTemplateBuilder"],[4,"Ordering"],[8,"IntoIterator"],[8,"Hasher"],[15,"u16"],[3,"ContextAttributesBuilder"],[4,"Robustness"],[4,"GlProfile"],[3,"Version"],[4,"ReleaseBehavior"],[4,"NotCurrentContext"],[4,"PossiblyCurrentContext"],[8,"AsRawContext"],[4,"Display"],[4,"DisplayApiPreference"],[3,"Error"],[4,"ErrorKind"],[3,"Error"],[15,"i64"],[4,"Surface"],[3,"SurfaceAttributesBuilder"],[4,"NativePixmap"],[8,"Clone"],[8,"Default"],[4,"SurfaceType"],[8,"Debug"],[15,"i32"],[8,"GetGlConfig"],[8,"GlConfig"],[8,"AsRawConfig"],[13,"Rgb"],[8,"PossiblyCurrentGlContext"],[8,"NotCurrentGlContext"],[8,"NotCurrentGlContextSurfaceAccessor"],[8,"PossiblyCurrentContextGlSurfaceAccessor"],[8,"GlContext"],[8,"GlDisplay"],[8,"GetGlDisplay"],[8,"GetDisplayExtensions"],[8,"AsRawDisplay"],[8,"GlSurface"],[8,"AsRawSurface"]]},\
"glutin_egl_sys":{"doc":"","t":"CCGGGGGAGGGRRRRRRRRRRRRRRRRRRRRRRRRRRLMLMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMLMRRRRRRRRLMLMLMLMLMLMGGGGRDRRDRRRRRRRRRRRRRRRLMLMLMLMLMLMLMLMLMLMLMLMRRRLMRRRRRRRRRRRRRRRRRRRLMRRRRRRRRRRRRRRRRRGGGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLMLMLMLMLMLMLMLMRRRRRRLMLMRRRRRRRRRRRRRRRRRRRRRRRRLMLMLMLMLMRRRRRRRRRRRRLMRRRRRRRRRRRRRRRLMLMLMLMLMLLLLLLLLLLLLLGGGLLLLLLLLLAGGGGGDGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGELLLLLLLLGGGLLLLLL","n":["EGLContext","EGLDisplay","EGLNativeDisplayType","EGLNativePixmapType","EGLNativeWindowType","EGLenum","EGLint","egl","khronos_ssize_t","khronos_uint64_t","khronos_utime_nanoseconds_t","ALPHA_FORMAT","ALPHA_FORMAT_NONPRE","ALPHA_FORMAT_PRE","ALPHA_MASK_SIZE","ALPHA_SIZE","BACK_BUFFER","BAD_ACCESS","BAD_ALLOC","BAD_ATTRIBUTE","BAD_CONFIG","BAD_CONTEXT","BAD_CURRENT_SURFACE","BAD_DEVICE_EXT","BAD_DISPLAY","BAD_MATCH","BAD_NATIVE_PIXMAP","BAD_NATIVE_WINDOW","BAD_PARAMETER","BAD_SURFACE","BIND_TO_TEXTURE_RGB","BIND_TO_TEXTURE_RGBA","BLUE_SIZE","BUFFER_AGE_EXT","BUFFER_DESTROYED","BUFFER_PRESERVED","BUFFER_SIZE","BindAPI","BindAPI","BindTexImage","BindTexImage","CLIENT_APIS","CL_EVENT_HANDLE","COLORSPACE","COLORSPACE_LINEAR","COLORSPACE_sRGB","COLOR_BUFFER_TYPE","COLOR_COMPONENT_TYPE_EXT","COLOR_COMPONENT_TYPE_FIXED_EXT","COLOR_COMPONENT_TYPE_FLOAT_EXT","CONDITION_SATISFIED","CONFIG_CAVEAT","CONFIG_ID","CONFORMANT","CONTEXT_CLIENT_TYPE","CONTEXT_CLIENT_VERSION","CONTEXT_FLAGS_KHR","CONTEXT_LOST","CONTEXT_MAJOR_VERSION","CONTEXT_MAJOR_VERSION_KHR","CONTEXT_MINOR_VERSION","CONTEXT_MINOR_VERSION_KHR","CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT","CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR","CONTEXT_OPENGL_CORE_PROFILE_BIT","CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR","CONTEXT_OPENGL_DEBUG","CONTEXT_OPENGL_DEBUG_BIT_KHR","CONTEXT_OPENGL_FORWARD_COMPATIBLE","CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR","CONTEXT_OPENGL_NO_ERROR_KHR","CONTEXT_OPENGL_PROFILE_MASK","CONTEXT_OPENGL_PROFILE_MASK_KHR","CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY","CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT","CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR","CONTEXT_OPENGL_ROBUST_ACCESS","CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR","CONTEXT_OPENGL_ROBUST_ACCESS_EXT","CORE_NATIVE_ENGINE","ChooseConfig","ChooseConfig","ClientWaitSync","ClientWaitSync","ClientWaitSyncKHR","ClientWaitSyncKHR","CopyBuffers","CopyBuffers","CreateContext","CreateContext","CreateImage","CreateImage","CreatePbufferFromClientBuffer","CreatePbufferFromClientBuffer","CreatePbufferSurface","CreatePbufferSurface","CreatePixmapSurface","CreatePixmapSurface","CreatePlatformPixmapSurface","CreatePlatformPixmapSurface","CreatePlatformPixmapSurfaceEXT","CreatePlatformPixmapSurfaceEXT","CreatePlatformWindowSurface","CreatePlatformWindowSurface","CreatePlatformWindowSurfaceEXT","CreatePlatformWindowSurfaceEXT","CreateSync","CreateSync","CreateSyncKHR","CreateSyncKHR","CreateWindowSurface","CreateWindowSurface","DEFAULT_DISPLAY","DEPTH_SIZE","DEVICE_EXT","DISPLAY_SCALING","DONT_CARE","DRAW","DRM_DEVICE_FILE_EXT","DRM_MASTER_FD_EXT","DestroyContext","DestroyContext","DestroyImage","DestroyImage","DestroySurface","DestroySurface","DestroySync","DestroySync","DestroySyncKHR","DestroySyncKHR","DupNativeFenceFDANDROID","DupNativeFenceFDANDROID","EGLNativeDisplayType","EGLNativePixmapType","EGLNativeWindowType","EGLint","EXTENSIONS","Egl","FALSE","FOREVER","FnPtr","GL_COLORSPACE","GL_COLORSPACE_LINEAR","GL_COLORSPACE_SRGB","GL_RENDERBUFFER","GL_TEXTURE_2D","GL_TEXTURE_3D","GL_TEXTURE_CUBE_MAP_NEGATIVE_X","GL_TEXTURE_CUBE_MAP_NEGATIVE_Y","GL_TEXTURE_CUBE_MAP_NEGATIVE_Z","GL_TEXTURE_CUBE_MAP_POSITIVE_X","GL_TEXTURE_CUBE_MAP_POSITIVE_Y","GL_TEXTURE_CUBE_MAP_POSITIVE_Z","GL_TEXTURE_LEVEL","GL_TEXTURE_ZOFFSET","GREEN_SIZE","GetConfigAttrib","GetConfigAttrib","GetConfigs","GetConfigs","GetCurrentContext","GetCurrentContext","GetCurrentDisplay","GetCurrentDisplay","GetCurrentSurface","GetCurrentSurface","GetDisplay","GetDisplay","GetError","GetError","GetPlatformDisplay","GetPlatformDisplay","GetPlatformDisplayEXT","GetPlatformDisplayEXT","GetProcAddress","GetProcAddress","GetSyncAttrib","GetSyncAttrib","GetSyncAttribKHR","GetSyncAttribKHR","HEIGHT","HORIZONTAL_RESOLUTION","IMAGE_PRESERVED","Initialize","Initialize","LARGEST_PBUFFER","LEVEL","LOSE_CONTEXT_ON_RESET","LOSE_CONTEXT_ON_RESET_EXT","LOSE_CONTEXT_ON_RESET_KHR","LUMINANCE_BUFFER","LUMINANCE_SIZE","MATCH_NATIVE_PIXMAP","MAX_PBUFFER_HEIGHT","MAX_PBUFFER_PIXELS","MAX_PBUFFER_WIDTH","MAX_SWAP_INTERVAL","MIN_SWAP_INTERVAL","MIPMAP_LEVEL","MIPMAP_TEXTURE","MULTISAMPLE_RESOLVE","MULTISAMPLE_RESOLVE_BOX","MULTISAMPLE_RESOLVE_BOX_BIT","MULTISAMPLE_RESOLVE_DEFAULT","MakeCurrent","MakeCurrent","NATIVE_RENDERABLE","NATIVE_VISUAL_ID","NATIVE_VISUAL_TYPE","NONE","NON_CONFORMANT_CONFIG","NOT_INITIALIZED","NO_CONTEXT","NO_DEVICE_EXT","NO_DISPLAY","NO_IMAGE","NO_NATIVE_FENCE_FD_ANDROID","NO_RESET_NOTIFICATION","NO_RESET_NOTIFICATION_EXT","NO_RESET_NOTIFICATION_KHR","NO_SURFACE","NO_SYNC","NO_TEXTURE","NativeDisplayType","NativePixmapType","NativeWindowType","OPENGL_API","OPENGL_BIT","OPENGL_ES2_BIT","OPENGL_ES3_BIT","OPENGL_ES3_BIT_KHR","OPENGL_ES_API","OPENGL_ES_BIT","OPENVG_API","OPENVG_BIT","OPENVG_IMAGE","PBUFFER_BIT","PIXEL_ASPECT_RATIO","PIXMAP_BIT","PLATFORM_ANDROID_KHR","PLATFORM_ANGLE_ANGLE","PLATFORM_ANGLE_DEBUG_LAYERS_ENABLED","PLATFORM_ANGLE_DEVICE_TYPE_HARDWARE_ANGLE","PLATFORM_ANGLE_DEVICE_TYPE_NULL_ANGLE","PLATFORM_ANGLE_MAX_VERSION_MAJOR_ANGLE","PLATFORM_ANGLE_MAX_VERSION_MINOR_ANGLE","PLATFORM_ANGLE_NATIVE_PLATFORM_TYPE_ANGLE","PLATFORM_ANGLE_TYPE_ANGLE","PLATFORM_ANGLE_TYPE_DEFAULT_ANGLE","PLATFORM_DEVICE_EXT","PLATFORM_GBM_KHR","PLATFORM_GBM_MESA","PLATFORM_WAYLAND_EXT","PLATFORM_WAYLAND_KHR","PLATFORM_X11_EXT","PLATFORM_X11_KHR","PLATFORM_X11_SCREEN_EXT","PLATFORM_X11_SCREEN_KHR","PLATFORM_XCB_EXT","PLATFORM_XCB_SCREEN_EXT","QueryAPI","QueryAPI","QueryContext","QueryContext","QueryDeviceAttribEXT","QueryDeviceAttribEXT","QueryDeviceStringEXT","QueryDeviceStringEXT","QueryDevicesEXT","QueryDevicesEXT","QueryDisplayAttribEXT","QueryDisplayAttribEXT","QueryString","QueryString","QuerySurface","QuerySurface","READ","RED_SIZE","RENDERABLE_TYPE","RENDERER_EXT","RENDER_BUFFER","RGB_BUFFER","ReleaseTexImage","ReleaseTexImage","ReleaseThread","ReleaseThread","SAMPLES","SAMPLE_BUFFERS","SIGNALED","SINGLE_BUFFER","SLOW_CONFIG","STENCIL_SIZE","SUCCESS","SURFACE_TYPE","SWAP_BEHAVIOR","SWAP_BEHAVIOR_PRESERVED_BIT","SYNC_CL_EVENT","SYNC_CL_EVENT_COMPLETE","SYNC_CONDITION","SYNC_CONDITION_KHR","SYNC_FENCE","SYNC_FENCE_KHR","SYNC_FLUSH_COMMANDS_BIT","SYNC_NATIVE_FENCE_ANDROID","SYNC_NATIVE_FENCE_FD_ANDROID","SYNC_NATIVE_FENCE_SIGNALED_ANDROID","SYNC_PRIOR_COMMANDS_COMPLETE","SYNC_PRIOR_COMMANDS_COMPLETE_KHR","SYNC_STATUS","SYNC_TYPE","SurfaceAttrib","SurfaceAttrib","SwapBuffers","SwapBuffers","SwapBuffersWithDamageEXT","SwapBuffersWithDamageEXT","SwapBuffersWithDamageKHR","SwapBuffersWithDamageKHR","SwapInterval","SwapInterval","TEXTURE_2D","TEXTURE_FORMAT","TEXTURE_RGB","TEXTURE_RGBA","TEXTURE_TARGET","TIMEOUT_EXPIRED","TRANSPARENT_BLUE_VALUE","TRANSPARENT_GREEN_VALUE","TRANSPARENT_RED_VALUE","TRANSPARENT_RGB","TRANSPARENT_TYPE","TRUE","Terminate","Terminate","UNKNOWN","UNSIGNALED","VENDOR","VERSION","VERTICAL_RESOLUTION","VG_ALPHA_FORMAT","VG_ALPHA_FORMAT_NONPRE","VG_ALPHA_FORMAT_PRE","VG_ALPHA_FORMAT_PRE_BIT","VG_COLORSPACE","VG_COLORSPACE_LINEAR","VG_COLORSPACE_LINEAR_BIT","VG_COLORSPACE_sRGB","WIDTH","WINDOW_BIT","WaitClient","WaitClient","WaitGL","WaitGL","WaitNative","WaitNative","WaitSync","WaitSync","WaitSyncKHR","WaitSyncKHR","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","into","into","is_loaded","khronos_ssize_t","khronos_uint64_t","khronos_utime_nanoseconds_t","load_with","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","types","Bool","EGLAttrib","EGLAttribKHR","EGLBoolean","EGLClientBuffer","EGLClientPixmapHI","EGLConfig","EGLContext","EGLDeviceEXT","EGLDisplay","EGLGetBlobFuncANDROID","EGLImage","EGLImageKHR","EGLNativeDisplayType","EGLNativeFileDescriptorKHR","EGLNativePixmapType","EGLNativeWindowType","EGLOutputLayerEXT","EGLOutputPortEXT","EGLSetBlobFuncANDROID","EGLStreamKHR","EGLSurface","EGLSync","EGLSyncKHR","EGLSyncNV","EGLTime","EGLTimeKHR","EGLTimeNV","EGLenum","EGLint","EGLsizeiANDROID","EGLuint64KHR","EGLuint64NV","NativeDisplayType","NativePixmapType","NativeWindowType","__eglMustCastToProperFunctionPointerType","__eglMustCastToProperFunctionPointerType_fn","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","khronos_ssize_t","khronos_uint64_t","khronos_utime_nanoseconds_t","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"glutin_egl_sys"],[11,"glutin_egl_sys::egl"],[385,"glutin_egl_sys::egl::types"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ClientWaitSyncKHR","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: CreateSync64KHR","","","","","","","","","","","","","","","","Fallbacks: DestroyImageKHR","","","","Fallbacks: DestroySynceturns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the function has been successfully loaded.","","","","Load each OpenGL symbol using a custom load function. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,23,1,23,1,23,1,23,1,23,1,23,1,23,0,0,0,1,23,1,23,1,23,1,23,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,29,28,29,28,29,28,29,0,0,0,28,29,28,29,28,29],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],0,[[1,4,5,6],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,4,6,7,6,6],3],0,[[1,4,8,6,9],6],0,[[1,4,10,6,11],6],0,[[1,4,5,12],3],0,[[1,4,7,13,6],13],0,[[1,4,13,2,14,15],16],0,[[1,4,2,14,7,6],5],0,[[1,4,7,6],5],0,[[1,4,7,12,6],5],0,[[1,4,7,17,15],5],0,[[1,4,7,17,6],5],0,[[1,4,7,17,15],5],0,[[1,4,7,17,6],5],0,[[1,4,2,15],8],0,[[1,4,2,6],10],0,[[1,4,7,18,6],5],0,0,0,0,0,0,0,0,0,[[1,4,13],3],0,[[1,4,16],3],0,[[1,4,5],3],0,[[1,4,8],3],0,[[1,4,10],3],0,[[1,4,10],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,4,7,6,6],3],0,[[1,4,7,6,6],3],0,[1,13],0,[1,4],0,[[1,6],5],0,[[1,19],4],0,[1,6],0,[[1,2,17,15],4],0,[[1,2,17,6],4],0,[[1,20],21],0,[[1,4,8,6,15],3],0,[[1,4,10,6,6],3],0,0,0,0,[[1,4,6,6],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,4,5,5,13],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[[1,4,13,6,6],3],0,[[1,22,6,15],3],0,[[1,22,6],20],0,[[1,6,22,6],3],0,[[1,4,6,15],3],0,[[1,4,6],20],0,[[1,4,5,6,6],3],0,0,0,0,0,0,0,[[1,4,5,6],3],0,[1,3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,4,5,6,6],3],0,[[1,4,5],3],0,[[1,4,5,6,6],3],0,[[1,4,5,6,6],3],0,[[1,4,6],3],0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,4],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,3],0,[1,3],0,[[1,6],3],0,[[1,4,8,6],3],0,[[1,4,10,6],6],0,[[]],[[]],[[]],[[]],[23,23],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[23,24],0,0,0,[25,1],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],26],[[],26],[[],26],[[],26],[[],27],[[],27]],"c":[],"p":[[3,"Egl"],[6,"EGLenum"],[6,"EGLBoolean"],[6,"EGLDisplay"],[6,"EGLSurface"],[6,"EGLint"],[6,"EGLConfig"],[6,"EGLSync"],[6,"EGLTime"],[6,"EGLSyncKHR"],[6,"EGLTimeKHR"],[6,"EGLNativePixmapType"],[6,"EGLContext"],[6,"EGLClientBuffer"],[6,"EGLAttrib"],[6,"EGLImage"],[6,"c_void"],[6,"EGLNativeWindowType"],[6,"EGLNativeDisplayType"],[6,"c_char"],[6,"__eglMustCastToProperFunctionPointerType"],[6,"EGLDeviceEXT"],[3,"FnPtr"],[15,"bool"],[8,"FnMut"],[4,"Result"],[3,"TypeId"],[4,"__eglMustCastToProperFunctionPointerType_fn"],[3,"EGLClientPixmapHI"]]},\
"glutin_wgl_sys":{"doc":"","t":"AAFFFFFRRFFFFFFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFFFFFFFFAGGGGGGGGGGDGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGGGGGGGGGGGDGGGGDDDGGDGGGGDEEEEMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRLMLMLMLMLMRRRRLMLMRRRRRDRRRLMLMLMLMLMLMLMLMLMRLMRRRRRRRRRRLMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLMLMLMLMRRRRRRRRRLMLMLMLMLMLMDLLLLLLLLLLLLLLLLLLLLLLAGGGGGGGGGGDGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGGGGGGGGGGGDGGGGDDDGGDGGGGDEEEEMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["wgl","wgl_extra","CopyContext","CreateContext","CreateLayerContext","DeleteContext","DescribeLayerPlane","FONT_LINES","FONT_POLYGONS","GetCurrentContext","GetCurrentDC","GetLayerPaletteEntries","GetProcAddress","MakeCurrent","RealizeLayerPalette","SWAP_MAIN_PLANE","SWAP_OVERLAY1","SWAP_OVERLAY10","SWAP_OVERLAY11","SWAP_OVERLAY12","SWAP_OVERLAY13","SWAP_OVERLAY14","SWAP_OVERLAY15","SWAP_OVERLAY2","SWAP_OVERLAY3","SWAP_OVERLAY4","SWAP_OVERLAY5","SWAP_OVERLAY6","SWAP_OVERLAY7","SWAP_OVERLAY8","SWAP_OVERLAY9","SWAP_UNDERLAY1","SWAP_UNDERLAY10","SWAP_UNDERLAY11","SWAP_UNDERLAY12","SWAP_UNDERLAY13","SWAP_UNDERLAY14","SWAP_UNDERLAY15","SWAP_UNDERLAY2","SWAP_UNDERLAY3","SWAP_UNDERLAY4","SWAP_UNDERLAY5","SWAP_UNDERLAY6","SWAP_UNDERLAY7","SWAP_UNDERLAY8","SWAP_UNDERLAY9","SetLayerPaletteEntries","ShareLists","SwapLayerBuffers","UseFontBitmaps","UseFontBitmapsA","UseFontBitmapsW","UseFontOutlines","UseFontOutlinesA","UseFontOutlinesW","types","BOOL","BYTE","CHAR","COLORREF","DWORD","FLOAT","GLDEBUGPROC","GLDEBUGPROCAMD","GLDEBUGPROCARB","GLDEBUGPROCKHR","GLYPHMETRICSFLOAT","GLbitfield","GLboolean","GLbyte","GLchar","GLcharARB","GLclampd","GLclampf","GLclampx","GLdouble","GLeglImageOES","GLenum","GLfixed","GLfloat","GLhalf","GLhalfARB","GLhalfNV","GLhandleARB","GLint","GLint64","GLint64EXT","GLintptr","GLintptrARB","GLshort","GLsizei","GLsizeiptr","GLsizeiptrARB","GLsync","GLubyte","GLuint","GLuint64","GLuint64EXT","GLushort","GLvdpauSurfaceNV","GLvoid","GPU_DEVICE","HANDLE","HDC","HENHMETAFILE","HGLRC","HGPUNV","HPBUFFERARB","HPBUFFEREXT","HPGPUNV","HPVIDEODEV","HVIDEOINPUTDEVICENV","HVIDEOOUTPUTDEVICENV","INT","INT32","INT64","LAYERPLANEDESCRIPTOR","LONG","LPCSTR","LPGLYPHMETRICSFLOAT","LPVOID","PGPU_DEVICE","PIXELFORMATDESCRIPTOR","POINTFLOAT","PROC","PVOID","RECT","UINT","USHORT","VOID","WORD","_GPU_DEVICE","__GLsync","__PROC_fn","_cl_context","_cl_event","bReserved","bReserved","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cAccumAlphaBits","cAccumAlphaBits","cAccumBits","cAccumBits","cAccumBlueBits","cAccumBlueBits","cAccumGreenBits","cAccumGreenBits","cAccumRedBits","cAccumRedBits","cAlphaBits","cAlphaBits","cAlphaShift","cAlphaShift","cAuxBuffers","cAuxBuffers","cBlueBits","cBlueBits","cBlueShift","cBlueShift","cColorBits","cColorBits","cDepthBits","cDepthBits","cGreenBits","cGreenBits","cGreenShift","cGreenShift","cRedBits","cRedBits","cRedShift","cRedShift","cStencilBits","cStencilBits","crTransparent","dwDamageMask","dwFlags","dwFlags","dwLayerMask","dwVisibleMask","from","from","from","from","from","from","from","from","from","from","from","from","gmfBlackBoxX","gmfBlackBoxY","gmfCellIncX","gmfCellIncY","gmfptGlyphOrigin","iLayerType","iLayerType","iPixelType","iPixelType","into","into","into","into","into","into","into","into","into","into","into","into","nSize","nSize","nVersion","nVersion","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","x","y","ACCELERATION_ARB","ACCUM_ALPHA_BITS_ARB","ACCUM_BITS_ARB","ACCUM_BLUE_BITS_ARB","ACCUM_GREEN_BITS_ARB","ACCUM_RED_BITS_ARB","ALPHA_BITS_ARB","ALPHA_SHIFT_ARB","AUX_BUFFERS_ARB","BLUE_BITS_ARB","BLUE_SHIFT_ARB","COLOR_BITS_ARB","CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB","CONTEXT_CORE_PROFILE_BIT_ARB","CONTEXT_DEBUG_BIT_ARB","CONTEXT_ES2_PROFILE_BIT_EXT","CONTEXT_FLAGS_ARB","CONTEXT_FORWARD_COMPATIBLE_BIT_ARB","CONTEXT_LAYER_PLANE_ARB","CONTEXT_MAJOR_VERSION_ARB","CONTEXT_MINOR_VERSION_ARB","CONTEXT_OPENGL_NO_ERROR_ARB","CONTEXT_PROFILE_MASK_ARB","CONTEXT_RELEASE_BEHAVIOR_ARB","CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB","CONTEXT_RELEASE_BEHAVIOR_NONE_ARB","CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB","CONTEXT_ROBUST_ACCESS_BIT_ARB","ChoosePixelFormatARB","ChoosePixelFormatARB","CopyContext","CopyContext","CreateContext","CreateContext","CreateContextAttribsARB","CreateContextAttribsARB","CreateLayerContext","CreateLayerContext","DEPTH_BITS_ARB","DOUBLE_BUFFER_ARB","DRAW_TO_BITMAP_ARB","DRAW_TO_WINDOW_ARB","DeleteContext","DeleteContext","DescribeLayerPlane","DescribeLayerPlane","FONT_LINES","FONT_POLYGONS","FRAMEBUFFER_SRGB_CAPABLE_ARB","FRAMEBUFFER_SRGB_CAPABLE_EXT","FULL_ACCELERATION_ARB","FnPtr","GENERIC_ACCELERATION_ARB","GREEN_BITS_ARB","GREEN_SHIFT_ARB","GetCurrentContext","GetCurrentContext","GetCurrentDC","GetCurrentDC","GetExtensionsStringARB","GetExtensionsStringARB","GetExtensionsStringEXT","GetExtensionsStringEXT","GetLayerPaletteEntries","GetLayerPaletteEntries","GetPixelFormatAttribfvARB","GetPixelFormatAttribfvARB","GetPixelFormatAttribivARB","GetPixelFormatAttribivARB","GetProcAddress","GetProcAddress","GetSwapIntervalEXT","GetSwapIntervalEXT","LOSE_CONTEXT_ON_RESET_ARB","MakeCurrent","MakeCurrent","NEED_PALETTE_ARB","NEED_SYSTEM_PALETTE_ARB","NO_ACCELERATION_ARB","NO_RESET_NOTIFICATION_ARB","NUMBER_OVERLAYS_ARB","NUMBER_PIXEL_FORMATS_ARB","NUMBER_UNDERLAYS_ARB","PIXEL_TYPE_ARB","RED_BITS_ARB","RED_SHIFT_ARB","RealizeLayerPalette","RealizeLayerPalette","SAMPLES_ARB","SAMPLE_BUFFERS_ARB","SHARE_ACCUM_ARB","SHARE_DEPTH_ARB","SHARE_STENCIL_ARB","STENCIL_BITS_ARB","STEREO_ARB","SUPPORT_GDI_ARB","SUPPORT_OPENGL_ARB","SWAP_COPY_ARB","SWAP_EXCHANGE_ARB","SWAP_LAYER_BUFFERS_ARB","SWAP_MAIN_PLANE","SWAP_METHOD_ARB","SWAP_OVERLAY1","SWAP_OVERLAY10","SWAP_OVERLAY11","SWAP_OVERLAY12","SWAP_OVERLAY13","SWAP_OVERLAY14","SWAP_OVERLAY15","SWAP_OVERLAY2","SWAP_OVERLAY3","SWAP_OVERLAY4","SWAP_OVERLAY5","SWAP_OVERLAY6","SWAP_OVERLAY7","SWAP_OVERLAY8","SWAP_OVERLAY9","SWAP_UNDEFINED_ARB","SWAP_UNDERLAY1","SWAP_UNDERLAY10","SWAP_UNDERLAY11","SWAP_UNDERLAY12","SWAP_UNDERLAY13","SWAP_UNDERLAY14","SWAP_UNDERLAY15","SWAP_UNDERLAY2","SWAP_UNDERLAY3","SWAP_UNDERLAY4","SWAP_UNDERLAY5","SWAP_UNDERLAY6","SWAP_UNDERLAY7","SWAP_UNDERLAY8","SWAP_UNDERLAY9","SetLayerPaletteEntries","SetLayerPaletteEntries","ShareLists","ShareLists","SwapIntervalEXT","SwapIntervalEXT","SwapLayerBuffers","SwapLayerBuffers","TRANSPARENT_ALPHA_VALUE_ARB","TRANSPARENT_ARB","TRANSPARENT_BLUE_VALUE_ARB","TRANSPARENT_GREEN_VALUE_ARB","TRANSPARENT_INDEX_VALUE_ARB","TRANSPARENT_RED_VALUE_ARB","TYPE_COLORINDEX_ARB","TYPE_RGBA_ARB","TYPE_RGBA_FLOAT_ARB","UseFontBitmaps","UseFontBitmaps","UseFontBitmapsA","UseFontBitmapsA","UseFontBitmapsW","UseFontBitmapsW","UseFontOutlines","UseFontOutlines","UseFontOutlinesA","UseFontOutlinesA","UseFontOutlinesW","UseFontOutlinesW","Wgl","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","into","into","is_loaded","load_with","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","types","BOOL","BYTE","CHAR","COLORREF","DWORD","FLOAT","GLDEBUGPROC","GLDEBUGPROCAMD","GLDEBUGPROCARB","GLDEBUGPROCKHR","GLYPHMETRICSFLOAT","GLbitfield","GLboolean","GLbyte","GLchar","GLcharARB","GLclampd","GLclampf","GLclampx","GLdouble","GLeglImageOES","GLenum","GLfixed","GLfloat","GLhalf","GLhalfARB","GLhalfNV","GLhandleARB","GLint","GLint64","GLint64EXT","GLintptr","GLintptrARB","GLshort","GLsizei","GLsizeiptr","GLsizeiptrARB","GLsync","GLubyte","GLuint","GLuint64","GLuint64EXT","GLushort","GLvdpauSurfaceNV","GLvoid","GPU_DEVICE","HANDLE","HDC","HENHMETAFILE","HGLRC","HGPUNV","HPBUFFERARB","HPBUFFEREXT","HPGPUNV","HPVIDEODEV","HVIDEOINPUTDEVICENV","HVIDEOOUTPUTDEVICENV","INT","INT32","INT64","LAYERPLANEDESCRIPTOR","LONG","LPCSTR","LPGLYPHMETRICSFLOAT","LPVOID","PGPU_DEVICE","PIXELFORMATDESCRIPTOR","POINTFLOAT","PROC","PVOID","RECT","UINT","USHORT","VOID","WORD","_GPU_DEVICE","__GLsync","__PROC_fn","_cl_context","_cl_event","bReserved","bReserved","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cAccumAlphaBits","cAccumAlphaBits","cAccumBits","cAccumBits","cAccumBlueBits","cAccumBlueBits","cAccumGreenBits","cAccumGreenBits","cAccumRedBits","cAccumRedBits","cAlphaBits","cAlphaBits","cAlphaShift","cAlphaShift","cAuxBuffers","cAuxBuffers","cBlueBits","cBlueBits","cBlueShift","cBlueShift","cColorBits","cColorBits","cDepthBits","cDepthBits","cGreenBits","cGreenBits","cGreenShift","cGreenShift","cRedBits","cRedBits","cRedShift","cRedShift","cStencilBits","cStencilBits","crTransparent","dwDamageMask","dwFlags","dwFlags","dwLayerMask","dwVisibleMask","from","from","from","from","from","from","from","from","from","from","from","from","gmfBlackBoxX","gmfBlackBoxY","gmfCellIncX","gmfCellIncY","gmfptGlyphOrigin","iLayerType","iLayerType","iPixelType","iPixelType","into","into","into","into","into","into","into","into","into","into","into","into","nSize","nSize","nVersion","nVersion","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","x","y"],"q":[[0,"glutin_wgl_sys"],[2,"glutin_wgl_sys::wgl"],[56,"glutin_wgl_sys::wgl::types"],[277,"glutin_wgl_sys::wgl_extra"],[463,"glutin_wgl_sys::wgl_extra::types"]],"d":["WGL bindings","Functions that are not necessarily always availableeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the function has been successfully loaded.","Load each OpenGL symbol using a custom load function. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,23,24,25,26,27,28,20,21,29,30,31,22,23,24,25,26,27,28,20,21,29,30,31,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,21,21,22,23,24,25,26,27,28,20,21,29,30,31,28,28,28,28,28,20,21,20,21,22,23,24,25,26,27,28,20,21,29,30,31,20,21,20,21,22,23,24,25,26,27,28,20,21,29,30,31,22,23,24,25,26,27,28,20,21,29,30,31,22,23,24,25,26,27,28,20,21,29,30,31,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,17,3,17,3,17,3,17,3,17,3,17,3,17,3,17,3,17,3,17,3,17,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,32,33,34,35,36,37,38,39,10,32,40,41,42,33,34,35,36,37,38,39,10,32,40,41,42,10,32,10,32,10,32,10,32,10,32,10,32,10,32,10,32,10,32,10,32,10,32,10,32,10,32,10,32,10,32,10,32,10,32,10,32,10,32,32,32,33,34,35,36,37,38,39,10,32,40,41,42,39,39,39,39,39,10,32,10,32,33,34,35,36,37,38,39,10,32,40,41,42,10,32,10,32,33,34,35,36,37,38,39,10,32,40,41,42,33,34,35,36,37,38,39,10,32,40,41,42,33,34,35,36,37,38,39,10,32,40,41,42,38,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,4,5,6,7,5,7],8],0,[[3,9,9,7],8],0,[[3,4],9],0,[[3,4,9,5],9],0,[[3,4,5],9],0,0,0,0,0,[[3,9],8],0,[[3,4,5,5,7,10],8],0,0,0,0,0,0,0,0,0,0,[3,9],0,[3,4],0,[[3,4],11],0,[3,11],0,[[3,4,5,5,5,12],5],0,[[3,4,5,5,7,5,6],8],0,[[3,4,5,5,7,5,5],8],0,[[3,13],14],0,[3,5],0,0,[[3,4,9],8],0,0,0,0,0,0,0,0,0,0,0,[[3,4,5,8],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,4,5,5,5,12],5],0,[[3,9,9],8],0,[[3,5],8],0,[[3,4,7],8],0,0,0,0,0,0,0,0,0,0,[[3,4,15,15,15],8],0,[[3,4,15,15,15],8],0,[[3,4,15,15,15],8],0,[[3,4,15,15,15,6,6,5,16],8],0,[[3,4,15,15,15,6,6,5,16],8],0,[[3,4,15,15,15,6,6,5,16],8],0,0,[[]],[[]],[[]],[[]],[17,17],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[17,18],[19,3],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0],"c":[],"p":[[4,"Result"],[3,"TypeId"],[3,"Wgl"],[6,"HDC"],[6,"c_int"],[6,"FLOAT"],[6,"UINT"],[6,"BOOL"],[6,"HGLRC"],[3,"LAYERPLANEDESCRIPTOR"],[6,"c_char"],[6,"COLORREF"],[6,"LPCSTR"],[6,"PROC"],[6,"DWORD"],[6,"LPGLYPHMETRICSFLOAT"],[3,"FnPtr"],[15,"bool"],[8,"FnMut"],[3,"LAYERPLANEDESCRIPTOR"],[3,"PIXELFORMATDESCRIPTOR"],[4,"__GLsync"],[4,"_cl_context"],[4,"_cl_event"],[4,"__PROC_fn"],[3,"RECT"],[3,"POINTFLOAT"],[3,"GLYPHMETRICSFLOAT"],[3,"_GPU_DEVICE"],[3,"GPU_DEVICE"],[3,"PGPU_DEVICE"],[3,"PIXELFORMATDESCRIPTOR"],[4,"__GLsync"],[4,"_cl_context"],[4,"_cl_event"],[4,"__PROC_fn"],[3,"RECT"],[3,"POINTFLOAT"],[3,"GLYPHMETRICSFLOAT"],[3,"_GPU_DEVICE"],[3,"GPU_DEVICE"],[3,"PGPU_DEVICE"]]},\
"glutin_window":{"doc":"A Glutin window back-end for the Piston game engine.","t":"DEENNNNNNNNNNNNNLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLMLLLLLLLLLLLLLLM","n":["GlutinWindow","OpenGL","UserEvent","V2_0","V2_1","V3_0","V3_1","V3_2","V3_3","V4_0","V4_1","V4_2","V4_3","V4_4","V4_5","WakeUp","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_from_window_settings","clone","clone_into","cmp","ctx","display","draw_size","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from_api","from_raw","from_str","get_automatic_close","get_exit_on_esc","get_major_minor","get_position","get_proc_address","get_title","hide","into","into","into","into","is_current","make_current","map_key","map_mouse","new","partial_cmp","poll_event","set_automatic_close","set_capture_cursor","set_exit_on_esc","set_position","set_should_close","set_size","set_title","should_close","show","size","surface","swap_buffers","to_glsl","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait_event","wait_event_timeout","window"],"q":[[0,"glutin_window"]],"d":["Contains stuff for game window.","","Custom events for the glutin event loop","","","","","","","","","","","","","Do nothing, just spin the event loop","","","","","","","","","","","The OpenGL context.","The graphics display.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>OpenGL</code> version from graphics API version.","Creates a game window from a pre-existing Glutin event …","","","","Gets the minor version of OpenGL.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Maps Glutin’s key to Piston’s key.","Maps Glutin’s mouse button to Piston’s mouse button.","Creates a new game window for Glutin.","","","","","","","","","","","","","The window surface.","","Gets GLSL version associated with OpenGL.","","","","","","","","","","","","","The window."],"i":[0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,10,2,6,10,2,6,10,2,6,6,6,2,2,2,6,10,6,10,6,10,2,6,10,6,2,6,2,2,6,2,2,2,2,2,6,6,10,2,2,0,0,2,6,2,2,2,2,2,2,2,2,2,2,2,2,2,6,6,2,6,10,2,6,10,2,6,10,2,2,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,[[5,[2,[4,[3]]]]]],[6,6],[[]],[[6,6],7],0,0,[2,8],[[6,6],9],[[10,10],9],[[],9],[[],9],[[6,11],[[5,[12]]]],[[10,11],13],[[]],[[]],[[]],[14,[[15,[6]]]],[[1,[16,[10]],17],[[5,[2,[4,[3]]]]]],[18,[[5,[6]]]],[2,9],[2,9],[6],[2,[[15,[19]]]],[[2,18],20],[2,21],[2],[[]],[[]],[6,14],[[]],[2,9],[2],[22,23],[24,25],[1,[[5,[2,[4,[3]]]]]],[[6,6],[[15,[7]]]],[2,[[15,[26]]]],[[2,9]],[[2,9]],[[2,9]],[[2,[27,[19]]]],[[2,9]],[[2,[27,[8]]]],[[2,21]],[2,9],[2],[2,8],0,[2],[6,28],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],29],[[],29],[[],29],[2,26],[[2,30],[[15,[26]]]],0],"c":[],"p":[[3,"WindowSettings"],[3,"GlutinWindow"],[8,"Error"],[3,"Box"],[4,"Result"],[4,"OpenGL"],[4,"Ordering"],[3,"Size"],[15,"bool"],[4,"UserEvent"],[3,"Formatter"],[3,"Error"],[6,"Result"],[3,"Version"],[4,"Option"],[3,"EventLoop"],[3,"WindowBuilder"],[15,"str"],[3,"Position"],[6,"ProcAddress"],[3,"String"],[4,"VirtualKeyCode"],[4,"Key"],[4,"MouseButton"],[4,"MouseButton"],[4,"Event"],[8,"Into"],[4,"GLSL"],[3,"TypeId"],[3,"Duration"]]},\
"glutin_winit":{"doc":"This library provides helpers for cross-platform <code>glutin</code> …","t":"EDNINLLLLLKLLLLLLLLFLLLLLLLKLLLLLLLLLL","n":["ApiPrefence","DisplayBuilder","FallbackEgl","GlWindow","PreferEgl","borrow","borrow","borrow_mut","borrow_mut","build","build_surface_attributes","clone","clone","clone_into","clone_into","default","default","eq","equivalent","finalize_window","fmt","fmt","from","from","into","into","new","resize_surface","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_preference","with_window_builder"],"q":[[0,"glutin_winit"]],"d":["Simplified version of the <code>DisplayApiPreference</code> which is …","The helper to perform <code>Display</code> creation and OpenGL platform …","Fallback to <code>EGL</code> when failed to create the system profile.","<code>Window</code> extensions for working with <code>glutin</code> surfaces.","Prefer <code>EGL</code> over system provider like <code>GLX</code> and <code>WGL</code>.","","","","","Initialize the OpenGL platform and create a compatible …","Build the surface attributes suitable to create a window …","","","","","","","","","Finalize <code>Window</code> creation by applying the options from the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create new display builder.","Resize the surface to the window inner size.","","","","","","","","","The preference in picking the configuration.","The window builder to use when building a window."],"i":[0,0,11,0,11,1,11,1,11,1,25,1,11,1,11,1,11,11,11,0,1,11,1,11,1,11,1,25,1,11,1,11,1,11,1,11,1,1],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,2,3,4],[[7,[[6,[5]]]]]],[[[9,[8]]],[[10,[8]]]],[1,1],[11,11],[[]],[[]],[[],1],[[],11],[[11,11],12],[[],12],[[2,13,14],[[7,[15,16]]]],[[1,17],18],[[11,17],18],[[]],[[]],[[]],[[]],[[],1],[[[21,[[0,[19,20]]]],22]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],23],[[],23],[[1,11],1],[[1,[24,[13]]],1]],"c":[],"p":[[3,"DisplayBuilder"],[3,"EventLoopWindowTarget"],[3,"ConfigTemplateBuilder"],[8,"FnOnce"],[8,"Error"],[3,"Box"],[4,"Result"],[3,"WindowSurface"],[3,"SurfaceAttributesBuilder"],[3,"SurfaceAttributes"],[4,"ApiPrefence"],[15,"bool"],[3,"WindowBuilder"],[4,"Config"],[3,"Window"],[3,"OsError"],[3,"Formatter"],[6,"Result"],[8,"SurfaceTypeTrait"],[8,"ResizeableSurface"],[4,"Surface"],[4,"PossiblyCurrentContext"],[3,"TypeId"],[4,"Option"],[8,"GlWindow"]]},\
"graphics":{"doc":"A library for 2D graphics that works with multiple …","t":"RCCCICCCICICCICIICQIDKKKLKLLAAFLLFKKLLAAKMAAFLLFLLLLLLLLLLLLKLAALLKAFLLLAFLLFKAAKKLLAFLLLLKKAMAFLLFKLLKKLLLLKLLKKKKKAFALLLKLLKKKKALLLAMLLDIQQLMLMMLLKLLLLMLMMLLLLLLDLLLLLMLLLMLLLLMLMLMLLLLRRRRRRRRRRRRRRRRRFFFFFDLLLLLMLLLLLLLLLLLLLLLMLLLLMMNNENDNNNNNNELMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLDDLMLLLLCCLLLLLMMLLLLLLLLLLLLMLMLLLLLLLLARDLLLMMLLLLLLLLLLLDDLLLLLLLLLLMLLLLLLLLLMLLLLLLLLMLLDLLLLLMLFLLLLLLLLLMMLLLLLNDNNENLLLLLLLLLMLLLLLLLLLLLLLMLMLLLLLLLLLGGGGFFLFFFFFFFFFFFFFFFFFFFFLFFLFFLFFLFFLFFFLFFFFFFFDLLLLLMLLLLLLLLLLLIKKKKKNDDNENLMLLLLLLFFLLLLLLLMMLLLLLLLLLLCLLLLLLMFLMFLLLLLLLLLLLLDLLLLMLLMLLLLLMLLLLDMLLLLLLLMMLLLLFFFFFFFFFFFFFFFGGGGGCGGGGGGCGGCGLLLLLLLLL","n":["BACK_END_MAX_VERTEX_COUNT","Character","CharacterCache","CircleArc","Colored","Context","DrawState","Ellipse","Graphics","Image","ImageSize","Line","Polygon","Radians","Rectangle","Rectangled","SourceRectangled","Text","Texture","Transformed","Viewport","_180","_360","_90","abs_transform","append_transform","borrow","borrow_mut","character","circle_arc","circle_arc","circle_arc","circle_arc","clear","clear_color","clear_stencil","clone","clone_into","color","context","deg_to_rad","draw_size","draw_state","ellipse","ellipse","ellipse","ellipse","ellipse_from_to","eq","expand","expand","flip_h","flip_h","flip_hv","flip_hv","flip_v","flip_v","fmt","from","get_height","get_size","get_width","glyph_cache","grid","hue_deg","hue_deg","hue_rad","image","image","image","image","into","line","line","line","line","line_from_to","margin","math","modular_index","mul_rgba","orient","orient_pos","orient_pos","polygon","polygon","polygon","polygon","polygon_tween_lerp","polygon_tween_lerp","prepend_transform","rad_to_deg","radians","rect","rectangle","rectangle","rectangle","rectangle","rectangle_from_to","rel","rot_deg","rot_deg","rot_rad","scale","scale_pos","scale_pos","shade","shade","shear","shear_pos","shear_pos","src_flip_h","src_flip_hv","src_flip_v","src_rect","src_rel","text","text","texture_packer","tint","tint","to_owned","trans","trans_pos","trans_pos","tri_list","tri_list_c","tri_list_uv","tri_list_uv_c","triangulation","try_from","try_into","type_id","types","window_size","zoom","zoom","Character","CharacterCache","Error","Texture","advance_height","advance_size","advance_width","atlas_offset","atlas_size","borrow","borrow_mut","character","clone","clone_into","from","into","is_invalid","left","offset","texture","to_owned","top","try_from","try_into","type_id","width","CircleArc","borrow","borrow_mut","clone","clone_into","color","color","draw","draw_tri","end","end","from","into","new","radius","radius","resolution","resolution","start","start","to_owned","try_from","try_into","type_id","BLACK","BLUE","CYAN","GRAY","GREEN","LIME","MAGENTA","MAROON","NAVY","OLIVE","PURPLE","RED","SILVER","TEAL","TRANSPARENT","WHITE","YELLOW","alpha","gamma_linear_to_srgb","gamma_srgb_to_linear","grey","hex","Context","append_transform","borrow","borrow_mut","clone","clone_into","draw_state","from","get_view_size","into","new","new_abs","new_viewport","orient","prepend_transform","reset","rot_rad","scale","shear","store_view","to_owned","trans","transform","try_from","try_into","type_id","view","view","viewport","Add","Alpha","Blend","Clip","DrawState","Increment","Inside","Invert","Lighter","Multiply","Outside","Stencil","blend","blend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","new_alpha","new_clip","new_increment","new_inside","new_outside","partial_cmp","partial_cmp","partial_cmp","scissor","scissor","stencil","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Border","Ellipse","border","border","borrow","borrow","borrow_mut","borrow_mut","centered","circle","clone","clone","clone_into","clone_into","color","color","color","draw","draw_from_to","draw_tri","from","from","hue_rad","into","into","maybe_border","mul_rgba","new","new_border","radius","resolution","resolution","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","rusttype","ATLAS_SIZE","GlyphCache","borrow","borrow_mut","character","factory","font","from","from_bytes","from_font","into","new","opt_character","preload_chars","preload_printable_ascii","try_from","try_into","type_id","Grid","GridCells","borrow","borrow","borrow_mut","borrow_mut","cell_position","cells","clone","clone","clone_into","clone_into","cols","draw","fmt","fmt","from","from","into","into","into_iter","next","rows","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","units","x_pos","y_pos","Image","borrow","borrow_mut","clone","clone_into","color","color","draw","draw_many","draw_tri","from","into","maybe_color","maybe_rect","maybe_src_rect","new","new_color","rect","rectangle","source_rectangle","src_rect","to_owned","try_from","try_into","type_id","Bevel","Line","Round","RoundWithResolution","Shape","Square","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color","color","draw","draw_arrow","draw_from_to","draw_tri","from","from","hue_rad","into","into","mul_rgba","new","new_round","radius","radius","shape","shape","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","width","Matrix2d","Scalar","Vec2d","Vec3d","abs_transform","add","append_transform","area","area_centroid","cast","centroid","cross","dot","from_barycentric","get_scale","hsv","identity","inside_triangle","invert","least_separation_4","line_side","margin_rectangle","modular_offset","mul","mul_scalar","multiply","orient","orient","overlap_rectangle","perp","prepend_transform","relative_rectangle","relative_source_rectangle","rot_rad","rotate_radians","scale","scale","separation","shear","shear","square_len","sub","to_barycentric","trans","transform_pos","transform_vec","translate","triangle_face","next","offset","previous","Polygon","borrow","borrow_mut","clone","clone_into","color","color","draw","draw_tri","draw_tween_lerp","draw_tween_lerp_tri","from","into","new","to_owned","try_from","try_into","type_id","Radians","_180","_360","_90","deg_to_rad","rad_to_deg","Bevel","Border","Rectangle","Round","Shape","Square","border","border","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","centered","centered_square","clone","clone","clone","clone_into","clone_into","clone_into","color","color","color","draw","draw_from_to","draw_tri","from","from","from","hue_rad","into","into","into","margin","maybe_border","mul_rgba","new","new_border","new_round","new_round_border","radius","rectangle_by_corners","shape","shape","square","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Text","borrow","borrow_mut","clone","clone_into","color","draw","draw_pos","font_size","from","into","new","new_color","round","round","to_owned","try_from","try_into","type_id","TexturePacker","atlas","borrow","borrow_mut","create","find_space","from","into","new","skyline","textures","try_from","try_into","type_id","update","rect_border_tri_list_xy","rect_tri_list_uv","rect_tri_list_xy","stream_polygon_tri_list","stream_quad_tri_list","tx","ty","with_arc_tri_list","with_ellipse_border_tri_list","with_ellipse_tri_list","with_lerp_polygons_tri_list","with_polygon_tri_list","with_round_border_line_tri_list","with_round_rectangle_border_tri_list","with_round_rectangle_tri_list","Area","Color","ColorComponent","FontSize","Line","Matrix2d","Polygon","Polygons","Radius","Ray","Rectangle","Resolution","Scalar","SourceRectangle","Triangle","Vec2d","Width","hue_rad","margin","mul_rgba","rel","src_flip_h","src_flip_hv","src_flip_v","src_rect","src_rel"],"q":[[0,"graphics"],[137,"graphics::character"],[163,"graphics::circle_arc"],[187,"graphics::color"],[209,"graphics::context"],[238,"graphics::draw_state"],[300,"graphics::ellipse"],[340,"graphics::glyph_cache"],[341,"graphics::glyph_cache::rusttype"],[359,"graphics::grid"],[393,"graphics::image"],[418,"graphics::line"],[459,"graphics::math"],[507,"graphics::modular_index"],[510,"graphics::polygon"],[528,"graphics::radians"],[534,"graphics::rectangle"],[593,"graphics::text"],[612,"graphics::texture_packer"],[627,"graphics::triangulation"],[642,"graphics::types"]],"d":["Any triangulation method called on the back-end never …","","","","Implemented by contexts that contains color.","","","","Implemented by all graphics back-ends.","","Implemented by all images to be used with generic …","","","Useful constants for radians.","","Should be implemented by contexts that have rectangle …","Should be implemented by contexts that have source …","","The texture type associated with the back-end.","Implemented by contexts that can transform.","Stores viewport information.","Returns radians corresponding to 180 degrees.","Returns radians corresponding to 360 degrees.","Returns radians corresponding to 90 degrees.","Computes absolute transform for 2D graphics, which uses a …","Appends transform to the current one.","","","A text character","Draw an arc","Draws arc","Draws circle arc.","Draws circle arc.","Clears the screen.","Clears background with a color.","Clears stencil buffer with a value, usually 0.","","","Helper methods for colors","Transformation context","Convert a value to radians from degrees. Equivalent to …","The size of frame buffer in pixels.","Graphics draw state.","Draw ellipse","Draws ellipse.","Draws ellipse.","Draws ellipse.","Draws ellipse by corners.","","Expands the current rectangle equally by all sides.","Expands the current rectangle equally by all sides.","Flips horizontally in local coordinates.","Flips horizontally in local coordinates.","Flips horizontally and vertically in local coordinates.","Flips horizontally and vertically in local coordinates.","Flips vertically in local coordinates.","Flips vertically in local coordinates.","","Returns the argument unchanged.","Gets the image height.","Get the image size.","Gets the image width.","Implementations of the <code>CharacterCache</code> trait.","A flat grid with square cells.","Rotates hue by degrees.","Rotates hue by degrees.","Rotates hue by radians.","Draw an image","Draws image.","Draws image.","Draws image.","Calls <code>U::from(self)</code>.","Draw Line","Draws line.","Draws line.","Draws line.","Draws line between points.","Shrinks the current rectangle equally by all sides.","Various methods for computing with vectors.","Helper functions for computing modular index safely.","Multiplies with red, green, blue and alpha values.","Orients x axis to look at point locally.","Orients x axis to look at point locally.","Orients x axis to look at point locally.","Draw polygon","Draws polygon.","Draws a polygon.","Draws a polygon.","Draws a tweened polygon using linear interpolation.","Draws a tweened polygon using linear interpolation.","Prepends transform to the current one.","Convert a value to degrees from radians. Equivalent to …","Reexport radians helper trait from vecmath","Viewport in pixels. <code>[x, y, width, height]</code> where <code>(x, y)</code> is …","Draw rectangle","Draws rectangle.","Draws a rectangle.","Draws a rectangle.","Draws rectangle.","Moves to a relative rectangle using the current rectangle …","Rotates degrees in local coordinates.","Rotates degrees in local coordinates.","Rotate radians in local coordinates.","Scales in local coordinates.","Scales in local coordinates.","Scales in local coordinates.","Mixes the current color with black.","Mixes the current color with black.","Shears in local coordinates.","Shears in local coordinates.","Shears in local coordinates.","Flips the source rectangle horizontally.","Flips the source rectangle horizontally and vertically.","Flips the source rectangle vertically.","Adds a source rectangle.","Moves to a relative source rectangle using the current …","Draw text","Draws text.","Texture packing.","Mixes the current color with white.","Mixes the current color with white.","","Translate x and y in local coordinates.","Translate position in local coordinates.","Translate position in local coordinates.","Renders list of 2d triangles using a solid color.","Same as <code>tri_list</code>, but with individual vertex colors.","Renders list of 2d triangles using a color and a texture.","Same as <code>tri_list_uv</code>, but with individual vertex colors.","Methods for converting shapes into triangles.","","","","Contains type aliases used in this library","The size of window in points.","Scales in both directions in local coordinates.","Scales in both directions in local coordinates.","Holds rendered character data.","Stores characters in a buffer and loads them by demand.","The error type associated with the character cache.","The texture type associated with the character cache.","Sets height of character, including space to the next one.","The advance size of character, including space.","Gets width of character, including space to the next one.","The offset of character within texture atlas.","The size of character within texture atlas.","","","Get reference to character.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","if this is an “invalid character” character","The left offset.","The offset of character.","The texture of the character.","","The top offset.","","","","Return the width for some given text.","A curved line","","","","","Sets the arcs color.","The arcs color","Draws circle arc using default method.","Draws circle arc using triangulation.","Sets the end of the arc (in radians).","The end of the arc in radians","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new arc","Sets the radius of the arc (Thickness of the arc, not the …","The radius of the arc (Thickness of the drawing, not the …","Sets the resolution of the arcs smoothness.","The resolution for the arc.","Sets the start of the arc (in radians).","The start of the arc in radians","","","","","Black color.","Blue color.","Cyan color.","Gray color.","Green color.","Lime color.","Magenta color.","Maroon color.","Navy color.","Olive color.","Purple color.","Red color.","Silver color.","Teal color.","Transparent color.","White color.","Yellow color.","Returns a semi-transparent white color","Converts gamma (brightness) of a color from linear color …","Converts gamma (brightness) from sRGB to linear color …","Returns a grey color","Converts from hexadecimal color format","Drawing 2d context.","","","","","","Current draw state settings.","Returns the argument unchanged.","Computes the current view size.","Calls <code>U::from(self)</code>.","Creates a new drawing context.","Creates a new drawing context in absolute coordinates.","Creates a new context with absolute transform in point …","","","Moves the current transform to the default coordinate …","","","","Stores the current transform as new view.","","","Current transformation.","","","","Moves the current transform to the view coordinate system.","View transformation.","Viewport information.","Additive blending.","Alpha blending (allows semi-transparent pixels).","The blend setting to use when drawing.","Draw to stencil buffer.","Graphics draw state used for blending, clipping and …","Increment stencil buffer.","Draw pixels that have stencil value.","Invert colors when rendering a white shape.","Additive blending with alpha channel.","Multiply color components.","Draw pixels that does not have stencil value.","Stencil buffer settings.","Sets blending.","Blend function to use. If None, blending is disabled.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Uses alpha blending.","Draws to stencil buffer with value 255. This can be used …","Increases stencil buffer. This can be used for nested …","Tests against stencil buffer with value 255. Draws inside …","Tests against stencil buffer with value 255. Draws outside …","","","","Sets scissor <code>[x, y, w, h]</code>.","Scissor mask to use. If set, no pixel outside of this …","Stencil test to use. If None, no stencil testing is done.","","","","","","","","","","","","","Ellipse border","An ellipse with filled color","Sets ellipse border.","The ellipse border","","","","","","","","","","","Sets ellipse color.","The border color","The ellipse color","Draws ellipse using default method.","Draws ellipse by corners using default method.","Draws ellipse using triangulation.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets optional ellipse border.","","Creates a new ellipse","Creates a new ellipse border","The border radius","Sets resolution of the ellipse smoothness.","The resolution for the shape, 360 degrees.","","","","","","","","","Glyph caching using the RustType library.","The minimum atlas size.","A struct used for caching rendered font.","","","","The factory used to create textures.","The font.","Returns the argument unchanged.","Creates a GlyphCache for a font stored in memory.","Constructs a GlyphCache from a Font.","Calls <code>U::from(self)</code>.","Constructor for a GlyphCache.","Return <code>ch</code> for <code>size</code> if it’s already cached. Don’t load. …","Load all characters in the <code>chars</code> iterator for <code>size</code>","Load all the printable ASCII characters for <code>size</code>. Includes …","","","","Represents a flat grid with square cells.","Iterates through the cells of a grid as (u32, u32).","","","","","Get on-screen position of a grid cell","Get a GridIterator for the grid","","","","","Number of columns.","Draws the grid.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Number of rows.","","","","","","","","","The width and height of each grid cell.","Get on-screen x position of a grid cell","Get on-screen y position of a grid cell","An image","","","","","Sets color.","The color","Draws image using default method.","Draws many images.","Draws image using triangulation.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Sets optional color.","Sets optional rectangle.","Sets optional source rectangle.","Creates a new image","Creates a new colored image","Sets rectangle.","The rectangle to draw image inside","The image source rectangle","Sets source rectangle.","","","","","Bevel edges","A colored line with a default border radius","Round edges","Round edges with specified resolution","The shape of the line","Square edges","","","","","","","","","Sets color.","The line color","Draws line using default method.","Draws an arrow","Draws line using default method between points.","Draws line using triangulation.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new line","Creates a new line","Sets radius.","The line radius","Sets shape.","The line shape","","","","","","","","","Sets width.","The type used for matrices.","The type used for scalars.","The type used for 2D vectors.","The type used for 3D vectors.","Transforms from normalized to absolute coordinates.","Adds two vectors.","","Computes area of a simple polygon.","Computes the area and centroid of a simple polygon.","Converts to another vector type.","Computes centroid of a simple polygon.","Computes the cross product.","Computes the dot product.","Transforms from barycentric coordinates to cartesian.","Extract scale information from matrix.","Transform color with hue, saturation and value.","Create an identity matrix.","Returns true if point is inside triangle.","Computes the inverse of a 2x3 matrix.","Returns the least separation out of four. Each seperation …","Returns a number that tells which side it is relative to a …","Shrinks a rectangle by a factor on all sides.","Computes modular offset safely for numbers.","Multiplies two vectors component wise.","Multiplies the vector with a scalar.","Multiplies two matrices.","Orients x axis to look at point.","","Computes overlap between two rectangles. The area of the …","Creates a perpendicular vector.","","Computes a relative rectangle using the rectangle as a …","Computes a relative source rectangle using the source …","","Creates a rotation matrix.","Create a scale matrix.","","Compute the shortest vector from point to ray. A ray …","Create a shear matrix.","","Computes the square length of a vector.","Subtracts ‘b’ from ‘a’.","Transforms from cartesian coordinates to barycentric.","","Transforms a 2D position through matrix.","Transforms a 2D vector through matrix.","Creates a translation matrix.","Returns true if triangle is clockwise.","Computes next modular index safely.","Computes modular offset safely for indices.","Computes previous modular index safely.","A polygon","","","","","Sets color.","The color of the polygon","Draws polygon using the default method.","Draws polygon using triangulation.","Draws tweened polygon with linear interpolation, using …","Draws tweened polygon with linear interpolation, using …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates new polygon","","","","","Useful constants for radians.","Returns radians corresponding to 180 degrees.","Returns radians corresponding to 360 degrees.","Returns radians corresponding to 90 degrees.","Convert a value to radians from degrees. Equivalent to …","Convert a value to degrees from radians. Equivalent to …","Bevel corners","The border of the rectangle","A filled rectangle","Round corners, with resolution per corner.","The shape of the rectangle corners","Square corners","Sets border properties.","The border","","","","","","","Create a centered rectangle.","Create <code>types::Rectangle</code> for a square with a center in (<code>x</code>, <code>y</code>…","","","","","","","Sets color.","The color of the border","The rectangle color","Draws the rectangle using the default method.","Draws the rectangle by corners using the default method.","Draws the rectangle using triangulation.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Sets optional border.","","Creates a new rectangle.","Creates a new rectangle border.","Creates a new rectangle with rounded corners.","Creates a new rectangle border with rounded corners.","The radius of the border. The half-width of the line by …","Create <code>types::Rectangle</code> by the two opposite corners.","Sets shape of the corners.","The roundness of the rectangle","Create <code>types::Rectangle</code> for a square with a top-left …","","","","","","","","","","","","","Renders text","","","","","The color","Draws text with a character cache","Draws text at position with a character cache","The font size","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new text with black color","Creates a new colored text","A builder method indicating that the Text’s position …","Whether or not the text’s position should be rounded (to …","","","","","A texture packer using a skyline heuristic.","The index to the current texture atlas.","","","Create a new texture atlas with an initial tile.","Returns the index of atlas offset in skyline with room for …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a new <code>TexturePacker</code>.","Texture atlas offsets from left to right.","Stores current texture atlas and previously created ones.","","","","Update current texture atlas.","Creates triangle list vertices from rectangle.","Creates triangle list texture coords from image.","Creates triangle list vertices from rectangle.","Streams a polygon into tri list. Uses buffers that fit …","Streams a quad into tri list.","Transformed x coordinate as f32.","Transformed y coordinate as f32.","Streams an arc between the two radian boundaries.","Streams an ellipse border specified by a resolution.","Streams an ellipse specified by a resolution.","Streams tweened polygons using linear interpolation.","Splits polygon into convex segments. Create a buffer that …","Streams a round border line.","Streams a round rectangle border.","Streams a round rectangle.","The type used for area.","[red, green, blue, alpha]","The type used for color component.","The type used for font size.","[x1, y1, x2, y2]","","[p0, p1, …]","A slice of polygons.","The type used for radius.","[x, y, dir_x, dir_y]","Rectangle dimensions: [x, y, w, h]","The type used for resolution.","","[x, y, w, h]","[x1, y1, x2, y2, x3, y3]","","The type used for width.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,80,80,80,1,81,1,1,0,0,0,10,10,0,10,10,1,1,0,0,80,1,0,0,0,10,10,0,1,82,82,81,81,81,81,81,81,1,1,35,35,35,0,0,83,83,83,0,0,10,10,1,0,0,10,10,0,82,0,0,83,81,81,81,0,0,10,10,10,10,81,80,0,1,0,0,10,10,0,82,81,81,81,81,81,81,83,83,81,81,81,84,84,84,84,84,0,0,0,83,83,1,81,81,81,10,10,10,10,0,1,1,1,0,1,81,81,0,0,31,31,36,36,36,36,36,36,36,31,36,36,36,36,36,36,36,36,36,36,36,36,36,31,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41,41,0,42,0,42,42,41,41,41,42,0,12,12,12,41,42,12,41,42,12,41,42,12,41,42,12,12,41,42,12,41,42,12,41,42,12,41,42,12,12,12,12,12,12,41,42,12,12,12,12,41,42,12,41,42,12,41,42,12,41,42,0,0,14,14,46,14,46,14,0,0,46,14,46,14,14,46,14,14,14,14,46,14,14,46,14,14,14,14,14,46,14,14,46,14,46,14,46,14,46,14,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,57,58,57,58,57,57,57,58,57,58,57,57,57,58,57,58,57,58,58,58,57,57,58,57,58,57,58,57,58,57,57,57,0,22,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,60,0,60,60,0,60,60,24,60,24,60,24,60,24,24,24,24,24,24,24,60,24,24,60,24,24,24,24,24,24,24,24,60,24,60,24,60,24,60,24,24,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,4,0,0,4,0,0,4,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,80,80,80,80,80,77,0,0,77,0,77,28,28,77,76,28,77,76,28,0,0,77,76,28,77,76,28,28,76,28,28,28,28,77,76,28,28,77,76,28,0,28,28,28,28,28,28,76,0,28,28,0,77,76,28,77,76,28,77,76,28,77,76,28,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,5,8,59,59,59,59,59],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[1,[[3,[[3,[2]]]]]],[4],[[]],[[]],0,0,[[5,6,7,7,[9,[8]],4,10]],[[11,[9,[8]],12,4]],[[11,[9,[8]],12,4]],[[5,10]],[5],[13],[1,1],[[]],0,0,[[]],0,0,0,[[5,[9,[8]],4,10]],[[14,[9,[8]],12,4]],[[14,[9,[8]],12,4]],[[5,[9,[15]],[9,[15]],4,10]],[[1,1],16],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[1,17],[[19,[18]]]],[[]],[[],20],[[]],[[],20],0,0,[21],[21],[21],0,[[4,10]],[[22,12,4]],[[22,12,4]],[[]],0,[[5,6,[9,[23]],4,10]],[[24,[9,[23]],12,4]],[[24,[9,[23]],12,4]],[[5,6,[9,[15]],[9,[15]],4,10]],[7],0,0,[[21,21,21,21]],[[7,7]],[[[9,[15]]]],[[[9,[15]]]],0,[[5,25,4,10]],[[26,25,12,4]],[[26,25,12,4]],[[26,27,7,12,4]],[[26,27,7,12,4]],[4],[[]],0,0,0,[[5,[9,[8]],4,10]],[[28,[9,[8]],12,4]],[[28,[9,[8]],12,4]],[[5,[9,[15]],[9,[15]],4,10]],[[7,7]],[7],[7],[7],[[7,7]],[[[9,[15]]]],[[[9,[15]]]],[21],[21],[[7,7]],[[[9,[15]]]],[[[9,[15]]]],[[]],[[]],[[]],[[7,7,7,7]],[[7,7]],0,[[5,29,30,31,4,10],19],0,[21],[21],[[]],[[7,7]],[[[9,[15]]]],[[[9,[15]]]],[[12,[3,[32]],33]],[[12,33]],[[12,[3,[32]],33]],[[12,33]],0,[[],19],[[],19],[[],34],0,0,[7],[7],0,0,0,0,[[[36,[35]]],7],0,[[[36,[35]]],7],0,0,[[]],[[]],[[29,37],[[19,[36]]]],[[[36,[[0,[38,35]]]]],[[36,[[0,[38,35]]]]]],[[]],[[]],[[]],0,[[[36,[35]]],7],0,0,[[]],[[[36,[35]]],7],[[],19],[[],19],[[],34],[[29,30],[[19,[7]]]],0,[[]],[[]],[11,11],[[]],[[11,5],11],0,[[11,[9,[8]],12,4,10]],[[11,[9,[8]],12,4,10]],[[11,7],11],0,[[]],[[]],[[5,6,7,7],11],[[11,6],11],0,[[11,39],11],0,[[11,7],11],0,[[]],[[],19],[[],19],[[],34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[21,5],[5,5],[5,5],[21,5],[30,5],0,[[40,4],40],[[]],[[]],[40,40],[[]],0,[[]],[40,15],[[]],[[],40],[[7,7],40],[1,40],[[40,7,7],40],[[40,4],40],[40,40],[[40,7],40],[[40,7,7],40],[[40,7,7],40],[40,40],[[]],[[40,7,7],40],0,[[],19],[[],19],[[],34],[40,40],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[12,41],12],0,[[]],[[]],[[]],[[]],[[]],[[]],[12,12],[41,41],[42,42],[[]],[[]],[[]],[[],12],[[12,12],16],[[41,41],16],[[42,42],16],[[12,17],43],[[41,17],43],[[42,17],43],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[12,12],[[45,[44]]]],[[41,41],[[45,[44]]]],[[42,42],[[45,[44]]]],[[12,[3,[20]]],12],0,0,[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],34],[[],34],[[],34],0,0,[[14,46],14],0,[[]],[[]],[[]],[[]],0,0,[46,46],[14,14],[[]],[[]],[[14,5],14],0,0,[[14,[9,[8]],12,4,10]],[[14,[9,[15]],[9,[15]],12,4,10]],[[14,[9,[8]],12,4,10]],[[]],[[]],[[14,21],14],[[]],[[]],[[14,[45,[46]]],14],[[14,21,21,21,21],14],[5,14],[[5,6],14],0,[[14,39],14],0,[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],34],[[],34],0,0,0,[[]],[[]],[[[49,[[0,[47,48,35]]]],29,37],[[19,[[36,[[0,[47,48,35]]]]]]]],0,0,[[]],[[[50,[13]],51],[[19,[[49,[[0,[47,48,35]]]]]]]],[[52,51],[[49,[[0,[47,48,35]]]]]],[[]],[[[54,[53]],51],[[55,[[49,[[0,[47,48,35]]]]]]]],[[[49,[[0,[47,48,35]]]],29,37],[[45,[[36,[[0,[47,48,35]]]]]]]],[[[49,[[0,[47,48,35]]]],29,56],19],[[[49,[[0,[47,48,35]]]],29],19],[[],19],[[],19],[[],34],0,0,[[]],[[]],[[]],[[]],[57,15],[57,58],[57,57],[58,58],[[]],[[]],0,[[57,24,12,4,10]],[[57,17],43],[[58,17],43],[[]],[[]],[[]],[[]],[[]],[58,45],0,[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],34],[[],34],0,[57,7],[57,7],0,[[]],[[]],[22,22],[[]],[[22,5],22],0,[[22,12,4,10]],[[50,5,12,4,10]],[[22,12,4,10]],[[]],[[]],[[22,[45,[5]]],22],[[22,[45,[[9,[8]]]]],22],[[22,[45,[59]]],22],[[],22],[5,22],[[22,[9,[8]]],22],0,0,[[22,59],22],[[]],[[],19],[[],19],[[],34],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[60,60],[24,24],[[]],[[]],[[24,5],24],0,[[24,[9,[23]],12,4,10]],[[24,[9,[23]],7,12,4,10]],[[24,[9,[15]],[9,[15]],12,4,10]],[[24,[9,[23]],12,4,10]],[[]],[[]],[[24,21],24],[[]],[[]],[[24,21,21,21,21],24],[[5,6],24],[[5,6],24],[[24,6],24],0,[[24,60],24],0,[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],34],[[],34],[[24,61],24],0,0,0,0,[[2,2],[[4,[2]]]],[[[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63]]]]]]]]]]]]]]]],[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63]]]]]]]]]]]]]]]]],[[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63]]]]]]]]]]]]]]]]]],[[4,4],4],[[[25,[2]]],2],[[[25,[2]]]],[[[3,[[0,[62,64]]]]],3],[[[25,[2]]],[[15,[2]]]],[[[3,[[0,[62,[65,[[0,[62,[65,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]],[66,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]]]]]],[66,[[0,[62,[65,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]],[66,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]]]]]]]]]],[3,[[0,[62,[65,[[0,[62,[65,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]],[66,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]]]]]],[66,[[0,[62,[65,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]],[66,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]]]]]]]]]]],[[0,[62,[65,[[0,[62,[65,[[0,[62,[65,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]],[66,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]]]]]],[66,[[0,[62,[65,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]],[66,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]]]]]]]]]],[66,[[0,[62,[65,[[0,[62,[65,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]],[66,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]]]]]],[66,[[0,[62,[65,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]],[66,[[0,[62,[65,[[0,[62,65,66]]]],[66,[[0,[62,65,66]]]]]]]]]]]]]]]]]]]],[[[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]],[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]]],[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]]]]]],[[[67,[2]],[68,[2]]],[[15,[2]]]],[[[4,[2]]],[[15,[2]]]],[[5,32,32,32],5],[[],[[4,[2]]]],[[[67,[2]],[15,[2]]],16],[[[3,[[3,[[0,[62,69,[63,[[0,[62,69,[63,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[65,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[66,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[70,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],71]]]],[65,[[0,[62,69,[63,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[65,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[66,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[70,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],71]]]],[66,[[0,[62,69,[63,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[65,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[66,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[70,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],71]]]],[70,[[0,[62,69,[63,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[65,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[66,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[70,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],71]]]],71]]]]]]],[[3,[[3,[[0,[62,69,[63,[[0,[62,69,[63,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[65,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[66,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[70,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],71]]]],[65,[[0,[62,69,[63,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[65,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[66,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[70,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],71]]]],[66,[[0,[62,69,[63,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[65,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[66,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[70,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],71]]]],[70,[[0,[62,69,[63,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[65,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[66,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],[70,[[0,[62,69,[63,[[0,[62,69,63,65,66,70,71]]]],[65,[[0,[62,69,63,65,66,70,71]]]],[66,[[0,[62,69,63,65,66,70,71]]]],[70,[[0,[62,69,63,65,66,70,71]]]],71]]]],71]]]],71]]]]]]]],[[[15,[2]],[15,[2]],[15,[2]],[15,[2]]],[[15,[2]]]],[[[23,[2]],[15,[2]]],2],[[[8,[2]],2],[[8,[2]]]],[[[0,[63,72,62]],[0,[63,72,62]],[0,[63,72,62]]],[[0,[63,72,62]]]],[[[3,[[0,[62,[65,[[0,[62,[65,[[0,[62,[65,[[0,[62,65]]]]]]]]]]]]]]]],[3,[[0,[62,[65,[[0,[62,[65,[[0,[62,[65,[[0,[62,65]]]]]]]]]]]]]]]]],[[3,[[0,[62,[65,[[0,[62,[65,[[0,[62,[65,[[0,[62,65]]]]]]]]]]]]]]]]]],[[[3,[[0,[62,[65,[[0,[62,[65,[[0,[62,[65,[[0,[62,65]]]]]]]]]]]]]]]],[0,[62,[65,[[0,[62,[65,[[0,[62,[65,[[0,[62,[65,[[0,[62,65]]]]]]]]]]]]]]]]]]],[[3,[[0,[62,[65,[[0,[62,[65,[[0,[62,[65,[[0,[62,65]]]]]]]]]]]]]]]]]],[[[3,[[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]]]],[3,[[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]]]]],[[3,[[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]]]]]],[[2,2],[[4,[2]]]],[[4,7,7],4],[[[8,[2]],[8,[2]]],[[45,[[8,[2]]]]]],[[[3,[2]]],[[3,[2]]]],[[4,4],4],[[[8,[2]],[15,[2]]],[[8,[2]]]],[[[59,[2]],2,2],[[59,[2]]]],[[4,7],4],[2,[[4,[2]]]],[[2,2],[[4,[2]]]],[[4,7,7],4],[[[73,[2]],[15,[2]]],[[15,[2]]]],[[[15,[2]]],[[4,[2]]]],[[4,7,7],4],[[[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]]],[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]]]]]],[[[3,[[0,[62,[66,[[0,[62,[66,[[0,[62,[66,[[0,[62,66]]]]]]]]]]]]]]]],[3,[[0,[62,[66,[[0,[62,[66,[[0,[62,[66,[[0,[62,66]]]]]]]]]]]]]]]]],[[3,[[0,[62,[66,[[0,[62,[66,[[0,[62,[66,[[0,[62,66]]]]]]]]]]]]]]]]]],[[[67,[2]],[15,[2]]],[[68,[2]]]],[[4,7,7],4],[[[3,[[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]]]],[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]]],[[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]]]],[[[3,[[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]]]],[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]]],[[3,[[0,[62,[63,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]],[65,[[0,[62,[63,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]],[65,[[0,[62,[63,[[0,[62,63,65]]]],[65,[[0,[62,63,65]]]]]]]]]]]]]]]]]],[[[15,[2]]],[[4,[2]]]],[[[67,[2]]],16],[[74,74],74],[[74,74,75],74],[[74,74],74],0,[[]],[[]],[26,26],[[]],[[26,5],26],0,[[26,25,12,4,10]],[[26,25,12,4,10]],[[26,27,7,12,4,10]],[[26,27,7,12,4,10]],[[]],[[]],[5,26],[[]],[[],19],[[],19],[[],34],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[28,76],28],0,[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[[7,7,7],8],[77,77],[76,76],[28,28],[[]],[[]],[[]],[[28,5],28],0,0,[[28,[9,[8]],12,4,10]],[[28,[9,[15]],[9,[15]],12,4,10]],[[28,[9,[8]],12,4,10]],[[]],[[]],[[]],[[28,21],28],[[]],[[]],[[]],0,[[28,[45,[76]]],28],[[28,21,21,21,21],28],[5,28],[[5,6],28],[[5,6],28],[[5,6,6],28],0,[[7,7,7,7],8],[[28,77],28],0,[[7,7,7],8],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],34],[[],34],[[],34],0,[[]],[[]],[78,78],[[]],0,[[78,30,31,12,4,10],19],[[78,30,15,31,12,4,10],19],0,[[]],[[]],[29,78],[[5,29],78],[78,78],0,[[]],[[],19],[[],19],[[],34],0,0,[[]],[[]],[[[79,[35]],[3,[20]],35],74],[[[79,[35]],[3,[20]]],[[45,[74]]]],[[]],[[]],[[],[[79,[35]]]],0,0,[[],19],[[],19],[[],34],[[[79,[35]],74,[3,[20]]]],[[4,8,6],[[3,[[3,[32]]]]]],[[35,59],[[3,[[3,[32]]]]]],[[4,8],[[3,[[3,[32]]]]]],[[4,56,33]],[[4,33,33]],[[4,7,7],32],[[4,7,7],32],[[7,7,39,4,8,6,33]],[[39,4,8,6,33]],[[39,4,8,33]],[[4,27,7,33]],[[4,25,33]],[[39,4,23,6,33]],[[39,4,8,6,6,33]],[[39,4,8,6,33]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,21],5],[[8,7],8],[[5,21,21,21,21],5],[[8,7,7],8],[59,59],[59,59],[59,59],[[59,7,7,7,7],59],[[59,7,7],59]],"c":[],"p":[[3,"Viewport"],[8,"Float"],[15,"array"],[6,"Matrix2d"],[6,"Color"],[6,"Radius"],[6,"Scalar"],[6,"Rectangle"],[8,"Into"],[8,"Graphics"],[3,"CircleArc"],[3,"DrawState"],[15,"u8"],[3,"Ellipse"],[6,"Vec2d"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[15,"u32"],[6,"ColorComponent"],[3,"Image"],[6,"Line"],[3,"Line"],[6,"Polygon"],[3,"Polygon"],[6,"Polygons"],[3,"Rectangle"],[6,"FontSize"],[15,"str"],[8,"CharacterCache"],[15,"f32"],[8,"FnMut"],[3,"TypeId"],[8,"ImageSize"],[3,"Character"],[15,"char"],[8,"Clone"],[6,"Resolution"],[3,"Context"],[4,"Blend"],[4,"Stencil"],[6,"Result"],[4,"Ordering"],[4,"Option"],[3,"Border"],[8,"CreateTexture"],[8,"UpdateTexture"],[3,"GlyphCache"],[15,"slice"],[3,"TextureSettings"],[4,"Font"],[3,"Path"],[8,"AsRef"],[6,"Result"],[8,"Iterator"],[3,"Grid"],[3,"GridCells"],[6,"SourceRectangle"],[4,"Shape"],[6,"Width"],[8,"Copy"],[8,"Add"],[8,"Cast"],[8,"Mul"],[8,"Sub"],[6,"Triangle"],[6,"Vec3d"],[8,"One"],[8,"Div"],[8,"Neg"],[8,"Rem"],[6,"Ray"],[15,"usize"],[15,"isize"],[3,"Border"],[4,"Shape"],[3,"Text"],[3,"TexturePacker"],[8,"Radians"],[8,"Transformed"],[8,"Rectangled"],[8,"Colored"],[8,"SourceRectangled"]]},\
"graphics_api_version":{"doc":"A library for storing graphics API versions.","t":"RRRDRDMLLLLLLLLLLMLLLMLLLLLLLLMLMLLLLLLLLLLL","n":["DIRECTX","METAL","OPENGL","UnsupportedGraphicsApiError","VULKAN","Version","api","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","directx","eq","equivalent","expected","fmt","fmt","fmt","found","from","from","into","into","is_directx","is_metal","is_opengl","is_vulkan","major","metal","minor","opengl","partial_cmp","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vulkan"],"q":[[0,"graphics_api_version"]],"d":["A graphics API developed by Microsoft. See …","A graphics API developed by Apple. See …","A graphics API developed by Khronos Group. See …","An error for when a graphics API is unsupported.","A graphics API developed by Khronos Group. See …","Stores graphics API version.","A string identifying the API.","","","","","","","","Creates a new DirectX version.","","","A list of supported graphics APIs.","","","","The requested graphics API.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the API is DirectX, <code>false</code> otherwise.","Returns <code>true</code> if the API is metal, <code>false</code> otherwise.","Returns <code>true</code> if the API is OpenGL, <code>false</code> otherwise.","Returns <code>true</code> if the API is Vulkan, <code>false</code> otherwise.","Major version.","Creates a new Metal version.","Minor version.","Creates a new OpenGL version.","","","","","","","","","","Creates a new Vulkan version."],"i":[0,0,0,0,0,0,1,1,7,1,7,1,1,1,1,1,1,7,1,7,7,7,1,7,1,7,1,1,1,1,1,1,1,1,1,1,7,1,7,1,7,1,7,1],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[[1,1],2],[[3,3],1],[[1,1],4],[[],4],0,[[1,5],6],[[7,5],6],[[7,5],[[9,[8]]]],0,[[]],[[]],[[]],[[]],[1,4],[1,4],[1,4],[1,4],0,[[3,3],1],0,[[3,3],1],[[1,1],[[10,[2]]]],[[]],[[],11],[[],9],[[],9],[[],9],[[],9],[[],12],[[],12],[[3,3],1]],"c":[],"p":[[3,"Version"],[4,"Ordering"],[15,"u32"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"UnsupportedGraphicsApiError"],[3,"Error"],[4,"Result"],[4,"Option"],[3,"String"],[3,"TypeId"]]},\
"half":{"doc":"A crate that provides support for half-precision 16-bit …","t":"SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLACCCCCCIIKKKKKKKKKKIIKKKK","n":["DIGITS","DIGITS","E","E","EPSILON","EPSILON","FRAC_1_PI","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_2","FRAC_PI_3","FRAC_PI_3","FRAC_PI_4","FRAC_PI_4","FRAC_PI_6","FRAC_PI_6","FRAC_PI_8","FRAC_PI_8","INFINITY","INFINITY","LN_10","LN_10","LN_2","LN_2","LOG10_2","LOG10_2","LOG10_E","LOG10_E","LOG2_10","LOG2_10","LOG2_E","LOG2_E","MANTISSA_DIGITS","MANTISSA_DIGITS","MAX","MAX","MAX_10_EXP","MAX_10_EXP","MAX_EXP","MAX_EXP","MAX_SUBNORMAL","MAX_SUBNORMAL","MIN","MIN","MIN_10_EXP","MIN_10_EXP","MIN_EXP","MIN_EXP","MIN_POSITIVE","MIN_POSITIVE","MIN_POSITIVE_SUBNORMAL","MIN_POSITIVE_SUBNORMAL","NAN","NAN","NEG_INFINITY","NEG_INFINITY","NEG_ONE","NEG_ONE","NEG_ZERO","NEG_ZERO","ONE","ONE","PI","PI","RADIX","RADIX","SQRT_2","SQRT_2","ZERO","ZERO","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","bf16","borrow","borrow","borrow_mut","borrow_mut","clamp","clamp","classify","classify","clone","clone","clone_into","clone_into","copysign","copysign","default","default","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","f16","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_be_bytes","from_be_bytes","from_bits","from_bits","from_f32","from_f32","from_f32_const","from_f32_const","from_f64","from_f64","from_f64_const","from_f64_const","from_le_bytes","from_le_bytes","from_ne_bytes","from_ne_bytes","from_str","from_str","ge","ge","gt","gt","into","into","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","le","le","lt","lt","max","max","min","min","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","neg","neg","partial_cmp","partial_cmp","prelude","product","product","product","product","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","signum","signum","slice","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","to_be_bytes","to_be_bytes","to_bits","to_bits","to_f32","to_f32","to_f32_const","to_f32_const","to_f64","to_f64","to_f64_const","to_f64_const","to_le_bytes","to_le_bytes","to_ne_bytes","to_ne_bytes","to_owned","to_owned","to_string","to_string","total_cmp","total_cmp","try_from","try_from","try_into","try_into","type_id","type_id","vec","HalfBitsSliceExt","HalfBitsVecExt","HalfFloatSliceExt","HalfFloatVecExt","bf16","f16","HalfBitsSliceExt","HalfFloatSliceExt","convert_from_f32_slice","convert_from_f64_slice","convert_to_f32_slice","convert_to_f64_slice","reinterpret_cast","reinterpret_cast","reinterpret_cast_mut","reinterpret_cast_mut","to_f32_vec","to_f64_vec","HalfBitsVecExt","HalfFloatVecExt","from_f32_slice","from_f64_slice","reinterpret_into","reinterpret_into"],"q":[[0,"half"],[269,"half::prelude"],[275,"half::slice"],[287,"half::vec"]],"d":["Approximate number of <code>bf16</code> significant digits in base 10","Approximate number of <code>f16</code> significant digits in base 10","<code>bf16</code> Euler’s number (ℯ)","<code>f16</code> Euler’s number (ℯ)","<code>bf16</code> machine epsilon value","<code>f16</code> machine epsilon value","<code>bf16</code> 1/π","<code>f16</code> 1/π","<code>bf16</code> 1/√2","<code>f16</code> 1/√2","<code>bf16</code> 2/π","<code>f16</code> 2/π","<code>bf16</code> 2/√π","<code>f16</code> 2/√π","<code>bf16</code> π/2","<code>f16</code> π/2","<code>bf16</code> π/3","<code>f16</code> π/3","<code>bf16</code> π/4","<code>f16</code> π/4","<code>bf16</code> π/6","<code>f16</code> π/6","<code>bf16</code> π/8","<code>f16</code> π/8","<code>bf16</code> positive Infinity (+∞)","<code>f16</code> positive Infinity (+∞)","<code>bf16</code> 𝗅𝗇 10","<code>f16</code> 𝗅𝗇 10","<code>bf16</code> 𝗅𝗇 2","<code>f16</code> 𝗅𝗇 2","<code>bf16</code> 𝗅𝗈𝗀₁₀2","<code>f16</code> 𝗅𝗈𝗀₁₀2","<code>bf16</code> 𝗅𝗈𝗀₁₀ℯ","<code>f16</code> 𝗅𝗈𝗀₁₀ℯ","<code>bf16</code> 𝗅𝗈𝗀₂10","<code>f16</code> 𝗅𝗈𝗀₂10","<code>bf16</code> 𝗅𝗈𝗀₂ℯ","<code>f16</code> 𝗅𝗈𝗀₂ℯ","Number of <code>bf16</code> significant digits in base 2","Number of <code>f16</code> significant digits in base 2","Largest finite <code>bf16</code> value","Largest finite <code>f16</code> value","Maximum possible <code>bf16</code> power of 10 exponent","Maximum possible <code>f16</code> power of 10 exponent","Maximum possible <code>bf16</code> power of 2 exponent","Maximum possible <code>f16</code> power of 2 exponent","Maximum subnormal <code>bf16</code> value","Maximum subnormal <code>f16</code> value","Smallest finite <code>bf16</code> value","Smallest finite <code>f16</code> value","Minimum possible normal <code>bf16</code> power of 10 exponent","Minimum possible normal <code>f16</code> power of 10 exponent","One greater than the minimum possible normal <code>bf16</code> power of …","One greater than the minimum possible normal <code>f16</code> power of …","Smallest positive normal <code>bf16</code> value","Smallest positive normal <code>f16</code> value","Minimum positive subnormal <code>bf16</code> value","Minimum positive subnormal <code>f16</code> value","<code>bf16</code> Not a Number (NaN)","<code>f16</code> Not a Number (NaN)","<code>bf16</code> negative infinity (-∞).","<code>f16</code> negative infinity (-∞)","<code>bf16</code> -1","<code>f16</code> -1","<code>bf16</code> -0","<code>f16</code> -0","<code>bf16</code> 1","<code>f16</code> 1","<code>bf16</code> Archimedes’ constant (π)","<code>f16</code> Archimedes’ constant (π)","The radix or base of the internal representation of <code>bf16</code>","The radix or base of the internal representation of <code>f16</code>","<code>bf16</code> √2","<code>f16</code> √2","<code>bf16</code> 0","<code>f16</code> 0","","","","","","","","","","","","","A 16-bit floating point type implementing the <code>bfloat16</code> …","","","","","Restrict a value to a certain interval unless it is NaN.","Restrict a value to a certain interval unless it is NaN.","Returns the floating point category of the number.","Returns the floating point category of the number.","","","","","Returns a number composed of the magnitude of <code>self</code> and the …","Returns a number composed of the magnitude of <code>self</code> and the …","","","","","","","","","","","","","","","","","A 16-bit floating point type implementing the IEEE …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Creates a floating point value from its representation as …","Creates a floating point value from its representation as …","Constructs a <code>bf16</code> value from the raw bits.","Constructs a 16-bit floating point value from the raw bits.","Constructs a <code>bf16</code> value from a 32-bit floating point value.","Constructs a 16-bit floating point value from a 32-bit …","Constructs a <code>bf16</code> value from a 32-bit floating point value.","Constructs a 16-bit floating point value from a 32-bit …","Constructs a <code>bf16</code> value from a 64-bit floating point value.","Constructs a 16-bit floating point value from a 64-bit …","Constructs a <code>bf16</code> value from a 64-bit floating point value.","Constructs a 16-bit floating point value from a 64-bit …","Creates a floating point value from its representation as …","Creates a floating point value from its representation as …","Creates a floating point value from its representation as …","Creates a floating point value from its representation as …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this number is neither infinite nor NaN.","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if this value is ±∞ and <code>false</code> otherwise.","Returns <code>true</code> if this value is ±∞ and <code>false</code>. otherwise.","Returns <code>true</code> if this value is NaN and <code>false</code> otherwise.","Returns <code>true</code> if this value is <code>NaN</code> and <code>false</code> otherwise.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if and only if <code>self</code> has a negative sign, …","Returns <code>true</code> if and only if <code>self</code> has a negative sign, …","Returns <code>true</code> if and only if <code>self</code> has a positive sign, …","Returns <code>true</code> if and only if <code>self</code> has a positive sign, …","","","","","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","","","","","","","","","","","","","","","","","","","A collection of the most used items and traits in this …","","","","","","","","","","","","","","","","","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Contains utility functions and traits to convert between …","","","","","","","","","","","","","","","","","Returns the memory representation of the underlying bit …","Returns the memory representation of the underlying bit …","Converts a <code>bf16</code> into the underlying bit representation.","Converts a <code>f16</code> into the underlying bit representation.","Converts a <code>bf16</code> value into an <code>f32</code> value.","Converts a <code>f16</code> value into a <code>f32</code> value.","Converts a <code>bf16</code> value into an <code>f32</code> value.","Converts a <code>f16</code> value into a <code>f32</code> value.","Converts a <code>bf16</code> value into an <code>f64</code> value.","Converts a <code>f16</code> value into a <code>f64</code> value.","Converts a <code>bf16</code> value into an <code>f64</code> value.","Converts a <code>f16</code> value into a <code>f64</code> value.","Returns the memory representation of the underlying bit …","Returns the memory representation of the underlying bit …","Returns the memory representation of the underlying bit …","Returns the memory representation of the underlying bit …","","","","","Returns the ordering between <code>self</code> and <code>other</code>.","Returns the ordering between <code>self</code> and <code>other</code>.","","","","","","","Contains utility functions and traits to convert between …","","","","","","","Extensions to <code>[u16]</code> slices to support reinterpret …","Extensions to <code>[f16]</code> and <code>[bf16]</code> slices to support …","Converts all of the elements of a <code>[f32]</code> slice into <code>f16</code> or …","Converts all of the elements of a <code>[f64]</code> slice into <code>f16</code> or …","Converts all of the <code>f16</code> or <code>bf16</code> elements of <code>self</code> into <code>f32</code> …","Converts all of the <code>f16</code> or <code>bf16</code> elements of <code>self</code> into <code>f64</code> …","Reinterprets a slice of <code>f16</code> or <code>bf16</code> numbers as a slice of …","Reinterprets a slice of <code>u16</code> bits as a slice of <code>f16</code> or <code>bf16</code> …","Reinterprets a mutable slice of <code>f16</code> or <code>bf16</code> numbers as a …","Reinterprets a mutable slice of <code>u16</code> bits as a mutable …","Converts all of the <code>f16</code> or <code>bf16</code> elements of <code>self</code> into <code>f32</code> …","Converts all of the <code>f16</code> or <code>bf16</code> elements of <code>self</code> into <code>f64</code> …","Extensions to <code>Vec&lt;u16&gt;</code> to support reinterpret operations.","Extensions to <code>Vec&lt;f16&gt;</code> and <code>Vec&lt;bf16&gt;</code> to support …","Converts all of the elements of a <code>[f32]</code> slice into a new …","Converts all of the elements of a <code>[f64]</code> slice into a new …","Reinterprets a vector of <code>f16</code>or <code>bf16</code> numbers as a vector of …","Reinterprets a vector of <code>u16</code> bits as a vector of <code>f16</code> or …"],"i":[1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,1,1,2,2,2,2,1,1,2,2,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,1,1,2,2,2,2,1,1,2,2,1,2,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,1,1,1,2,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,1,1,2,2,2,2,1,1,2,2,1,1,2,2,1,2,0,1,1,2,2,1,1,1,1,2,2,2,2,1,1,2,2,1,2,0,1,1,1,1,2,2,2,2,1,1,2,2,1,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,0,0,0,0,0,0,0,0,23,23,23,23,23,24,23,24,23,23,0,0,25,25,25,26],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],0,[[]],[[]],[[]],[[]],[[1,1,1],1],[[2,2,2],2],[1,3],[2,3],[1,1],[2,2],[[]],[[]],[[1,1],1],[[2,2],2],[[],1],[[],2],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[1,1],4],[[2,2],4],0,[[1,5],[[7,[6]]]],[[1,5],[[7,[6]]]],[[1,5],[[7,[6]]]],[[1,5],[[7,[6]]]],[[1,5],[[7,[6]]]],[[1,5],[[7,[6]]]],[[1,5],[[7,[6]]]],[[1,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],[8,1],[9,1],[[]],[9,2],[8,2],[[]],[[[10,[8]]],1],[[[10,[8]]],2],[11,1],[11,2],[12,1],[12,2],[12,1],[12,2],[13,1],[13,2],[13,1],[13,2],[[[10,[8]]],1],[[[10,[8]]],2],[[[10,[8]]],1],[[[10,[8]]],2],[14,[[7,[1,15]]]],[14,[[7,[2,15]]]],[[1,1],4],[[2,2],4],[[1,1],4],[[2,2],4],[[]],[[]],[1,4],[2,4],[1,4],[2,4],[1,4],[2,4],[1,4],[2,4],[1,4],[2,4],[1,4],[2,4],[[1,1],4],[[2,2],4],[[1,1],4],[[2,2],4],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[1],[1],[2],[2],[[1,1],[[17,[16]]]],[[2,2],[[17,[16]]]],0,[18,1],[18,1],[18,2],[18,2],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[1,1],[2,2],0,[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[18,1],[18,1],[18,2],[18,2],[1,[[10,[8]]]],[2,[[10,[8]]]],[1,11],[2,11],[1,12],[2,12],[1,12],[2,12],[1,13],[2,13],[1,13],[2,13],[1,[[10,[8]]]],[2,[[10,[8]]]],[1,[[10,[8]]]],[2,[[10,[8]]]],[[]],[[]],[[],19],[[],19],[[1,1],16],[[2,2],16],[[],7],[[],7],[[],7],[[],7],[[],20],[[],20],0,0,0,0,0,0,0,0,0,[[[21,[12]]]],[[[21,[13]]]],[[[21,[12]]]],[[[21,[13]]]],[[],[[21,[11]]]],[[],[[21,[0]]]],[[],[[21,[11]]]],[[],[[21,[0]]]],[[],[[22,[12]]]],[[],[[22,[13]]]],0,0,[[[21,[12]]]],[[[21,[13]]]],[[],[[22,[11]]]],[[],[[22,[0]]]]],"c":[],"p":[[3,"bf16"],[3,"f16"],[4,"FpCategory"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[15,"u8"],[15,"i8"],[15,"array"],[15,"u16"],[15,"f32"],[15,"f64"],[15,"str"],[3,"ParseFloatError"],[4,"Ordering"],[4,"Option"],[8,"Iterator"],[3,"String"],[3,"TypeId"],[15,"slice"],[3,"Vec"],[8,"HalfFloatSliceExt"],[8,"HalfBitsSliceExt"],[8,"HalfFloatVecExt"],[8,"HalfBitsVecExt"]]},\
"image":{"doc":"Overview","t":"NINNNNNSSSNESSNDEIENNCDDIINNGGNNNDIIICENNNNECNNNNNNNNNNNNNNNNNNNNNNDDNNIQIDNNNNIDNNQDNNNNNNGNNNGDNNNNNNGNNNGDQNNNNNNNNLLKLLLLKLLLLKLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLALLLLLLLLKLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLKLLLLKLLLLLKLLLLKLLLLLFLLLLLLLLLLLLLLLLLFALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLKLLLLLLLKLLLLLALFFFKLLLLKLLLLKLLLLLLALLLLLLLLLLLLLLLLLLLFLLLLLLLKLLLLLLLLLKLLLLLLLLLLLLLFFLLLLLLLLLLLLLKLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFKLLLLLIDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAAAAAAAAAAADDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLNNNDDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDDNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDRLLLLLLLLLLLLLLMLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFLLLLLLFLLLLLLLLLLLLLLLLLLLLLMLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDDNDELLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNNENNENNNDDDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNENNNDNNNNDNNNDDDDENNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMMMLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALDDLLLLLLLLLLLLLLLMLLLMLLLLMLMLLLLLLLMMMMNNDNNNDNNNNNEEGNNDENNNNDENNNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNEDNENNNDNNDDNLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLCCNCECNCNCNCNFLLCLLACFFLLCLLFFFFFFFLLCCCCFCCLFFLCFFFFFFFFFFFFFFFLLLLFFDQILLFFLLFFLLFLLFFFFLLFFFKLLLFLLKLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLMLLLLLLMMM","n":["A8","AnimationDecoder","Avif","Bgr8","Bgra8","Bmp","Bmp","CHANNEL_COUNT","COLOR_MODEL","COLOR_TYPE","Cmyk8","ColorType","DEFAULT_MAX_VALUE","DEFAULT_MIN_VALUE","Dds","Delay","DynamicImage","EncodableLayout","ExtendedColorType","Farbfeld","Farbfeld","FlatSamples","Frame","Frames","GenericImage","GenericImageView","Gif","Gif","GrayAlphaImage","GrayImage","Hdr","Ico","Ico","ImageBuffer","ImageDecoder","ImageDecoderRect","ImageEncoder","ImageError","ImageFormat","ImageLuma16","ImageLuma8","ImageLumaA16","ImageLumaA8","ImageOutputFormat","ImageResult","ImageRgb16","ImageRgb32F","ImageRgb8","ImageRgba16","ImageRgba32F","ImageRgba8","Jpeg","Jpeg","L1","L16","L16","L2","L4","L8","L8","La1","La16","La16","La2","La4","La8","La8","Luma","LumaA","OpenExr","OpenExr","Pixel","Pixel","PixelWithColorType","Pixels","Png","Png","Pnm","Pnm","Primitive","Progress","Qoi","Qoi","Reader","Rgb","Rgb1","Rgb16","Rgb16","Rgb2","Rgb32F","Rgb32F","Rgb32FImage","Rgb4","Rgb8","Rgb8","RgbImage","Rgba","Rgba1","Rgba16","Rgba16","Rgba2","Rgba32F","Rgba32F","Rgba32FImage","Rgba4","Rgba8","Rgba8","RgbaImage","SubImage","Subpixel","Tga","Tga","Tiff","Tiff","Unknown","Unsupported","WebP","WebP","adjust_contrast","all","apply","apply","apply","apply","apply","apply2","apply2","apply2","apply2","apply2","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_without_alpha","apply_without_alpha","as_bytes","as_bytes","as_flat_samples","as_flat_samples_f32","as_flat_samples_mut","as_flat_samples_u16","as_flat_samples_u8","as_luma16","as_luma8","as_luma_alpha16","as_luma_alpha8","as_mut_luma16","as_mut_luma8","as_mut_luma_alpha16","as_mut_luma_alpha8","as_mut_rgb16","as_mut_rgb32f","as_mut_rgb8","as_mut_rgba16","as_mut_rgba32f","as_mut_rgba8","as_raw","as_rgb16","as_rgb32f","as_rgb8","as_rgba16","as_rgba32f","as_rgba8","bits_per_pixel","blend","blend","blend","blend","blend","blend_pixel","blend_pixel","blend_pixel","blur","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","brighten","buffer","buffer","buffer_mut","bytes_per_pixel","can_read","can_write","change_bounds","channel_count","channel_count","channels","channels","channels","channels","channels","channels4","channels4","channels4","channels4","channels4","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codecs","collect_frames","color","color_type","convert","copy_from","copy_from","copy_within","copy_within","copy_within","crop","crop_imm","current","default","default","delay","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","dimensions","dimensions","dimensions","dimensions","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enumerate_pixels","enumerate_pixels_mut","enumerate_rows","enumerate_rows_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","expand_palette","expand_palette","extensions_str","filter3x3","flat","fliph","flipv","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_channels","from_channels","from_channels","from_channels","from_channels","from_decoder","from_extension","from_fn","from_mime_type","from_numer_denom_ms","from_parts","from_path","from_pixel","from_raw","from_saturating_duration","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_vec","get_pixel","get_pixel","get_pixel","get_pixel","get_pixel_checked","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut_checked","grayscale","guess_format","has_alpha","has_color","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","huerotate","icc_profile","icc_profile","image_dimensions","imageops","in_bounds","in_bounds","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_buffer","into_bytes","into_flat_samples","into_frames","into_iter","into_iter","into_luma16","into_luma8","into_luma_alpha16","into_luma_alpha8","into_raw","into_reader","into_rgb16","into_rgb32f","into_rgb8","into_rgba16","into_rgba32f","into_rgba8","into_vec","invert","invert","invert","invert","invert","invert","io","left","load","load_from_memory","load_from_memory_with_format","map","map","map","map","map","map2","map2","map2","map2","map2","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_without_alpha","map_without_alpha","math","new","new","new","new","new","new_luma16","new_luma8","new_luma_a16","new_luma_a8","new_rgb16","new_rgb32f","new_rgb8","new_rgba16","new_rgba32f","new_rgba8","next","next","numer_denom_ms","offsets","open","original_color_type","original_color_type","partial_cmp","pixels","pixels","pixels","pixels_mut","put_pixel","put_pixel","put_pixel","put_pixel","read_image","read_image","read_image_with_progress","read_image_with_progress","read_rect","read_rect","read_rect_with_progress","reading_enabled","remaining","resize","resize_exact","resize_to_fill","rotate180","rotate270","rotate90","rows","rows_mut","sample_layout","save","save","save_buffer","save_buffer_with_format","save_with_format","save_with_format","scanline_bytes","scanline_bytes","set_limits","set_limits","sub_image","sub_image","sub_image","thumbnail","thumbnail_exact","to_bytes","to_image","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma16","to_luma32f","to_luma8","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha16","to_luma_alpha32f","to_luma_alpha8","to_mime_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb16","to_rgb32f","to_rgb8","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba16","to_rgba32f","to_rgba8","top","total","total_bytes","total_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_get_pixel","unsafe_get_pixel","unsafe_get_pixel","unsafe_put_pixel","unsafe_put_pixel","unsafe_put_pixel","unsharpen","view","view","view","width","width","width","width","write_buffer_with_format","write_image","write_to","write_to","write_with_encoder","write_with_encoder","writing_enabled","ConvertBuffer","EnumeratePixels","EnumeratePixelsMut","EnumerateRows","EnumerateRowsMut","Pixels","PixelsMut","Rows","RowsMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","convert","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","bmp","dds","dxt","farbfeld","gif","hdr","ico","jpeg","openexr","png","pnm","qoi","tga","tiff","webp","BmpDecoder","BmpEncoder","borrow","borrow","borrow_mut","borrow_mut","color_type","deref","deref","deref_mut","deref_mut","dimensions","drop","drop","encode","encode_with_palette","from","from","get_palette","init","init","into","into","into_reader","new","new","new_without_file_header","read_image","read_rect_with_progress","set_indexed_color","try_from","try_from","try_into","try_into","type_id","type_id","write_image","DdsDecoder","borrow","borrow_mut","color_type","deref","deref_mut","dimensions","drop","from","init","into","into_reader","new","read_image","scanline_bytes","try_from","try_into","type_id","DXT1","DXT3","DXT5","DxtDecoder","DxtEncoder","DxtReader","DxtVariant","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","color_type","color_type","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","encode","eq","equivalent","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_reader","new","new","read","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_image","read_rect_with_progress","scanline_bytes","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","FarbfeldDecoder","FarbfeldEncoder","FarbfeldReader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","color_type","deref","deref","deref","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","encode","from","from","from","init","init","init","into","into","into","into_reader","new","new","read","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_rect_with_progress","scanline_bytes","seek","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_image","Finite","GifDecoder","GifEncoder","GifReader","Infinite","Repeat","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","color_type","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","encode","encode_frame","encode_frames","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_frames","into_reader","new","new","new_with_speed","read","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_image","read_to_end","set_limits","set_repeat","to_owned","try_encode_frames","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_limits","HdrAdapter","HdrDecoder","HdrEncoder","HdrImageDecoderIterator","HdrMetadata","HdrReader","Rgbe8Pixel","SIGNATURE","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone_into","clone_into","color_correction","color_type","custom_attributes","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","drop","drop","drop","e","encode","eq","equivalent","exposure","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","height","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","into_iter","into_reader","metadata","new","new","new","new_nonstrict","next","orientation","pixel_aspect_ratio","read","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_image","read_image_hdr","read_image_ldr","read_image_native","read_image_transform","read_raw_file","read_rect_with_progress","read_to_end","rgbe8","size_hint","to_hdr","to_ldr","to_ldr_scale_gamma","to_owned","to_owned","to_rgbe8","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","with_strictness","IcoDecoder","IcoEncoder","IcoFrame","as_png","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","color_type","deref","deref","deref","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","encode","encode_images","from","from","from","init","init","init","into","into","into","into_reader","new","new","read_image","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_encoded","write_image","Centimeters","Inches","JpegDecoder","JpegEncoder","PixelAspectRatio","PixelDensity","PixelDensityUnit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color_type","default","density","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","dpi","drop","drop","drop","drop","encode","encode_image","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","icc_profile","init","init","init","init","into","into","into","into","into_reader","new","new","new_with_quality","read_image","scale","set_pixel_density","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unit","write_image","OpenExrDecoder","OpenExrEncoder","borrow","borrow","borrow_mut","borrow_mut","color_type","deref","deref","deref_mut","deref_mut","dimensions","drop","drop","fmt","fmt","from","from","init","init","into","into","into_reader","new","new","original_color_type","read_image_with_progress","scanline_bytes","try_from","try_from","try_into","try_into","type_id","type_id","with_alpha_preference","write_image","Adaptive","ApngDecoder","Avg","Best","CompressionType","Default","Fast","FilterType","Huffman","NoFilter","Paeth","PngDecoder","PngEncoder","PngReader","Rle","Sub","Up","apng","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color_type","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","drop","drop","encode","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","gamma_value","icc_profile","init","init","init","init","init","init","into","into","into","into","into","into","into_frames","into_reader","is_apng","new","new","new_with_quality","read","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_image","read_to_end","scanline_bytes","set_limits","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","with_limits","write_image","ArbitraryHeader","ArbitraryMap","ArbitraryTuplType","Ascii","Binary","Bitmap","BitmapHeader","BlackAndWhite","BlackAndWhiteAlpha","Custom","Graymap","GraymapHeader","Grayscale","GrayscaleAlpha","Pixmap","PixmapHeader","PnmDecoder","PnmEncoder","PnmHeader","PnmSubtype","RGB","RGBAlpha","SampleEncoding","as_arbitrary","as_bitmap","as_graymap","as_pixmap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_type","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encoding","encoding","encoding","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","height","height","height","height","height","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_inner","into_reader","magic_constant","maximal_sample","maxval","maxval","maxwhite","new","new","original_color_type","read_image","sample_encoding","subtype","subtype","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tupltype","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","width","width","width","width","with_dynamic_header","with_header","with_subtype","write","write_image","QoiDecoder","QoiEncoder","borrow","borrow","borrow_mut","borrow_mut","color_type","deref","deref","deref_mut","deref_mut","dimensions","drop","drop","from","from","init","init","into","into","into_reader","new","new","try_from","try_from","try_into","try_into","type_id","type_id","write_image","TgaDecoder","TgaEncoder","borrow","borrow","borrow_mut","borrow_mut","color_type","deref","deref","deref_mut","deref_mut","dimensions","disable_rle","drop","drop","encode","from","from","init","init","into","into","into_reader","new","new","original_color_type","read_image","scanline_bytes","try_from","try_from","try_into","try_into","type_id","type_id","write_image","TiffDecoder","TiffEncoder","TiffReader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","color_type","deref","deref","deref","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","encode","from","from","from","icc_profile","init","init","init","into","into","into","into_reader","new","new","original_color_type","read","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_big_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_from_little_endian_into","read_image","read_to_end","set_limits","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_image","DEFAULT","MAX","MIN","WebPDecoder","WebPEncoder","WebPQuality","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","color_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","encode","fmt","from","from","from","has_animation","icc_profile","init","init","init","into","into","into","into_frames","into_reader","lossless","lossy","new","new_lossless","read_image","set_background_color","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vp8","write_image","Frame","Vp8Decoder","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode_frame","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","for_display","from","from","get_buf_size","height","init","init","into","into","keyframe","new","pixel_type","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ubuf","vbuf","width","ybuf","Color","Decoding","DecodingError","DimensionError","DimensionMismatch","Encoding","EncodingError","Exact","FailedAlready","Format","Generic","GenericFeature","ImageError","ImageFormatHint","ImageResult","InsufficientMemory","IoError","LimitError","LimitErrorKind","Limits","Name","NoMoreData","Parameter","ParameterError","ParameterErrorKind","PathExtension","Unknown","Unsupported","Unsupported","UnsupportedError","UnsupportedErrorKind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_hint","format_hint","format_hint","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_format_and_kind","from_format_hint","from_format_hint","from_kind","from_kind","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","kind","kind","kind","new","new","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","limits","supported","ChannelCountMismatch","ColumnMajorPacked","Error","FlatSamples","ImagePacked","NormalForm","NormalFormRequired","PixelPacked","RowMajorPacked","SampleLayout","TooLarge","Unaliased","View","ViewMut","WrongColor","as_mut","as_mut_slice","as_ref","as_slice","as_view","as_view_mut","as_view_with_mut_samples","blend_pixel","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","channel_stride","channels","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_hint","column_major_packed","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","dimensions","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","extents","extents","fits","fits","flat","flat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_mut_sample","get_mut_sample","get_mut_sample","get_pixel","get_pixel","get_pixel_mut","get_sample","get_sample","get_sample","has_aliased_samples","has_aliased_samples","hash","hash","hash","height","height_stride","image_mut_slice","image_mut_slice","image_mut_slice","image_slice","image_slice","image_slice","in_bounds","in_bounds","in_bounds","in_bounds","in_bounds_index","in_bounds_index","index","index","index","index_ignoring_bounds","index_ignoring_bounds","index_mut","init","init","init","init","init","init","into","into","into","into","into","into","into_inner","into_inner","is_normal","is_normal","layout","min_length","min_length","min_length","min_length","partial_cmp","put_pixel","row_major_packed","samples","samples","samples","shrink_to","shrink_to","shrink_to","shrink_to","strides_cwh","strides_cwh","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_buffer","try_upgrade","type_id","type_id","type_id","type_id","type_id","type_id","width","width_stride","with_monocolor","BiLevel","CatmullRom","CatmullRom","ColorMap","FilterType","Gaussian","Gaussian","Lanczos3","Lanczos3","Nearest","Nearest","Triangle","Triangle","blur","borrow","borrow_mut","brighten","clone","clone_into","colorops","contrast","crop","crop_imm","deref","deref_mut","dither","drop","eq","filter3x3","flip_horizontal","flip_horizontal_in","flip_horizontal_in_place","flip_vertical","flip_vertical_in","flip_vertical_in_place","fmt","from","grayscale","grayscale_alpha","grayscale_with_type","grayscale_with_type_alpha","horizontal_gradient","huerotate","index_colors","init","interpolate_bilinear","interpolate_nearest","into","invert","overlay","overlay_bounds","replace","resize","rotate180","rotate180_in","rotate180_in_place","rotate270","rotate270_in","rotate90","rotate90_in","sample_bilinear","sample_nearest","thumbnail","tile","to_owned","try_from","try_into","type_id","unsharpen","vertical_gradient","BiLevel","Color","ColorMap","borrow","borrow_mut","brighten","brighten_in_place","clone","clone_into","contrast","contrast_in_place","deref","deref_mut","dither","drop","from","grayscale","grayscale_alpha","grayscale_with_type","grayscale_with_type_alpha","has_lookup","has_lookup","huerotate","huerotate_in_place","index_colors","index_of","index_of","init","into","invert","lookup","lookup","map_color","map_color","to_owned","try_from","try_into","type_id","LimitSupport","Limits","Reader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_dimensions","check_support","clear_format","clone","clone","clone_into","clone_into","decode","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","format","free","free_usize","from","from","from","hash","hash","init","init","init","into","into","into","into_dimensions","into_inner","limits","max_alloc","max_image_height","max_image_width","new","no_limits","no_limits","open","reserve","reserve_buffer","reserve_usize","set_format","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_format","with_guessed_format","Rect","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","fmt","from","hash","height","init","into","to_owned","try_from","try_into","type_id","width","x","y"],"q":[[0,"image"],[767,"image::buffer"],[921,"image::codecs"],[936,"image::codecs::bmp"],[973,"image::codecs::dds"],[991,"image::codecs::dxt"],[1107,"image::codecs::farbfeld"],[1202,"image::codecs::gif"],[1321,"image::codecs::hdr"],[1504,"image::codecs::ico"],[1551,"image::codecs::jpeg"],[1631,"image::codecs::openexr"],[1667,"image::codecs::png"],[1831,"image::codecs::pnm"],[2041,"image::codecs::qoi"],[2071,"image::codecs::tga"],[2106,"image::codecs::tiff"],[2203,"image::codecs::webp"],[2262,"image::codecs::webp::vp8"],[2302,"image::error"],[2510,"image::error::LimitErrorKind"],[2512,"image::flat"],[2710,"image::imageops"],[2780,"image::imageops::colorops"],[2818,"image::io"],[2893,"image::math"]],"d":["Pixel is 8-bit alpha","AnimationDecoder trait","An Image in AVIF format.","Pixel contains 8-bit B, G and R channels","Pixel is 8-bit BGR with an alpha channel","An Image in BMP Format","An Image in BMP Format","The number of channels of this pixel type.","A string that can help to interpret the meaning each …","This pixel has the format of one of the predefined …","Pixel is 8-bit CMYK","An enumeration over supported color types and bit depths","The maximum value for this type of primitive within the …","The minimum value for this type of primitive within the …","An Image in DDS Format","The delay of a frame relative to the previous one.","A Dynamic Image","Types which are safe to treat as an immutable byte slice …","An enumeration of color types encountered in image formats.","An Image in farbfeld Format","An Image in farbfeld Format","","A single animation frame","An implementation dependent iterator, reading the frames …","A trait for manipulating images.","Trait to inspect an image.","An Image in GIF Format","An Image in GIF Format","Sendable grayscale + alpha channel image buffer","Sendable grayscale image buffer","An Image in Radiance HDR Format","An Image in ICO Format","An Image in ICO Format","Generic image buffer","The trait that all decoders implement","Specialized image decoding not be supported by all formats","The trait all encoders implement","","An enumeration of supported image formats. Not all formats …","Each pixel in this image is 16-bit Luma","Each pixel in this image is 8-bit Luma","Each pixel in this image is 16-bit Luma with alpha","Each pixel in this image is 8-bit Luma with alpha","An enumeration of supported image formats for encoding.","","Each pixel in this image is 16-bit Rgb","Each pixel in this image is 32-bit float Rgb","Each pixel in this image is 8-bit Rgb","Each pixel in this image is 16-bit Rgb with alpha","Each pixel in this image is 32-bit float Rgb with alpha","Each pixel in this image is 8-bit Rgb with alpha","An Image in JPEG Format","An Image in JPEG Format with specified quality, up to 100","Pixel is 1-bit luminance","Pixel is 16-bit luminance","Pixel is 16-bit luminance","Pixel is 2-bit luminance","Pixel is 4-bit luminance","Pixel is 8-bit luminance","Pixel is 8-bit luminance","Pixel is 1-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 2-bit luminance with an alpha channel","Pixel is 4-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Grayscale colors.","Grayscale colors + alpha channel","An Image in OpenEXR Format","An Image in OpenEXR Format","A generalized pixel.","The type of pixel.","The pixel with an associated <code>ColorType</code>. Not all possible …","Immutable pixel iterator","An Image in PNG Format","An Image in PNG Format","An Image in general PNM Format","An Image in one of the PNM Formats","The type of each channel in a pixel. For example, this can …","Represents the progress of an image operation.","An Image in QOI format.","An image in QOI Format","The type of reader produced by <code>into_reader</code>.","RGB colors.","Pixel contains 1-bit R, G and B channels","Pixel is 16-bit RGB","Pixel contains 16-bit R, G and B channels","Pixel contains 2-bit R, G and B channels","Pixel is 32-bit float RGB","Pixel is 32-bit float RGB","An image buffer for 32-bit float RGB pixels, where the …","Pixel contains 4-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Sendable Rgb image buffer","RGB colors + alpha channel","Pixel is 1-bit RGB with an alpha channel","Pixel is 16-bit RGBA","Pixel is 16-bit RGB with an alpha channel","Pixel is 2-bit RGB with an alpha channel","Pixel is 32-bit float RGBA","Pixel is 32-bit float RGBA","An image buffer for 32-bit float RGBA pixels, where the …","Pixel is 4-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Sendable Rgb + alpha channel image buffer","A View into another image","The scalar type that is used to store each channel in this …","An Image in TGA Format","An Image in TGA Format","An Image in TIFF Format","An Image in TIFF Format","Pixel is of unknown color type with the specified bits per …","A value for signalling an error: An unsupported format was …","An Image in WEBP Format","An image in WebP Format.","Adjust the contrast of this image. <code>contrast</code> is the amount …","Return all ImageFormats","Apply the function <code>f</code> to each channel of this pixel.","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Get the bytes of this value.","Return this image’s pixels as a native endian byte slice.","Return a view on the raw sample buffer.","Return a view on the raw sample buffer for 32bit per …","Return a mutable view on the raw sample buffer.","Return a view on the raw sample buffer for 16 bit per …","Return a view on the raw sample buffer for 8 bit per …","Return a reference to an 16bit Grayscale image","Return a reference to an 8bit Grayscale image","Return a reference to an 16bit Grayscale image with an …","Return a reference to an 8bit Grayscale image with an …","Return a mutable reference to an 16bit Grayscale image","Return a mutable reference to an 8bit Grayscale image","Return a mutable reference to an 16bit Grayscale image …","Return a mutable reference to an 8bit Grayscale image with …","Return a mutable reference to an 16bit RGB image","Return a mutable reference to an 32bit RGB image","Return a mutable reference to an 8bit RGB image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 8bit RGBA image","Returns the underlying raw buffer","Return a reference to an 16bit RGB image","Return a reference to an 32bit RGB image","Return a reference to an 8bit RGB image","Return a reference to an 16bit RGBA image","Return a reference to an 32bit RGBA image","Return a reference to an 8bit RGBA image","Returns the number of bits contained in a pixel of …","Blend the color of a given pixel into ourself, taking into …","","","","","Put a pixel at location (x, y), taking into account alpha …","Put a pixel at location (x, y), taking into account alpha …","","Performs a Gaussian blur on this image. <code>sigma</code> is a measure …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bounding rectangle of this image.","","","Brighten the pixels of this image. <code>value</code> is the amount to …","Iterators and other auxiliary structure for the <code>ImageBuffer</code>…","Returns the image buffer","Returns a mutable image buffer","Returns the number of bytes contained in a pixel of …","Return if the ImageFormat can be decoded by the lib.","Return if the ImageFormat can be encoded by the lib.","Change the coordinates of this subimage.","Returns the number of color channels that make up this …","Get the number of channels for colors of this type.","Returns the components as a slice.","","","","","Returns the channels of this pixel as a 4 tuple. If the …","","","","","Returns the components as a mutable slice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoding and decoding for various image file formats.","Steps through the iterator from the current frame until …","Return this image’s color type.","Returns the color type of the image data produced by this …","Examples","Copies all of the pixels from another image into this …","Copies all of the pixels from another image into this …","Copies all of the pixels from one part of this image to …","Copies all of the pixels from one part of this image to …","","Return a cut-out of this image delimited by the bounding …","Return a cut-out of this image delimited by the bounding …","A measure of completed decoding.","","","Delay of this frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a tuple containing the width and height of the …","The width and height of this image.","","The width and height of this image.","","","","","","","","","","","","","","","","","","Enumerates over the pixels of the image. The iterator …","Enumerates over the pixels of the image. The iterator …","Enumerates over the rows of the image. The iterator yields …","Enumerates over the rows of the image. The iterator yields …","","","","","","","","","","","","","","","","","","","","","","","","Contains detailed error representation.","Expands a color palette by re-using the existing buffer. …","Expands a color palette by re-using the existing buffer. …","Return a list of applicable extensions for this format.","Filters this image with the specified 3x3 kernel.","Image representations for ffi.","Flip this image horizontally","Flip this image vertically","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a pixel from the 4 channels a, b, c and d. If …","","","","","Decodes an encoded image into a dynamic image.","Return the image format specified by a path’s file …","Constructs a new ImageBuffer by repeated application of …","Return the image format specified by a MIME type.","Create a delay from a ratio of milliseconds.","Constructs a new frame","Return the image format specified by the path’s file …","Constructs a new ImageBuffer by copying a pixel","Constructs a buffer from a generic container (for example …","Convert from a duration, clamped between 0 and an …","Returns a view into a slice.","","","","","Returns mutable view into a mutable slice.","","","","","Creates an image buffer out of an existing buffer. Returns …","Returns the pixel located at (x, y). Indexed from top left.","","Gets a reference to the pixel at location <code>(x, y)</code>","","Gets a reference to the pixel at location <code>(x, y)</code> or …","Gets a reference to the mutable pixel at location <code>(x, y)</code>. …","Gets a reference to the mutable pixel at location <code>(x, y)</code>","","Do not use is function: It is unimplemented!","Gets a reference to the mutable pixel at location <code>(x, y)</code> …","Return a grayscale version of this image. Returns <code>Luma</code> …","Guess image format from memory block","Returns if there is an alpha channel.","Returns false if the color scheme is grayscale, true …","","","","","","","","","The height of this image.","The height of this image.","The height of this image.","Returns the height of the underlying image","Hue rotate the supplied image. <code>value</code> is the degrees to …","Returns the ICC color profile embedded in the image","Returns the ICC color profile embedded in the image","Read a tuple containing the (width, height) of the image …","Image Processing Functions","Returns true if this x, y coordinate is contained inside …","Returns true if this x, y coordinate is contained inside …","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the underlying image.","Get a mutable reference to the underlying image.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the image buffer","Return this image’s pixels as a byte vector. If the …","Return the raw sample buffer with its stride an dimension …","Consume the decoder producing a series of frames.","","","Consume the image and returns a Luma image.","Consume the image and returns a Luma image.","Consume the image and returns a LumaA image.","Consume the image and returns a LumaA image.","Returns the underlying raw buffer","Returns a reader that can be used to obtain the bytes of …","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consumes the image buffer and returns the underlying data …","Invert this pixel","","","","","Invert the colors of this image. This method operates …","Input and output of images.","Returns the x offset","Create a new image from a Reader.","Create a new image from a byte slice","Create a new image from a byte slice","Apply the function <code>f</code> to each channel of this pixel.","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Mathematical helper functions and types.","Creates a new <code>Frames</code> from an implementation specific …","Constructs a new frame without any delay.","Creates a new image buffer based on a <code>Vec&lt;P::Subpixel&gt;</code>.","Creates a dynamic image backed by a buffer depending on …","Construct a new subimage The coordinates set the position …","Creates a dynamic image backed by a buffer of gray pixels.","Creates a dynamic image backed by a buffer of gray pixels.","Creates a dynamic image backed by a buffer of gray pixels …","Creates a dynamic image backed by a buffer of gray pixels …","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","","","The numerator and denominator of the delay in milliseconds.","The offsets of this subimage relative to the underlying …","Open the image located at the path specified. The image’…","Returns the color type of the image file before decoding","Returns the color type of the image file before decoding","","Returns an Iterator over the pixels of this image. The …","Returns an Iterator over the pixels of this image. The …","Returns an iterator over the pixels of this image. The …","Returns an iterator over the mutable pixels of this image.","Put a pixel at location (x, y). Indexed from top left.","Puts a pixel at location <code>(x, y)</code>","","","Returns all the bytes in the image.","Returns all the bytes in the image.","Same as <code>read_image</code> but periodically calls the provided …","Same as <code>read_image</code> but periodically calls the provided …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image, periodically …","Return the ImageFormats which are enabled for reading.","Calculate a measure for remaining decoding work.","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Rotate this image 180 degrees clockwise.","Rotate this image 270 degrees clockwise.","Rotate this image 90 degrees clockwise.","Returns an iterator over the rows of this image.","Returns an iterator over the mutable rows of this image.","Get the format of the buffer when viewed as a matrix of …","Saves the buffer to a file at the path specified.","Saves the buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified …","Saves the buffer to a file at the specified path in the …","Saves the buffer to a file at the specified path in the …","Returns the minimum number of bytes that can be …","Returns the minimum number of bytes that can be …","Set decoding limits for this decoder. See <code>Limits</code> for the …","Set decoding limits for this decoder. See <code>Limits</code> for the …","Returns a mutable subimage that is a view into this image. …","Returns a mutable subimage that is a view into this image. …","Create a mutable sub-view of the image.","Scale this image down to fit within a specific size. …","Scale this image down to a specific size. Returns a new …","Return a copy of this image’s pixels as a byte vector. …","Convert this subimage to an ImageBuffer","Convert this pixel to luma","","","","","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Convert this pixel to luma with an alpha channel","","","","","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","Return the MIME type for this image format or “…","","","","","","","","","","","","","","","","Convert this pixel to RGB","","","","","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Convert this pixel to RGB with an alpha channel","","","","","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns the y offset","A measure of all necessary decoding work.","Returns the total number of bytes in the decoded image.","Returns the total number of bytes in the decoded image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y), ignoring bounds …","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y), ignoring bounds checking.","Performs an unsharpen mask on this image. <code>sigma</code> is the …","Returns a subimage that is an immutable view into this …","Returns a subimage that is an immutable view into this …","Create a sub-view of the image.","The width of this image.","The width of this image.","The width of this image.","Returns the width of the underlying image","Writes the supplied buffer to a writer in the specified …","Writes all the bytes in an image to the encoder.","Writes the buffer to a writer in the specified format.","Encode this image and write it to <code>w</code>.","Writes the buffer with the given encoder.","Encode this image with the provided encoder.","Return the ImageFormats which are enabled for writing.","Provides color conversions for whole image buffers.","Enumerate the pixels of an image.","Enumerate the pixels of an image.","Enumerate the rows of an image.","Enumerate the rows of an image.","Iterate over pixel refs.","Iterate over mutable pixel refs.","Iterate over rows of an image","Iterate over mutable rows of an image","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a buffer of type T","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decoding and Encoding of BMP Images","Decoding of DDS images","Decoding of DXT (S3TC) compression","Decoding of farbfeld images","Decoding of GIF Images","Decoding of Radiance HDR Images","Decoding and Encoding of ICO files","Decoding and Encoding of JPEG Images","Decoding of OpenEXR (.exr) Images","Decoding and Encoding of PNG Images","Decoding of netpbm image formats (pbm, pgm, ppm and pam).","Decoding and encoding of QOI images","Decoding of TGA Images","Decoding and Encoding of TIFF Images","Decoding and Encoding of WebP Images","A bmp decoder","The representation of a BMP encoder.","","","","","","","","","","","","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Same as <code>encode</code>, but allow a palette to be passed in. The …","Returns the argument unchanged.","Returns the argument unchanged.","Get the palette that is embedded in the BMP image, if any.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>.","Create a new decoder that decodes from the stream <code>r</code> …","","","If true, the palette in BMP does not apply to the image …","","","","","","","","The representation of a DDS decoder","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","","","","","","The DXT1 format. 48 bytes of RGB data in a 4x4 pixel …","The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel …","The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel …","DXT decoder","DXT encoder","DXT reader","What version of DXT compression are we using? Note that …","","","","","","","","","","","","Returns the color type that is stored in this DXT variant","","","","","","","","","","","","","","Encodes the image data <code>data</code> that has dimensions <code>width</code> and …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new DXT decoder that decodes from the stream <code>r</code>. …","Create a new encoder that writes its output to <code>w</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","farbfeld decoder","farbfeld encoder","farbfeld Reader","","","","","","","","","","","","","","","","","","Encodes the image <code>data</code> (native endian) that has dimensions …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>. The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finite number of repetitions","GIF decoder","GIF encoder.","Wrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>","Looping GIF","Number of repetitions for a GIF animation","","","","","","","","","","","","","","","","","","","","","","","","","Encode a single image.","Encode one frame of animation.","Encodes Frames. Consider using <code>try_encode_frames</code> instead …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new decoder that decodes the input steam <code>r</code>","Creates a new GIF encoder with a speed of 1. This …","Create a new GIF encoder, and has the speed parameter <code>speed</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the repeat behaviour of the encoded GIF","","Try to encode a collection of <code>ImageResult&lt;animation::Frame&gt;</code>…","","","","","","","","","","","","","Creates a new decoder that decodes the input steam <code>r</code>, …","Adapter to conform to <code>ImageDecoder</code> trait","An Radiance HDR decoder","Radiance HDR encoder","Scanline buffered pixel by pixel iterator","Metadata for Radiance HDR image","Wrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>","Refer to wikipedia","Radiance HDR file signature","","","","","","","","","","","","","","","Color components","","","","","Divide color values by corresponding tuple member (r, g, …","","All lines contained in image header are put here. Ordering …","","","","","","","","","","","","","","","","","","","","","","","","Exponent","Encodes the image <code>data</code> that has dimensions <code>width</code> and <code>height</code>","","","Divide color values by exposure to get to get physical …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Height of decoded image. It depends on orientation too.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns file metadata. Refer to <code>HdrMetadata</code> for details.","Creates encoder","Creates adapter","Reads Radiance HDR image header from stream <code>r</code> if the …","Allows reading old Radiance HDR images","","Orientation matrix. For standard orientation it is …","Pixel height divided by pixel width","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes decoder and returns a vector of <code>Rgb&lt;f32&gt;</code> pixels.","Consumes decoder and returns a vector of <code>Rgb&lt;u8&gt;</code> pixels. …","Consumes decoder and returns a vector of RGBE8 pixels","Consumes decoder and returns a vector of transformed pixels","Helper function for reading raw 3-channel f32 images","","","Creates <code>Rgbe8Pixel</code> from components","","Converts <code>Rgbe8Pixel</code> into <code>Rgb&lt;f32&gt;</code> linearly","Converts <code>Rgbe8Pixel</code> into <code>Rgb&lt;T&gt;</code> with scale=1 and gamma=2.2","Converts <code>Rgbe8Pixel</code> into <code>Rgb&lt;T&gt;</code> using provided scale and …","","","Converts <code>Rgb&lt;f32&gt;</code> into <code>Rgbe8Pixel</code>","","","","","","","","","","","","","","","","","","","","","","Width of decoded image. It could be either scanline length,","Reads Radiance HDR image header from stream <code>reader</code>, if the …","An ico decoder","ICO encoder","An ICO image entry","Construct a new <code>IcoFrame</code> by encoding <code>buf</code> as a PNG","","","","","","","","","","","","","","","","","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Takes some <code>IcoFrame</code>s and encodes them into an ICO.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>.","","","","","","","","","","","Construct a new <code>IcoFrame</code> using a pre-encoded PNG or BMP","Write an ICO image with the specified width, height, and …","Pixels per centimeter","Pixels per inch (2.54 cm)","JPEG decoder","The representation of a JPEG encoder","Represents the absence of a unit, the values indicate only …","Represents the pixel density of an image","Represents a unit in which the density of an image is …","","","","","","","","","","","","","","Returns a pixel density with a pixel aspect ratio of 1","A couple of values for (Xdensity, Ydensity)","","","","","","","","","","Creates the most common pixel density type: the horizontal …","","","","","Encodes the image stored in the raw byte buffer <code>image</code> that …","Encodes the given image.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code>, and has …","","Configure the decoder to scale the image during decoding.","Set the pixel density of the images the encoder will …","","","","","","","","","","","","","","","The unit in which the density is measured","","An OpenEXR decoder. Immediately reads the meta data from …","A thin wrapper that implements <code>ImageEncoder</code> for OpenEXR …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Use <code>read_image</code> instead if possible, as this method creates …","Create a decoder. Consumes the first few bytes of the …","Create an <code>ImageEncoder</code>. Does not write anything yet. …","","","","","","","","","","Create a decoder. Consumes the first few bytes of the …","Writes the complete image.","Uses a heuristic to select one of the preceding filters …","An <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.","Filters based on the average of left and right neighbor …","High compression level","Compression level of a PNG encoder. The default setting is …","Default compression level","Fast, minimal compression","Filter algorithms used to process image data to improve …","Huffman coding compression","No processing done, best used for low bit depth grayscale …","Algorithm that takes into account the left, upper left, …","PNG decoder","PNG encoder","Png Reader","Run-length encoding compression","Filters based on previous pixel in the same scanline","Filters based on the scanline above","Turn this into an iterator over the animation frames.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the image <code>data</code> that has dimensions <code>width</code> and <code>height</code>…","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the gamma value of the image or None if no gamma …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns if the image contains an animation.","Creates a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code> with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new decoder that decodes from the stream <code>r</code> with …","Write a PNG image with the specified width, height, and …","Header produced by a <code>pam</code> file (“Portable Arbitrary Map”…","Magic number P7","Standardized tuple type specifiers in the header of a <code>pam</code>.","Samples are encoded as decimal ascii strings separated by …","Samples are unsigned binary integers in big endian","Magic numbers P1 and P4","Header produced by a <code>pbm</code> file (“Portable Bit Map”)","Pixels are either black (0) or white (1)","Pixels are either black (0) or white (1) and a second …","An image format which is not standardized","Magic numbers P2 and P5","Header produced by a <code>pgm</code> file (“Portable Gray Map”)","Pixels represent the amount of white","Grayscale with an additional alpha channel","Magic numbers P3 and P6","Header produced by a <code>ppm</code> file (“Portable Pixel Map”)","PNM decoder","Encodes images to any of the <code>pnm</code> image formats.","Stores the complete header data of a file.","Denotes the category of the magic number","Three channels: Red, Green, Blue","Four channels: Red, Green, Blue, Alpha","The kind of encoding used to store sample values","Retrieve the underlying arbitrary header if any","Retrieve the underlying bitmap header if any","Retrieve the underlying graymap header if any","Retrieve the underlying pixmap header if any","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of color channels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encode an image whose samples are represented as <code>u8</code>.","Binary or Ascii encoded file","Binary or Ascii encoded file","Binary or Ascii encoded file","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The height of the image this header is for.","Height of the image file","Height of the image file","Height of the image file","Height of the image file","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract the reader and header after an image has been read.","","Get the two magic constant bytes corresponding to this …","The biggest value a sample can have. In other words, the …","Maximum sample value within the image","Maximum sample value within the image","Maximum sample value within the image","Create a new decoder that decodes from the stream <code>read</code>","Create new PnmEncoder from the <code>writer</code>.","","","Whether samples are stored as binary or as decimal ascii","Get the pnm subtype, depending on the magic constant …","Retrieve the format subtype from which the header was …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Color interpretation of image pixels","","","","","","","","","","","The width of the image this header is for.","Width of the image file","Width of the image file","Width of the image file","Width of the image file","Create the header dynamically for each image.","Enforce the use of a chosen header.","Encode a specific pnm subtype image.","Write the header back into a binary stream","","QOI decoder","QOI encoder","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new decoder that decodes from the stream <code>reader</code>","Creates a new encoder that writes its output to <code>writer</code>","","","","","","","","A decoder for TGA images","TGA encoder.","","","","","","","","","","","Disables run-length encoding","","","Encodes the image <code>buf</code> that has dimensions <code>width</code> and <code>height</code> …","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>.","","","","","","","","","","","Decoder for TIFF images.","Encoder for tiff images","Wrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>","","","","","","","","","","","","","","","","","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new TiffDecoder.","Create a new encoder that writes its output to <code>w</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Default lossy quality (80), providing a balance of quality …","Maximum lossy quality value (100).","Minimum lossy quality value (0).","WebP Image format decoder. Currently only supports lossy …","WebP Encoder.","WebP encoder quality.","","","","","","","","","","","","","","","","","","","","","Encode image data with the indicated color type.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns true if the image as described by the bitstream is …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Lossless encoding.","Lossy encoding. 0 = low quality, small size; 100 = high …","Create a new WebPDecoder from the Reader <code>r</code>. This function …","Create a new encoder that writes its output to <code>w</code>.","","Sets the background color if the image is an extended and …","","","","","","","","","","","An implementation of the VP8 Video Codec","","A Representation of the last decoded video frame","VP8 Decoder","","","","","","","Decodes the current frame","","","","","","","","","Indicates whether this frame is intended for display","Returns the argument unchanged.","Returns the argument unchanged.","Gets the buffer size","The height of the luma plane","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates whether this frame is a keyframe","Create a new decoder. The reader must present a raw vp8 …","The pixel type of the frame as defined by Section 9.2 of …","","","","","","","","The blue plane of the frame","The red plane of the frame","The width of the luma plane","The luma plane of the frame","The required color type can not be handled.","An error was encountered while decoding.","An error was encountered while decoding an image.","The resulting image exceed dimension limits in either …","The dimensions passed are wrong.","An error was encountered while encoding.","An error was encountered while encoding an image.","The format is known exactly.","Repeated an operation for which error that could not be …","An image format is not supported.","A string describing the parameter. This is discouraged and …","Some feature specified by string. This is discouraged and …","The generic error type for image operations.","A best effort representation for image formats.","Result of an image decoding/encoding process","The operation would have performed an allocation larger …","An error occurred while interacting with the environment.","Completing the operation would have required more …","Indicates the limit that prevented an operation from …","Completing the operation would have required more …","The format can be identified by a name.","The end of the image has been reached.","An error was encountered in input arguments.","An error was encountered in inputs arguments.","Details how a parameter is malformed.","A common path extension for the format is known.","The format is not known or could not be determined.","An operation can not be completed by the chosen …","The specified strict limits are not supported for this …","The implementation for an operation was not provided.","Details what feature is not supported.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the image format associated with this error.","Return the image format associated with this error.","Returns the image format associated with this error.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Create an <code>UnsupportedError</code> for an image with details on …","Create an <code>EncodingError</code> for an image format.","Create a <code>DecodingError</code> for an image format.","Construct a <code>ParameterError</code> directly from a corresponding …","Construct a generic <code>LimitError</code> directly from a …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the corresponding <code>UnsupportedErrorKind</code> of the …","Returns the corresponding <code>ParameterErrorKind</code> of the error.","Returns the corresponding <code>LimitErrorKind</code> of the error.","Create an <code>EncodingError</code> that stems from an arbitrary error …","Create a <code>DecodingError</code> that stems from an arbitrary error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The given limits","The supported strict limits","The color format did not match the channel count.","The samples are in column-major form and all samples are …","Denotes invalid flat sample buffers when trying to convert …","A flat buffer over a (multi channel) image.","All samples are packed.","Different normal forms of buffers.","The represented image can not use this representation.","At least pixels are packed.","The samples are in row-major form and all samples are …","A ffi compatible description of a sample buffer.","The represented image was too large.","No pixel aliases another.","A flat buffer that can be used as an image view.","A mutable owning version of a flat buffer.","Deprecated - ChannelCountMismatch is used instead","Get a mutable reference based version.","View the samples as a slice.","Get a reference based version.","View the samples as a slice.","View this buffer as an image over some type of pixel.","Interpret this buffer as a mutable image.","View this buffer but keep mutability at a sample level.","","","","","","","","","","","","","","Tuple of bounds in the order of coordinate inputs.","Tuple of bounds in the order of coordinate inputs.","","","Add this to an index to get to the sample in the next …","The number of channels in the color representation of the …","","","","","","","","","","","","","Supplementary color information.","Describe a column-major image packed in all directions.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the dimensions <code>(channels, width, height)</code>.","Get the dimensions <code>(channels, width, height)</code>.","Check if a buffer of length <code>len</code> is large enough.","Check if a buffer of length <code>len</code> is large enough.","Get a reference on the inner sample descriptor.","Get a reference on the sample buffer descriptor.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to a single sample.","Get a mutable reference to a selected subpixel if it is …","Get a mutable reference to a selected sample.","","","","Get a reference to a single sample.","Get a reference to a selected subpixel if it is in-bounds.","Get a reference to a selected subpixel.","If there are any samples aliasing each other.","If there are any samples aliasing each other.","","","","The height of the represented image.","Add this to an index to get to the next sample in …","Mutable portion of the buffer that holds sample values.","Return the mutable portion of the buffer that holds sample …","Return the mutable buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Check that the pixel and the channel index are in bounds.","Check that the pixel and the channel index are in bounds.","","","Get an index provided it is inbouds.","Get an index provided it is inbouds.","Return a reference to a single sample at specified …","Resolve the index of a particular sample.","Resolve the index of a particular sample.","Get the theoretical position of sample (x, y, channel).","Get the theoretical position of sample (channel, x, y).","Return a mutable reference to a single sample at specified …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Take out the sample buffer.","Take out the sample buffer.","Check if a buffer fulfills the requirements of a normal …","Check if a buffer fulfills the requirements of a normal …","A <code>repr(C)</code> description of the layout of buffer samples.","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Compares the logical preconditions.","","Describe a row-major image packed in all directions.","Get a reference on the inner buffer.","Get a reference on the inner buffer.","Underlying linear container holding sample values.","Shrink the image to the minimum of current and given …","Shrink the image to the minimum of current and given …","Shrink the inner image.","Shrink the inner image.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","","","","","","","","Copy the data into an owned vector.","","","","","","","","","","","","","Move the data into an image buffer.","Try to convert this into an image with mutable pixels.","","","","","","","The width of the represented image.","Add this to an index to get to the next sample in …","Create a monocolor image from a single pixel.","Color operations","","Cubic Filter","Color operations","Available Sampling Filters.","","Gaussian Filter","","Lanczos with window 3","","Nearest Neighbor","","Linear Filter","Image sampling Performs a Gaussian blur on the supplied …","","","Color operations","","","Functions for altering and converting the color of …","Color operations","Return a mutable view into an image The coordinates set …","Return an immutable view into an image The coordinates set …","","","Color operations","","","Image sampling Perform a 3x3 box filter on the supplied …","Affine transformations Flip an image horizontally","Affine transformations Flip an image horizontally and put …","Affine transformations Flip an image horizontally in place.","Affine transformations Flip an image vertically","Affine transformations Flip an image vertically and put …","Affine transformations Flip an image vertically in place.","","Returns the argument unchanged.","Color operations","Color operations","Color operations","Color operations","Fill the image with a linear horizontal gradient","Color operations","Color operations","","Image sampling Linearly sample from an image using …","Image sampling Sample from an image using coordinates in […","Calls <code>U::from(self)</code>.","Color operations","Overlay an image at a given coordinate (x, y)","Calculate the region that can be copied from top to bottom.","Replace the contents of an image at a given coordinate (x, …","Image sampling Resize the supplied image to the specified …","Affine transformations Rotate an image 180 degrees …","Affine transformations Rotate an image 180 degrees …","Affine transformations Rotate an image 180 degrees …","Affine transformations Rotate an image 270 degrees …","Affine transformations Rotate an image 270 degrees …","Affine transformations Rotate an image 90 degrees …","Affine transformations Rotate an image 90 degrees …","Image sampling Linearly sample from an image using …","Image sampling Sample from an image using coordinates in […","Image sampling Resize the supplied image to the specific …","Tile an image by repeating it multiple times","","","","","Image sampling Performs an unsharpen mask on the supplied …","Fill the image with a linear vertical gradient","A bi-level color map","The color type on which the map operates on","A color map","","","Brighten the supplied image. <code>value</code> is the amount to …","Brighten the supplied image in place. <code>value</code> is the amount …","","","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Adjust the contrast of the supplied image in place. …","","","Reduces the colors of the image using the supplied …","","Returns the argument unchanged.","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to a grayscale image with the …","Convert the supplied image to a grayscale image with the …","Determine if this implementation of ColorMap overrides the …","Indicate NeuQuant implements <code>lookup</code>.","Hue rotate the supplied image. <code>value</code> is the degrees to …","Hue rotate the supplied image in place. <code>value</code> is the …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","","","Calls <code>U::from(self)</code>.","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","","Maps <code>color</code> to the closest color in the color map.","","","","","","Set of supported strict limits for a decoder.","Resource limits for decoding.","A multi-format image reader.","","","","","","","This function checks the <code>max_image_width</code> and …","This function checks that all currently set strict limits …","Remove the current information on the image format.","","","","","Read the image (replaces <code>load</code>).","","","","","","","","","","","","","","","","","","Get the currently determined format.","This function increases the <code>max_alloc</code> limit with amount. …","This function acts identically to [<code>free</code>], but takes a <code>usize</code>…","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Read the image dimensions.","Unwrap the reader.","Set a custom set of decoding limits.","The maximum allowed sum of allocations allocated by the …","The maximum allowed image height. This limit is strict. …","The maximum allowed image width. This limit is strict. The …","Create a new image reader without a preset format.","Disable all decoding limits.","Disable all limits.","Open a file to read, format will be guessed from path.","This function checks that the current limit allows for …","This function acts identically to [<code>reserve</code>], but accepts …","This function acts identically to [<code>reserve</code>], but takes a …","Supply the format as which to interpret the read image.","","","","","","","","","","","","Construct a reader with specified format.","Make a format guess based on the content, replacing it on …","A Rectangle defined by its top left corner, width and …","","","","","","","","","","","Returns the argument unchanged.","","The rectangle’s height.","","Calls <code>U::from(self)</code>.","","","","","The rectangle’s width.","The x coordinate of the top left corner.","The y coordinate of the top left corner."],"i":[35,0,32,35,35,32,38,12,12,77,35,0,5,5,32,0,0,0,0,32,38,0,0,0,0,0,32,38,0,0,32,32,38,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,32,38,35,27,35,35,35,27,35,35,27,35,35,35,27,35,0,0,32,38,0,44,0,0,32,38,32,38,0,0,32,38,60,0,35,27,35,35,27,35,0,35,27,35,0,0,35,27,35,35,27,35,0,35,27,35,0,0,12,32,38,32,38,35,38,32,38,1,32,12,6,7,8,9,12,6,7,8,9,12,6,7,8,9,12,12,183,1,15,1,15,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,15,1,1,1,1,1,1,27,12,6,7,8,9,176,15,1,1,42,31,36,15,27,35,6,7,8,9,1,32,38,39,41,34,42,31,36,15,27,35,6,7,8,9,1,32,38,39,41,34,44,15,1,1,0,31,31,27,32,32,34,27,35,12,6,7,8,9,12,6,7,8,9,12,6,7,8,9,31,36,15,27,35,6,7,8,9,1,32,38,39,41,34,31,36,15,27,35,6,7,8,9,1,32,38,39,41,34,0,42,1,60,15,176,176,176,176,15,1,1,39,15,1,31,42,31,36,15,15,27,35,6,7,8,9,1,32,38,39,41,34,34,42,31,36,15,15,27,35,6,7,8,9,1,32,38,39,41,34,34,60,44,15,15,1,42,31,36,15,27,35,6,7,8,9,1,32,38,39,41,34,15,15,15,15,36,15,27,35,6,7,8,9,1,32,38,39,36,15,27,35,6,7,8,9,32,38,39,0,21,15,32,1,0,1,1,36,15,27,35,6,7,8,9,1,32,38,39,41,42,24,26,21,22,25,31,36,15,15,15,15,15,27,35,35,6,6,7,7,8,8,9,9,1,1,1,1,1,1,1,1,1,1,1,1,1,32,38,38,39,41,34,12,6,7,8,9,1,32,15,32,36,31,32,15,15,36,12,6,7,8,9,12,6,7,8,9,15,44,15,15,1,15,176,15,15,1,15,1,0,27,27,15,27,35,6,7,8,9,32,44,44,15,1,1,60,60,0,0,44,44,15,6,7,8,9,15,6,7,8,9,42,31,36,15,27,35,6,7,8,9,1,32,38,39,41,34,34,34,42,31,36,15,27,35,6,7,8,9,1,32,38,39,41,34,31,1,15,184,42,41,1,1,1,1,15,60,1,1,1,1,1,1,15,12,6,7,8,9,1,0,31,0,0,0,12,6,7,8,9,12,6,7,8,9,12,6,7,8,9,12,12,0,42,31,15,1,34,1,1,1,1,1,1,1,1,1,1,42,41,36,34,0,60,60,36,44,44,15,15,176,15,15,1,60,60,60,60,185,185,185,32,39,1,1,1,1,1,1,15,15,15,15,1,0,0,15,1,60,60,60,60,176,176,34,1,1,1,34,12,6,7,8,9,1,1,1,12,6,7,8,9,1,1,1,32,31,36,15,27,35,6,7,8,9,1,32,38,39,41,34,12,6,7,8,9,1,1,1,12,6,7,8,9,1,1,1,31,39,60,60,42,31,36,15,27,35,6,7,8,9,1,32,38,39,41,34,42,31,36,15,27,35,6,7,8,9,1,32,38,39,41,34,42,31,36,15,27,35,6,7,8,9,1,32,38,39,41,34,44,44,15,176,176,15,1,44,44,34,44,44,15,1,0,83,15,1,15,1,32,0,0,0,0,0,0,0,0,0,70,71,74,75,49,51,50,52,70,71,74,75,49,51,50,52,70,74,49,51,70,74,49,51,186,70,71,74,75,49,51,50,52,70,71,74,75,49,51,50,52,70,71,74,75,49,51,50,52,70,71,74,75,49,51,50,52,70,71,74,75,49,51,50,52,70,71,74,75,49,51,50,52,70,71,74,75,49,51,50,52,70,71,74,75,49,51,50,52,70,71,74,75,49,51,50,52,70,71,74,75,49,51,50,52,70,71,74,75,70,71,74,75,49,51,50,52,70,74,49,51,70,71,74,75,49,51,50,52,70,71,74,75,49,51,50,52,70,71,74,75,49,51,50,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,86,85,86,85,85,86,85,86,85,85,86,86,86,85,86,85,85,86,85,86,85,85,86,85,85,85,85,85,86,85,86,85,86,86,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,88,88,88,0,0,0,0,89,92,90,88,89,92,90,88,88,88,89,88,89,92,90,88,89,92,90,88,89,89,92,90,88,90,88,88,88,89,92,90,88,89,92,90,88,89,92,90,88,89,89,90,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,89,89,89,88,89,92,90,88,89,92,90,88,89,92,90,88,0,0,0,103,101,102,103,101,102,101,103,101,102,103,101,102,101,103,101,102,102,103,101,102,103,101,102,103,101,102,101,101,102,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,101,101,103,103,101,102,103,101,102,103,101,102,102,105,0,0,0,105,0,106,109,107,105,106,109,107,105,105,105,106,106,109,107,105,106,109,107,105,106,106,109,107,105,107,107,107,105,106,109,107,105,106,109,107,105,106,109,107,105,106,106,106,107,107,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,106,109,106,107,105,107,106,109,107,105,106,109,107,105,106,109,107,105,106,0,0,0,0,0,0,0,0,116,115,113,112,114,110,111,116,115,113,112,114,110,111,110,110,111,110,111,111,112,111,110,116,115,113,112,114,110,111,116,115,113,112,114,110,111,112,116,115,113,112,114,110,111,110,113,110,110,111,112,114,110,111,116,115,113,112,114,110,111,111,116,115,113,112,114,110,111,116,115,113,112,114,110,111,115,114,112,114,113,112,114,112,115,111,111,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,112,114,114,114,114,0,112,116,0,115,110,110,110,110,111,0,116,115,113,112,114,110,111,116,115,113,112,114,110,111,116,115,113,112,114,110,111,111,114,0,0,0,120,121,122,120,121,122,120,121,121,122,120,121,122,120,121,121,122,120,122,122,121,122,120,121,122,120,121,122,120,121,121,122,121,121,122,120,121,122,120,121,122,120,120,122,124,124,0,0,124,0,0,126,127,124,125,126,127,124,125,124,125,124,125,126,125,125,126,127,124,125,126,127,124,125,126,125,126,127,124,125,127,127,124,125,124,125,124,125,126,127,124,125,126,126,127,124,125,126,127,124,125,126,126,127,127,126,126,127,124,125,126,127,124,125,126,127,124,125,126,127,124,125,125,127,0,0,128,129,128,129,128,128,129,128,129,128,128,129,128,129,128,129,128,129,128,129,128,128,129,128,128,128,128,129,128,129,128,129,128,129,133,0,133,132,0,132,132,0,132,133,133,0,0,0,132,133,133,130,135,130,131,134,132,133,135,130,131,134,132,133,132,133,132,133,130,132,133,135,130,131,134,132,133,135,130,131,134,132,133,130,135,130,131,134,132,133,134,132,133,132,133,132,133,135,130,131,134,132,133,130,130,135,130,131,134,132,133,135,130,131,134,132,133,131,130,130,130,134,134,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,130,135,130,130,132,133,135,130,131,134,132,133,135,130,131,134,132,133,135,130,131,134,132,133,130,134,0,142,0,141,141,142,0,143,143,143,142,0,143,143,142,0,0,0,0,0,143,143,0,136,136,136,136,144,145,136,141,142,138,139,140,137,143,144,145,136,141,142,138,139,140,137,143,141,142,138,139,140,137,143,141,142,138,139,140,137,143,144,137,144,145,136,141,142,138,139,140,137,143,144,145,136,141,142,138,139,140,137,143,144,144,145,136,141,142,138,139,140,137,143,145,138,139,140,141,142,141,142,141,142,138,139,140,137,143,144,145,136,136,136,136,136,141,142,138,139,140,137,143,136,138,139,140,137,144,145,136,141,142,138,139,140,137,143,144,145,136,141,142,138,139,140,137,143,144,144,142,136,140,137,139,144,145,144,144,142,144,136,141,142,138,139,140,137,143,144,145,136,141,142,138,139,140,137,143,144,145,136,141,142,138,139,140,137,143,137,144,145,136,141,142,138,139,140,137,143,136,138,139,140,137,145,145,145,136,145,0,0,146,147,146,147,146,146,147,146,147,146,146,147,146,147,146,147,146,147,146,146,147,146,147,146,147,146,147,147,0,0,148,149,148,149,148,148,149,148,149,148,149,148,149,149,148,149,148,149,148,149,148,148,149,148,148,148,148,149,148,149,148,149,149,0,0,0,150,152,151,150,152,151,150,150,152,151,150,152,151,150,150,152,151,151,150,152,151,150,150,152,151,150,152,151,150,150,151,150,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,150,152,150,150,152,151,150,152,151,150,152,151,151,153,153,153,0,0,0,155,154,153,155,154,153,153,153,154,153,155,154,153,155,154,153,154,155,154,153,155,153,155,154,153,154,154,155,154,153,155,154,153,154,154,153,153,154,155,154,154,153,155,154,153,155,154,153,155,154,153,0,155,0,0,157,156,157,156,156,156,157,156,157,156,157,156,157,156,156,156,157,156,156,156,157,156,157,156,156,157,156,156,157,156,157,156,157,156,156,156,156,156,158,91,0,160,159,91,0,161,159,158,159,158,0,0,0,160,91,0,0,91,161,159,91,0,0,161,161,91,160,0,0,91,163,158,164,165,159,166,167,160,161,91,163,158,164,165,159,166,167,160,161,158,159,160,161,158,159,160,161,91,163,158,164,165,159,166,167,160,161,91,163,158,164,165,159,166,167,160,161,91,163,158,164,165,159,166,167,160,161,158,159,160,161,160,91,91,163,163,158,164,164,165,165,159,166,166,167,167,160,161,161,163,164,166,91,91,91,163,163,158,164,165,159,166,167,160,161,161,161,163,164,166,165,167,158,159,160,161,91,163,158,164,165,159,166,167,160,161,91,163,158,164,165,159,166,167,160,161,163,165,167,164,166,91,164,165,166,158,159,160,161,91,163,164,165,166,167,161,91,163,158,164,165,159,166,167,160,161,91,163,158,164,165,159,166,167,160,161,91,163,158,164,165,159,166,167,160,161,187,187,168,173,0,0,173,0,168,173,173,0,168,173,0,0,168,16,16,16,16,16,16,16,172,16,76,171,172,168,173,16,76,171,172,168,173,16,76,171,172,76,76,16,76,171,172,168,173,16,76,171,172,168,173,16,76,16,76,171,172,168,173,16,76,171,172,168,173,171,172,16,76,171,172,168,173,76,168,173,76,168,173,16,76,16,76,171,172,16,76,171,172,168,168,173,16,76,171,172,168,173,16,171,172,171,172,172,16,171,172,16,76,76,168,173,76,76,16,171,172,16,171,172,16,76,171,172,16,76,16,16,76,16,76,16,16,76,171,172,168,173,16,76,171,172,168,173,171,172,16,76,16,16,76,171,172,173,172,76,171,172,16,16,76,171,172,16,76,16,76,171,172,168,173,168,16,16,76,171,172,168,173,16,76,171,172,168,173,16,171,16,76,171,172,168,173,76,76,16,0,0,73,0,0,0,73,0,73,0,73,0,73,0,73,73,0,73,73,0,0,0,0,73,73,0,73,73,0,0,0,0,0,0,0,73,73,0,0,0,0,0,0,0,73,0,0,73,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,73,73,73,0,0,0,178,0,177,177,0,0,177,177,0,0,177,177,0,177,177,0,0,0,0,178,177,0,0,0,178,177,177,177,0,178,177,178,177,177,177,177,177,0,0,0,180,179,78,180,179,78,78,78,180,179,78,179,78,180,179,78,180,179,78,180,179,78,180,179,78,179,78,179,78,179,78,180,78,78,180,179,78,179,78,180,179,78,180,179,78,180,180,180,78,78,78,180,180,78,180,78,78,78,180,179,78,180,179,78,180,179,78,180,179,78,180,180,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[[],3],[4],[[[6,[[0,[5,0]]]],4]],[[[7,[5]],4]],[[[8,[[0,[5,0]]]],4]],[[[9,[5]],4]],[4],[[[6,[[0,[5,0]]]],[6,[[0,[5,0]]]],4]],[[[7,[5]],[7,[5]],4]],[[[8,[[0,[5,0]]]],[8,[[0,[5,0]]]],4]],[[[9,[5]],[9,[5]],4]],[[4,4]],[[[6,[[0,[5,0]]]],4,4]],[[[7,[5]],4,4]],[[[8,[[0,[5,0]]]],4,4]],[[[9,[5]],4,4]],[4],[4],[[],[[11,[10]]]],[1,[[11,[10]]]],[[[15,[12,[13,[11]],14]]],[[16,[11]]]],[1,[[17,[[16,[[11,[2]]]]]]]],[[[15,[12,[18,[11]],14]]],[[16,[11]]]],[1,[[17,[[16,[[11,[19]]]]]]]],[1,[[17,[[16,[[11,[10]]]]]]]],[1,[[17,[[15,[[7,[19]],[20,[19]]]]]]]],[1,[[17,[21]]]],[1,[[17,[[15,[[9,[19]],[20,[19]]]]]]]],[1,[[17,[22]]]],[1,[[17,[[15,[[7,[19]],[20,[19]]]]]]]],[1,[[17,[21]]]],[1,[[17,[[15,[[9,[19]],[20,[19]]]]]]]],[1,[[17,[22]]]],[1,[[17,[[15,[[6,[19]],[20,[19]]]]]]]],[1,[[17,[23]]]],[1,[[17,[24]]]],[1,[[17,[[15,[[8,[19]],[20,[19]]]]]]]],[1,[[17,[25]]]],[1,[[17,[26]]]],[[[15,[12,14]]],14],[1,[[17,[[15,[[6,[19]],[20,[19]]]]]]]],[1,[[17,[23]]]],[1,[[17,[24]]]],[1,[[17,[[15,[[8,[19]],[20,[19]]]]]]]],[1,[[17,[25]]]],[1,[[17,[26]]]],[27,19],[[]],[[[6,[[0,[5,0]]]],[6,[[0,[5,0]]]]]],[[[7,[5]],[7,[5]]]],[[[8,[[0,[5,0]]]],[8,[[0,[5,0]]]]]],[[[9,[5]],[9,[5]]]],[[28,28]],[[[15,[12,[0,[14,29]]]],28,28,12]],[[1,28,28,[8,[10]]]],[[1,2],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[12,[0,[14,14]]]]]],[1],[[1,30],1],0,[31,26],[31,26],[27,10],[32,33],[32,33],[[34,28,28,28,28]],[27,10],[35,10],[[],11],[[[6,[[0,[5,0]]]]],[[11,[[0,[5,0]]]]]],[[[7,[5]]],[[11,[5]]]],[[[8,[[0,[5,0]]]]],[[11,[[0,[5,0]]]]]],[[[9,[5]]],[[11,[5]]]],[[]],[[[6,[[0,[5,0]]]]]],[[[7,[5]]]],[[[8,[[0,[5,0]]]]]],[[[9,[5]]]],[[],11],[[[6,[[0,[5,0]]]]],[[11,[[0,[5,0]]]]]],[[[7,[5]]],[[11,[5]]]],[[[8,[[0,[5,0]]]]],[[11,[[0,[5,0]]]]]],[[[9,[5]]],[[11,[5]]]],[31,31],[36,36],[[[15,[12,[0,[14,37]]]]],[[15,[12,[0,[14,37]]]]]],[27,27],[35,35],[[[6,[37]]],[[6,[37]]]],[[[7,[37]]],[[7,[37]]]],[[[8,[37]]],[[8,[37]]]],[[[9,[37]]],[[9,[37]]]],[1,1],[32,32],[38,38],[39,39],[[[41,[40]]],[[41,[40]]]],[[[34,[37]]],[[34,[37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[42,[[43,[[20,[31]]]]]],[1,27],[[],27],[[[15,[12,14]]],[[15,[[0,[[0,[12]],12]],20]]]],[[44,28,28],43],[[44,28,28],43],[[45,28,28],33],[[45,28,28],33],[[[15,[12,[0,[14,29]]]],45,28,28],33],[[1,28,28,28,28],1],[[1,28,28,28,28],1],[39,46],[[],[[15,[12,47]]]],[[],1],[31,36],[48],[48],[48],[48],[[[15,[12,14]]]],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[[[34,[14]]]],[48],[48],[48],[48],[48],[[[15,[12,[0,[14,29]]]]]],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[[[34,[29]]]],[48],[[]],[[]],[[[15,[12,[0,[14,14]]]]]],[[[15,[12,14]]]],[1],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[[[15,[12,14]]],[[49,[12]]]],[[[15,[12,[0,[14,29]]]]],[[50,[12]]]],[[[15,[12,14]]],[[51,[12]]]],[[[15,[12,[0,[14,29]]]]],[[52,[12]]]],[[36,36],33],[[[15,[[0,[53,12]],53]],[15,[[0,[53,12]],53]]],33],[[27,27],33],[[35,35],33],[[[6,[53]],[6,[53]]],33],[[[7,[53]],[7,[53]]],33],[[[8,[53]],[8,[53]]],33],[[[9,[53]],[9,[53]]],33],[[1,1],33],[[32,32],33],[[38,38],33],[[39,39],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,[[21,11,[17,[10]]],26],[[[15,[[7,[10]],[20,[10,54]]]],11,[17,[10]]],26],[32,[[11,[55]]]],[[1,[11,[2]]],1],0,[1,1],[1,1],[[36,56],57],[[[15,[[0,[58,12]],58]],56],57],[[27,56],57],[[35,56],57],[[[6,[58]],56],57],[[[7,[58]],56],57],[[[8,[58]],56],57],[[[9,[58]],56],57],[[1,56],57],[[32,56],57],[[38,56],57],[[39,56],57],[[[41,[[0,[58,40]]]],56],57],[[]],[1,24],[1,26],[1,21],[1,22],[1,25],[[]],[[]],[1,[[15,[[6,[19]],[20,[19]]]]]],[1,[[15,[[9,[19]],[20,[19]]]]]],[[]],[1,[[15,[[8,[19]],[20,[19]]]]]],[1,[[15,[[7,[19]],[20,[19]]]]]],[[]],[27,35],[[]],[[]],[59,6],[[]],[59,7],[[]],[59,8],[[]],[59,9],[[[15,[[6,[19]],[20,[19]]]]],1],[23,1],[26,1],[[[15,[[9,[2]],[20,[2]]]]],1],[25,1],[[[15,[[9,[19]],[20,[19]]]]],1],[21,1],[[[15,[[7,[19]],[20,[19]]]]],1],[22,1],[[[15,[[8,[19]],[20,[19]]]]],1],[[]],[[[15,[[7,[2]],[20,[2]]]]],1],[24,1],[[]],[[]],[32,38],[[]],[[]],[[]],[[]],[[[0,[5,0]],[0,[5,0]],[0,[5,0]],[0,[5,0]]],[[6,[[0,[5,0]]]]]],[[5,5,5,5],[[7,[5]]]],[[[0,[5,0]],[0,[5,0]],[0,[5,0]],[0,[5,0]]],[[8,[[0,[5,0]]]]]],[[5,5,5,5],[[9,[5]]]],[60,[[43,[1]]]],[[[13,[61]]],[[17,[32]]]],[[28,28,4],[[15,[12,20]]]],[[[13,[55]]],[[17,[32]]]],[[28,28],36],[[26,28,28,36],31],[[[13,[62]]],[[43,[32]]]],[[28,28,12],[[15,[12,20]]]],[[28,28,14],[[17,[[15,[12,14]]]]]],[63,36],[11],[[[11,[[0,[5,0]]]]],[[6,[[0,[5,0]]]]]],[[[11,[5]]],[[7,[5]]]],[[[11,[[0,[5,0]]]]],[[8,[[0,[5,0]]]]]],[[[11,[5]]],[[9,[5]]]],[11],[[[11,[[0,[5,0]]]]],[[6,[[0,[5,0]]]]]],[[[11,[5]]],[[7,[5]]]],[[[11,[[0,[5,0]]]]],[[8,[[0,[5,0]]]]]],[[[11,[5]]],[[9,[5]]]],[[28,28,20],[[17,[[15,[12,20]]]]]],[[28,28]],[[[15,[12,[0,[14,14]]]],28,28],12],[[[15,[12,14]],28,28],12],[[1,28,28],[[8,[10]]]],[[[15,[12,14]],28,28],[[17,[12]]]],[[28,28]],[[[15,[12,[0,[14,29]]]],28,28],12],[[[15,[12,[0,[14,29]]]],28,28],12],[[1,28,28],[[8,[10]]]],[[[15,[12,[0,[14,29]]]],28,28],[[17,[12]]]],[1,1],[[[11,[10]]],[[43,[32]]]],[27,33],[27,33],[[[15,[[0,[64,12]],64]],65]],[[27,65]],[[35,65]],[[[6,[64]],65]],[[[7,[64]],65]],[[[8,[64]],65]],[[[9,[64]],65]],[[32,65]],[[],28],[[],28],[[[15,[12,14]]],28],[1,28],[[1,30],1],[[],[[17,[[20,[10]]]]]],[[],[[17,[[20,[10]]]]]],[[[13,[62]]],43],0,[[28,28],33],[[28,28],33],[[[15,[12,14]]],12],[[6,48]],[[7,48]],[[8,48]],[[9,48]],[[[15,[12,[0,[14,29]]]]],12],[[6,48]],[[7,48]],[[8,48]],[[9,48]],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[[34,[14]]]],[[[34,[29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,26],[1,[[20,[10]]]],[[[15,[12,[13,[11]],14]]],[[16,[[13,[11]],14]]]],[[],42],[[]],[[]],[1,[[15,[[7,[19]],[20,[19]]]]]],[1,21],[1,[[15,[[9,[19]],[20,[19]]]]]],[1,22],[[[15,[12,14]]],14],[[],43],[1,[[15,[[6,[19]],[20,[19]]]]]],[1,23],[1,24],[1,[[15,[[8,[19]],[20,[19]]]]]],[1,25],[1,26],[[[15,[12,20]]],20],[[]],[[[6,[[0,[5,0]]]]]],[[[7,[5]]]],[[[8,[[0,[5,0]]]]]],[[[9,[5]]]],[1],0,[31,28],[[[0,[66,67]],32],[[43,[1]]]],[[[11,[10]]],[[43,[1]]]],[[[11,[10]],32],[[43,[1]]]],[4],[[[6,[[0,[5,0]]]],4],[[6,[[0,[5,0]]]]]],[[[7,[5]],4],[[7,[5]]]],[[[8,[[0,[5,0]]]],4],[[8,[[0,[5,0]]]]]],[[[9,[5]],4],[[9,[5]]]],[4],[[[6,[[0,[5,0]]]],[6,[[0,[5,0]]]],4],[[6,[[0,[5,0]]]]]],[[[7,[5]],[7,[5]],4],[[7,[5]]]],[[[8,[[0,[5,0]]]],[8,[[0,[5,0]]]],4],[[8,[[0,[5,0]]]]]],[[[9,[5]],[9,[5]],4],[[9,[5]]]],[[4,4]],[[[6,[[0,[5,0]]]],4,4],[[6,[[0,[5,0]]]]]],[[[7,[5]],4,4],[[7,[5]]]],[[[8,[[0,[5,0]]]],4,4],[[8,[[0,[5,0]]]]]],[[[9,[5]],4,4],[[9,[5]]]],[4],[4],0,[[[68,[3]]],42],[26,31],[[28,28],[[15,[12,20]]]],[[28,28,27],1],[[28,28,28,28],34],[[28,28],1],[[28,28],1],[[28,28],1],[[28,28],1],[[28,28],1],[[28,28],1],[[28,28],1],[[28,28],1],[[28,28],1],[[28,28],1],[42,[[17,[[43,[31]]]]]],[[[41,[44]]],17],[36],[34],[[[13,[62]]],[[43,[1]]]],[[],35],[[],35],[[36,36],[[17,[69]]]],[40,[[41,[40]]]],[40,[[41,[40]]]],[[[15,[12,14]]],[[70,[12]]]],[[[15,[12,[0,[14,29]]]]],[[71,[12]]]],[[28,28]],[[[15,[12,[0,[14,29]]]],28,28,12]],[[[15,[12,[0,[14,29]]]],28,28,12]],[[1,28,28,[8,[10]]]],[[[11,[10]]],43],[[[11,[10]]],43],[[[11,[10]],72],43],[[[11,[10]],72],43],[[28,28,28,28,[11,[10]]],43],[[28,28,28,28,[11,[10]]],43],[[28,28,28,28,[11,[10]],72],43],[32,33],[39,46],[[1,28,28,73],1],[[1,28,28,73],1],[[1,28,28,73],1],[1,1],[1,1],[1,1],[[[15,[12,14]]],[[74,[12]]]],[[[15,[12,[0,[14,29]]]]],[[75,[12]]]],[[[15,[12,14]]],76],[[[15,[77,12,14]],[13,[62]]],43],[[1,[13,[62]]],43],[[[13,[62]],[11,[10]],28,28,27],43],[[[13,[62]],[11,[10]],28,28,27,32],43],[[[15,[77,12,14]],[13,[62]],32],43],[[1,[13,[62]],32],43],[[],46],[[],46],[78,43],[78,43],[[40,28,28,28,28],[[34,[40]]]],[[40,28,28,28,28],[[34,[40]]]],[[[34,[29]],28,28,28,28],34],[[1,28,28],1],[[1,28,28],1],[1,[[20,[10]]]],[[[34,[14]]],[[15,[20]]]],[[],7],[[[6,[[0,[5,0]]]]],[[7,[[0,[5,0]]]]]],[[[7,[5]]],[[7,[5]]]],[[[8,[[0,[5,0]]]]],[[7,[[0,[5,0]]]]]],[[[9,[5]]],[[7,[5]]]],[1,[[15,[[7,[19]],[20,[19]]]]]],[1,[[15,[[7,[2]],[20,[2]]]]]],[1,21],[[],9],[[[6,[[0,[5,0]]]]],[[9,[[0,[5,0]]]]]],[[[7,[5]]],[[9,[5]]]],[[[8,[[0,[5,0]]]]],[[9,[[0,[5,0]]]]]],[[[9,[5]]],[[9,[5]]]],[1,[[15,[[9,[19]],[20,[19]]]]]],[1,[[15,[[9,[2]],[20,[2]]]]]],[1,22],[32,55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[[6,[[0,[5,0]]]]],[[6,[[0,[5,0]]]]]],[[[7,[5]]],[[6,[5]]]],[[[8,[[0,[5,0]]]]],[[6,[[0,[5,0]]]]]],[[[9,[5]]],[[6,[5]]]],[1,[[15,[[6,[19]],[20,[19]]]]]],[1,23],[1,24],[[],8],[[[6,[[0,[5,0]]]]],[[8,[[0,[5,0]]]]]],[[[7,[5]]],[[8,[5]]]],[[[8,[[0,[5,0]]]]],[[8,[[0,[5,0]]]]]],[[[9,[5]]],[[8,[5]]]],[1,[[15,[[8,[19]],[20,[19]]]]]],[1,25],[1,26],[31,28],[39,46],[[],46],[[],46],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[28,28]],[[28,28]],[[[15,[12,[0,[14,14]]]],28,28],12],[[28,28]],[[28,28]],[[[15,[12,[0,[14,29]]]],28,28,12]],[[1,2,30],1],[[40,28,28,28,28],[[34,[40]]]],[[40,28,28,28,28],[[34,[40]]]],[[[34,[14]],28,28,28,28],34],[[],28],[[],28],[[[15,[12,14]]],28],[1,28],[[[0,[81,67]],[11,[10]],28,28,27,[82,[38]]],43],[[[11,[10]],28,28,27],43],[[[15,[77,12,14]],[0,[81,67]],[82,[38]]],43],[[1,[0,[81,67]],[82,[38]]],43],[[[15,[77,12,14]],83],43],[[1,83],43],[32,33],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[70,[12]]],[[70,[12]]]],[[[74,[12]]],[[74,[12]]]],[[[49,[12]]],[[49,[12]]]],[[[51,[12]]],[[51,[12]]]],[[]],[[]],[[]],[[]],[[]],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[[[70,[12]],56],57],[[[71,[12]],56],57],[[[74,[12]],56],57],[[[75,[12]],56],57],[[[49,[12]],56],57],[[[51,[12]],56],57],[[[50,[12]],56],57],[[[52,[12]],56],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[70,[12]]],48],[[[71,[12]]],48],[[[74,[12]]],48],[[[75,[12]]],48],[[[49,[12]]],48],[[[51,[12]]],48],[[[50,[12]]],48],[[[52,[12]]],48],[[[70,[12]]],[[17,[12]]]],[[[71,[12]]],[[17,[12]]]],[[[74,[12]]],[[17,[[70,[12]]]]]],[[[75,[12]]],[[17,[[71,[12]]]]]],[[[49,[12]]],17],[[[51,[12]]],17],[[[50,[12]]],17],[[[52,[12]]],17],[[[70,[12]]],[[17,[12]]]],[[[71,[12]]],[[17,[12]]]],[[[74,[12]]],[[17,[[70,[12]]]]]],[[[75,[12]]],[[17,[[71,[12]]]]]],[[[70,[12]]]],[[[71,[12]]]],[[[74,[12]]]],[[[75,[12]]]],[[[49,[12]]]],[[[51,[12]]]],[[[50,[12]]]],[[[52,[12]]]],[[]],[[]],[[]],[[]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[85,[[0,[84,67]]]]],27],[48],[48],[48],[48],[[[85,[[0,[84,67]]]]]],[48],[48],[[[86,[81]],[11,[10]],28,28,27],43],[[[86,[81]],[11,[10]],28,28,27,[17,[[11,[[59,[10]]]]]]],43],[[]],[[]],[[[85,[[0,[84,67]]]]],[[17,[[11,[[59,[10]]]]]]]],[[],48],[[],48],[[]],[[]],[[[85,[[0,[84,67]]]]],43],[[[0,[84,67]]],[[43,[[85,[[0,[84,67]]]]]]]],[81,[[86,[81]]]],[[[0,[84,67]]],[[43,[[85,[[0,[84,67]]]]]]]],[[[85,[[0,[84,67]]]],[11,[10]]],43],[[[85,[[0,[84,67]]]],28,28,28,28,[11,[10]],72],43],[[[85,[[0,[84,67]]]],33]],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[[86,[81]],[11,[10]],28,28,27],43],0,[[]],[[]],[[[87,[84]]],27],[48],[48],[[[87,[84]]]],[48],[[]],[[],48],[[]],[[[87,[84]]],43],[84,[[43,[[87,[84]]]]]],[[[87,[84]],[11,[10]]],43],[[[87,[84]]],46],[[],79],[[],79],[[],80],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,88],[[]],[[[89,[84]]],27],[88,27],[48],[48],[48],[48],[48],[48],[48],[48],[[[89,[84]]]],[48],[48],[48],[48],[[[90,[81]],[11,[10]],28,28,88],43],[[88,88],33],[[],33],[[88,56],57],[[]],[[]],[[]],[[]],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[[89,[84]]],43],[[84,28,28,88],[[79,[[89,[84]],91]]]],[81,[[90,[81]]]],[[[92,[84]],[11,[10]]],[[93,[48]]]],[[[11,[10]]],[[79,[94]]]],[46,[[79,[94]]]],[[[11,[46]]],[[79,[94]]]],[95,[[79,[94]]]],[[[11,[28]]],[[79,[94]]]],[[[11,[30]]],[[79,[94]]]],[96,[[79,[94]]]],[97,[[79,[94]]]],[[[11,[98]]],[[79,[94]]]],[[[11,[2]]],[[79,[94]]]],[10,[[79,[94]]]],[98,[[79,[94]]]],[[[11,[99]]],[[79,[94]]]],[100,[[79,[94]]]],[[[11,[97]]],[[79,[94]]]],[[[11,[95]]],[[79,[94]]]],[[[11,[19]]],[[79,[94]]]],[28,[[79,[94]]]],[[[11,[100]]],[[79,[94]]]],[[[11,[96]]],[[79,[94]]]],[99,[[79,[94]]]],[19,[[79,[94]]]],[2,[[79,[94]]]],[30,[[79,[94]]]],[99,[[79,[94]]]],[97,[[79,[94]]]],[[[11,[30]]],[[79,[94]]]],[[[11,[95]]],[[79,[94]]]],[[[11,[2]]],[[79,[94]]]],[[[11,[19]]],[[79,[94]]]],[[[11,[97]]],[[79,[94]]]],[28,[[79,[94]]]],[10,[[79,[94]]]],[[[11,[100]]],[[79,[94]]]],[[[11,[98]]],[[79,[94]]]],[[[11,[96]]],[[79,[94]]]],[98,[[79,[94]]]],[[[11,[10]]],[[79,[94]]]],[96,[[79,[94]]]],[19,[[79,[94]]]],[[[11,[99]]],[[79,[94]]]],[2,[[79,[94]]]],[95,[[79,[94]]]],[30,[[79,[94]]]],[100,[[79,[94]]]],[[[11,[28]]],[[79,[94]]]],[46,[[79,[94]]]],[[[11,[46]]],[[79,[94]]]],[[[89,[84]],[11,[10]]],43],[[[89,[[0,[84,67]]]],28,28,28,28,[11,[10]],72],43],[[[89,[84]]],46],[[]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[101,[84]]],27],[48],[48],[48],[48],[48],[48],[[[101,[84]]]],[48],[48],[48],[[[102,[81]],[11,[10]],28,28],43],[[]],[[]],[[]],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[[101,[84]]],43],[84,[[43,[[101,[84]]]]]],[81,[[102,[81]]]],[[[103,[84]],[11,[10]]],[[93,[48]]]],[46,[[79,[94]]]],[[[11,[28]]],[[79,[94]]]],[[[11,[19]]],[[79,[94]]]],[[[11,[2]]],[[79,[94]]]],[28,[[79,[94]]]],[10,[[79,[94]]]],[[[11,[100]]],[[79,[94]]]],[98,[[79,[94]]]],[[[11,[96]]],[[79,[94]]]],[[[11,[99]]],[[79,[94]]]],[99,[[79,[94]]]],[100,[[79,[94]]]],[19,[[79,[94]]]],[[[11,[97]]],[[79,[94]]]],[2,[[79,[94]]]],[[[11,[95]]],[[79,[94]]]],[30,[[79,[94]]]],[[[11,[30]]],[[79,[94]]]],[97,[[79,[94]]]],[[[11,[98]]],[[79,[94]]]],[[[11,[46]]],[[79,[94]]]],[[[11,[10]]],[[79,[94]]]],[96,[[79,[94]]]],[95,[[79,[94]]]],[[[11,[97]]],[[79,[94]]]],[[[11,[95]]],[[79,[94]]]],[[[11,[28]]],[[79,[94]]]],[95,[[79,[94]]]],[96,[[79,[94]]]],[[[11,[10]]],[[79,[94]]]],[28,[[79,[94]]]],[[[11,[98]]],[[79,[94]]]],[46,[[79,[94]]]],[[[11,[30]]],[[79,[94]]]],[[[11,[46]]],[[79,[94]]]],[[[11,[19]]],[[79,[94]]]],[97,[[79,[94]]]],[[[11,[2]]],[[79,[94]]]],[[[11,[96]]],[[79,[94]]]],[30,[[79,[94]]]],[[[11,[100]]],[[79,[94]]]],[98,[[79,[94]]]],[10,[[79,[94]]]],[2,[[79,[94]]]],[100,[[79,[94]]]],[19,[[79,[94]]]],[[[11,[99]]],[[79,[94]]]],[99,[[79,[94]]]],[[[101,[[0,[84,67]]]],28,28,28,28,[11,[10]],72],43],[[[101,[84]]],46],[[[103,[[0,[84,67]]]],104],[[93,[46]]]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[[102,[81]],[11,[10]],28,28,27],43],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105,105],[[]],[[[106,[84]]],27],[48],[48],[48],[48],[48],[48],[48],[48],[[[106,[84]]]],[48],[48],[48],[48],[[[107,[81]],[11,[10]],28,28,27],43],[[[107,[81]],31],43],[[[107,[81]],108],43],[[105,56],57],[[]],[[]],[[]],[[]],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[[106,[84]]],42],[[[106,[84]]],43],[84,[[43,[[106,[84]]]]]],[81,[[107,[81]]]],[[81,30],[[107,[81]]]],[[109,[11,[10]]],[[93,[48]]]],[[[11,[46]]],[[79,[94]]]],[[[11,[98]]],[[79,[94]]]],[[[11,[96]]],[[79,[94]]]],[46,[[79,[94]]]],[[[11,[28]]],[[79,[94]]]],[[[11,[100]]],[[79,[94]]]],[95,[[79,[94]]]],[96,[[79,[94]]]],[[[11,[2]]],[[79,[94]]]],[[[11,[10]]],[[79,[94]]]],[28,[[79,[94]]]],[[[11,[99]]],[[79,[94]]]],[[[11,[19]]],[[79,[94]]]],[[[11,[30]]],[[79,[94]]]],[99,[[79,[94]]]],[97,[[79,[94]]]],[[[11,[95]]],[[79,[94]]]],[10,[[79,[94]]]],[30,[[79,[94]]]],[[[11,[97]]],[[79,[94]]]],[2,[[79,[94]]]],[19,[[79,[94]]]],[98,[[79,[94]]]],[100,[[79,[94]]]],[[[11,[28]]],[[79,[94]]]],[95,[[79,[94]]]],[30,[[79,[94]]]],[97,[[79,[94]]]],[[[11,[46]]],[[79,[94]]]],[98,[[79,[94]]]],[10,[[79,[94]]]],[46,[[79,[94]]]],[2,[[79,[94]]]],[96,[[79,[94]]]],[100,[[79,[94]]]],[[[11,[2]]],[[79,[94]]]],[[[11,[99]]],[[79,[94]]]],[[[11,[97]]],[[79,[94]]]],[[[11,[10]]],[[79,[94]]]],[[[11,[98]]],[[79,[94]]]],[19,[[79,[94]]]],[[[11,[30]]],[[79,[94]]]],[[[11,[95]]],[[79,[94]]]],[[[11,[19]]],[[79,[94]]]],[28,[[79,[94]]]],[99,[[79,[94]]]],[[[11,[96]]],[[79,[94]]]],[[[11,[100]]],[[79,[94]]]],[[[106,[84]],[11,[10]]],43],[[109,[20,[10]]],[[93,[48]]]],[[[106,[84]],78],43],[[[107,[81]],105],43],[[]],[[[107,[81]],108],43],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],[[84,78],[[43,[[106,[84]]]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[110,110],[111,111],[[]],[[]],0,[[[112,[66]]],27],0,[[],110],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[[[112,[66]]]],[48],[48],[48],[48],[48],[48],[48],0,[[[113,[81]],[11,[[6,[2]]]],48,48],43],[[110,110],33],[[],33],0,[[[112,[[0,[58,84]]]],56],57],[[[114,[58]],56],57],[[110,56],57],[[111,56],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[114,[84]]]],[[[112,[66]]],43],[[[114,[66]]],111],[81,[[113,[81]]]],[66,[[43,[[112,[66]]]]]],[66,[[43,[[114,[66]]]]]],[66,[[43,[[112,[66]]]]]],[[[115,[84]]],17],0,0,[[116,[11,[10]]],[[93,[48]]]],[[[11,[46]]],[[79,[94]]]],[98,[[79,[94]]]],[10,[[79,[94]]]],[[[11,[98]]],[[79,[94]]]],[[[11,[10]]],[[79,[94]]]],[96,[[79,[94]]]],[28,[[79,[94]]]],[[[11,[99]]],[[79,[94]]]],[95,[[79,[94]]]],[[[11,[28]]],[[79,[94]]]],[[[11,[30]]],[[79,[94]]]],[46,[[79,[94]]]],[2,[[79,[94]]]],[100,[[79,[94]]]],[[[11,[97]]],[[79,[94]]]],[[[11,[2]]],[[79,[94]]]],[97,[[79,[94]]]],[19,[[79,[94]]]],[99,[[79,[94]]]],[30,[[79,[94]]]],[[[11,[96]]],[[79,[94]]]],[[[11,[95]]],[[79,[94]]]],[[[11,[19]]],[[79,[94]]]],[[[11,[100]]],[[79,[94]]]],[[[11,[30]]],[[79,[94]]]],[[[11,[97]]],[[79,[94]]]],[[[11,[100]]],[[79,[94]]]],[10,[[79,[94]]]],[[[11,[19]]],[[79,[94]]]],[28,[[79,[94]]]],[[[11,[96]]],[[79,[94]]]],[98,[[79,[94]]]],[[[11,[98]]],[[79,[94]]]],[[[11,[95]]],[[79,[94]]]],[[[11,[10]]],[[79,[94]]]],[99,[[79,[94]]]],[[[11,[99]]],[[79,[94]]]],[96,[[79,[94]]]],[95,[[79,[94]]]],[[[11,[28]]],[[79,[94]]]],[46,[[79,[94]]]],[[[11,[46]]],[[79,[94]]]],[100,[[79,[94]]]],[19,[[79,[94]]]],[2,[[79,[94]]]],[[[11,[2]]],[[79,[94]]]],[97,[[79,[94]]]],[30,[[79,[94]]]],[[[112,[66]],[11,[10]]],43],[[[114,[66]]],[[43,[[20,[[6,[2]]]]]]]],[[[114,[66]]],[[43,[[20,[[6,[10]]]]]]]],[[[114,[66]]],[[43,[[20,[110]]]]]],[[[114,[66]],[0,[117,118,72]],[11,[117]]],43],[[[13,[62]]],[[93,[[20,[[6,[2]]]]]]]],[[[112,[[0,[66,67]]]],28,28,28,28,[11,[10]],72],43],[[116,[20,[10]]],[[93,[48]]]],[[10,10,10,10],110],[[[115,[84]]]],[110,[[6,[2]]]],[110,[[6,[[0,[5,119]]]]]],[[110,2,2],[[6,[[0,[5,119]]]]]],[[]],[[]],[[[6,[2]]],110],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],0,[[66,33],[[43,[[114,[66]]]]]],0,0,0,[[[11,[10]],28,28,27],[[43,[120]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[121,[[0,[84,67]]]]],27],[48],[48],[48],[48],[48],[48],[[[121,[[0,[84,67]]]]]],[48],[48],[48],[[[122,[81]],[11,[10]],28,28,27],43],[[[122,[81]],[11,[120]]],43],[[]],[[]],[[]],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[[121,[[0,[84,67]]]]],43],[[[0,[84,67]]],[[43,[[121,[[0,[84,67]]]]]]]],[81,[[122,[81]]]],[[[121,[[0,[84,67]]]],[11,[10]]],43],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[[82,[[123,[[11,[10]]]]]],28,28,27],[[43,[120]]]],[[[122,[81]],[11,[10]],28,28,27],43],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[124,124],[125,125],[[]],[[]],[[[126,[84]]],27],[[],125],0,[48],[48],[48],[48],[48],[48],[48],[48],[[[126,[84]]]],[19,125],[48],[48],[48],[48],[[[127,[81]],[11,[10]],28,28,27],43],[[[127,[81]],44],43],[[124,124],33],[[125,125],33],[[],33],[[],33],[[124,56],57],[[125,56],57],[[]],[[]],[[]],[[]],[[[126,[84]]],[[17,[[20,[10]]]]]],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[[126,[84]]],43],[84,[[43,[[126,[84]]]]]],[81,[[127,[81]]]],[[81,10],[[127,[81]]]],[[[126,[84]],[11,[10]]],43],[[[126,[84]],19,19],43],[[[127,[81]],125]],[[]],[[]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],0,[[[127,[81]],[11,[10]],28,28,27],43],0,0,[[]],[[]],[[]],[[]],[[[128,[[0,[84,67]]]]],27],[48],[48],[48],[48],[[[128,[[0,[84,67]]]]]],[48],[48],[[[128,[58]],56],57],[[[129,[58]],56],57],[[]],[[]],[[],48],[[],48],[[]],[[]],[[[128,[[0,[84,67]]]]],43],[[[0,[84,67]]],[[43,[[128,[[0,[84,67]]]]]]]],[[],129],[[[128,[[0,[84,67]]]]],35],[[[128,[[0,[84,67]]]],[11,[10]],72],43],[[[128,[[0,[84,67]]]]],46],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[[0,[84,67]],[17,[33]]],[[43,[[128,[[0,[84,67]]]]]]]],[[[129,[[0,[81,67]]]],[11,[10]],28,28,27],43],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[130,[84]]],[[131,[84]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[132,132],[133,133],[[]],[[]],[[[130,[84]]],27],[[],132],[[],133],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[[[130,[84]]]],[48],[48],[48],[48],[48],[48],[[[134,[81]],[11,[10]],28,28,27],43],[[132,132],33],[[133,133],33],[[],33],[[],33],[[132,56],57],[[133,56],57],[[]],[[]],[[]],[[]],[[]],[[]],[[[130,[84]]],[[43,[[17,[97]]]]]],[[[130,[84]]],[[17,[[20,[10]]]]]],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[[131,[84]]],42],[[[130,[84]]],43],[[[130,[84]]],33],[84,[[43,[[130,[84]]]]]],[81,[[134,[81]]]],[[81,132,133],[[134,[81]]]],[[[135,[84]],[11,[10]]],[[93,[48]]]],[46,[[79,[94]]]],[[[11,[46]]],[[79,[94]]]],[[[11,[99]]],[[79,[94]]]],[98,[[79,[94]]]],[100,[[79,[94]]]],[[[11,[96]]],[[79,[94]]]],[[[11,[28]]],[[79,[94]]]],[10,[[79,[94]]]],[[[11,[97]]],[[79,[94]]]],[97,[[79,[94]]]],[95,[[79,[94]]]],[30,[[79,[94]]]],[[[11,[2]]],[[79,[94]]]],[2,[[79,[94]]]],[[[11,[95]]],[[79,[94]]]],[19,[[79,[94]]]],[96,[[79,[94]]]],[99,[[79,[94]]]],[[[11,[10]]],[[79,[94]]]],[[[11,[98]]],[[79,[94]]]],[[[11,[30]]],[[79,[94]]]],[[[11,[19]]],[[79,[94]]]],[28,[[79,[94]]]],[[[11,[100]]],[[79,[94]]]],[[[11,[99]]],[[79,[94]]]],[10,[[79,[94]]]],[[[11,[46]]],[[79,[94]]]],[[[11,[30]]],[[79,[94]]]],[[[11,[98]]],[[79,[94]]]],[[[11,[10]]],[[79,[94]]]],[[[11,[96]]],[[79,[94]]]],[96,[[79,[94]]]],[[[11,[100]]],[[79,[94]]]],[[[11,[97]]],[[79,[94]]]],[28,[[79,[94]]]],[[[11,[2]]],[[79,[94]]]],[95,[[79,[94]]]],[100,[[79,[94]]]],[[[11,[19]]],[[79,[94]]]],[[[11,[28]]],[[79,[94]]]],[99,[[79,[94]]]],[19,[[79,[94]]]],[2,[[79,[94]]]],[98,[[79,[94]]]],[30,[[79,[94]]]],[[[11,[95]]],[[79,[94]]]],[46,[[79,[94]]]],[97,[[79,[94]]]],[[[130,[84]],[11,[10]]],43],[[[135,[84]],[20,[10]]],[[93,[48]]]],[[[130,[84]]],46],[[[130,[84]],78],43],[[]],[[]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[84,78],[[43,[[130,[84]]]]]],[[[134,[81]],[11,[10]],28,28,27],43],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[136,[[17,[137]]]],[136,[[17,[138]]]],[136,[[17,[139]]]],[136,[[17,[140]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[141,141],[142,142],[138,138],[139,139],[140,140],[137,137],[143,143],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[144,[84]]],27],0,[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[[[144,[84]]]],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[[[145,[81]],[82,[0]],28,28,27],43],0,0,0,[[141,141],33],[[142,142],33],[[],33],[[],33],[[141,56],57],[[142,56],57],[[138,56],57],[[139,56],57],[[140,56],57],[[137,56],57],[[143,56],57],[[]],[[]],[139,136],[[]],[140,136],[138,136],[137,136],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[136,28],0,0,0,0,[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[144,[66]]]],[[[144,[84]]],43],[142,[[59,[10]]]],[136,28],0,0,0,[66,[[43,[[144,[66]]]]]],[81,[[145,[81]]]],[[[144,[84]]],35],[[[144,[84]],[11,[10]]],43],[142,141],[[[144,[84]]],142],[136,142],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[136,28],0,0,0,0,[[[145,[81]]],[[145,[81]]]],[[[145,[81]],136],[[145,[81]]]],[[[145,[81]],142],[[145,[81]]]],[[136,81],93],[[[145,[81]],[11,[10]],28,28,27],43],0,0,[[]],[[]],[[]],[[]],[[[146,[84]]],27],[48],[48],[48],[48],[[[146,[84]]]],[48],[48],[[]],[[]],[[],48],[[],48],[[]],[[]],[[[146,[84]]],43],[84,[[43,[[146,[84]]]]]],[81,[[147,[81]]]],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[[147,[81]],[11,[10]],28,28,27],43],0,0,[[]],[[]],[[]],[[]],[[[148,[[0,[84,67]]]]],27],[48],[48],[48],[48],[[[148,[[0,[84,67]]]]]],[[[149,[81]]],[[149,[81]]]],[48],[48],[[[149,[81]],[11,[10]],28,28,27],43],[[]],[[]],[[],48],[[],48],[[]],[[]],[[[148,[[0,[84,67]]]]],43],[[[0,[84,67]]],[[43,[[148,[[0,[84,67]]]]]]]],[81,[[149,[81]]]],[[[148,[[0,[84,67]]]]],35],[[[148,[[0,[84,67]]]],[11,[10]]],43],[[[148,[[0,[84,67]]]]],46],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[[149,[81]],[11,[10]],28,28,27],43],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[150,[[0,[84,67]]]]],27],[48],[48],[48],[48],[48],[48],[[[150,[[0,[84,67]]]]]],[48],[48],[48],[[[151,[[0,[81,67]]]],[11,[10]],28,28,27],43],[[]],[[]],[[]],[[[150,[[0,[84,67]]]]],[[17,[[20,[10]]]]]],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[[150,[[0,[84,67]]]]],43],[[[0,[84,67]]],[[79,[[150,[[0,[84,67]]]],91]]]],[[[0,[81,67]]],[[151,[[0,[81,67]]]]]],[[[150,[[0,[84,67]]]]],35],[[152,[11,[10]]],[[93,[48]]]],[96,[[79,[94]]]],[[[11,[95]]],[[79,[94]]]],[[[11,[10]]],[[79,[94]]]],[98,[[79,[94]]]],[2,[[79,[94]]]],[[[11,[99]]],[[79,[94]]]],[95,[[79,[94]]]],[100,[[79,[94]]]],[[[11,[28]]],[[79,[94]]]],[[[11,[97]]],[[79,[94]]]],[46,[[79,[94]]]],[10,[[79,[94]]]],[[[11,[2]]],[[79,[94]]]],[[[11,[46]]],[[79,[94]]]],[97,[[79,[94]]]],[[[11,[98]]],[[79,[94]]]],[30,[[79,[94]]]],[[[11,[30]]],[[79,[94]]]],[[[11,[100]]],[[79,[94]]]],[19,[[79,[94]]]],[[[11,[19]]],[[79,[94]]]],[99,[[79,[94]]]],[28,[[79,[94]]]],[[[11,[96]]],[[79,[94]]]],[97,[[79,[94]]]],[[[11,[28]]],[[79,[94]]]],[96,[[79,[94]]]],[28,[[79,[94]]]],[[[11,[100]]],[[79,[94]]]],[[[11,[97]]],[[79,[94]]]],[[[11,[96]]],[[79,[94]]]],[10,[[79,[94]]]],[99,[[79,[94]]]],[[[11,[30]]],[[79,[94]]]],[19,[[79,[94]]]],[2,[[79,[94]]]],[30,[[79,[94]]]],[98,[[79,[94]]]],[[[11,[98]]],[[79,[94]]]],[[[11,[99]]],[[79,[94]]]],[95,[[79,[94]]]],[[[11,[10]]],[[79,[94]]]],[100,[[79,[94]]]],[[[11,[95]]],[[79,[94]]]],[[[11,[2]]],[[79,[94]]]],[[[11,[46]]],[[79,[94]]]],[[[11,[19]]],[[79,[94]]]],[46,[[79,[94]]]],[[[150,[[0,[84,67]]]],[11,[10]]],43],[[152,[20,[10]]],[[93,[48]]]],[[[150,[[0,[84,67]]]],78],43],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[[151,[[0,[81,67]]]],[11,[10]],28,28,27],43],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[153,153],[[]],[[[154,[84]]],27],[[],153],[48],[48],[48],[48],[48],[48],[[[154,[84]]]],[48],[48],[48],[[[155,[81]],[11,[10]],28,28,27],43],[[153,56],57],[[]],[[]],[[]],[[[154,[84]]],33],[[[154,[84]]],[[17,[[20,[10]]]]]],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[[154,[84]]],42],[[[154,[84]]],43],[[],153],[10,153],[84,[[43,[[154,[84]]]]]],[81,[[155,[81]]]],[[[154,[84]],[11,[10]]],43],[[[154,[84]],[8,[10]]],43],[[]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],0,[[[155,[81]],[11,[10]],28,28,27],43],0,0,[[]],[[]],[[]],[[]],[156,156],[[]],[[[157,[84]]],[[43,[156]]]],[[],156],[48],[48],[48],[48],[48],[48],[[156,56],57],0,[[]],[[]],[156,48],0,[[],48],[[],48],[[]],[[]],0,[84,[[157,[84]]]],0,[[]],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[158,158],[159,159],[160,160],[161,161],[[]],[[]],[[]],[[]],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[[158,158],33],[[159,159],33],[[160,160],33],[[161,161],33],[[],33],[[91,56],57],[[91,56],[[79,[162]]]],[[163,56],57],[[163,56],[[79,[162]]]],[[158,56],57],[[164,56],57],[[164,56],[[79,[162]]]],[[165,56],57],[[165,56],[[79,[162]]]],[[159,56],57],[[166,56],57],[[166,56],[[79,[162]]]],[[167,56],57],[[167,56],[[79,[162]]]],[[160,56],57],[[161,56],57],[[161,56],[[79,[162]]]],[163,161],[164,161],[166,161],[[]],[168,91],[94,91],[161,163],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,161],[[]],[62,161],[[161,158],163],[161,164],[161,166],[159,165],[160,167],[[158,65]],[[159,65]],[[160,65]],[[161,65]],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[163,158],[165,159],[167,160],[[161,[82,[[68,[169]]]]],164],[[161,[82,[[68,[169]]]]],166],[91,[[17,[169]]]],[164,[[17,[169]]]],[165,[[17,[169]]]],[166,[[17,[169]]]],[[]],[[]],[[]],[[]],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[16,[[18,[11]]]]],[[16,[11]]]],[[[16,[[18,[11]]]]],11],[[[16,[[13,[11]]]]],[[16,[11]]]],[[[16,[[13,[11]]]]],11],[[[16,[[13,[11]]]]],[[79,[[171,[11,12]],168]]]],[[[16,[[18,[11]]]]],[[79,[[172,[11,12]],168]]]],[[[16,[[18,[11]]]]],[[79,[[171,[11,12]],168]]]],[[[172,[[0,[[18,[11]],[13,[11]]]],12]],28,28]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16],[76],[[[171,[[13,[11]],12]]]],[[[172,[[0,[[18,[11]],[13,[11]]]],12]]]],0,0,[[[16,[37]]],[[16,[37]]]],[76,76],[[[171,[[0,[[13,[11]],37]],[0,[37,12]]]]],[[171,[[0,[[13,[11]],37]],[0,[37,12]]]]]],[[[172,[[0,[[18,[11]],37]],[0,[37,12]]]]],[[172,[[0,[[18,[11]],37]],[0,[37,12]]]]]],[168,168],[173,173],[[]],[[]],[[]],[[]],[[]],[[]],0,[[10,28,28],76],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[48],[[[171,[[13,[11]],12]]]],[[[172,[[0,[[18,[11]],[13,[11]]]],12]]]],[48],[48],[48],[48],[48],[48],[[76,76],33],[[168,168],33],[[173,173],33],[[],33],[[],33],[[],33],[16],[76],[[16,48],33],[[76,48],33],[[[171,[[13,[11]],12]]],[[16,[[13,[11]]]]]],[[[172,[[18,[11]],12]]],[[16,[[18,[11]]]]]],[[[16,[58]],56],57],[[76,56],57],[[[171,[[0,[[13,[11]],58]],[0,[58,12]]]],56],57],[[[172,[[0,[[18,[11]],58]],[0,[58,12]]]],56],57],[[168,56],57],[[168,56],57],[[173,56],57],[[]],[[]],[[]],[[]],[[]],[[]],[[[16,[[18,[11]]]],10,28,28],17],[[[171,[[18,[11]],[13,[11]],12]],10,28,28],17],[[[172,[[18,[11]],12]],10,28,28],17],[[[171,[[13,[11]],12]],28,28]],[[[172,[[0,[[18,[11]],[13,[11]]]],12]],28,28]],[[[172,[[0,[[18,[11]],[13,[11]]]],12]],28,28]],[[[16,[[13,[11]]]],10,28,28],17],[[[171,[[13,[11]],12]],10,28,28],17],[[[172,[[13,[11]],[18,[11]],12]],10,28,28],17],[16,33],[76,33],[[76,65]],[[168,65]],[[173,65]],0,0,[[[16,[[18,[11]]]]],[[17,[11]]]],[[[171,[[18,[11]],[13,[11]],12]]],11],[[[172,[[18,[11]],12]]],11],[[[16,[[13,[11]]]]],[[17,[11]]]],[[[171,[[13,[11]],12]]],11],[[[172,[[13,[11]],[18,[11]],12]]],11],[[16,10,28,28],33],[[76,10,28,28],33],[[[171,[[13,[11]],12]],28,28],33],[[[172,[[0,[[18,[11]],[13,[11]]]],12]],28,28],33],[[16,10,28,28],48],[[76,10,28,28],48],[[[16,[[174,[48]]]]]],[[16,10,28,28],[[17,[48]]]],[[76,10,28,28],[[17,[48]]]],[[16,48,48,48],[[17,[48]]]],[[76,48,48,48],[[17,[48]]]],[[[16,[[175,[48]]]]]],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[[171,[[13,[11]],12]]],[[16,[[13,[11]]]]]],[[[172,[[18,[11]],12]]],[[16,[[18,[11]]]]]],[[16,173],33],[[76,173],33],0,[16,[[17,[48]]]],[76,[[17,[48]]]],[[[171,[[13,[11]],12]]],48],[[[172,[[18,[11]],12]]],48],[[173,173],[[17,[69]]]],[[[172,[[0,[[18,[11]],[13,[11]]]],12]],28,28]],[[10,28,28],76],[[[171,[[13,[11]],12]]],[[13,[11]]]],[[[172,[[18,[11]],12]]],[[18,[11]]]],0,[[16,10,28,28]],[[76,10,28,28]],[[[171,[[13,[11]],12]],28,28]],[[[172,[[18,[11]],12]],28,28]],[16],[76],[[]],[[]],[[]],[[]],[[]],[[]],[[],170],[[[16,[[13,[[11,[37]]]]]]],[[16,[[20,[37]]]]]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[[16,[14]]],[[79,[[15,[12,14]]]]]],[[[171,[[18,[11]],[13,[11]],12]]],[[79,[[172,[[18,[11]],[13,[11]],12]]]]]],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],0,0,[[12,28,28],[[16,[[11,[5]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[44,2],[[15,[20]]]],[[]],[[]],0,[73,73],[[]],0,0,[[44,28,28,28,28],[[34,[44]]]],[[44,28,28,28,28],[[34,[44]]]],[48],[48],0,[48],[[73,73],33],[[44,[11,[2]]],[[15,[12,[20,[5]]]]]],[44,[[15,[20]]]],[[44,[15,[29]]],43],[176],[44,[[15,[20]]]],[[44,[15,[29]]],43],[176],[[73,56],57],[[]],0,0,0,0,[[176,12,12]],0,0,[[],48],[[44,2,2],[[17,[12]]]],[[44,2,2],[[17,[12]]]],[[]],0,[[176,44,100,100]],[[28,28]],[[176,44,100,100]],[[44,28,28,73],[[15,[20]]]],[44,[[15,[20]]]],[[44,[15,[29]]],43],[176],[44,[[15,[20]]]],[[44,[15,[29]]],43],[44,[[15,[20]]]],[[44,[15,[29]]],43],[[44,2,2],[[17,[12]]]],[[44,2,2],[[17,[12]]]],[[44,28,28],[[15,[12,[20,[[0,[5,0]]]]]]]],[[176,44]],[[]],[[],79],[[],79],[[],80],[[44,2,30],[[15,[12,[20,[5]]]]]],[[176,12,12]],0,0,0,[[]],[[]],[[44,30],[[15,[12,[20,[5]]]]]],[[176,30]],[177,177],[[]],[[44,2],[[15,[12,[20,[5]]]]]],[[176,2]],[48],[48],[[[15,[12,[20,[10]]]],[0,[178,40]]]],[48],[[]],[44,[[15,[7,20]]]],[44,[[15,[9,20]]]],[44,[[15,[[0,[12,[0,[7]]]],20]]]],[44,[[15,[[0,[12,[0,[9]]]],20]]]],[[],33],[177,33],[[44,30],[[15,[12,[20,[5]]]]]],[[176,30]],[[[15,[12,[20,[10]]]],[0,[178,40]]],[[15,[[7,[10]],[20,[10]]]]]],[[],48],[[177,[7,[10]]],48],[[],48],[[]],[176],[48,17],[[177,48],17],[[]],[[177,[7,[10]]]],[[]],[[],79],[[],79],[[],80],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[78,28,28],43],[[78,179],43],[[[180,[84]]]],[179,179],[78,78],[[]],[[]],[[[180,[[0,[66,67]]]]],[[43,[1]]]],[[],179],[[],78],[48],[48],[48],[48],[48],[48],[48],[48],[48],[[179,179],33],[[78,78],33],[[],33],[[],33],[[179,56],57],[[78,56],57],[[[180,[84]]],[[17,[32]]]],[[78,46]],[[78,48]],[[]],[[]],[[]],[[179,65]],[[78,65]],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[[180,[[0,[66,67]]]]],43],[[[180,[84]]],84],[[[180,[84]],78]],0,0,0,[84,[[180,[84]]]],[[[180,[84]]]],[[],78],[[[13,[62]]],[[93,[[180,[[182,[181]]]]]]]],[[78,46],43],[[78,28,28,27],43],[[78,48],43],[[[180,[84]],32]],[[]],[[]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[84,32],[[180,[84]]]],[[[180,[[0,[66,67]]]]],[[93,[[180,[[0,[66,67]]]]]]]],0,[[]],[[]],[45,45],[[]],[48],[48],[48],[[45,45],33],[[],33],[[45,56],57],[[]],[[45,65]],0,[[],48],[[]],[[]],[[],79],[[],79],[[],80],0,0,0],"c":[171,207,225,429,460,543,613,614,617,635,636,644,923,991,992,993,994,995,996,997,1006,1008,1009,1018,1023,1024,1026,1039,1040,1041,1042,1091,1092,1093,1320,1525,1675,1681,1723,2245],"p":[[4,"DynamicImage"],[15,"f32"],[8,"Iterator"],[8,"FnMut"],[8,"Primitive"],[3,"Rgb"],[3,"Luma"],[3,"Rgba"],[3,"LumaA"],[15,"u8"],[15,"slice"],[8,"Pixel"],[8,"AsRef"],[8,"Deref"],[3,"ImageBuffer"],[3,"FlatSamples"],[4,"Option"],[8,"AsMut"],[15,"u16"],[3,"Vec"],[6,"GrayImage"],[6,"GrayAlphaImage"],[6,"Rgb32FImage"],[6,"RgbImage"],[6,"Rgba32FImage"],[6,"RgbaImage"],[4,"ColorType"],[15,"u32"],[8,"DerefMut"],[15,"i32"],[3,"Frame"],[4,"ImageFormat"],[15,"bool"],[3,"SubImage"],[4,"ExtendedColorType"],[3,"Delay"],[8,"Clone"],[4,"ImageOutputFormat"],[3,"Progress"],[8,"Sized"],[3,"Pixels"],[3,"Frames"],[6,"ImageResult"],[8,"GenericImageView"],[3,"Rect"],[15,"u64"],[8,"Default"],[15,"usize"],[3,"EnumeratePixels"],[3,"EnumeratePixelsMut"],[3,"EnumerateRows"],[3,"EnumerateRowsMut"],[8,"PartialEq"],[3,"Global"],[15,"str"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"array"],[8,"ImageDecoder"],[3,"OsStr"],[3,"Path"],[3,"Duration"],[8,"Hash"],[8,"Hasher"],[8,"BufRead"],[8,"Seek"],[3,"Box"],[4,"Ordering"],[3,"Pixels"],[3,"PixelsMut"],[8,"Fn"],[4,"FilterType"],[3,"Rows"],[3,"RowsMut"],[3,"SampleLayout"],[8,"PixelWithColorType"],[3,"Limits"],[4,"Result"],[3,"TypeId"],[8,"Write"],[8,"Into"],[8,"ImageEncoder"],[8,"Read"],[3,"BmpDecoder"],[3,"BmpEncoder"],[3,"DdsDecoder"],[4,"DxtVariant"],[3,"DxtDecoder"],[3,"DxtEncoder"],[4,"ImageError"],[3,"DxtReader"],[6,"Result"],[3,"Error"],[15,"i128"],[15,"i16"],[15,"f64"],[15,"u128"],[15,"i8"],[15,"i64"],[3,"FarbfeldDecoder"],[3,"FarbfeldEncoder"],[3,"FarbfeldReader"],[4,"SeekFrom"],[4,"Repeat"],[3,"GifDecoder"],[3,"GifEncoder"],[8,"IntoIterator"],[3,"GifReader"],[3,"Rgbe8Pixel"],[3,"HdrMetadata"],[3,"HdrAdapter"],[3,"HdrEncoder"],[3,"HdrDecoder"],[3,"HdrImageDecoderIterator"],[3,"HdrReader"],[8,"Send"],[8,"Sync"],[8,"Zero"],[3,"IcoFrame"],[3,"IcoDecoder"],[3,"IcoEncoder"],[4,"Cow"],[4,"PixelDensityUnit"],[3,"PixelDensity"],[3,"JpegDecoder"],[3,"JpegEncoder"],[3,"OpenExrDecoder"],[3,"OpenExrEncoder"],[3,"PngDecoder"],[3,"ApngDecoder"],[4,"CompressionType"],[4,"FilterType"],[3,"PngEncoder"],[3,"PngReader"],[3,"PnmHeader"],[3,"ArbitraryHeader"],[3,"BitmapHeader"],[3,"GraymapHeader"],[3,"PixmapHeader"],[4,"SampleEncoding"],[4,"PnmSubtype"],[4,"ArbitraryTuplType"],[3,"PnmDecoder"],[3,"PnmEncoder"],[3,"QoiDecoder"],[3,"QoiEncoder"],[3,"TgaDecoder"],[3,"TgaEncoder"],[3,"TiffDecoder"],[3,"TiffEncoder"],[3,"TiffReader"],[3,"WebPQuality"],[3,"WebPDecoder"],[3,"WebPEncoder"],[3,"Frame"],[3,"Vp8Decoder"],[4,"UnsupportedErrorKind"],[4,"ParameterErrorKind"],[4,"LimitErrorKind"],[4,"ImageFormatHint"],[3,"Error"],[3,"UnsupportedError"],[3,"EncodingError"],[3,"ParameterError"],[3,"DecodingError"],[3,"LimitError"],[4,"Error"],[8,"Error"],[3,"String"],[3,"View"],[3,"ViewMut"],[4,"NormalForm"],[8,"Index"],[8,"IndexMut"],[8,"GenericImage"],[3,"BiLevel"],[8,"ColorMap"],[3,"LimitSupport"],[3,"Reader"],[3,"File"],[3,"BufReader"],[8,"EncodableLayout"],[8,"AnimationDecoder"],[8,"ImageDecoderRect"],[8,"ConvertBuffer"],[13,"Unsupported"]]},\
"inflate":{"doc":"A DEFLATE decoder written in rust.","t":"DDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DeflateDecoder","DeflateDecoderBuf","InflateStream","InflateWriter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current_checksum","current_checksum","current_checksum","finish","flush","from","from","from","from","from_zlib","from_zlib","from_zlib","from_zlib","from_zlib_no_checksum","from_zlib_no_checksum","from_zlib_no_checksum","get_mut","get_mut","get_ref","get_ref","inflate_bytes","inflate_bytes_zlib","inflate_bytes_zlib_no_checksum","into","into","into","into","into_inner","into_inner","new","new","new","new","read","read","reset","reset","reset","reset_data","reset_data","reset_to_zlib","total_in","total_in","total_out","total_out","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","write"],"q":[[0,"inflate"]],"d":["A DEFLATE decoder/decompressor.","A DEFLATE decoder/decompressor.","","A DEFLATE decoder.","","","","","","","","","Returns the calculated checksum value of the currently …","Returns the calculated checksum value of the currently …","Returns the calculated checksum value of the currently …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create a new <code>DeflateDecoderbuf</code> that reads from a zlib …","Create a new <code>DeflateDecoderbuf</code> that reads from a zlib …","Create a new stream for decoding deflate encoded data with …","Create a new <code>DeflateDecoderbuf</code> that reads from a zlib …","Create a new <code>DeflateDecoderbuf</code> that reads from a zlib …","Create a new stream for decoding deflate encoded data with …","Returns a mutable reference to the underlying <code>BufRead</code> …","Returns a mutable reference to the underlying reader.","Returns a reference to the underlying <code>BufRead</code> instance.","Returns a reference to the underlying reader.","Decompress the given slice of DEFLATE compressed data.","Decompress the given slice of DEFLATE compressed (with …","Decompress the given slice of DEFLATE compressed (with …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Drops the decoder and return the inner <code>BufRead</code> instance.","Returns the total number of bytes output from this decoder.","","Create a new <code>Deflatedecoderbuf</code> to read from a raw deflate …","Create a new <code>Deflatedecoderbuf</code> to read from a raw deflate …","Create a new stream for decoding raw deflate encoded data.","","","Resets the decompressor, and replaces the current inner …","Resets the decompressor, and replaces the current inner …","","Resets the decoder, but continue to read from the same …","Resets the decoder, but continue to read from the same …","","Returns the total bytes read from the underlying <code>BufRead</code> …","Returns the total bytes read from the underlying reader.","Returns the total number of bytes output from this decoder.","Returns the total number of bytes output from this decoder.","","","","","","","","","","","","","Try to uncompress/decode the data in <code>data</code>.",""],"i":[0,0,0,0,6,1,3,4,6,1,3,4,1,3,4,6,6,6,1,3,4,6,1,3,4,1,3,4,1,3,1,3,0,0,0,6,1,3,4,1,3,6,1,3,4,1,3,1,3,4,1,3,4,1,3,1,3,6,1,3,4,6,1,3,4,6,1,3,4,4,6],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[3,2],[4,2],[[[6,[5]]],[[7,[5]]]],[[[6,[5]]],7],[[]],[[]],[[]],[[]],[5,[[6,[5]]]],[8,[[1,[8]]]],[9,[[3,[9]]]],[[],4],[8,[[1,[8]]]],[9,[[3,[9]]]],[[],4],[1],[[[3,[9]]],9],[1],[[[3,[9]]],9],[[[11,[10]]],[[14,[[12,[10]],13]]]],[[[11,[10]]],[[14,[[12,[10]],13]]]],[[[11,[10]]],[[14,[[12,[10]],13]]]],[[]],[[]],[[]],[[]],[1],[[[3,[9]]],9],[5,[[6,[5]]]],[8,[[1,[8]]]],[9,[[3,[9]]]],[[],4],[[[1,[8]],[11,[10]]],[[7,[15]]]],[[[3,[9]],[11,[10]]],[[7,[15]]]],[1],[[[3,[9]],9],9],[4],[1],[3],[4],[1,16],[3,16],[1,16],[3,16],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],17],[[],17],[[],17],[[],17],[[4,[11,[10]]],[[14,[13]]]],[[[6,[5]],[11,[10]]],[[7,[15]]]]],"c":[],"p":[[3,"DeflateDecoderBuf"],[15,"u32"],[3,"DeflateDecoder"],[3,"InflateStream"],[8,"Write"],[3,"InflateWriter"],[6,"Result"],[8,"BufRead"],[8,"Read"],[15,"u8"],[15,"slice"],[3,"Vec"],[3,"String"],[4,"Result"],[15,"usize"],[15,"u64"],[3,"TypeId"]]},\
"input":{"doc":"A flexible structure for user interactions to be used in …","t":"NDIENDIENNNNDINNCCCCNINNNNEENNICNENNDIENCNNNNENENCNCNCNCNNNININDINDINNNNNIGENDINNDIKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLALKLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLALMLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKKLLKLKLLKLLLLLKLKLLLLKLKLKLKLKLALLLLLLLLMKLLLLLLLLLLLLLLLLLLLLMAALLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLMKLLLKLLLKLLLMLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLMMLDIDDMLLLLLLMLLLLLLLLKLLLLLLLLLLLLLLLKLLMMMLLLLLLLLLMLLLMLLLLLLLLLLLLMRRRRRDRRRRRRRRRRRLLLLLLLLLLLLLLLLIKKKNSSNNNNNNNNNNNNNNNNNNNNNNNNNSSSSSSSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNNNNNNNNNNNNENNNNNNNNNNNNNNNDNNSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSSNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNEIIINNNNLLLLLLLLLLLKKKLLKLKLKLLLLLLL","n":["AfterRender","AfterRenderArgs","AfterRenderEvent","Button","Button","ButtonArgs","ButtonEvent","ButtonState","Cancel","Cancel","Centered","Close","CloseArgs","CloseEvent","Controller","ControllerAxis","ControllerAxisArgs","ControllerAxisEvent","ControllerButton","ControllerHat","Cursor","CursorEvent","Custom","Down","Drop","End","Event","FileDrag","FileDrag","Focus","FocusEvent","GenericEvent","Hat","HatState","Hover","Idle","IdleArgs","IdleEvent","Input","Input","Key","Keyboard","Left","LeftDown","LeftUp","Loop","Loop","Motion","Mouse","MouseButton","MouseCursor","MouseCursorEvent","MouseRelative","MouseRelativeEvent","MouseScroll","MouseScrollEvent","Move","Move","Press","PressEvent","Release","ReleaseEvent","Render","RenderArgs","RenderEvent","Resize","ResizeArgs","ResizeEvent","Right","RightDown","RightUp","Start","Text","TextEvent","TimeStamp","Touch","Touch","TouchArgs","TouchEvent","Up","Update","UpdateArgs","UpdateEvent","after_render","after_render","after_render_args","after_render_args","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","button","button","button_args","button_args","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","close_args","close_args","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","controller","controller_axis","cursor","cursor","cursor_args","cursor_args","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device","draw_size","draw_size","dt","dt","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_id","event_id","ext_dt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus","focus_args","focus_args","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_after_render_args","from_after_render_args","from_button","from_button","from_button","from_button","from_button_args","from_button_args","from_close_args","from_close_args","from_controller_axis_args","from_cursor","from_cursor","from_dt","from_dt","from_dt","from_dt","from_focused","from_focused","from_idle_args","from_idle_args","from_pos","from_pos","from_pos","from_render_args","from_render_args","from_resize_args","from_resize_args","from_text","from_text","from_touch_args","from_touch_args","from_update_args","from_update_args","generic_event","hash","hash","hash","hash","hash","hash","hash","hash","id","idle","idle","idle_args","idle_args","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_3d","keyboard","mouse","mouse_cursor","mouse_relative","mouse_scroll","new","new_3d","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","position","position_3d","position_3d","press","press","press_args","press_args","pressure","pressure_3d","pressure_3d","release","release","release_args","release_args","render","render","render_args","render_args","resize","resize","resize_args","resize_args","scancode","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","state","text","text","text_args","text_args","time_stamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","touch","touch","touch","touch_args","touch_args","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update_args","update_args","viewport","viewport","window_size","window_size","with_args","ControllerAxisArgs","ControllerAxisEvent","ControllerButton","ControllerHat","axis","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","button","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","controller_axis","controller_axis_args","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_controller_axis_args","hash","hash","id","id","id","into","into","into","new","new","new","partial_cmp","partial_cmp","partial_cmp","position","serialize","serialize","serialize","state","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","which","AFTER_RENDER","BUTTON","CLOSE","CONTROLLER_AXIS","CURSOR","EventId","FILE_DRAG","FOCUS","IDLE","MOUSE_CURSOR","MOUSE_RELATIVE","MOUSE_SCROLL","RENDER","RESIZE","TEXT","TOUCH","UPDATE","borrow","borrow_mut","clone","clone_into","cmp","eq","equivalent","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","GenericEvent","event_id","time_stamp","with_args","A","ALT","ALT_GUI","AcBack","AcBookmarks","AcForward","AcHome","AcRefresh","AcSearch","AcStop","Again","AltErase","Ampersand","Application","Asterisk","At","AudioMute","AudioNext","AudioPlay","AudioPrev","AudioStop","B","Backquote","Backslash","Backspace","BrightnessDown","BrightnessUp","C","CTRL","CTRL_ALT","CTRL_GUI","CTRL_SHIFT","CTRL_SHIFT_ALT","CTRL_SHIFT_ALT_GUI","CTRL_SHIFT_GUI","Calculator","Cancel","CapsLock","Caret","Clear","ClearAgain","Colon","Comma","Computer","Copy","CrSel","CurrencySubUnit","CurrencyUnit","Cut","D","D0","D1","D2","D3","D4","D5","D6","D7","D8","D9","DecimalSeparator","Delete","DisplaySwitch","Dollar","Down","E","Eject","End","Equals","Escape","ExSel","Exclaim","Execute","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Find","G","GUI","Greater","H","Hash","Help","Home","I","Insert","J","K","KbdIllumDown","KbdIllumToggle","KbdIllumUp","Key","L","LAlt","LCtrl","LGui","LShift","Left","LeftBracket","LeftParen","Less","M","Mail","MediaSelect","Menu","Minus","Mode","ModifierKey","Mute","N","NO_MODIFIER","NumLockClear","NumPad0","NumPad00","NumPad000","NumPad1","NumPad2","NumPad3","NumPad4","NumPad5","NumPad6","NumPad7","NumPad8","NumPad9","NumPadA","NumPadAmpersand","NumPadAt","NumPadB","NumPadBackspace","NumPadBinary","NumPadC","NumPadClear","NumPadClearEntry","NumPadColon","NumPadComma","NumPadD","NumPadDblAmpersand","NumPadDblVerticalBar","NumPadDecimal","NumPadDivide","NumPadE","NumPadEnter","NumPadEquals","NumPadEqualsAS400","NumPadExclam","NumPadF","NumPadGreater","NumPadHash","NumPadHexadecimal","NumPadLeftBrace","NumPadLeftParen","NumPadLess","NumPadMemAdd","NumPadMemClear","NumPadMemDivide","NumPadMemMultiply","NumPadMemRecall","NumPadMemStore","NumPadMemSubtract","NumPadMinus","NumPadMultiply","NumPadOctal","NumPadPercent","NumPadPeriod","NumPadPlus","NumPadPlusMinus","NumPadPower","NumPadRightBrace","NumPadRightParen","NumPadSpace","NumPadTab","NumPadVerticalBar","NumPadXor","O","Oper","Out","P","PageDown","PageUp","Paste","Pause","Percent","Period","Plus","Power","PrintScreen","Prior","Q","Question","Quote","Quotedbl","R","RAlt","RCtrl","RGui","RShift","Return","Return2","Right","RightBracket","RightParen","S","SHIFT","SHIFT_ALT","SHIFT_ALT_GUI","SHIFT_GUI","ScrollLock","Select","Semicolon","Separator","Slash","Sleep","Space","Stop","Sysreq","T","Tab","ThousandsSeparator","U","Underscore","Undo","Unknown","Up","V","VolumeDown","VolumeUp","W","Www","X","Y","Z","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","code","complement","contains","default","deserialize","deserialize","difference","empty","eq","eq","equivalent","equivalent","event","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","not","partial_cmp","partial_cmp","remove","serialize","serialize","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","Button6","Button7","Button8","Left","Middle","MouseButton","MouseCursorEvent","MouseRelativeEvent","MouseScrollEvent","Right","Unknown","X1","X2","borrow","borrow_mut","clone","clone_into","cmp","deserialize","eq","equivalent","fmt","from","from","from_pos","from_pos","from_pos","hash","into","mouse_cursor","mouse_cursor_args","mouse_relative","mouse_relative_args","mouse_scroll","mouse_scroll_args","partial_cmp","serialize","to_owned","try_from","try_into","type_id"],"q":[[0,"input"],[503,"input::controller"],[572,"input::event_id"],[605,"input::generic_event"],[609,"input::keyboard"],[936,"input::mouse"]],"d":["After rendering and swapping buffers.","After render arguments.","After rendering and buffers are swapped.","Models different kinds of buttons.","Changed button state.","Button arguments.","Changed button state.","Stores button state.","The cancel of touch, for example the window loses focus.","A file was hovered, but has exited the window.","Centered (no direction).","Window closed.","Close arguments.","Window is closing.","A controller button.","Controller axis move event.","","","","","Window gained or lost cursor.","When window gets or loses cursor.","Custom event.","Down direction.","A file has been dropped into the window.","The end of touch, for example taking a finger away from a …","Models all events.","Models dragging and dropping files.","A file is being dragged or dropped over the window.","Window gained or lost focus.","When window gets or loses focus.","","A controller hat (d-Pad)","Stores controller hat state.","A file is being hovered over the window.","Do background tasks that can be done incrementally.","Idle arguments, such as expected idle time in seconds.","When background tasks should be performed.","Models input events.","Input events.","","A keyboard button.","Left direction.","Left-down direction.","Left-up direction.","Models loop events.","Events that commonly used by event loops.","Models different kinds of motion.","A mouse button.","","Position in window coordinates.","","Position in relative coordinates.","","Position in scroll ticks.","","The move of touch, for example a finger moving while …","Moved mouse cursor.","Button was pressed.","The press of a button.","Button was released.","The release of a button.","Render graphics.","Render arguments.","When the next frame should be rendered.","Window got resized.","Resize arguments.","When the window is resized.","Right direction.","Right-down direction.","Right-up direction.","The start of touch, for example a finger pressed down on a …","Text (usually from keyboard).","When receiving text from user, such as typing a character.","The type of time stamp.","Stores the touch state.","Touch event.","Touch arguments","When a touch is started, moved, ended or cancelled.","Up direction.","Update the state of the application.","Update arguments, such as delta time in seconds.","When the application state should be updated.","Calls closure if this is an after render event.","","Returns after render arguments.","Returns after render arguments.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is a button event.","","The button that changed state.","Returns button arguments.","Returns button arguments.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is a close event.","","Returns close arguments.","Returns close arguments.","","","","","","","","","Back-end agnostic controller events.","","Calls closure if this is a cursor event.","","Returns cursor arguments.","Returns cursor arguments.","","","","","","","","","","","","","","","","","A unique identifier for touch device.","The width and height of rendered area in pixels.","The width of rendered area in pixels.","Expected idle time in seconds.","Delta time in seconds.","","","","","","","","","","","","","","","","","","","","","","","","","","Event identifiers.","","Extrapolated time in seconds, used to do smooth animation.","","","","","","","","","","","","","","","","","","Calls closure if this is a focus event.","","Returns focus arguments.","Returns focus arguments.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Creates an after render event.","","Creates a press event.","Creates a release event.","","","Creates a button event.","","Creates a close event from arguments.","","","Creates a cursor event.","","Creates an update event with delta time.","Creates an update event with delta time.","Creates an update event with delta time.","Creates an update event with delta time.","Creates a focus event.","","Creates an idle event.","","","","","Creates a render event.","","Creates a resize event.","","Creates a text event.","","Creates a touch event.","","Creates an update event.","","Trait for generic events","","","","","","","","","A unique identifier for touch event.","Calls closure if this is an idle event.","","Returns idle arguments.","Returns idle arguments.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the touch is in 3D.","Back-end agnostic keyboard keys.","Back-end agnostic mouse buttons.","","","","Creates arguments for 2D touch.","Creates arguments for 3D touch.","","","","","","","","","","","","","","","","","","The position of the touch in 2D.","The position of the touch in 3D.","The touch position, normalized 0..1.","Calls closure if this is a press event.","","Returns press arguments.","Returns press arguments.","The pressure magnitude, normalized 0..1.","The pressure vector in 3D.","The touch pressure vector, normalized 0..1.","Calls closure if this is a release event.","","Returns release arguments.","Returns release arguments.","Calls closure if this is a render event.","","Returns render arguments.","Returns render arguments.","Calls closure if this is a resize event.","","Returns resize arguments.","Returns resize arguments.","An optional scancode that tells the physical layout of a …","","","","","","","","","","","","","","","","","New state of the button.","Calls closure if this is a text event.","","Returns text arguments.","Returns text arguments.","","","","","","","","","","","","","","","","","","","Calls closure if this is a touch event.","","The touch state.","Returns touch arguments.","Returns touch arguments.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is an update event.","","Returns update arguments.","Returns update arguments.","Returns viewport information filling entire render area.","Returns viewport information filling entire render area.","The width and height of rendered area in points.","The width and height of rendered area in points.","","Components of a controller axis move event. Not guaranteed …","The position of a controller axis changed.","Components of a controller button event. Not guaranteed …","Components of a controller hat move event (d-Pad).","The axis that moved.","","","","","","","Which button was pressed.","","","","","","","","","Calls closure if this is a controller axis event.","Returns controller axis arguments.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a controller axis event.","","","Which controller was the button on.","Which Controller was the button on.","Which controller moved.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>ControllerButton</code> object. Intended for use by …","Create a new <code>ControllerButton</code> object. Intended for use by …","Create a new <code>ControllerAxisArgs</code> object. Intended for use …","","","","Position of the controller. Usually [-1.0, 1.0], though …","","","","Which button was pressed.","","","","","","","","","","","","","Which hat on the controller was changed","Event id for after render event.","Event id for button event.","Event id for close event.","Event id for controller axis event.","Event id for cursor event.","Used to identify events arguments provided by traits.","Event id for file drag event.","Event id for focus event.","Event id for idle event.","Event id for mouse cursor event.","Event id for mouse relative event.","Event id for mouse scroll event.","Event id for render event.","Event id for resize event.","Event id for text event.","Event id for touch event.","Event id for update event.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Implemented by all events.","The id of this event.","Gets the time stamp of this event.","Calls closure with arguments","","Alt.","Alt + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","Ctrl.","Ctrl + Alt.","Ctrl + Gui.","Ctrl + Shift.","Ctrl + Shift + Alt.","Ctrl + Shift + Alt + Gui.","Ctrl + Shift + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gui.","","","","","","","","","","","","","Represent a keyboard key. Keycodes follows SDL …","","","","","","","","","","","","","","","","","","","No modifier.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shift.","Shift + Alt.","Shift + Alt + Gui.","Shift + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","Returns an id of the key","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","Change modifier key state depending on input.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Mouse button number 6.","Mouse button number 7.","Mouse button number 8.","Left mouse button.","Middle mouse button.","Represent a mouse button.","The position of the mouse cursor.","The relative movement of mouse cursor.","The scroll of the mouse wheel.","Right mouse button.","Unknown mouse button.","Extra mouse button number 1.","Extra mouse button number 2.","","","","","","","","","","","Returns the argument unchanged.","Creates a mouse cursor event.","Creates a mouse relative event.","Creates a mouse scroll event.","","Calls <code>U::from(self)</code>.","Calls closure if this is a mouse cursor event.","Returns mouse cursor arguments.","Calls closure if this is a mouse relative event.","Returns mouse relative arguments.","Calls a closure if this is a mouse scroll event.","Returns mouse scroll arguments.","","","","","",""],"i":[19,0,0,0,18,0,0,0,11,17,16,18,0,0,14,15,0,0,0,0,18,0,3,16,17,11,0,0,18,18,0,0,14,0,17,19,0,0,0,3,0,14,16,16,16,0,3,0,14,0,15,0,15,0,15,0,11,18,6,0,6,0,19,0,0,18,0,0,16,16,16,11,18,0,0,0,15,0,0,16,19,0,0,48,3,48,48,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,3,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,3,49,3,5,49,49,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,3,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,3,50,3,50,50,4,6,5,7,11,14,16,17,0,3,51,3,51,51,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,12,9,10,8,13,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,3,4,6,5,7,11,14,16,17,0,3,9,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,3,52,3,52,52,4,6,5,7,8,9,10,11,12,13,14,14,14,14,15,15,15,16,17,18,18,18,18,18,18,19,19,19,19,19,3,3,3,3,3,3,3,3,48,3,53,54,3,3,49,3,50,3,3,51,3,55,55,56,56,52,3,55,3,3,3,3,57,3,58,3,59,3,60,3,56,3,0,4,6,5,7,11,14,16,17,12,55,3,55,55,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,3,12,0,0,3,3,3,12,12,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,3,12,12,12,53,3,53,53,12,12,12,54,3,54,54,57,3,57,57,58,3,58,58,5,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,5,59,3,59,59,3,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,3,60,3,12,60,60,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,3,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,3,4,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,3,56,3,56,56,9,10,9,10,3,0,0,0,0,30,28,41,30,28,41,30,28,28,41,30,28,41,30,28,41,61,61,28,41,30,28,41,30,28,41,28,41,30,28,41,30,61,28,41,28,41,30,28,41,30,28,41,30,28,41,30,30,28,41,30,41,28,41,30,28,41,30,28,41,30,28,41,30,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,46,46,46,29,44,44,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,44,44,44,44,44,44,44,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,44,29,29,29,29,29,29,29,29,29,29,29,29,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,29,29,44,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,44,44,44,44,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,44,44,44,44,44,44,44,44,44,29,44,29,44,29,44,29,44,29,29,44,44,44,44,29,44,44,44,29,44,29,44,44,44,44,44,44,44,29,44,29,29,44,44,44,44,44,29,44,44,44,44,29,44,44,44,44,29,44,44,29,44,44,44,44,44,29,44,44,29,44,29,44,29,44,27,27,27,27,27,0,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,62,63,64,27,27,62,62,63,63,64,64,27,27,27,27,27,27],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,1],2],[[],[[2,[4]]]],[[],[[2,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[3,1],2],0,[[],[[2,[5]]]],[[],[[2,[5]]]],[4,4],[6,6],[5,5],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[3,1],2],[[],[[2,[7]]]],[[],[[2,[7]]]],[[4,4],20],[[6,6],20],[[5,5],20],[[7,7],20],[[11,11],20],[[14,14],20],[[16,16],20],[[17,17],20],0,[[3,1],2],[1,2],[[3,1],2],[[],[[2,[21]]]],[[],[[2,[21]]]],[22,[[23,[4]]]],[22,[[23,[6]]]],[22,[[23,[5]]]],[22,[[23,[7]]]],[22,[[23,[8]]]],[22,[[23,[9]]]],[22,[[23,[10]]]],[22,[[23,[11]]]],[22,[[23,[12]]]],[22,[[23,[13]]]],[22,[[23,[14]]]],[22,[[23,[15]]]],[22,[[23,[16]]]],[22,[[23,[17]]]],[22,[[23,[18]]]],[22,[[23,[19]]]],0,0,0,0,0,[[4,4],21],[[6,6],21],[[5,5],21],[[7,7],21],[[8,8],21],[[9,9],21],[[10,10],21],[[11,11],21],[[12,12],21],[[13,13],21],[[14,14],21],[[15,15],21],[[16,16],21],[[17,17],21],[[18,18],21],[[19,19],21],[[3,3],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[3,24],0,[[4,25],26],[[6,25],26],[[5,25],26],[[7,25],26],[[8,25],26],[[9,25],26],[[10,25],26],[[11,25],26],[[12,25],26],[[13,25],26],[[14,25],26],[[15,25],26],[[16,25],26],[[17,25],26],[[18,25],26],[[19,25],26],[[3,25],26],[1,2],[[3,1],2],[[],[[2,[21]]]],[[],[[2,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,14],[28,14],[29,14],[[]],[[]],[12,15],[30,15],[[]],[[]],[15,18],[30,18],[7,18],[5,18],[12,18],[[]],[9,19],[4,19],[8,19],[[]],[13,19],[9,3],[8,3],[4,3],[[],3],[[],3],[[]],[13,3],[19,3],[4,2],[[4,3],[[2,[3]]]],[14,2],[14,2],[14,2],[14,2],[5,2],[[5,3],[[2,[3]]]],[7,2],[[7,3],[[2,[3]]]],[[30,3],[[2,[3]]]],[21,2],[[21,3],[[2,[3]]]],[31,2],[31,2],[31,2],[31,2],[21,2],[[21,3],[[2,[3]]]],[8,2],[[8,3],[[2,[3]]]],[[[32,[31]],3],[[2,[3]]]],[[[32,[31]],3],[[2,[3]]]],[[[32,[31]],3],[[2,[3]]]],[9,2],[[9,3],[[2,[3]]]],[10,2],[[10,3],[[2,[3]]]],[33,2],[[33,3],[[2,[3]]]],[12,2],[[12,3],[[2,[3]]]],[13,2],[[13,3],[[2,[3]]]],0,[[4,34]],[[6,34]],[[5,34]],[[7,34]],[[11,34]],[[14,34]],[[16,34]],[[17,34]],0,[1,2],[[3,1],2],[[],[[2,[8]]]],[[],[[2,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[3,1],2],[[3,1],2],[[3,1],2],[[35,35,[32,[31]],31,11],12],[[35,35,[32,[31]],[32,[31]],11],12],[[4,4],[[2,[20]]]],[[6,6],[[2,[20]]]],[[5,5],[[2,[20]]]],[[7,7],[[2,[20]]]],[[8,8],[[2,[20]]]],[[9,9],[[2,[20]]]],[[10,10],[[2,[20]]]],[[11,11],[[2,[20]]]],[[12,12],[[2,[20]]]],[[13,13],[[2,[20]]]],[[14,14],[[2,[20]]]],[[15,15],[[2,[20]]]],[[16,16],[[2,[20]]]],[[17,17],[[2,[20]]]],[[18,18],[[2,[20]]]],[[19,19],[[2,[20]]]],[[3,3],[[2,[20]]]],[12,[[32,[31]]]],[12,[[32,[31]]]],0,[1,2],[1,2],[[],[[2,[14]]]],[[],[[2,[14]]]],[12,31],[12,[[32,[31]]]],0,[1,2],[1,2],[[],[[2,[14]]]],[[],[[2,[14]]]],[1,2],[[3,1],2],[[],[[2,[9]]]],[[],[[2,[9]]]],[1,2],[[3,1],2],[[],[[2,[10]]]],[[],[[2,[10]]]],0,[[4,36],23],[[6,36],23],[[5,36],23],[[7,36],23],[[8,36],23],[[9,36],23],[[10,36],23],[[11,36],23],[[12,36],23],[[13,36],23],[[14,36],23],[[15,36],23],[[16,36],23],[[17,36],23],[[18,36],23],[[19,36],23],0,[1,2],[[3,1],2],[[],[[2,[37]]]],[[],[[2,[37]]]],[3,[[2,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[3,1],2],0,[[],[[2,[12]]]],[[],[[2,[12]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[1,2],[[3,1],2],[[],[[2,[13]]]],[[],[[2,[13]]]],[9,40],[10,40],0,0,[[3,1]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[28,28],[41,41],[30,30],[[]],[[]],[[]],[[28,28],20],[[41,41],20],[1,2],[[],[[2,[30]]]],[22,[[23,[28]]]],[22,[[23,[41]]]],[22,[[23,[30]]]],[[28,28],21],[[41,41],21],[[30,30],21],[[],21],[[],21],[[28,25],26],[[41,25],26],[[30,25],26],[[]],[[]],[[]],[30,2],[[28,34]],[[41,34]],0,0,0,[[]],[[]],[[]],[[42,43],28],[[42,43,16],41],[[42,43,31],30],[[28,28],[[2,[20]]]],[[41,41],[[2,[20]]]],[[30,30],[[2,[20]]]],0,[[28,36],23],[[41,36],23],[[30,36],23],0,[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],39],[[],39],[[],39],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[24,24],[[]],[[24,24],20],[[24,24],21],[[],21],[[24,25],26],[[]],[[24,34]],[[]],[[24,24],[[2,[20]]]],[[]],[[],23],[[],23],[[],39],0,[[],24],[[],[[2,[38]]]],[1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],44],[[44,44],44],[[44,44]],[[44,44],44],[[44,44]],[44,43],[[44,44],44],[[44,44]],[[]],[[]],[[]],[[]],[44,44],[29,29],[[]],[[]],[[44,44],20],[[29,29],20],[29,45],[44,44],[[44,44],21],[[],44],[22,[[23,[44]]]],[22,[[23,[29]]]],[[44,44],44],[[],44],[[44,44],21],[[29,29],21],[[],21],[[],21],[[44,46]],[[44,47]],[[44,25],26],[[44,25],26],[[44,25],26],[[44,25],26],[[44,25],26],[[29,25],26],[[]],[[]],[42,29],[43,[[2,[44]]]],[43,44],[43,44],[47,44],[[44,34]],[[29,34]],[[44,44]],[[44,44],44],[[44,44],21],[[]],[[]],[44,21],[44,21],[44,44],[[44,44],[[2,[20]]]],[[29,29],[[2,[20]]]],[[44,44]],[[44,36],23],[[29,36],23],[[44,44,21]],[[44,44],44],[[44,44]],[[44,44],44],[[]],[[]],[[44,44]],[[],23],[[],23],[[],23],[[],23],[[],39],[[],39],[[44,44],44],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[27,27],[[]],[[27,27],20],[22,[[23,[27]]]],[[27,27],21],[[],21],[[27,25],26],[42,27],[[]],[[[32,[31]]],2],[[[32,[31]]],2],[[[32,[31]]],2],[[27,34]],[[]],[1,2],[[],[[2,[[32,[31]]]]]],[1,2],[[],[[2,[[32,[31]]]]]],[1,2],[[],[[2,[[32,[31]]]]]],[[27,27],[[2,[20]]]],[[27,36],23],[[]],[[],23],[[],23],[[],39]],"c":[],"p":[[8,"FnMut"],[4,"Option"],[4,"Event"],[3,"AfterRenderArgs"],[3,"ButtonArgs"],[4,"ButtonState"],[3,"CloseArgs"],[3,"IdleArgs"],[3,"RenderArgs"],[3,"ResizeArgs"],[4,"Touch"],[3,"TouchArgs"],[3,"UpdateArgs"],[4,"Button"],[4,"Motion"],[4,"HatState"],[4,"FileDrag"],[4,"Input"],[4,"Loop"],[4,"Ordering"],[15,"bool"],[8,"Deserializer"],[4,"Result"],[3,"EventId"],[3,"Formatter"],[6,"Result"],[4,"MouseButton"],[3,"ControllerButton"],[4,"Key"],[3,"ControllerAxisArgs"],[15,"f64"],[15,"array"],[15,"str"],[8,"Hasher"],[15,"i64"],[8,"Serializer"],[3,"String"],[6,"TimeStamp"],[3,"TypeId"],[3,"Viewport"],[3,"ControllerHat"],[15,"u32"],[15,"u8"],[3,"ModifierKey"],[15,"i32"],[8,"GenericEvent"],[8,"IntoIterator"],[8,"AfterRenderEvent"],[8,"ButtonEvent"],[8,"CloseEvent"],[8,"CursorEvent"],[8,"FocusEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"IdleEvent"],[8,"UpdateEvent"],[8,"RenderEvent"],[8,"ResizeEvent"],[8,"TextEvent"],[8,"TouchEvent"],[8,"ControllerAxisEvent"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"]]},\
"instant":{"doc":"","t":"DGSSSSSGSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLL","n":["Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","SystemTime","ZERO","add","add_assign","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_mut","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","eq","equivalent","fmt","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","hash","into","is_zero","mul","mul_assign","mul_f32","mul_f64","new","now","partial_cmp","saturating_add","saturating_mul","saturating_sub","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id"],"q":[[0,"instant"]],"d":["A <code>Duration</code> type to represent a span of time, typically …","","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","","A duration of zero time.","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","Calls <code>U::from(self)</code>.","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Creates a new <code>Duration</code> from the specified number of whole …","The current time, expressed in milliseconds since the Unix …","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","",""],"i":[0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,1]],[1,2],[1,2],[1,2],[1,3],[1,4],[1,5],[[]],[[]],[[1,1],[[6,[1]]]],[[1,7],[[6,[1]]]],[[1,7],[[6,[1]]]],[[1,1],[[6,[1]]]],[1,1],[[]],[[1,1],8],[[],1],[[1,7],1],[[1,7]],[[1,1],4],[[1,1],5],[[1,4],1],[[1,5],1],[[1,1],9],[[],9],[[1,10],[[12,[11]]]],[[]],[3,1],[3,1],[3,1],[3,1],[4,1],[5,1],[[1,13]],[[]],[1,9],[[1,7],1],[[1,7]],[[1,4],1],[[1,5],1],[[3,7],1],[[],5],[[1,1],[[6,[8]]]],[[1,1],1],[[1,7],1],[[1,1],1],[[1,1],1],[[1,1]],[1,7],[1,7],[1,7],[14,1],[14,1],[[]],[[],12],[4,[[12,[1,15]]]],[5,[[12,[1,15]]]],[[],12],[[],16]],"c":[],"p":[[3,"Duration"],[15,"u128"],[15,"u64"],[15,"f32"],[15,"f64"],[4,"Option"],[15,"u32"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[8,"Hasher"],[8,"Iterator"],[3,"TryFromFloatSecsError"],[3,"TypeId"]]},\
"interpolation":{"doc":"Interpolation algorithms.","t":"NNNNNNNNNNNNIENNNNNNINNNNNNNNNQNNNKKKLLKKKKKKKLLFKKKKKKLKKKLLLFKFKKKKKKKKKKKKLLLL","n":["BackIn","BackInOut","BackOut","BounceIn","BounceInOut","BounceOut","CircularIn","CircularInOut","CircularOut","CubicIn","CubicInOut","CubicOut","Ease","EaseFunction","ElasticIn","ElasticInOut","ElasticOut","ExponentialIn","ExponentialInOut","ExponentialOut","Lerp","QuadraticIn","QuadraticInOut","QuadraticOut","QuarticIn","QuarticInOut","QuarticOut","QuinticIn","QuinticInOut","QuinticOut","Scalar","SineIn","SineInOut","SineOut","back_in","back_in_out","back_out","borrow","borrow_mut","bounce_in","bounce_in_out","bounce_out","calc","circular_in","circular_in_out","circular_out","clone","clone_into","cub_bez","cubic_in","cubic_in_out","cubic_out","elastic_in","elastic_in_out","elastic_out","eq","exponential_in","exponential_in_out","exponential_out","fmt","from","into","lerp","lerp","quad_bez","quadratic_in","quadratic_in_out","quadratic_out","quartic_in","quartic_in_out","quartic_out","quintic_in","quintic_in_out","quintic_out","sine_in","sine_in_out","sine_out","to_owned","try_from","try_into","type_id"],"q":[[0,"interpolation"]],"d":["","","","","","","","","","","","","","","","","","","","","Describes a type that can linearly interpolate between two …","","","","","","","","","","The scaling type for linear interpolation.","","","","","","","","","","","","Calculate the eased value, normalized","","","","","","Performs cubic beziér interpolation. This is done by …","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Performs linear interpolation. A linear interpolation …","Given <code>self</code> and another point <code>other</code>, return a point on a …","Performs quadratic beziér interpolation. This is done by …","","","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,2,1,1,1,8,8,8,1,1,8,8,8,8,8,8,8,1,1,0,8,8,8,8,8,8,1,8,8,8,1,1,1,0,2,0,8,8,8,8,8,8,8,8,8,8,8,8,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[]],[[]],[[]],[1,1],[[]],[[2,2,2,2],2],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],3],[[]],[[]],[[]],[[1,4],5],[[]],[[]],[[2,2],2],[[]],[[2,2,2],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],7]],"c":[],"p":[[4,"EaseFunction"],[8,"Lerp"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[8,"Ease"]]},\
"jpeg_decoder":{"doc":"This crate contains a JPEG decoder.","t":"NNNEENNNNNDENNNDNNNNNNNNNENNNNNNENNLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLML","n":["ArithmeticEntropyCoding","CMYK","CMYK32","CodingProcess","ColorTransform","ColorTransform","ComponentCount","DNL","DctProgressive","DctSequential","Decoder","Error","Format","Grayscale","Hierarchical","ImageInfo","Internal","Io","JcsBgRgb","JcsBgYcc","L16","L8","Lossless","NonIntegerSubsamplingRatio","None","PixelFormat","RGB","RGB24","SamplePrecision","SubsamplingRatio","Unknown","Unsupported","UnsupportedFeature","YCCK","YCbCr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","coding_process","decode","decode_scan_lossless","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","exif_data","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","hash","height","icc_profile","info","init","init","init","init","init","init","init","into","into","into","into","into","into","into","new","pixel_bytes","pixel_format","read_info","scale","set_color_transform","set_max_decoding_buffer_size","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","xmp_data"],"q":[[0,"jpeg_decoder"]],"d":["JPEG using arithmetic entropy coding instead of Huffman …","CMYK transform should be applied.","CMYK, 8 bits per channel","Represents the coding process of an image.","Describes the colour transform to apply before binary data …","Colour transform","Number of components in an image. 1, 3 and 4 components …","An image can specify a zero height in the frame header and …","Progressive Discrete Cosine Transform","Sequential Discrete Cosine Transform","JPEG decoder","Errors that can occur while decoding a JPEG image.","The image is not formatted properly. The string contains …","Grayscale transform should be applied (expects 1 channel)","Hierarchical JPEG.","Represents metadata of an image.","An internal error occurred while decoding the image.","An I/O error occurred while decoding the image.","big gamut red/green/blue, bg-sRGB","big gamut Y/Cb/Cr, bg-sYCC","Luminance (grayscale), 16 bits","Luminance (grayscale), 8 bits","Lossless","A subsampling ratio not representable as an integer.","No transform should be applied and the data is returned …","An enumeration over combinations of color spaces and bit …","RGB transform should be applied.","RGB, 8 bits per channel","Sample precision in bits. 8 bit sample precision is what …","Subsampling ratio.","Unknown colour transformation","The image makes use of a JPEG feature not (currently) …","An enumeration over JPEG features (currently) unsupported …","YCCK transform should be applied.","YCbCr transform should be applied.","","","","","","","","","","","","","","","","","","","","","","","","","The coding process of the image.","Decodes the image and returns the decoded pixels if …","decode_scan_lossless","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns raw exif data, starting at the TIFF header, if the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","The height of the image, in pixels.","Returns the embeded icc profile if the image contains one.","Returns metadata about the image.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new <code>Decoder</code> using the reader <code>reader</code>.","Determine the size in bytes of each pixel in this format","The pixel format of the image.","Tries to read metadata from the image without decoding it.","Configure the decoder to scale the image during decoding.","Colour transform to use when decoding the image. App …","Set maximum buffer size allowed for decoded images","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The width of the image, in pixels.","Returns the raw XMP packet if there is any."],"i":[4,3,1,0,0,4,4,4,5,5,0,0,10,3,4,0,10,10,3,3,1,1,5,4,3,0,3,1,4,4,3,10,0,3,3,7,1,2,3,4,10,5,7,1,2,3,4,10,5,1,2,3,4,5,1,2,3,4,5,2,7,7,7,1,2,3,4,10,5,7,1,2,3,4,10,5,7,1,2,3,4,10,5,1,2,3,4,5,3,4,7,1,2,3,4,10,10,5,7,1,2,3,4,10,10,5,3,4,2,7,7,7,1,2,3,4,10,5,7,1,2,3,4,10,5,7,1,2,7,7,7,7,10,1,2,3,4,5,10,7,1,2,3,4,10,5,7,1,2,3,4,10,5,7,1,2,3,4,10,5,2,7],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],0,[[[7,[6]]],[[11,[[9,[8]],10]]]],0,[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[1,1],13],[[2,2],13],[[3,3],13],[[4,4],13],[[5,5],13],[[],13],[[],13],[[[7,[6]]],[[15,[[14,[8]]]]]],[[1,16],17],[[2,16],17],[[3,16],17],[[4,16],17],[[10,16],17],[[10,16],17],[[5,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[18,10],[[]],[[3,19]],[[4,19]],0,[[[7,[6]]],[[15,[[9,[8]]]]]],[[[7,[6]]],[[15,[2]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[7,[6]]]],[1,12],0,[[[7,[6]]],[[11,[10]]]],[[[7,[6]],20,20],[[11,[10]]]],[[[7,[6]],3]],[[[7,[6]],12]],[10,[[15,[21]]]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[[7,[6]]],[[15,[[14,[8]]]]]]],"c":[],"p":[[4,"PixelFormat"],[3,"ImageInfo"],[4,"ColorTransform"],[4,"UnsupportedFeature"],[4,"CodingProcess"],[8,"Read"],[3,"Decoder"],[15,"u8"],[3,"Vec"],[4,"Error"],[4,"Result"],[15,"usize"],[15,"bool"],[15,"slice"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"Error"],[8,"Hasher"],[15,"u16"],[8,"Error"],[3,"String"],[3,"TypeId"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":"IFO","n":["LazyStatic","initialize","lazy_static"],"q":[[0,"lazy_static"]],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[0,[1],0],"c":[],"p":[[8,"LazyStatic"]]},\
"lebe":{"doc":"Dead simple endianness conversions. The following …","t":"ILLLLLLLLAAKIIIALLKLLKLLLKKLFFFFFFFFCCCC","n":["Endian","convert_big_endian_to_current","convert_current_to_big_endian","convert_current_to_little_endian","convert_little_endian_to_current","from_big_endian_into_current","from_current_into_big_endian","from_current_into_little_endian","from_little_endian_into_current","io","prelude","swap_bytes","ReadEndian","ReadPrimitive","WriteEndian","bytes","read_from_big_endian","read_from_big_endian","read_from_big_endian_into","read_from_little_endian","read_from_little_endian","read_from_little_endian_into","read_from_native_endian","read_from_native_endian","read_from_native_endian_into","write_as_big_endian","write_as_little_endian","write_as_native_endian","read_slice","read_value","slice_as_bytes","slice_as_bytes_mut","value_as_bytes","value_as_bytes_mut","write_slice","write_value","Endian","ReadEndian","ReadPrimitive","WriteEndian"],"q":[[0,"lebe"],[12,"lebe::io"],[28,"lebe::io::bytes"],[36,"lebe::prelude"]],"d":["Represents values that can swap their bytes to reverse …","On a big endian machine, this does nothing. On a little …","On a big endian machine, this does nothing. On a little …","On a little endian machine, this does nothing. On a big …","On a little endian machine, this does nothing. On a big …","On a big endian machine, this does nothing. On a little …","On a big endian machine, this does nothing. On a little …","On a little endian machine, this does nothing. On a big …","On a little endian machine, this does nothing. On a big …","Easily write primitives and slices of primitives to binary …","Exports some of the most common types.","Swaps all bytes in this value, inverting its endianness.","A <code>std::io::Read</code> input stream which supports reading any …","Offers a prettier versions of reading a primitive number.","A <code>std::io::Write</code> output stream which supports writing any …","Reinterpret values as byte slices and byte slices as …","Read the byte value of the inferred type","Read this value from the supplied reader. Same as …","Read into the supplied reference. Acts the same as …","Read the byte value of the inferred type","Read this value from the supplied reader. Same as …","Read into the supplied reference. Acts the same as …","Read the byte value of the inferred type","Read this value from the supplied reader. Same as …","Read into the supplied reference. Acts the same as …","Write the byte value of the specified reference, …","Write the byte value of the specified reference, …","Write the byte value of the specified reference, not …","Read a slice of bytes into the specified slice.","Read a slice of bytes into the specified reference.","View this slice of values as a slice of bytes.","View this slice of values as a mutable slice of bytes.","View this reference as a slice of bytes.","View this reference as a mutable slice of bytes.","View this slice as a mutable slice of bytes and write it.","View this reference as a mutable slice of bytes and write …","","","",""],"i":[0,8,8,8,8,8,8,8,8,0,0,8,0,0,0,0,9,10,9,9,10,9,9,10,9,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,[[]],[[]],[[]],[[]],[1,1],[1,1],[1,1],[1,1],0,0,[[]],0,0,0,0,[[],[[3,[[0,[1,2]]]]]],[[],3],[[],3],[[],[[3,[[0,[1,2]]]]]],[[],3],[[],3],[[],[[3,[[0,[1,2]]]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[4,5],3],[[4,1],3],[5,[[5,[6]]]],[5,[[5,[6]]]],[1,[[5,[6]]]],[1,[[5,[6]]]],[[7,5],3],[[7,1],3],0,0,0,0],"c":[],"p":[[8,"Sized"],[8,"Default"],[6,"Result"],[8,"Read"],[15,"slice"],[15,"u8"],[8,"Write"],[8,"Endian"],[8,"ReadEndian"],[8,"ReadPrimitive"],[8,"WriteEndian"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","t":"RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRERRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRFFFFFFMFFFFFFFFLLLLLLLLLLLLLLLLLLLLGGGGGGGGGGGGGEFFFGLLLLLLLLLFFFFGFFGFFFFFFFFFFFFFFFFFFLFEFFFFFFLLLLLLLLLLFFFFFFFFFFFFFFGGGGGGLLLLLLLLLLGFFFFFFFFFFFFFFFFFFFFFFFFFFMGFFFFFFFGFFFFFFFFFFFFFMMFFFFFGFGDFFGMMMMMMMMMMMDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGGDDEDMMMMMMMMMFFFLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLGGGGGGFFDGFFFFFFFFFFFFFFFFFFF","n":["BUFSIZ","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EAFNOSUPPORT","EAGAIN","EALREADY","EBADF","EBADMSG","EBUSY","ECANCELED","ECHILD","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EEXIST","EFAULT","EFBIG","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","ELOOP","EMFILE","EMLINK","EMSGSIZE","ENAMETOOLONG","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOBUFS","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOLCK","ENOLINK","ENOMEM","ENOMSG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENXIO","EOF","EOPNOTSUPP","EOTHER","EOVERFLOW","EOWNERDEAD","EPERM","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EROFS","ESPIPE","ESRCH","ETIME","ETIMEDOUT","ETXTBSY","EWOULDBLOCK","EXDEV","EXIT_FAILURE","EXIT_SUCCESS","FILE","FILENAME_MAX","FOPEN_MAX","INT_MAX","INT_MIN","LC_ALL","LC_COLLATE","LC_CTYPE","LC_MONETARY","LC_NUMERIC","LC_TIME","L_tmpnam","NSIG","O_APPEND","O_BINARY","O_CREAT","O_EXCL","O_NOINHERIT","O_RANDOM","O_RAW","O_RDONLY","O_RDWR","O_SEQUENTIAL","O_TEMPORARY","O_TEXT","O_TRUNC","O_WRONLY","RAND_MAX","SEEK_CUR","SEEK_END","SEEK_SET","SIGABRT","SIGFPE","SIGILL","SIGINT","SIGSEGV","SIGTERM","SIG_ACK","SIG_DFL","SIG_ERR","SIG_GET","SIG_IGN","SIG_SGE","SOCKET","STRUNCATE","S_IEXEC","S_IFCHR","S_IFDIR","S_IFMT","S_IFREG","S_IREAD","S_IWRITE","TMP_MAX","_IOFBF","_IOLBF","_IONBF","_O_OBTAIN_DIR","_O_SHORT_LIVED","_O_U16TEXT","_O_U8TEXT","_O_WTEXT","_exit","_msize","abort","abs","accept","access","actime","aligned_free","aligned_malloc","atexit","atof","atoi","atol","atoll","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_char","c_double","c_float","c_int","c_long","c_longlong","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calloc","chdir","chmod","clock_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","close","commit","connect","creat","dev_t","dup","dup2","errno_t","execl","execle","execlp","execlpe","execv","execve","execvp","execvpe","exit","fclose","fdopen","feof","ferror","fflush","fgetc","fgetpos","fgets","fileno","fmt","fopen","fpos_t","fprintf","fputc","fputs","fread","free","freopen","from","from","from","from","from","from","from","from","from","from","fseek","fsetpos","fstat","ftell","fwrite","get_osfhandle","getchar","getcwd","getenv","getpeername","getpid","getsockname","getsockopt","gmtime_s","ino_t","int16_t","int32_t","int64_t","int8_t","intmax_t","into","into","into","into","into","into","into","into","into","into","intptr_t","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","labs","listen","localtime_s","lseek","lseek64","malloc","memccpy","memchr","memcmp","memcpy","memmove","memset","mkdir","modtime","off_t","open","open_osfhandle","pclose","perror","pipe","popen","printf","ptrdiff_t","putchar","putenv","putenv_s","puts","raise","rand","read","realloc","recvfrom","remove","rename","rewind","rmdir","sa_data","sa_family","sendto","setbuf","setlocale","setsockopt","setvbuf","sighandler_t","signal","size_t","sockaddr","socket","srand","ssize_t","st_atime","st_ctime","st_dev","st_gid","st_ino","st_mode","st_mtime","st_nlink","st_rdev","st_size","st_uid","stat","stat","strcat","strchr","strcmp","strcoll","strcpy","strcspn","strdup","strerror","stricmp","strlen","strncat","strncmp","strncpy","strnicmp","strnlen","strpbrk","strrchr","strspn","strstr","strtod","strtof","strtok","strtol","strtoll","strtoul","strtoull","strxfrm","system","time","time64_t","time_t","timespec","timeval","timezone","tm","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tmpfile","tolower","toupper","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_sec","tv_sec","tv_usec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","ungetc","unlink","utimbuf","wchar_t","wchmod","wcslen","wcstombs","wexecl","wexecle","wexeclp","wexeclpe","wexecv","wexecve","wexecvp","wexecvpe","wopen","wputenv","wputenv_s","write","wrmdir","wsetlocale","wstat","wutime"],"q":[[0,"libc"]],"dquivalent to C’s <code>void</code> type when used as a pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,0,0,0,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,8,7,8,7,1,2,3,4,5,6,7,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[10,11],[[13,[12]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[267,268,269,270,440,441,442,443],"p":[[4,"timezone"],[4,"FILE"],[4,"fpos_t"],[3,"stat"],[3,"utimbuf"],[3,"tm"],[3,"timeval"],[3,"timespec"],[3,"sockaddr"],[4,"c_void"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"TypeId"]]},\
"libloading":{"doc":"Bindings around the platform’s dynamic library loading …","t":"NNNNNNNNENNNNNNNDNNDLLLLLLALLLLLLLLLLLLLLLLLLFLLALLLLLLLLLLLLMMMMMMMMMAAAAAAAAAAAAAAAAAAAAAAAAAARRRRRRRRRRRRDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CreateCString","CreateCStringWithTrailing","DlClose","DlCloseUnknown","DlOpen","DlOpenUnknown","DlSym","DlSymUnknown","Error","FreeLibrary","FreeLibraryUnknown","GetModuleHandleExW","GetModuleHandleExWUnknown","GetProcAddress","GetProcAddressUnknown","IncompatibleSize","Library","LoadLibraryExW","LoadLibraryExWUnknown","Symbol","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","changelog","clone","clone_into","close","deref","fmt","fmt","fmt","fmt","from","from","from","from","from_raw","get","into","into","into","into_raw","library_filename","lift_option","new","os","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","desc","desc","desc","source","source","source","source","source","source","r0_3_0","r0_3_1","r0_3_2","r0_3_3","r0_3_4","r0_4_0","r0_4_1","r0_4_2","r0_4_3","r0_5_0","r0_5_1","r0_5_2","r0_6_0","r0_6_1","r0_6_2","r0_6_3","r0_6_4","r0_6_5","r0_6_6","r0_6_7","r0_7_0","r0_7_1","r0_7_2","r0_7_3","r0_7_4","windows","LOAD_IGNORE_CODE_AUTHZ_LEVEL","LOAD_LIBRARY_AS_DATAFILE","LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE","LOAD_LIBRARY_AS_IMAGE_RESOURCE","LOAD_LIBRARY_REQUIRE_SIGNED_TARGET","LOAD_LIBRARY_SAFE_CURRENT_DIRS","LOAD_LIBRARY_SEARCH_APPLICATION_DIR","LOAD_LIBRARY_SEARCH_DEFAULT_DIRS","LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR","LOAD_LIBRARY_SEARCH_SYSTEM32","LOAD_LIBRARY_SEARCH_USER_DIRS","LOAD_WITH_ALTERED_SEARCH_PATH","Library","Symbol","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","close","deref","drop","fmt","fmt","from","from","from","from_raw","get","get_ordinal","into","into","into_raw","into_raw","lift_option","load_with_flags","new","open_already_loaded","this","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"libloading"],[61,"libloading::Error"],[70,"libloading::changelog"],[95,"libloading::os"],[96,"libloading::os::windows"]],"d":["Could not create a new CString.","Could not create a new CString from bytes with trailing …","The <code>dlclose</code> call failed.","The <code>dlclose</code> call failed and system did not report an error.","The <code>dlopen</code> call failed.","The <code>dlopen</code> call failed and system did not report an error.","The <code>dlsym</code> call failed.","The <code>dlsym</code> call failed and system did not report an error.","Errors.","The <code>FreeLibrary</code> call failed.","The <code>FreeLibrary</code> call failed and system did not report an …","The <code>GetModuleHandleExW</code> call failed.","The <code>GetModuleHandleExW</code> call failed and system did not …","The <code>GetProcAddress</code> call failed.","The <code>GetProcAddressUnknown</code> call failed and system did not …","The requested type cannot possibly work.","A loaded dynamic library.","The <code>LoadLibraryW</code> call failed.","The <code>LoadLibraryW</code> call failed and system did not report an …","Symbol from a library.","","","","","","","The change log.","","","Unload the library.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Wrap the <code>os::platform::Symbol</code> into this safe wrapper.","Get a pointer to a function or static variable by symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract the wrapped <code>os::platform::Symbol</code>.","Converts a library name to a filename generally …","Lift Option out of the symbol.","Find and load a dynamic library.","Unsafe but flexible platform-specific bindings to dynamic …","","","","","","","","","","","","","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","Release 0.3.0 (2016-07-27)","Release 0.3.1 (2016-10-01)","Release 0.3.2 (2017-02-10)","Release 0.3.3 (2017-03-25)","Release 0.3.4 (2017-03-25)","Release 0.4.0 (2017-05-01)","Release 0.4.1 (2017-08-29)","Release 0.4.2 (2017-09-24)","Release 0.4.3 (2017-12-07)","Release 0.5.0 (2018-01-11)","Release 0.5.1 (2019-06-01)","Release 0.5.2 (2019-07-07)","Release 0.6.0 (2020-04-05)","Release 0.6.1 (2020-04-15)","Release 0.6.2 (2020-05-06)","Release 0.6.3 (2020-08-22)","Release 0.6.4 (2020-10-10)","Release 0.6.5 (2020-10-23)","Release 0.6.6 (2020-12-03)","Release 0.6.7 (2021-01-14)","Release 0.7.0 (2021-02-06)","Release 0.7.1 (2021-10-09)","Release 0.7.2 (2021-11-14)","Release 0.7.3 (2022-01-15)","Release 0.7.4 (2022-11-07)","Windows implementation of dynamic library loading.","Do not check AppLocker rules or apply Software Restriction …","Map the file into the calling process’ virtual address …","Map the file into the calling process’ virtual address …","Map the file into the process’ virtual address space as …","Specifies that the digital signature of the binary image …","Allow loading a DLL for execution from the current …","Search the application’s installation directory for the …","Search default directories when looking for the DLL and …","Directory that contains the DLL is temporarily added to …","Search <code>%windows%\\\\system32</code> for the DLL and its dependencies.","Directories added using the <code>AddDllDirectory</code> or the …","If <code>filename</code> specifies an absolute path, the system uses …","The platform-specific counterpart of the cross-platform …","A symbol from a library.","","","","","","","Unload the library.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Convert a raw handle to a <code>Library</code>.","Get a pointer to a function or static variable by symbol …","Get a pointer to a function or static variable by ordinal …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the <code>Library</code> to a raw handle.","Convert the loaded <code>Symbol</code> into a handle.","Lift Option out of the symbol.","Find and load a module, additionally adjusting behaviour …","Find and load a module.","Get a module that is already loaded by the program.","Get the <code>Library</code> representing the original program …","","","","","","",""],"i":[3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,0,3,3,0,2,1,3,2,1,3,0,1,1,2,1,2,1,3,3,2,2,1,3,1,2,2,1,3,1,0,1,2,0,3,1,3,2,1,3,2,1,3,2,1,3,22,23,24,25,26,27,28,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,7,8,8,8,7,8,7,7,8,7,7,8,7,7,7,7,8,7,8,8,7,7,7,7,8,7,8,7,8,7,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[[]],[2,[[4,[3]]]],[1],[[2,5],6],[[1,5],6],[[3,5],6],[[3,5],6],[7,2],[[]],[[]],[[]],[8,1],[[2,[10,[9]]],[[4,[1,3]]]],[[]],[[]],[[]],[1,8],[[[12,[11]]],13],[[[1,[14]]],[[14,[1]]]],[[[12,[11]]],[[4,[2,3]]]],0,[3,[[14,[15]]]],[[]],[[],16],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],17],[[],17],[[],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[8,8],[[]],[7,[[4,[3]]]],[8],[7],[[7,5],6],[[8,5],6],[[]],[2,7],[[]],[18,7],[[7,[10,[9]]],[[4,[8,3]]]],[[7,19],[[4,[8,3]]]],[[]],[[]],[7,18],[8,20],[[[8,[14]]],[[14,[8]]]],[[[12,[11]],21],[[4,[7,3]]]],[[[12,[11]]],[[4,[7,3]]]],[[[12,[11]]],[[4,[7,3]]]],[[],[[4,[7,3]]]],[[]],[[],4],[[],4],[[],4],[[],4],[[],17],[[],17]],"c":[],"p":[[3,"Symbol"],[3,"Library"],[4,"Error"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"Library"],[3,"Symbol"],[15,"u8"],[15,"slice"],[3,"OsStr"],[8,"AsRef"],[3,"OsString"],[4,"Option"],[8,"Error"],[3,"String"],[3,"TypeId"],[6,"HMODULE"],[6,"WORD"],[6,"FARPROC"],[6,"DWORD"],[13,"DlOpen"],[13,"DlSym"],[13,"DlClose"],[13,"LoadLibraryExW"],[13,"GetModuleHandleExW"],[13,"GetProcAddress"],[13,"FreeLibrary"],[13,"CreateCString"],[13,"CreateCStringWithTrailing"]]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":"QQIQQDDSSSSQQDDDDDDIIIDIIIIIIIIIIDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKKKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKKKLLLKKKKKKKLLLKKKLLLLLLLLLLLLLLLLLKLKLKLLLLLLLLLLLLLLLLLLLLLLKLKKKLLLLLLLLLLKKKKLLLLLLLLLLLKLLL","n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","leak","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","make_guard_unchecked","make_guard_unchecked","make_read_guard_unchecked","make_upgradable_guard_unchecked","make_write_guard_unchecked","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_with_upgraded","try_with_upgraded_for","try_with_upgraded_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","with_upgraded","write"],"q":[[0,"lock_api"]],"d":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Leaks the mutex guard and returns a mutable reference to …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Creates a new <code>MutexGuard</code> without checking if the mutex is …","Creates a new <code>ReentrantMutexGuard</code> without checking if the …","Creates a new <code>RwLockReadGuard</code> without checking if the lock …","Creates a new <code>RwLockUpgradableReadGuard</code> without checking …","Creates a new <code>RwLockReadGuard</code> without checking if the lock …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","First, tries to atomically upgrade an upgradable read lock …","Tries to atomically upgrade an upgradable read lock into …","Tries to atomically upgrade an upgradable read lock into …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into an …","First, atomically upgrades an upgradable read lock lock …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[36,37,0,15,16,0,0,15,2,3,16,36,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,1,1,3,5,6,8,9,11,7,7,7,7,10,10,12,13,14,12,13,14,12,13,14,5,18,6,19,8,9,11,21,22,5,18,9,22,23,9,11,24,9,24,5,18,6,19,8,9,11,21,22,12,13,14,5,5,18,18,6,6,19,19,8,8,9,9,11,11,21,21,22,22,12,13,12,13,14,14,14,14,41,42,12,12,12,3,13,13,13,14,14,14,5,18,6,19,8,9,11,21,22,12,13,14,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,12,13,14,15,15,12,3,13,16,16,14,16,16,14,3,13,5,15,12,3,13,16,16,33,20,12,13,14,14,14,5,18,6,19,8,9,21,22,5,12,13,14,2,12,13,14,14,14,6,8,9,11,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,15,12,3,13,16,37,37,36,12,3,13,16,37,33,38,38,37,36,12,3,13,20,39,39,5,18,6,19,8,9,21,22,14,14,14,14,14,14,14,14,14,20,11,39,11,39,11,11,11,11,14,14,14,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,15,3,16,7,1,3,5,18,6,19,8,9,11,21,22,16,7,20,10,5,6,8,9,11,5,6,8,9,11,14,20,11,11,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[5,[1,4]]]],[[[6,[1,2,4]]]],[[[8,[7,4]]]],[[[9,[7,4]]]],[[[11,[10,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],13],[[],14],[[[12,[15,4]]]],[[[13,[15,2,4]]]],[[[14,[16,4]]]],[[],[[12,[15,[0,[4,17]]]]]],[[],[[13,[15,2,[0,[4,17]]]]]],[[],[[14,[16,[0,[4,17]]]]]],[[[5,[15,4]]],4],[[[18,[15,4]]],4],[[[6,[15,2,4]]],4],[[[19,[15,2,4]]],4],[[[8,[16,4]]],4],[[[9,[16,4]]],4],[[[11,[20,4]]],4],[[[21,[16,4]]],4],[[[22,[16,4]]],4],[[[5,[15,4]]],4],[[[18,[15,4]]],4],[[[9,[16,4]]],4],[[[22,[16,4]]],4],[[]],[[[9,[23,4]]],[[8,[23,4]]]],[[[11,[24,4]]],[[8,[24,4]]]],[[]],[[[9,[24,4]]],[[11,[24,4]]]],[[]],[[[5,[15,4]]]],[[[18,[15,4]]]],[[[6,[15,2,4]]]],[[[19,[15,2,4]]]],[[[8,[16,4]]]],[[[9,[16,4]]]],[[[11,[20,4]]]],[[[21,[16,4]]]],[[[22,[16,4]]]],[[[12,[15,[0,[4,25]]]],26],27],[[[13,[15,2,[0,[4,25]]]],26],27],[[[14,[16,[0,[4,25]]]],26],27],[[[5,[15,[0,[25,4]]]],26],27],[[[5,[15,[0,[28,4]]]],26],27],[[[18,[15,[0,[25,4]]]],26],27],[[[18,[15,[0,[28,4]]]],26],27],[[[6,[15,2,[0,[25,4]]]],26],27],[[[6,[15,2,[0,[28,4]]]],26],27],[[[19,[15,2,[0,[25,4]]]],26],27],[[[19,[15,2,[0,[28,4]]]],26],27],[[[8,[16,[0,[28,4]]]],26],27],[[[8,[16,[0,[25,4]]]],26],27],[[[9,[16,[0,[28,4]]]],26],27],[[[9,[16,[0,[25,4]]]],26],27],[[[11,[20,[0,[28,4]]]],26],27],[[[11,[20,[0,[25,4]]]],26],27],[[[21,[16,[0,[28,4]]]],26],27],[[[21,[16,[0,[25,4]]]],26],27],[[[22,[16,[0,[28,4]]]],26],27],[[[22,[16,[0,[25,4]]]],26],27],[[[12,[15,4]]]],[[[13,[15,2,4]]]],[[[12,[1,4]]]],[[[13,[1,2,4]]]],[[[14,[16,4]]]],[[[14,[7,4]]]],[[[14,[16,4]]]],[[[14,[7,4]]]],[[]],[[]],[29],[[]],[[],[[12,[15]]]],[[]],[[],[[13,[15,2]]]],[29],[[]],[[]],[29],[[],[[14,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15,4]]],4],[[[13,[15,2,4]]],4],[[[14,[16,4]]],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15]]]],[[[13,[15,2]]]],[[[14,[16]]]],[[],30],[[],30],[[[12,[15,4]]],30],[[[3,[15,2]]],30],[[[13,[15,2,4]]],30],[[],30],[[],30],[[[14,[16,4]]],30],[[],30],[[],30],[[[14,[16,4]]],30],[[[3,[15,2]]],30],[[[13,[15,2,4]]],30],[[[5,[15,4]]],4],[[]],[[[12,[15,4]]],[[5,[15,4]]]],[[[3,[15,2]]]],[[[13,[15,2,4]]],[[6,[15,2,4]]]],[[]],[[]],[[]],[[]],[[[12,[15,4]]],[[5,[15,4]]]],[[[13,[15,2,4]]],[[6,[15,2,4]]]],[[[14,[16,4]]],[[8,[16,4]]]],[[[14,[20,4]]],[[11,[20,4]]]],[[[14,[16,4]]],[[9,[16,4]]]],[[[5,[15,4]],31],[[18,[15,4]]]],[[[18,[15,4]],31],[[18,[15,4]]]],[[[6,[15,2,4]],31],[[19,[15,2,4]]]],[[[19,[15,2,4]],31],[[19,[15,2,4]]]],[[[8,[16,4]],31],[[21,[16,4]]]],[[[9,[16,4]],31],[[22,[16,4]]]],[[[21,[16,4]],31],[[21,[16,4]]]],[[[22,[16,4]],31],[[22,[16,4]]]],[[[5,[15,4]]],[[12,[15,4]]]],[[],[[12,[15]]]],[[],[[13,[15,2]]]],[[],[[14,[16]]]],[[],32],[[[12,[15,4]]],15],[[[13,[15,2,4]]],15],[[[14,[16,4]]],16],[[[14,[16,4]]],[[8,[16,4]]]],[[[14,[33,4]]],[[8,[33,4]]]],[[[6,[15,2,4]]],[[13,[15,2,4]]]],[[[8,[16,4]]],[[14,[16,4]]]],[[[9,[16,4]]],[[14,[16,4]]]],[[[11,[20,4]]],[[14,[20,4]]]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],30],[[[12,[15,4]]],[[35,[[5,[15,4]]]]]],[[[3,[15,2]]],30],[[[13,[15,2,4]]],[[35,[[6,[15,2,4]]]]]],[[],30],[[],30],[[],30],[[],30],[[[12,[36,4]]],[[35,[[5,[36,4]]]]]],[[[3,[36,2]]],30],[[[13,[36,2,4]]],[[35,[[6,[36,2,4]]]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[[12,[36,4]]],[[35,[[5,[36,4]]]]]],[[[3,[36,2]]],30],[[[13,[36,2,4]]],[[35,[[6,[36,2,4]]]]]],[[],30],[[],30],[[],30],[[[5,[15,4]],31],[[34,[[18,[15,4]],[5,[15,4]]]]]],[[[18,[15,4]],31],[[34,[[18,[15,4]],[18,[15,4]]]]]],[[[6,[15,2,4]],31],[[34,[[19,[15,2,4]],[6,[15,2,4]]]]]],[[[19,[15,2,4]],31],[[34,[[19,[15,2,4]],[19,[15,2,4]]]]]],[[[8,[16,4]],31],[[34,[[21,[16,4]],[8,[16,4]]]]]],[[[9,[16,4]],31],[[34,[[22,[16,4]],[9,[16,4]]]]]],[[[21,[16,4]],31],[[34,[[21,[16,4]],[21,[16,4]]]]]],[[[22,[16,4]],31],[[34,[[22,[16,4]],[22,[16,4]]]]]],[[[14,[16,4]]],[[35,[[8,[16,4]]]]]],[[[14,[37,4]]],[[35,[[8,[37,4]]]]]],[[[14,[33,4]]],[[35,[[8,[33,4]]]]]],[[[14,[38,4]]],[[35,[[8,[38,4]]]]]],[[[14,[38,4]]],[[35,[[8,[38,4]]]]]],[[[14,[37,4]]],[[35,[[8,[37,4]]]]]],[[[14,[20,4]]],[[35,[[11,[20,4]]]]]],[[[14,[39,4]]],[[35,[[11,[39,4]]]]]],[[[14,[39,4]]],[[35,[[11,[39,4]]]]]],[[],30],[[[11,[20,4]]],[[34,[[9,[20,4]],[11,[20,4]]]]]],[[],30],[[[11,[39,4]]],[[34,[[9,[39,4]],[11,[39,4]]]]]],[[],30],[[[11,[39,4]]],[[34,[[9,[39,4]],[11,[39,4]]]]]],[[[11,[24,4]],31],35],[[[11,[[0,[39,24]],4]],31],35],[[[11,[[0,[39,24]],4]],31],35],[[[14,[16,4]]],[[35,[[9,[16,4]]]]]],[[[14,[37,4]]],[[35,[[9,[37,4]]]]]],[[[14,[37,4]]],[[35,[[9,[37,4]]]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[[3,[15,2]]]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[5,[1,4]]]],[[[18,[1,4]]]],[[[6,[1,2,4]]]],[[[19,[1,2,4]]]],[[[8,[7,4]]]],[[[9,[7,4]]]],[[[11,[10,4]]]],[[[21,[7,4]]]],[[[22,[7,4]]]],[[]],[[]],[[]],[[]],[[[5,[15,4]],31]],[[[6,[15,2,4]],31]],[[[8,[16,4]],31]],[[[9,[16,4]],31]],[[[11,[20,4]],31]],[[[5,[1,4]],31]],[[[6,[1,2,4]],31]],[[[8,[7,4]],31]],[[[9,[7,4]],31]],[[[11,[10,4]],31]],[[[14,[20,4]]],[[11,[20,4]]]],[[]],[[[11,[20,4]]],[[9,[20,4]]]],[[[11,[24,4]],31]],[[[14,[16,4]]],[[9,[16,4]]]]],"c":[],"p":[[8,"RawMutexFair"],[8,"GetThreadId"],[3,"RawReentrantMutex"],[8,"Sized"],[3,"MutexGuard"],[3,"ReentrantMutexGuard"],[8,"RawRwLockFair"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[8,"RawRwLockUpgradeFair"],[3,"RwLockUpgradableReadGuard"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"RwLock"],[8,"RawMutex"],[8,"RawRwLock"],[8,"Default"],[3,"MappedMutexGuard"],[3,"MappedReentrantMutexGuard"],[8,"RawRwLockUpgrade"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawRwLockDowngrade"],[8,"RawRwLockUpgradeDowngrade"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Display"],[15,"never"],[15,"bool"],[8,"FnOnce"],[3,"NonZeroUsize"],[8,"RawRwLockRecursive"],[4,"Result"],[4,"Option"],[8,"RawMutexTimed"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgradeTimed"],[3,"TypeId"],[3,"GuardSend"],[3,"GuardNoSend"]]},\
"log":{"doc":"A lightweight logging facade.","t":"NNNNNNEEIDDNDDDRDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLKLLLLLLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLKOOFLLFLLLLLLLLLLLLLLFFFFLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLO","n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","level","level","level","level","line","line","log","log","log_enabled","logger","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","set_max_level_racy","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":[[0,"log"]],"d":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","","","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The source file containing the message, if it is a <code>&#39;static</code> …","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","A thread-unsafe version of <code>set_max_level</code>.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,3,7,1,8,4,6,1,8,4,6,8,7,0,3,7,20,4,4,6,6,8,7,11,0,1,3,1,3,20,4,4,6,6,1,3,8,7,15,15,11,11,4,6,1,3,8,7,15,11,4,6,4,6,8,7,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,1,3,20,0,0,0,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,2],3],[4,5],[6,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,1],[7,8],[[],3],[[],7],[4,4],[6,6],[1,1],[8,8],[[4,4],9],[[6,6],9],[[8,8],9],[[7,7],9],0,[[],3],[[],7],[8,10],[[4,6],10],[[4,4],10],[[6,6],10],[[6,4],10],[[8,8],10],[[7,7],10],[[11,11],10],0,[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[]],[[4,13],14],[[4,13],14],[[6,13],14],[[6,13],14],[[1,13],14],[[3,13],14],[[8,13],14],[[7,13],14],[[15,13],14],[[15,13],14],[[11,13],14],[[11,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[16,[4]]]],[5,[[16,[6]]]],[[4,17]],[[6,17]],[[8,17]],[[7,17]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[1,4],[[3,4],3],[8,4],[[7,4],7],[1,[[12,[19]]]],[[3,[12,[19]]],3],[1],0,0,[[],20],[[],4],[[],6],[[],6],[1,8],[[3,8],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[],3],[[],7],[[4,4],[[12,[9]]]],[[4,6],[[12,[9]]]],[[6,4],[[12,[9]]]],[[6,6],[[12,[9]]]],[[8,8],[[12,[9]]]],[[7,7],[[12,[9]]]],[20,[[16,[15]]]],[20,[[16,[15]]]],[6],[6],[1,5],[[3,5],3],[8,5],[[7,5],7],[6,[[12,[4]]]],[4,6],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0],"c":[],"p":[[3,"Record"],[3,"Arguments"],[3,"RecordBuilder"],[4,"Level"],[15,"str"],[4,"LevelFilter"],[3,"MetadataBuilder"],[3,"Metadata"],[4,"Ordering"],[15,"bool"],[3,"ParseLevelError"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"SetLoggerError"],[4,"Result"],[8,"Hasher"],[8,"Iterator"],[15,"u32"],[8,"Log"],[3,"TypeId"]]},\
"lzw":{"doc":"LZW decoder and encoder","t":"IIEDDDDDDDNNLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLL","n":["BitReader","BitWriter","Bits","Decoder","DecoderEarlyChange","Encoder","LsbReader","LsbWriter","MsbReader","MsbWriter","None","Some","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decode_bytes","decode_bytes","drop","encode","encode_bytes","flush","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new","read_bits","read_bits","read_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write_bits","write_bits","write_bits"],"q":[[0,"lzw"]],"d":["A bit reader.","A bit writer.","Containes either the consumed bytes and reconstructed bits …","Decoder for a LZW compressed stream (this algorithm is …","Decoder for a LZW compressed stream using an “early …","LZW encoder using the algorithm of GIF files.","Reads bits from a byte stream, LSB first.","Writes bits to a byte stream, LSB first.","Reads bits from a byte stream, MSB first.","Writes bits to a byte stream, MSB first.","Consumed bytes","Consumed bytes, reconstructed bits","","","","","","","","","","","","","","","","","Tries to obtain and decode a code word from <code>bytes</code>.","Tries to obtain and decode a code word from <code>bytes</code>.","","Convenience function that reads and compresses all bytes …","Compresses <code>bytes</code> and writes the result into the writer.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new LZW encoder.","Creates a new LZW decoder. ","Creates a new LZW decoder. ","Creates a new bit reader","Creates a new bit reader","Creates a new bit reader","Creates a new bit reader","Returns the next <code>n</code> bits.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes the next <code>n</code> bits.","",""],"i":[0,0,0,0,0,0,0,0,0,0,18,18,8,18,2,6,16,17,11,12,8,18,2,6,16,17,11,12,2,6,8,0,8,11,12,2,6,16,17,8,18,2,6,16,17,11,12,8,18,2,6,16,17,11,12,8,2,6,16,17,11,12,1,16,17,8,18,2,6,16,17,11,12,8,18,2,6,16,17,11,12,8,18,2,6,16,17,11,12,11,12,7,11,12],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],[4,[3]]],5],[[[6,[1]],[4,[3]]],5],[[[8,[7]]]],[[9,7,3],5],[[[8,[7]],[4,[3]]],5],[[[11,[10]]],5],[[[12,[10]]],5],[[[2,[[0,[13,1]]]],14],15],[[[6,[[0,[13,1]]]],14],15],[[16,14],15],[[17,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,3],[[5,[[8,[7]]]]]],[[1,3],[[2,[1]]]],[[1,3],[[6,[1]]]],[[],16],[[],17],[10,[[11,[10]]]],[10,[[12,[10]]]],[[[4,[3]],3],18],[[16,[4,[3]],3],18],[[17,[4,[3]],3],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[[11,[10]],[4,[3]]],[[5,[21]]]],[[[12,[10]],[4,[3]]],[[5,[21]]]],[[22,3],5],[[[11,[10]],22,3],5],[[[12,[10]],22,3],5]],"c":[],"p":[[8,"BitReader"],[3,"Decoder"],[15,"u8"],[15,"slice"],[6,"Result"],[3,"DecoderEarlyChange"],[8,"BitWriter"],[3,"Encoder"],[8,"Read"],[8,"Write"],[3,"LsbWriter"],[3,"MsbWriter"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"LsbReader"],[3,"MsbReader"],[4,"Bits"],[4,"Result"],[3,"TypeId"],[15,"usize"],[15,"u16"]]},\
"miniz_oxide":{"doc":"A pure rust replacement for the miniz DEFLATE/zlib …","t":"NNNENNNEEGECCNNNNNNNNNDNNNNLLLLLLLLLLMMLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLCLMLLLLLLLLLLLLLLLLLLLLLNNENNNNLLLLFFALLLLLLALLLLNDEDNNNNNNNNNNNNEELLLLLLLLLLLLLLLLLFFFLLALLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRFNNDNNNNNELLLLLLAFFFFFLLLLLLLLLLLMMALLLLLLLLDRLLLLFLLALLLLLLRRRRRDDDIDLLLLLLLLLLLLLLFLLLLLLLLKLLLLLLLLLLLLLLLLL","n":["Block","Buf","Data","DataFormat","ErrNo","Finish","Full","MZError","MZFlush","MZResult","MZStatus","MZ_ADLER32_INIT","MZ_DEFAULT_WINDOW_BITS","Mem","NeedDict","None","Ok","Param","Partial","Raw","Stream","StreamEnd","StreamResult","Sync","Version","ZLibIgnoreChecksum","Zlib","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_consumed","bytes_written","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deflate","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_window_bits","hash","hash","hash","hash","hash","inflate","into","into","into","into","into","mz_adler32_oxide","new","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_window_bits","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","BestCompression","BestSpeed","CompressionLevel","DefaultCompression","DefaultLevel","NoCompression","UberCompression","borrow","borrow_mut","clone","clone_into","compress_to_vec","compress_to_vec_zlib","core","eq","equivalent","fmt","from","hash","into","stream","to_owned","try_from","try_into","type_id","BadParam","CallbackFunc","CompressionStrategy","CompressorOxide","Default","Done","Filtered","Finish","Fixed","Full","HuffmanOnly","None","Okay","PutBufFailed","RLE","Sync","TDEFLFlush","TDEFLStatus","adler32","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compress","compress_to_output","create_comp_flags_from_zip_params","data_format","default","deflate_flags","eq","eq","eq","equivalent","equivalent","equivalent","flags","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","into","into","into","into","into","new","new","prev_return_status","put_buf_func","reset","set_compression_level","set_compression_level_raw","set_format_and_level","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","TDEFL_COMPUTE_ADLER32","TDEFL_FILTER_MATCHES","TDEFL_FORCE_ALL_RAW_BLOCKS","TDEFL_FORCE_ALL_STATIC_BLOCKS","TDEFL_GREEDY_PARSING_FLAG","TDEFL_NONDETERMINISTIC_PARSING_FLAG","TDEFL_RLE_MATCHES","TDEFL_WRITE_ZLIB_HEADER","deflate","Adler32Mismatch","BadParam","DecompressError","Done","Failed","FailedCannotMakeProgress","HasMoreOutput","NeedsMoreInput","TINFLStatus","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","core","decompress_slice_iter_to_slice","decompress_to_vec","decompress_to_vec_with_limit","decompress_to_vec_zlib","decompress_to_vec_zlib_with_limit","eq","equivalent","fmt","fmt","fmt","from","from","from_i32","hash","into","into","output","status","stream","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","DecompressorOxide","TINFL_LZ_DICT_SIZE","adler32","adler32_header","borrow","borrow_mut","decompress","default","from","inflate_flags","init","into","new","try_from","try_into","type_id","TINFL_FLAG_COMPUTE_ADLER32","TINFL_FLAG_HAS_MORE_INPUT","TINFL_FLAG_IGNORE_ADLER32","TINFL_FLAG_PARSE_ZLIB_HEADER","TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","FullReset","InflateState","MinReset","ResetPolicy","ZeroReset","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decompressor","default","from","from","from","from","inflate","into","into","into","into","last_status","new","new_boxed","new_boxed_with_window_bits","reset","reset","reset","reset","reset","reset_as","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"miniz_oxide"],[109,"miniz_oxide::deflate"],[134,"miniz_oxide::deflate::core"],[225,"miniz_oxide::deflate::core::deflate_flags"],[233,"miniz_oxide::deflate::stream"],[234,"miniz_oxide::inflate"],[277,"miniz_oxide::inflate::core"],[293,"miniz_oxide::inflate::core::inflate_flags"],[298,"miniz_oxide::inflate::stream"]],"d":["Not implemented.","Buffer-related error.","Error in inflation; see <code>inflate::stream::inflate()</code> for …","How compressed data is wrapped.","Unused","Attempt to flush the remaining data and end the stream.","Same as <code>Sync</code>, but resets the compression dictionary so …","A list of miniz failed status codes.","A list of flush types.","<code>Result</code> alias for all miniz status codes both successful …","A list of miniz successful status codes.","","","Unused","Unused","Don’t force any flushing. Used when more input data is …","Operation succeeded.","Bad parameters.","Zlib partial flush. Currently treated as <code>Sync</code>.","Raw DEFLATE.","General stream error.","Operation succeeded and end of deflate stream was found.","A structure containing the result of a call to the inflate …","Finish compressing the currently buffered data, and output …","Unused","Zlib wrapped but ignore and don’t compute the adler32 …","Wrapped using the zlib format.","","","","","","","","","","","The number of bytes consumed from the input slice.","The number of bytes written to the output slice.","","","","","","","","","","","This module contains functionality for compression.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","This module contains functionality for decompression.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create an MZFlush value from an integer value.","The return status of the call.","","","","","","","","","","","","","","","","","","","","","","Slow/high compression. Do a lot of checks to try to find …","Fast compression. Uses a special compression routine that …","How much processing the compressor should do to compress …","Use the default compression level.","Default compromise between speed and compression.","Don’t do any compression, only output uncompressed …","Even more checks, can be very slow.","","","","","Compress the input data to a vector, using the specified …","Compress the input data to a vector, using the specified …","Streaming compression functionality.","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Extra streaming compression functionality.","","","","","Usage error.","Callback function and user used in <code>compress_to_output</code>.","Strategy setting for compression.","Main compression struct.","Don’t use any of the special strategies.","Compression succeeded and the deflate stream was ended.","Only use matches that are at least 5 bytes long.","Try to flush everything and end the deflate stream.","Only use static/fixed blocks. (Blocks using the default …","Same as <code>Sync</code>, but reset the dictionary so that the …","Don’t look for matches, only huffman encode the literals.","Normal operation.","Compression succeeded normally.","Error putting data into output buffer.","Only look for matches with a distance of 1, i.e do …","Try to flush all the current data and output an empty raw …","A list of deflate flush types.","Return status of compression.","Get the adler32 checksum of the currently encoded data.","","","","","","","","","","","","","","","","","Main compression function. Tries to compress as much as …","Main compression function. Callbacks output.","Create a set of compression flags using parameters used by …","Returns whether the compressor is wrapping the data in a …","Initialize the compressor with a level of 4, zlib wrapper …","","","","","","","","Get the raw compressor flags.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>CompressorOxide</code> with the given flags.","","Get the return status of the previous <code>compress</code> call with …","","Reset the state of the compressor, keeping the same …","Set the compression level of the compressor.","Set the compression level of the compressor using an …","Update the compression settings of the compressor.","","","","","","","","","","","","","","","","","","","Should we compute the adler32 checksum.","Only use matches that are at least 6 bytes long.","Force the compressor to only output raw/uncompressed …","Force the compressor to only output static blocks. (Blocks …","Should we use greedy parsing (as opposed to lazy parsing …","Used in miniz to skip zero-initializing hash and dict. We …","Only look for matches with a distance of 0.","Whether to use a zlib wrapper.","Try to compress from input to output with the given …","The decompression went fine, but the adler32 checksum did …","The output buffer is an invalid size; consider the <code>flags</code> …","Struct return when decompress_to_vec functions fail.","Finished decompression without issues.","Failed to decompress due to invalid data.","More input data was expected, but the caller indicated …","There is still pending data that didn’t fit in the …","The decompressor needs more input data to continue …","Return status codes.","","","","","","","Streaming decompression functionality.","Decompress one or more source slices from an iterator into …","Decompress the deflate-encoded data in <code>input</code> to a vector.","Decompress the deflate-encoded data in <code>input</code> to a vector.","Decompress the deflate-encoded data (with a zlib wrapper) …","Decompress the deflate-encoded data (with a zlib wrapper) …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The currently decompressed data if any.","Decompressor status on failure. See TINFLStatus for …","Extra streaming decompression functionality.","","","","","","","","","Main decompression struct.","","Returns the adler32 checksum of the currently decompressed …","Returns the adler32 that was read from the zlib header if …","","","Main decompression function. Keeps decompressing data from …","Create a new tinfl_decompressor with all fields set to 0.","Returns the argument unchanged.","Flags to <code>decompress()</code> to control how inflation works.","Set the current state to <code>Start</code>.","Calls <code>U::from(self)</code>.","Create a new tinfl_decompressor with all fields set to 0.","","","","Calculate the adler32 checksum of the output data even if …","There will be more input that hasn’t been given to the …","Ignore adler32 checksum even if we are inflating a zlib …","Should we try to parse a zlib header?","The output buffer should not wrap around.","Full reset of the state, including zeroing memory.","A struct that compbines a decompressor with extra data for …","Resets state, without performing expensive ops (e.g. …","Tag that determines reset policy of InflateState","Resets state and zero memory, continuing to use the same …","","","","","","","","","Access the innner decompressor.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Try to decompress from <code>input</code> to <code>output</code> with the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the status of the last call to <code>inflate</code> with this …","Create a new state.","Create a new state on the heap.","Create a new state using miniz/zlib style window bits …","Performs reset","","","","Reset the decompressor without re-allocating memory, using …","Resets the state according to specified policy.","","","","","","","","","","","",""],"i":[1,3,3,0,3,1,1,0,0,0,0,0,0,3,2,1,2,3,1,4,3,2,0,1,3,4,4,1,2,3,4,5,1,2,3,4,5,5,5,1,2,3,4,5,1,2,3,4,5,0,1,2,3,4,5,1,2,3,4,5,5,1,2,3,4,5,9,9,1,2,3,4,5,4,1,2,3,4,5,0,1,2,3,4,5,0,1,5,1,2,3,4,5,4,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,14,14,0,14,14,14,14,14,14,14,14,0,0,0,14,14,14,14,14,14,0,14,14,14,14,22,0,0,0,20,22,20,21,20,21,20,21,22,22,20,21,0,0,18,18,37,20,21,22,18,37,20,21,22,20,21,22,20,21,22,0,0,0,18,18,0,20,21,22,20,21,22,18,20,21,22,18,37,20,21,21,22,20,21,22,18,37,20,21,22,18,21,18,37,18,18,18,18,20,21,22,18,37,20,21,22,18,37,20,21,22,18,37,20,21,22,0,0,0,0,0,0,0,0,0,24,24,0,24,24,24,24,24,0,24,27,24,27,24,24,0,0,0,0,0,0,24,24,24,27,27,24,27,24,24,24,27,27,27,0,24,27,24,27,24,27,24,27,0,0,30,30,30,30,0,30,30,0,30,30,30,30,30,30,0,0,0,0,0,0,0,0,0,0,33,34,35,31,33,34,35,31,31,31,33,34,35,31,0,33,34,35,31,31,31,31,31,36,33,34,35,31,31,33,34,35,31,33,34,35,31,33,34,35,31],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],0,[[1,1],6],[[2,2],6],[[3,3],6],[[4,4],6],[[5,5],6],[[],6],[[],6],[[],6],[[],6],[[],6],[3,5],[[1,7],8],[[2,7],8],[[3,7],8],[[4,7],8],[[5,7],8],[5,9],[5,9],[[]],[[]],[[]],[[]],[[]],[10,4],[[1,11]],[[2,11]],[[3,11]],[[4,11]],[[5,11]],0,[[]],[[]],[[]],[[]],[[]],0,[10,[[12,[1,3]]]],0,[[]],[[]],[[]],[[]],[[]],[4,10],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,[[]],[[]],[14,14],[[]],[[[16,[15]],15],[[17,[15]]]],[[[16,[15]],15],[[17,[15]]]],0,[[14,14],6],[[],6],[[14,7],8],[[]],[[14,11]],[[]],0,[[]],[[],12],[[],12],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[21,21],[22,22],[[]],[[]],[[]],[[18,[16,[15]],[16,[15]],21]],[[18,[16,[15]],21,23]],[[10,10,10],19],[18,4],[[],18],0,[[20,20],6],[[21,21],6],[[22,22],6],[[],6],[[],6],[[],6],[18,10],[[20,7],8],[[21,7],8],[[22,7],8],[[]],[[]],[[]],[1,21],[[]],[[]],[[20,11]],[[21,11]],[[22,11]],[[]],[[]],[[]],[[]],[[]],[19,18],[10,[[12,[21,3]]]],[18,22],0,[18],[[18,14]],[[18,15]],[[18,4,15]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,0,[[18,[16,[15]],[16,[15]],1],5],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[24,24],[[]],0,[[[16,[15]],25,6,6],[[12,[26,24]]]],[[[16,[15]]],[[12,[[17,[15]],27]]]],[[[16,[15]],26],[[12,[[17,[15]],27]]]],[[[16,[15]]],[[12,[[17,[15]],27]]]],[[[16,[15]],26],[[12,[[17,[15]],27]]]],[[24,24],6],[[],6],[[24,7],8],[[27,7],8],[[27,7],8],[[]],[[]],[10,[[28,[24]]]],[[24,11]],[[]],[[]],0,0,0,[[]],[[],29],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],0,0,[30,[[28,[19]]]],[30,[[28,[19]]]],[[]],[[]],[[30,[16,[15]],[16,[15]],26,19]],[[],30],[[]],0,[30],[[]],[[],30],[[],12],[[],12],[[],13],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,30],[[],31],[[]],[[]],[[]],[[]],[[31,[16,[15]],[16,[15]],1],5],[[]],[[]],[[]],[[]],[31,24],[4,31],[4,[[32,[31]]]],[10,[[32,[31]]]],[31],[[33,31]],[[34,31]],[[35,31]],[[31,4]],[[31,36]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13]],"c":[],"p":[[4,"MZFlush"],[4,"MZStatus"],[4,"MZError"],[4,"DataFormat"],[3,"StreamResult"],[15,"bool"],[3,"Formatter"],[6,"Result"],[6,"MZResult"],[15,"i32"],[8,"Hasher"],[4,"Result"],[3,"TypeId"],[4,"CompressionLevel"],[15,"u8"],[15,"slice"],[3,"Vec"],[3,"CompressorOxide"],[15,"u32"],[4,"CompressionStrategy"],[4,"TDEFLFlush"],[4,"TDEFLStatus"],[8,"FnMut"],[4,"TINFLStatus"],[8,"Iterator"],[15,"usize"],[3,"DecompressError"],[4,"Option"],[3,"String"],[3,"DecompressorOxide"],[3,"InflateState"],[3,"Box"],[3,"MinReset"],[3,"ZeroReset"],[3,"FullReset"],[8,"ResetPolicy"],[3,"CallbackFunc"]]},\
"nodrop":{"doc":"A wrapper type to inhibit drop (destructor).","t":"DLLLLLLLLLLLL","n":["NoDrop","borrow","borrow_mut","deref","deref_mut","drop","from","into","into_inner","new","try_from","try_into","type_id"],"q":[[0,"nodrop"]],"d":["A type holding <strong>T</strong> that will not call its destructor on drop","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Extract the inner value.","Create a new <strong>NoDrop</strong>.","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1],[1],[1],[[]],[[]],[1],[[],1],[[],2],[[],2],[[],3]],"c":[],"p":[[3,"NoDrop"],[4,"Result"],[3,"TypeId"]]},\
"num_integer":{"doc":"Integer trait and functions.","t":"IDIDIFKFKFLLLLFLLLLLFLFKFLFKLLLLLLLLFKMFLLLLLKKKFKFKFLLLFKLFLLLLLLLLLMM","n":["Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","clone","clone_into","dec","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","equivalent","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","inc","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","sqrt","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y"],"q":[[0,"num_integer"]],"d":["Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","","","Decrements self by one.","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. Returns …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Increments self by one.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer – …","Returns the truncated principal <code>n</code>th root of an integer – …","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,0,14,5,14,5,0,4,4,5,5,2,0,2,0,2,0,2,0,2,2,5,5,2,2,5,14,5,0,2,5,0,2,2,14,5,14,2,2,2,0,2,0,2,0,14,14,2,0,4,2,0,4,4,5,14,5,14,5,14,5,5,5],"f":[0,0,0,0,0,[[1,1],1],[[]],[[1,1],1],[[]],[[[0,[2,3]],[0,[2,3]]],[[0,[2,3]]]],[[]],[[]],[[]],[[]],[4,4],[[]],[[]],[[[5,[3]]],[[5,[3]]]],[[]],[3],[[2,2],2],[[]],[[2,2],2],[[]],[[2,2]],[[]],[[2,2]],[[]],[[],6],[[[5,[7]],[5,[7]]],6],[[],6],[[3,3],[[5,[3]]]],[[[0,[3,8]],[0,[3,8]]]],[[[5,[9]],10],11],[[]],[[]],[[2,2],2],[[]],0,[[2,2]],[[]],[3],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[2,2],2],[[]],[[2,2],2],[[]],[[[13,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,2,3]]]],2,3]]]],2,3]]]],2,3]]]]],[[0,[[12,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,2,3]]]],2,3]]]],2,3]]]],2,3]]]],2,3]]]],[2,[[14,[2]]]],[[[14,[[0,[2,3]]]]],[[15,[[0,[2,3]]]]]],[[3,3],3],[[4,16],4],[16],[[3,3],3],[4,4],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],0,0],"c":[28],"p":[[8,"Average"],[8,"Integer"],[8,"Clone"],[8,"Roots"],[3,"ExtendedGcd"],[15,"bool"],[8,"PartialEq"],[8,"Signed"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Add"],[15,"slice"],[3,"IterBinomial"],[4,"Option"],[15,"u32"],[4,"Result"],[3,"TypeId"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","t":"DDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Range","RangeFrom","RangeInclusive","RangeStep","RangeStepFrom","RangeStepInclusive","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","end_bound","end_bound","end_bound","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next","next_back","next_back","range","range_from","range_inclusive","range_step","range_step_from","range_step_inclusive","size_hint","size_hint","size_hint","size_hint","start_bound","start_bound","start_bound","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"num_iter"]],"d":["An iterator over the range [start, stop)","An iterator over the infinite range starting at <code>start</code>","An iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","An iterator over the infinite range starting at <code>start</code> by …","An iterator over the range [start, stop] by <code>step</code>. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,6,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,0,0,0,0,0,0,2,3,6,7,2,3,6,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[[3,[1]]],[[3,[1]]]],[[[4,[1]]],[[4,[1]]]],[[[5,[1]]],[[5,[1]]]],[[[6,[1]]],[[6,[1]]]],[[[7,[1]]],[[7,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[2,8],[3,8],[6,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]],[[12,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]]],[[[3,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]],[[12,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]]],[[[4,[[0,[13,10,1]]]]],[[12,[[0,[13,10,1]]]]]],[[[5,[[0,[13,10,1,14]]]]],[[12,[[0,[13,10,1,14]]]]]],[[[6,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]],[[12,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[[[7,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]],[[12,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[[[2,[[0,[15,1,11]]]]],[[12,[[0,[15,1,11]]]]]],[[[3,[[0,[[16,[[0,[[16,[[0,[[16,[[0,[16,15,1,11]]]],15,1,11]]]],15,1,11]]]],15,1,11]]]]],[[12,[[0,[[16,[[0,[[16,[[0,[[16,[[0,[16,15,1,11]]]],15,1,11]]]],15,1,11]]]],15,1,11]]]]]],[[[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]],[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]],[[2,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]]]],[[[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1,17]]]],1,17]]]],1,17]]]],1,17]]]],1,17]]],[[6,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1,17]]]],1,17]]]],1,17]]]],1,17]]]]]],[[[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]],[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]],[[3,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]]]],[[[0,[13,10,1,18]],[0,[13,10,1,18]],[0,[13,10,1,18]]],[[4,[[0,[13,10,1,18]]]]]],[[[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]],1]],[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]],1]]],[[7,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[[[0,[13,10,1,18]],[0,[13,10,1,18]],[0,[13,10,1,18]]],[[5,[[0,[13,10,1,18]]]]]],[[[2,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]]],[[[3,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]]],[[[6,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[[[7,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[2,8],[3,8],[6,8],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20]],"c":[],"p":[[8,"Clone"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"],[4,"Bound"],[8,"Add"],[8,"PartialOrd"],[8,"ToPrimitive"],[4,"Option"],[8,"CheckedAdd"],[8,"PartialEq"],[8,"Integer"],[8,"Sub"],[8,"One"],[8,"Zero"],[4,"Result"],[3,"TypeId"]]},\
"num_rational":{"doc":"Rational numbers","t":"DDGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ParseRatioError","Ratio","Rational","Rational32","Rational64","abs","abs_sub","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","approximate_float","borrow","borrow","borrow_mut","borrow_mut","ceil","checked_add","checked_div","checked_mul","checked_sub","clone","clone","clone_into","clone_into","cmp","denom","description","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","equivalent","floor","fmt","fmt","fmt","fmt","fract","from","from","from","from","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_integer","from_str","from_str_radix","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","hash","into","into","into","is_integer","is_negative","is_positive","is_zero","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","new_raw","numer","one","partial_cmp","pow","recip","reduced","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","signum","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","to_integer","to_owned","to_owned","to_string","to_string","trunc","try_from","try_from","try_into","try_into","type_id","type_id","zero"],"q":[[0,"num_rational"]],"d":["","Represents the ratio between 2 numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","","","","","","","","","","","","","","","","","","","","","","Rounds towards plus infinity.","","","","","","","","","","Gets an immutable reference to the denominator.","","","","","","","","","","","","","","","","","Rounds towards minus infinity.","","Renders as <code>numer/denom</code>. If denom=1, renders as numer.","","","Returns the fractional part of a number, with division …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Parses <code>numer/denom</code> or just <code>numer</code>.","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Returns true if the rational number is an integer …","","","","","","","","","","","","","","","","","","Creates a new <code>Ratio</code>. Fails if <code>denom</code> is zero.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","","","Raises the <code>Ratio</code> to the power of an exponent.","Returns the reciprocal.","Returns a reduced copy of self.","","","","","","","","","","","","","Rounds to the nearest integer. Rounds half-way cases away …","","","","","","","","","","","","","","Converts to an integer, rounding towards zero.","","","","","Rounds towards zero.","","","","","","",""],"i":[0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,13,4,4,4,4,4,4,13,4,13,4,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,4,4,4,13,13,4,4,4,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,13,4,4,13,4,13,4,13,4],"f":[0,0,0,0,0,[[[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2,3]]]],[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[0,[6,7]]],[[9,[[4,[[0,[2,3,8,7,1]]]]]]]],[[]],[[]],[[]],[[]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,10,11]]]],[4,[[0,[1,2,10,11]]]]],[[9,[[4,[[0,[1,2,10,11]]]]]]]],[[[4,[[0,[1,2,10]]]],[4,[[0,[1,2,10]]]]],[[9,[[4,[[0,[1,2,10]]]]]]]],[[[4,[[0,[1,2,10]]]],[4,[[0,[1,2,10]]]]],[[9,[[4,[[0,[1,2,10]]]]]]]],[[[4,[[0,[1,2,10,12]]]],[4,[[0,[1,2,10,12]]]]],[[9,[[4,[[0,[1,2,10,12]]]]]]]],[[[4,[1]]],[[4,[1]]]],[13,13],[[]],[[]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],14],[[[4,[[0,[1,2]]]]],[[0,[1,2]]]],[13,15],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],16],[[13,13],16],[[],16],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[17]],18],19],[[[4,[[0,[20,21,22]]]],18],19],[[13,18],19],[[13,18],19],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[],[[4,[[0,[1,2]]]]]],[[]],[[]],[23,[[9,[[4,[24]]]]]],[23,[[9,[[4,[25]]]]]],[23,[[9,[[4,[26]]]]]],[23,[[9,[[4,[27]]]]]],[23,[[9,[[4,[28]]]]]],[23,[[9,[[4,[29]]]]]],[23,[[9,[[4,[30]]]]]],[23,[[9,[[4,[31]]]]]],[23,[[9,[[4,[32]]]]]],[23,[[9,[[4,[33]]]]]],[34,[[9,[[4,[32]]]]]],[34,[[9,[[4,[31]]]]]],[34,[[9,[[4,[26]]]]]],[34,[[9,[[4,[24]]]]]],[34,[[9,[[4,[25]]]]]],[34,[[9,[[4,[29]]]]]],[34,[[9,[[4,[33]]]]]],[34,[[9,[[4,[27]]]]]],[34,[[9,[[4,[30]]]]]],[34,[[9,[[4,[28]]]]]],[33,[[9,[[4,[30]]]]]],[33,[[9,[[4,[31]]]]]],[33,[[9,[[4,[26]]]]]],[33,[[9,[[4,[27]]]]]],[33,[[9,[[4,[29]]]]]],[33,[[9,[[4,[24]]]]]],[33,[[9,[[4,[32]]]]]],[33,[[9,[[4,[28]]]]]],[33,[[9,[[4,[33]]]]]],[33,[[9,[[4,[25]]]]]],[[[0,[1,2]]],[[4,[[0,[1,2]]]]]],[15,[[36,[[4,[[0,[35,1,2]]]],13]]]],[[15,26],[[36,[[4,[[0,[1,2]]]],13]]]],[27,[[9,[[4,[25]]]]]],[27,[[9,[[4,[30]]]]]],[27,[[9,[[4,[31]]]]]],[27,[[9,[[4,[33]]]]]],[27,[[9,[[4,[28]]]]]],[27,[[9,[[4,[32]]]]]],[27,[[9,[[4,[29]]]]]],[27,[[9,[[4,[24]]]]]],[27,[[9,[[4,[26]]]]]],[27,[[9,[[4,[27]]]]]],[[[4,[[0,[1,2,37]]]],38]],[[]],[4],[[]],[[[4,[[0,[1,2]]]]],16],[[[4,[[0,[1,2,3]]]]],16],[[[4,[[0,[1,2,3]]]]],16],[[[4,[[0,[1,2]]]]],16],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,39]]]]],[[4,[[0,[1,2,39]]]]]],[[[4,[[0,[1,2,39]]]]],[[4,[[0,[1,2,39]]]]]],[[[0,[1,2]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[0,[1,2]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],[[0,[1,2]]]],[[],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[9,[14]]]],[[[4,[[0,[1,2,40]]]],28],[[4,[[0,[1,2,40]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2]]]]],[[0,[1,2]]]],[[]],[[]],[[],41],[[],41],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[],36],[[],36],[[],36],[[],36],[[],42],[[],42],[[],[[4,[[0,[1,2]]]]]]],"c":[],"p":[[8,"Clone"],[8,"Integer"],[8,"Signed"],[3,"Ratio"],[8,"NumAssign"],[8,"Float"],[8,"NumCast"],[8,"Bounded"],[4,"Option"],[8,"CheckedMul"],[8,"CheckedAdd"],[8,"CheckedSub"],[3,"ParseRatioError"],[4,"Ordering"],[15,"str"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Display"],[8,"Eq"],[8,"One"],[15,"f32"],[15,"i16"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"i32"],[15,"isize"],[15,"usize"],[15,"u8"],[15,"i8"],[15,"i64"],[15,"f64"],[8,"FromStr"],[4,"Result"],[8,"Hash"],[8,"Hasher"],[8,"Neg"],[8,"PrimInt"],[3,"String"],[3,"TypeId"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":"CCCCCCCCCCCCCNCCCECCQCNCCIIIICIICDCCICCCCCCCCCCCCCCCCCLLLLAACCFFFALLLLLKAALLMCAACAACLLLLLLLCIIIKKKKIIIIKFKLLLLLKLLLLLKLLLLLLLKLLLLLKLLKKKKKKKKKKIIIKKLKLKKKLIKLKKKKKKKKKKLKKLKKKLKKKKLKLKKKKKKLKLKLKLKLKLLLKKKKKKLKKKLKKKKKKKKKKKKKLKLKLKLKKKKKKKLKLKKLIISISILKFKLLFKIKKKKLKKLKKKKKKKLKKKAAAAAAAAQQIIIKKLKKLIIIIIIIIKKKKKKKKIIKLKKLKIQKIIQKKIIIKKKIIIIKKKKKIIIIIIKKKKKKQIFFKIKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKIIFKFKKKFK","n":["AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","ConstOne","ConstZero","Empty","Euclid","Float","FloatConst","FloatErrorKind","FromBytes","FromPrimitive","FromStrRadixErr","Inv","Invalid","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","ParseFloatError","Pow","PrimInt","RefNum","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","ToBytes","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs_sub","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","checked_pow","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","one","ops","pow","pow","real","sign","signum","to_string","try_from","try_from","try_into","try_into","type_id","type_id","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","TotalOrder","abs","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","ceil","classify","classify","copysign","cos","cosh","epsilon","epsilon","exp","exp2","exp_m1","floor","floor","fract","fract","hypot","infinity","infinity","integer_decode","integer_decode","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","is_subnormal","is_subnormal","ln","ln_1p","log","log10","log2","max","max","max_value","max_value","min","min","min_positive_value","min_positive_value","min_value","min_value","mul_add","nan","nan","neg_infinity","neg_infinity","neg_zero","neg_zero","powf","powi","powi","recip","recip","round","round","signum","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_degrees","to_radians","to_radians","total_cmp","trunc","trunc","ConstOne","ConstZero","ONE","One","ZERO","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","bytes","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","Bytes","Bytes","FromBytes","NumBytes","ToBytes","from_be_bytes","from_le_bytes","from_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_div_rem_euclid","checked_rem_euclid","div_euclid","div_rem_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Real","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fract","hypot","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","powf","powi","recip","round","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_radians","trunc","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":[[0,"num_traits"],[92,"num_traits::bounds"],[99,"num_traits::cast"],[134,"num_traits::float"],[247,"num_traits::identities"],[261,"num_traits::int"],[281,"num_traits::ops"],[289,"num_traits::ops::bytes"],[300,"num_traits::ops::checked"],[316,"num_traits::ops::euclid"],[324,"num_traits::ops::inv"],[327,"num_traits::ops::mul_add"],[332,"num_traits::ops::overflowing"],[338,"num_traits::ops::saturating"],[347,"num_traits::ops::wrapping"],[359,"num_traits::pow"],[364,"num_traits::real"],[412,"num_traits::sign"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","","","","","The trait for <code>Num</code> references which implement numeric …","","","","","","","","","","","","","","","","","","","","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a string and radix (typically <code>2..=36</code>).","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Trait for floating point numbers that provide an …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value of <code>self</code>. Returns …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns positive infinity.","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if the number is subnormal.","Returns <code>true</code> if the number is subnormal.","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns NaN.","Returns the <code>NaN</code> value.","Returns negative infinity.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns <code>-0.0</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts to degrees, assuming the number is in radians.","Converts radians to degrees.","Converts to radians, assuming the number is in degrees.","Converts degrees to radians.","Return the ordering between <code>self</code> and <code>other</code>.","Return the integer part of a number.","Return the integer part of a number.","Defines an associated constant representing the …","Defines an associated constant representing the additive …","The multiplicative identity element of <code>Self</code>, <code>1</code>.","Defines a multiplicative identity element for <code>Self</code>.","The additive identity element of <code>Self</code>, <code>0</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","","","","","","","Create a number from its representation as a byte array in …","Create a number from its representation as a byte array in …","Create a number from its memory representation as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Returns both the quotient and remainder from checked …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Returns both the quotient and remainder from Euclidean …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation <code>(self * a) + b</code>","Performs the fused multiply-add assignment operation …","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","A trait for real number types that do not necessarily have …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Raise a number to a real number power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","Return the integer part of a number.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,40,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,2,5,0,0,0,0,0,0,0,0,2,5,5,2,5,40,0,0,2,5,5,0,0,0,0,0,0,0,5,2,5,2,5,2,5,0,0,0,0,41,42,41,43,0,0,0,0,44,0,11,45,45,45,45,45,45,45,45,45,45,45,45,45,45,13,13,13,13,13,13,13,13,13,13,13,13,13,13,46,46,46,46,46,46,46,46,46,46,0,0,0,46,46,46,46,46,46,46,46,46,0,47,48,47,47,47,47,47,47,47,47,47,47,48,48,47,47,47,47,48,47,47,47,47,47,48,47,48,47,48,47,48,47,47,48,47,48,47,48,47,48,47,48,47,48,48,47,47,47,47,47,47,47,48,48,47,47,48,48,47,48,47,47,48,47,48,47,48,47,47,47,48,47,48,47,48,47,48,47,47,47,47,47,47,48,47,48,47,49,47,48,0,0,50,0,51,0,34,35,0,34,34,35,0,35,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,0,0,0,0,0,0,53,54,0,0,0,54,54,54,53,53,53,0,0,0,0,0,0,0,0,55,56,37,57,58,59,60,61,0,0,62,62,62,63,63,63,0,64,64,0,0,65,65,66,0,0,0,67,68,69,0,0,0,0,70,71,72,70,73,0,0,0,0,0,0,74,75,76,77,78,79,80,0,0,0,80,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,39,0,39,39,39,0,39],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[1,1,1],1],[[1,1],1],[[1,1],1],0,[[2,3],4],[[5,3],4],[[5,3],4],[[]],[[]],[[6,7],8],0,0,[[]],[[]],0,0,0,0,0,0,0,0,[[],9],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[]],[11,[[12,[11]]]],[13,12],[14,12],[15,12],[16,12],[17,12],[18,12],[19,12],[20,12],[21,12],[22,12],[23,12],[7,12],[24,12],[25,12],[26,12],[[],[[12,[14]]]],[[],[[12,[15]]]],[[],[[12,[16]]]],[[],[[12,[17]]]],[[],[[12,[18]]]],[[],[[12,[19]]]],[[],[[12,[20]]]],[[],[[12,[21]]]],[[],[[12,[22]]]],[[],[[12,[23]]]],[[],[[12,[7]]]],[[],[[12,[24]]]],[[],[[12,[25]]]],[[],[[12,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[],[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,28]]]]]]]]]]]]]]]]]]]],[[]],[[],[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,28]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[],[[0,[27,[29,[[0,[27,[29,[[0,[27,[29,[[0,[27,[29,[[0,[27,29]]]]]]]]]]]]]]]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],32],[[]],[[]],0,0,0,0,0,0,[33,31],[[],31],[[],34],[[]],[[]],[[]],[[],35],[[]],0,[[],7],[[],7],[[]],[[]],[[],7],[[],7],[7],[[]],[7],[7],[7],[7],[[]],[[]],[[]],[[],7],[[],7],[7],[7],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[7,12],[7,12],[[],12],0,0,[[],12],[[],12],[[],12],[[]],[[]],[[]],0,0,[[]],0,0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[7],[7],[[]],0,0,[[[0,[36,34,37]],26],[[12,[[0,[36,34,37]]]]]],[[[0,[36,34,[38,[[0,[36,34,[38,[[0,[36,34,[38,[[0,[36,34,[38,[[0,[36,34,38]]]]]]]]]]]]]]]]]],26],[[0,[36,34,[38,[[0,[36,34,[38,[[0,[36,34,[38,[[0,[36,34,[38,[[0,[36,34,38]]]]]]]]]]]]]]]]]]]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[39,39],[[]],[[39,39],39],[[]],[[],31],[[],31],[39,39],[[]]],"c":[],"p":[[8,"PartialOrd"],[4,"FloatErrorKind"],[3,"Formatter"],[6,"Result"],[3,"ParseFloatError"],[15,"str"],[15,"u32"],[4,"Result"],[3,"String"],[3,"TypeId"],[8,"NumCast"],[4,"Option"],[8,"ToPrimitive"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[15,"usize"],[8,"Sized"],[8,"Div"],[8,"Add"],[4,"FpCategory"],[15,"bool"],[4,"Ordering"],[8,"PartialEq"],[8,"One"],[8,"Zero"],[8,"Clone"],[8,"CheckedMul"],[8,"Mul"],[8,"Signed"],[8,"Num"],[8,"Bounded"],[8,"UpperBounded"],[8,"LowerBounded"],[8,"AsPrimitive"],[8,"FromPrimitive"],[8,"FloatConst"],[8,"Float"],[8,"FloatCore"],[8,"TotalOrder"],[8,"ConstOne"],[8,"ConstZero"],[8,"PrimInt"],[8,"ToBytes"],[8,"FromBytes"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"CheckedSub"],[8,"CheckedEuclid"],[8,"Euclid"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"Pow"],[8,"Real"]]},\
"once_cell":{"doc":"Overview","t":"AAADDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["race","sync","unsync","OnceBool","OnceBox","OnceNonZeroUsize","OnceRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","default","drop","fmt","fmt","fmt","fmt","from","from","from","from","get","get","get","get","get_or_init","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","into","new","new","new","new","set","set","set","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","get_unchecked","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","wait","with_value","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","with_value"],"q":[[0,"once_cell"],[3,"once_cell::race"],[64,"once_cell::sync"],[112,"once_cell::unsync"]],"d":["Thread-safe, non-blocking, “first one wins” flavor of …","Thread-safe, blocking version of <code>OnceCell</code>.","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets a reference to the underlying value.","Gets the underlying value.","Gets the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","","","","A value which is initialized on the first access.","A thread-safe cell which can be written to only once.","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","","Returns the argument unchanged.","","Returns the argument unchanged.","Gets the reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the mutable reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Get the reference to the underlying value, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value. Returns","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Gets the reference to the underlying value, blocking the …","Creates a new initialized cell.","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","","Returns the argument unchanged.","","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets a mutable reference to the underlying value.","Gets the mutable reference to the result of this lazy …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Creates a new initialized cell."],"i":[0,0,0,0,0,0,0,1,2,3,4,1,2,3,4,1,2,3,4,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,0,15,17,15,17,15,15,15,15,17,17,17,15,15,15,17,17,17,15,15,15,17,15,17,15,17,15,15,15,15,17,15,17,15,17,15,15,15,15,17,15,15,17,15,17,15,15,0,0,21,22,21,22,21,21,21,21,22,22,22,21,21,21,22,22,22,21,21,21,22,21,22,21,22,21,21,21,22,21,22,21,22,21,21,21,21,22,21,21,22,21,22,21],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[2],[[1,5],6],[[2,5],6],[[3,5],6],[[4,5],6],[[]],[[]],[[]],[[]],[1,7],[2,7],[3,[[7,[8]]]],[4,[[7,[9]]]],[[1,10]],[[2,10]],[[3,10],8],[[4,10],9],[[1,10],11],[[2,10],11],[[3,10],[[11,[8]]]],[[4,10],[[11,[9]]]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[1,11],[[2,12],[[11,[12]]]],[[3,8],11],[[4,9],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[[15,[14]]],[[15,[14]]]],[[[15,[14]],[15,[14]]]],[[]],[[],15],[[],[[17,[16]]]],[[[17,[10]]]],[[[17,[10]]]],[[[15,[18]],[15,[18]]],9],[[],9],[[[15,[19]],5],6],[[[17,[19]],5],6],[[[17,[10]]]],[[[17,[10]]]],[20],[[]],[[],15],[[]],[15,7],[[[17,[10]]],7],[15,7],[[[17,[10]]],7],[[15,10]],[[15,10],11],[15],[[]],[[]],[15,7],[17,11],[[],15],[[],17],[15,11],[15,7],[[]],[[],11],[[],11],[15,11],[[],11],[[],11],[[],13],[[],13],[15],[[],15],0,0,[[]],[[]],[[]],[[]],[[[21,[14]]],[[21,[14]]]],[[[21,[14]],[21,[14]]]],[[]],[[],21],[[],[[22,[16]]]],[[[22,[10]]]],[[[22,[10]]]],[[[21,[18]],[21,[18]]],9],[[],9],[[[21,[19]],5],6],[[[22,[19]],5],6],[[[22,[10]]]],[[[22,[10]]]],[20],[[]],[[],21],[[]],[21,7],[[[22,[10]]],7],[21,7],[[[22,[10]]],7],[[21,10]],[[21,10],11],[[]],[[]],[21,7],[22,11],[[],21],[[],22],[21,11],[21,7],[[]],[[],11],[[],11],[21,11],[[],11],[[],11],[[],13],[[],13],[[],21]],"c":[],"p":[[3,"OnceRef"],[3,"OnceBox"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"NonZeroUsize"],[15,"bool"],[8,"FnOnce"],[4,"Result"],[3,"Box"],[3,"TypeId"],[8,"Clone"],[3,"OnceCell"],[8,"Default"],[3,"Lazy"],[8,"PartialEq"],[8,"Debug"],[15,"never"],[3,"OnceCell"],[3,"Lazy"]]},\
"opengl_graphics":{"doc":"An OpenGL back-end for Rust-Graphics","t":"NNDIQEEEDGINNNENNDDIDDINNNNNNNNNNNNNNNNNNNNNNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLENLLLLLLLLLLLLLLLFFDDDDDDDDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDFLLFLLLLLLLLLLLLLFLLL","n":["ClampToBorder","ClampToEdge","Colored","CreateTexture","Error","Filter","Format","GLSL","GlGraphics","GlyphCache","ImageSize","Linear","MirroredRepeat","Nearest","OpenGL","Repeat","Rgba8","Shaders","Texture","TextureOp","TextureSettings","Textured","UpdateTexture","V1_10","V1_20","V1_30","V1_40","V1_50","V2_0","V2_1","V3_0","V3_1","V3_2","V3_3","V3_30","V4_0","V4_00","V4_1","V4_10","V4_2","V4_20","V4_3","V4_30","V4_4","V4_40","V4_5","V4_50","Wrap","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_color","clear_draw_state","clear_program","clear_stencil","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compress","convert_gamma","create","create","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","draw","draw_begin","draw_end","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","eq","eq","eq","equivalent","equivalent","error","filter","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_api","from_bytes","from_image","from_memory_alpha","from_path","from_pieces","from_str","from_str","from_vs_fs","from_vs_fs","generate_mipmap","get","get_border_color","get_compress","get_convert_gamma","get_current_program","get_filter","get_generate_mipmap","get_height","get_id","get_mag","get_major_minor","get_min","get_mipmap","get_size","get_size","get_uniform","get_width","get_wrap_u","get_wrap_v","has_texture_alpha","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","mag","min","mipmap","new","new","new","new","new","new","ops","partial_cmp","partial_cmp","pick_shader","set","set_border_color","set_compress","set_convert_gamma","set_filter","set_generate_mipmap","set_mag","set_min","set_mipmap","set_wrap_u","set_wrap_v","shader_uniforms","shader_utils","to_glsl","to_opengl","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tri_list","tri_list_c","tri_list_uv","tri_list_uv_c","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update","use_draw_state","use_program","wrap_u","wrap_v","Error","IoError","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","init","into","to_string","try_from","try_into","type_id","alpha_to_rgba8","flip_vertical","SUFloat","SUInt","SUMat2x2","SUMat3x3","SUMat4x4","SUVec2","SUVec3","SUVec4","ShaderUniform","UniformType","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","set","set","set","set","set","set","set","set","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","DynamicAttribute","attribute_location","borrow","borrow_mut","compile_shader","deref","deref_mut","drop","drop","from","init","into","rgb","rgba","set","try_from","try_into","type_id","uniform_location","uv","xy","xyz"],"q":[[0,"opengl_graphics"],[288,"opengl_graphics::error"],[305,"opengl_graphics::ops"],[307,"opengl_graphics::shader_uniforms"],[451,"opengl_graphics::shader_utils"]],"d":["Coordinates outside the range [0.0, 1.0] will be given a …","The coordinate will be clamped between 0 and 1.","Describes how to render colored objects.","Implemented by textures for creation.","The error when performing an operation.","Sampling filter","Texture format.","For OpenGL version 3.3 and above, the GLSL version is the …","Contains OpenGL data.","Glyph cache implementation for OpenGL backend.","Implemented by all images to be used with generic …","A Weighted Linear Blend","Repeats the texture and mirrors it, when the integer part …","Nearest Texel","","Repeats the texture by ignoring the integer part of the …","<code>(red, green, blue, alpha)</code> with values 0-255.","Shader picker.","Wraps OpenGL texture data. The texture gets deleted when …","Implemented by texture operations.","Texture creation parameters.","Describes how to render textured objects.","Implemented by textures for updating.","","","","","","","","","","","","","","","","","","","","","","","","","Wrap mode","Sets the border color","","","","","","","","","","","","","","","","","","","","","","","","Unsets the current draw state.","Unset the current program.","","","","","","","","","","","","","","","","Sets compress.","Sets convert gamma.","Create texture from memory.","","","","","","","","","","","","","","","","","","","","","","","","Convenience for wrapping draw calls with the begin and end …","Setup that should be called at the start of a frame’s …","Finalize the frame’s draw calls.","","","","","","","","","","","","","","","Returns empty texture.","","","","","","Errors","Sets the min and mag filter","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>OpenGL</code> version from graphics API version.","Load image from bytes.","Creates a texture from image.","Loads image from memory, the format is 8-bit greyscale.","Loads image by relative file name to the asset root.","Create a new OpenGL back-end with <code>Colored</code>, <code>Textured</code> and …","","","Generate using custom vertex and fragment shaders.","Generate using custom vertex and fragment shaders.","Sets generate mipmap.","Get the closest shader to a shader version.","Gets the border color","Gets wheter compress on the GPU.","Gets whether to convert gamma, treated as sRGB color space.","Returns the current program","Returns the min and mag filter","Gets generate mipmap.","Gets the image height.","Gets the OpenGL id of the texture.","Gets magnify filter","Gets the minor version of OpenGL.","Gets minify filter.","Gets minify mipmap filter","Get the image size.","","Try to get uniform from the current shader of a given name.","Gets the image width.","Gets the wrapping mode for the u coordinate","Gets the wrapping mode for the v coordinate","Assume all textures has alpha channel for now.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets magnify filter","Sets minify filter.","Sets magnify mipmap filter, and sets generate_mipmap to …","Creates a new shader picker.","Create default settings.","Generate using pass-through shaders.","Generate using pass-through shaders.","Creates a new OpenGL back-end.","Creates a new texture.","Image operations for textures.","","","","Sets source for a shader version.","Sets the border color","Sets compress.","Sets convert gamma.","Sets the min and mag filter","Sets generate mipmap.","Sets magnify filter","Sets minify filter.","Sets magnify mipmap filter, and sets generate_mipmap to …","Sets the wrapping mode for the u coordinate","Sets the wrapping mode for the v coordinate","Types and methods for setting shader uniforms","Helper functions for dealing with shaders.","Gets GLSL version associated with OpenGL.","Gets OpenGL version associated with GLSL.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the texture.","","Updates image with a new one.","Sets the current draw state, by detecting changes.","Sets the current program only if the program is not in use.","Sets the wrapping mode for the u coordinate","Sets the wrapping mode for the v coordinate","An enum to represent various possible run-time errors that …","An error happened with I/O.","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Converts from alpha to rgba8.","Flips the image vertically.","Shader uniform float","Shader uniform integer","Shader uniform 2x2 matrix Matrix elements are floats","Shader uniform 3x3 matrix Matrix elements are floats","Shader uniform 4x4 matrix Matrix elements are floats","Shader uniform vector of size 2 Vector elements are floats","Shader uniform vector of size 3 Vector elements are floats","Shader uniform vector of size 4 Vector elements are floats","Describes a shader uniform of a given type.","Shader uniform type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Set the value of the vector 2 uniform.","Set the value of the vector 4 uniform.","Set the value of the 2x2 matrix uniform.","Set the value of the vector 3 uniform.","Set the value of the 3x3 matrix uniform.","Set the value of the float uniform.","Set the value of the integer uniform.","Set the value of the 4x4 matrix uniform.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a shader attribute.","Finds attribute location from a program.","","","Compiles a shader.","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create RGB color attribute.","Create RGBA color attribute.","Sets attribute data.","","","","Finds uniform location from a program.","Create texture coordinate attribute.","Create XY vertex attribute.","Create XYZ vertex attribute."],"i":[9,9,0,0,59,0,0,0,0,0,0,8,9,8,0,9,7,0,0,0,0,0,0,10,10,10,10,10,6,6,6,6,6,6,10,6,10,6,10,6,10,6,10,6,10,6,10,0,1,33,1,6,7,8,9,10,22,23,4,17,33,1,6,7,8,9,10,22,23,4,17,4,4,4,4,1,6,7,8,9,10,1,6,7,8,9,10,6,10,1,1,60,17,33,1,6,7,8,9,10,22,23,4,17,33,1,6,7,8,9,10,22,23,4,17,4,4,4,33,1,6,7,8,9,10,22,22,23,23,4,17,17,17,6,9,10,6,10,0,1,6,7,8,9,10,33,1,6,7,8,9,10,22,23,4,17,6,17,17,17,17,4,6,10,22,23,1,33,1,1,1,4,1,1,61,17,1,6,1,1,61,17,4,61,1,1,4,33,1,6,7,8,9,10,22,23,4,17,33,1,6,6,7,8,9,10,22,23,4,17,1,1,1,33,1,22,23,4,17,0,6,10,10,33,1,1,1,1,1,1,1,1,1,1,0,0,6,10,1,6,7,8,9,10,4,4,4,4,33,1,6,7,8,9,10,22,23,4,17,33,1,6,7,8,9,10,22,23,4,17,33,1,6,7,8,9,10,22,23,4,17,62,17,17,4,4,1,1,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,38,48,49,50,51,52,53,54,55,38,48,49,50,51,52,53,54,55,38,48,49,50,51,52,53,54,55,38,48,49,50,51,52,53,54,55,38,48,49,50,51,52,53,54,55,38,48,49,50,51,52,53,54,55,38,48,49,50,51,52,53,54,55,38,48,49,50,51,52,53,54,55,38,48,49,50,51,52,53,54,55,38,48,49,50,51,52,53,54,55,38,38,38,38,38,38,38,38,38,48,49,50,51,52,53,54,55,38,48,49,50,51,52,53,54,55,38,48,49,50,51,52,53,54,55,38,48,49,50,51,52,53,54,55,0,0,58,58,0,58,58,58,58,58,58,58,58,58,58,58,58,58,0,58,58,58],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[3,[2]]],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,[3,[2]]]],[4],[4],[[4,5]],[1,1],[6,6],[7,7],[8,8],[9,9],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],11],[[10,10],11],[[1,12],1],[[1,12],1],[[7,[13,[5]],[15,[[3,[14]]]],1],16],[[7,[13,[5]],[15,[[3,[14]]]],1],[[16,[17]]]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[4,19,20]],[[4,19],21],[4],[18],[18],[18],[18],[18],[18],[18],[22],[18],[18],[23],[18],[18],[17],[1,[[16,[17,24]]]],[[6,6],12],[[9,9],12],[[10,10],12],[[],12],[[],12],0,[[1,8],1],[[6,25],[[16,[26]]]],[[7,25],[[16,[26]]]],[[8,25],[[16,[26]]]],[[9,25],[[16,[26]]]],[[10,25],[[16,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,[[28,[6]]]],[[[13,[5]],1],[[16,[17,24]]]],[[29,1],17],[[[13,[5]],14,14,1],[[16,[17,24]]]],[[[31,[30]],1],[[16,[17,24]]]],0,[32,[[16,[6]]]],[32,[[16,[10]]]],[[10,[33,[10,32]],[33,[10,32]]],[[16,[22,24]]]],[[10,[33,[10,32]],[33,[10,32]]],[[16,[23,24]]]],[[1,12],1],[[[33,[34,35]],34],[[28,[35]]]],[1,[[3,[2]]]],[1,12],[1,12],[4,[[28,[36]]]],[1],[1,12],[[],14],[17,36],[1,8],[6],[1,8],[1,8],[[]],[17],[[4,32],[[28,[[38,[[0,[37,35]]]]]]]],[[],14],[1,9],[1,9],[[4,17],12],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[6,27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,8],1],[[1,8],1],[[1,8],1],[[],[[33,[34,35]]]],[[],1],[10,22],[10,23],[6,4],[[36,14,14],17],0,[[6,6],[[28,[11]]]],[[10,10],[[28,[11]]]],[[10,[33,[10,35]]],[[28,[35]]]],[[[33,[34,35]],34,35],[[33,[34,35]]]],[[1,[3,[2]]]],[[1,12]],[[1,12]],[[1,8]],[[1,12]],[[1,8]],[[1,8]],[[1,8]],[[1,9]],[[1,9]],0,0,[6,10],[10,6],[[]],[[]],[[]],[[]],[[]],[[]],[[4,39,[3,[2]],40]],[[4,39,40]],[[4,39,[3,[2]],17,40]],[[4,39,17,40]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[7,[13,[5]],[15,[[3,[14]]]],[15,[[3,[14]]]]],16],[[17,7,[13,[5]],[15,[[3,[14]]]],[15,[[3,[14]]]]],16],[[17,29]],[[4,39]],[[4,36]],[[1,9],1],[[1,9],1],0,0,[[]],[[]],[18],[18],[18],[[42,25],43],[[42,25],43],[[]],[44,42],[[],18],[[]],[[],24],[[],16],[[],16],[[],41],[[[13,[5]],[3,[14]]],[[46,[5,45]]]],[[[13,[5]],[3,[14]],5],[[46,[5,45]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[[0,[47,35]]]]],[[38,[[0,[47,35]]]]]],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[50]],4,[3,[2]]]],[[[38,[52]],4,[3,[2]]]],[[[38,[53]],4,[3,[2]]]],[[[38,[51]],4,[3,[2]]]],[[[38,[54]],4,[3,[2]]]],[[[38,[48]],4,2]],[[[38,[49]],4,56]],[[[38,[55]],4,[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],0,[[36,32],[[16,[36,24]]]],[[]],[[]],[[57,32],[[16,[36,24]]]],[18],[18],[18],[58],[[]],[[],18],[[]],[[36,32,36],[[16,[58,24]]]],[[36,32,36],[[16,[58,24]]]],[[58,13]],[[],16],[[],16],[[],41],[[36,32],[[16,[36,24]]]],[[36,32,36],[[16,[58,24]]]],[[36,32,36],[[16,[58,24]]]],[[36,32,36],[[16,[58,24]]]]],"c":[],"p":[[3,"TextureSettings"],[15,"f32"],[15,"array"],[3,"GlGraphics"],[15,"u8"],[4,"OpenGL"],[4,"Format"],[4,"Filter"],[4,"Wrap"],[4,"GLSL"],[4,"Ordering"],[15,"bool"],[15,"slice"],[15,"u32"],[8,"Into"],[4,"Result"],[3,"Texture"],[15,"usize"],[3,"Viewport"],[8,"FnOnce"],[3,"Context"],[3,"Colored"],[3,"Textured"],[3,"String"],[3,"Formatter"],[3,"Error"],[3,"Version"],[4,"Option"],[6,"RgbaImage"],[3,"Path"],[8,"AsRef"],[15,"str"],[3,"Shaders"],[8,"PickShader"],[8,"Sized"],[6,"GLuint"],[8,"UniformType"],[3,"ShaderUniform"],[3,"DrawState"],[8,"FnMut"],[3,"TypeId"],[4,"Error"],[6,"Result"],[3,"Error"],[3,"Global"],[3,"Vec"],[8,"Clone"],[3,"SUFloat"],[3,"SUInt"],[3,"SUVec2"],[3,"SUVec3"],[3,"SUVec4"],[3,"SUMat2x2"],[3,"SUMat3x3"],[3,"SUMat4x4"],[15,"i32"],[6,"GLenum"],[3,"DynamicAttribute"],[8,"TextureOp"],[8,"CreateTexture"],[8,"ImageSize"],[8,"UpdateTexture"]]},\
"ordered_float":{"doc":"Wrappers for total order on Floats.","t":"DDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["FloatIsNaN","NotNaN","OrderedFloat","add","add","add_assign","add_assign","add_assign","add_assign","as_mut","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","default","deref","deref","deref_mut","description","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","into","into","into","into","into","into","into","into","into_inner","into_inner","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","neg","new","partial_cmp","partial_cmp","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_new"],"q":[[0,"ordered_float"]],"d":["An error indicating an attempt to construct NotNaN from a …","A wrapper around Floats providing an implementation of Ord …","A wrapper around Floats providing an implementation of Ord …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","Get the value out.","Get the value out.","","","","","","","","Create a NotNaN value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a NotNaN value from a value that is guaranteed to …"],"i":[0,0,0,2,2,2,2,2,2,5,5,2,5,2,7,5,2,7,5,2,7,5,2,7,5,2,5,2,5,2,5,7,2,2,2,2,2,2,5,2,7,5,2,7,5,5,2,2,7,7,5,5,5,2,2,2,7,5,2,5,5,5,2,2,2,7,7,5,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,7,5,2,7,5,2,7,5,2,7,5,2,7,2],"f":[0,0,0,[[[2,[1]],[2,[1]]],[[2,[1]]]],[[[2,[1]],1],[[2,[1]]]],[[[2,[3]],3]],[[[2,[4]],[2,[4]]]],[[[2,[4]],4]],[[[2,[3]],[2,[3]]]],[[[5,[1]]],1],[[[5,[1]]],1],[[[2,[1]]],1],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[[0,[6,1]]]]],[[5,[[0,[6,1]]]]]],[[[2,[[0,[6,1]]]]],[[2,[[0,[6,1]]]]]],[7,7],[[]],[[]],[[]],[[[5,[[0,[1,8]]]],[5,[[0,[1,8]]]]],9],[[[2,[[0,[1,8]]]],[2,[[0,[1,8]]]]],9],[[],[[5,[[0,[10,1]]]]]],[[],[[2,[[0,[10,1]]]]]],[[[5,[1]]]],[[[2,[1]]]],[[[5,[1]]]],[7,11],[[[2,[1]],[2,[1]]],[[2,[1]]]],[[[2,[1]],1],[[2,[1]]]],[[[2,[4]],[2,[4]]]],[[[2,[3]],[2,[3]]]],[[[2,[3]],3]],[[[2,[4]],4]],[[[5,[[0,[1,12]]]],[5,[[0,[1,12]]]]],13],[[[2,[[0,[12,1]]]],[2,[[0,[12,1]]]]],13],[[7,7],13],[[],13],[[],13],[[],13],[[[5,[[0,[1,14]]]],15],16],[[[5,[[0,[17,1]]]],15],16],[[[2,[[0,[1,14]]]],15],16],[[[2,[[0,[17,1]]]],15],16],[[7,15],16],[[7,15],16],[[]],[18],[1,[[5,[1]]]],[[]],[1,[[2,[1]]]],[18],[[]],[[[5,[1]],19]],[[[2,[1]],19]],[[[5,[4]]],4],[[]],[[[5,[3]]],3],[[]],[[[2,[4]]],4],[[[2,[3]]],3],[[]],[7,20],[[[5,[1]]],1],[[[2,[1]]],1],[[[2,[1]],1],[[2,[1]]]],[[[2,[1]],[2,[1]]],[[2,[1]]]],[[[2,[3]],3]],[[[2,[4]],[2,[4]]]],[[[2,[3]],[2,[3]]]],[[[2,[4]],4]],[[[2,[1]]],[[2,[1]]]],[1,[[21,[[2,[1]],7]]]],[[[5,[[0,[1,8]]]],[5,[[0,[1,8]]]]],[[22,[9]]]],[[[2,[[0,[8,1]]]],[2,[[0,[8,1]]]]],[[22,[9]]]],[[[2,[1]],[2,[1]]],[[2,[1]]]],[[[2,[1]],1],[[2,[1]]]],[[[2,[4]],[2,[4]]]],[[[2,[4]],4]],[[[2,[3]],[2,[3]]]],[[[2,[3]],3]],[[[2,[1]],1],[[2,[1]]]],[[[2,[1]],[2,[1]]],[[2,[1]]]],[[[2,[4]],4]],[[[2,[3]],[2,[3]]]],[[[2,[3]],3]],[[[2,[4]],[2,[4]]]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],24],[[],24],[[],24],[1,[[2,[1]]]]],"c":[],"p":[[8,"Float"],[3,"NotNaN"],[15,"f32"],[15,"f64"],[3,"OrderedFloat"],[8,"Clone"],[3,"FloatIsNaN"],[8,"PartialOrd"],[4,"Ordering"],[8,"Default"],[15,"str"],[8,"PartialEq"],[15,"bool"],[8,"Display"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"never"],[8,"Hasher"],[3,"Error"],[4,"Result"],[4,"Option"],[3,"String"],[3,"TypeId"]]},\
"owned_ttf_parser":{"doc":"Extends ttf_parser with owned version of <code>Face</code>: <code>OwnedFace</code>.","t":"NINNNNENNNNNNNNDNIEDDIDNNNNNNNNDDDDNDNNNNNNNNNNNNNNDNNIDNEDDEDDNDSDNNNEDNNNNNNDDEENNAMMAKLLLLLLLLLAMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMAMAMMAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKAMMLLLLKMMLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMAMMLLLLAMMLLLLLLLLLLLLLAMMAMMAMMLLLAMMLLMAMMMAMMAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMAMMLLLLKAMMAMMMAMMKAMMAMMAMLLLLLLAAMMLKLLLLLMMAMMKLAMMKLLLLLLLLLLLLAMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLAMMMMAMMMMLLLMMLMMMMMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDDGDDLLLLLLLLLLALLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMLLLLALLLLLLLLLLLLLLLLLLLLLLRRRRDDDDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMLLLLLLLLLLLLLLLDLLLLLLLLLLLLLDLLLLLLLLLLLLDLLLLLLLLLLLLLLDLLLLLLLLLLLLLLNENENNNNNDDDDDDDDDDDDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLMMMLLLMMLLLLLLLLLLLLLLLLLLLDDMLLLLLLLLMLLLLLMLLMMMLLMLLLLLLLLNNENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLDDNDNNDDENNNNNDDDNDNDNDNEDDENEDDNDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMMMLMMMMMMMMMMMMNDGDNNNNDNGGDNDNDDGNEEMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDLLLLLLLLLLLLLENNDLLLLLLLLLLLLLMMLLLLLLLLLLLMDMLLLLMLLLMMLLLLLDDLMMLLLLLLLLLLLLLLMMLLLMLLLLLLLLDLLLLLLLLLLLLLLENNNNDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDENNNNNDDDDDDDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMNNELLLLLLLLLLLLLLDLLLLLLLMLLLLLDDDNDDDDNDDNDNNDEDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLNNNDDDEDNNLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLMMMLLLMLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRREDGGGEEEDGGDNNNNNNNNNNGDGDDDGGIDDDDIDDGGDDGGGMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMMMLMLLKKLLLLLLMLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNDNNNEDNNNEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMDDLLLLLLLLLLLLLLLLMMLMLLLLLLLLLMDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLMLLLLMLLLLLLLLLLLLLLLMMMDMLLLLLMLLLMMLLLLLDDLLLLLLLLMLLLLMLLLMLLLLLLLLLLM","n":["ArgumentsStackLimitReached","AsFaceRef","BboxOverflow","Black","BlendRegionsLimitReached","Bold","CFFError","Condensed","Custom","DataAfterEndChar","Expanded","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","Face","FaceIndexOutOfBounds","FaceMut","FaceParsingError","FaceTables","Fixed","FromData","GlyphId","InvalidArgumentsStackLength","InvalidItemVariationDataIndex","InvalidNumberOfBlendOperands","InvalidOperator","InvalidSeacCode","InvalidSubroutineIndex","Iso","Italic","LazyArray16","LazyArray32","LazyArrayIter16","LazyArrayIter32","Light","LineMetrics","Macintosh","MalformedFont","Medium","MissingEndChar","MissingMoveTo","NestingLimitReached","NoGlyph","NoHeadTable","NoHheaTable","NoLocalSubroutines","NoMaxpTable","Normal","Normal","Normal","NormalizedCoordinate","Oblique","Other","OutlineBuilder","OwnedFace","PNG","PlatformId","PreParsedSubtables","RasterGlyphImage","RasterImageFormat","RawFace","RawFaceTables","ReadOutOfBounds","Rect","SIZE","ScriptMetrics","SemiBold","SemiCondensed","SemiExpanded","Style","Tag","Thin","UltraCondensed","UltraExpanded","Unicode","UnknownMagic","UnsupportedOperator","Variation","VariationAxis","Weight","Width","Windows","ZeroBBox","ankr","ankr","ankr","apple_layout","as_face_ref","as_face_ref","as_face_ref","as_face_ref","as_face_ref","as_face_ref","as_face_ref","as_slice","as_u32","ascender","avar","avar","avar","axis","binary_search","binary_search","binary_search_by","binary_search_by","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capital_height","cbdt","cbdt","cbdt","cblc","cblc","cff","cff","cff","cff2","cff2","cff2","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmap","cmap","cmap","cmp","cmp","count","count","curve_to","data","def_value","default","default","default","default","default","default","descender","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","feat","feat","feat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fonts_in_collection","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes_lossy","from_raw_tables","from_slice","from_slice","from_vec","fvar","fvar","fvar","gdef","gdef","gdef","get","get","get","global_bounding_box","glyf","glyf","glyf","glyph_bounding_box","glyph_hor_advance","glyph_hor_side_bearing","glyph_index","glyph_index","glyph_name","glyph_raster_image","glyph_svg_image","glyph_variation_index","glyph_ver_advance","glyph_ver_side_bearing","glyph_y_origin","glyphs_hor_kerning","gpos","gpos","gpos","gsub","gsub","gsub","gvar","gvar","gvar","has_non_default_variation_coordinates","hash","hash","head","head","head","height","height","height","hhea","hhea","hhea","hidden","hmtx","hmtx","hmtx","hvar","hvar","hvar","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_vec","is_bold","is_empty","is_italic","is_monospaced","is_null","is_oblique","is_regular","is_variable","italic_angle","kern","kern","kern","kerx","kerx","kerx","last","len","len","line_gap","line_to","loca","loca","max_value","maxp","maxp","maxp","min_value","morx","morx","morx","move_to","mvar","mvar","mvar","name","name","name","name_id","name_id","names","new","new","next","next","number_of_glyphs","opentype_layout","os2","os2","os2","outline_glyph","parse","parse","parse","parse","partial_cmp","partial_cmp","pixels_per_em","position","post","post","post","quad_to","range","sbix","sbix","sbix","set_variation","set_variation","set_variation","set_variation","set_variation","set_variation","set_variation","set_variation","slice","strikeout_metrics","style","subscript_metrics","superscript_metrics","svg","svg","svg","table","table_data","tables","tag","thickness","to_bytes","to_chars","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","trak","trak","trak","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typographic_ascender","typographic_descender","typographic_line_gap","underline_metrics","units_per_em","value","variation_axes","variation_coordinates","vertical_ascender","vertical_descender","vertical_height","vertical_line_gap","vhea","vhea","vhea","vmtx","vmtx","vorg","vorg","vorg","vvar","vvar","weight","width","width","width","x","x_height","x_max","x_min","x_offset","x_size","y","y_max","y_min","y_offset","y_size","Point","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","fmt","fmt","from","from","into","into","parse","parse","points","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y","ExtendedStateTable","GenericStateEntry","Lookup","StateEntry","StateTable","ValueOffset","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class","class","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","entry","entry","extra","flags","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","has_advance","has_mark","has_offset","has_push","has_reset","into","into","into","into","into","kerning","new_state","new_state","next","parse","parse","parse","state","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","value_offset","DELETED_GLYPH","END_OF_TEXT","OUT_OF_BOUNDS","START_OF_TEXT","AxisValueMap","SegmentMaps","SegmentMapsIter","Table","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from_coordinate","into","into","into","into","into_iter","into_iter","len","map_coordinates","next","parse","parse","segment_maps","to_coordinate","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","get","into","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","glyph_name","into","outline","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","ByteEncodingTable","Format","Found","GlyphVariationResult","HighByteMappingThroughTable","ManyToOneRangeMappings","MixedCoverage","SegmentMappingToDeltaValues","SegmentedCoverage","Subtable","Subtable0","Subtable10","Subtable12","Subtable13","Subtable14","Subtable2","Subtable4","Subtable6","Subtables","SubtablesIter","Table","TrimmedArray","TrimmedTableMapping","UnicodeVariationSequences","UseDefault","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","default","encoding_id","eq","first_code_point","first_code_point","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","glyph_ids","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_variation_index","glyphs","glyphs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_unicode","len","next","parse","parse","parse","parse","parse","parse","parse","parse","parse","platform_id","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","FeatureName","FeatureNames","FeatureNamesIter","SettingName","Table","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default_setting_index","exclusive","feature","find","fmt","fmt","fmt","fmt","from","from","from","from","from","get","into","into","into","into","into","into_iter","into_iter","len","name_index","name_index","names","next","parse","parse","setting","setting_names","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Table","VariationAxis","axes","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","def_value","eq","fmt","fmt","from","from","hidden","into","into","max_value","min_value","name_id","parse","parse","tag","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Base","Component","GlyphClass","Ligature","Mark","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","eq","equivalent","fmt","from","from","glyph_class","glyph_mark_attachment_class","glyph_variation_delta","has_glyph_classes","hash","into","into","is_mark_glyph","parse","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","Anchor","AnchorMatrix","ChainContext","ClassMatrix","Context","Cursive","CursiveAdjustment","CursiveAnchorSet","Device","Format1","Format1","Format2","Format2","Hinting","HintingDevice","LigatureArray","MarkArray","MarkToBase","MarkToBaseAdjustment","MarkToLigature","MarkToLigatureAdjustment","MarkToMark","MarkToMarkAdjustment","Pair","PairAdjustment","PairSet","PairSets","PositioningSubtable","Single","SingleAdjustment","ValueRecord","ValueRecordsArray","Variation","VariationDevice","anchors","base_coverage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cols","coverage","coverage","coverage","coverage","default","entry","exit","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","get","get","get","inner_index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","len","len","len","len","len","ligature_array","ligature_coverage","mark1_coverage","mark2_coverage","mark2_matrix","mark_coverage","mark_coverage","marks","marks","marks","outer_index","parse","rows","sets","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","x","x_advance","x_advance_device","x_delta","x_device","x_placement","x_placement_device","y","y_advance","y_advance_device","y_delta","y_device","y_placement","y_placement_device","classes","coverage","coverage","matrix","sets","coverage","coverage","value","values","Alternate","AlternateSet","AlternateSets","AlternateSubstitution","ChainContext","Context","Format1","Format2","Ligature","Ligature","LigatureSet","LigatureSets","LigatureSubstitution","Multiple","MultipleSubstitution","ReverseChainSingle","ReverseChainSingleSubstitution","Sequence","SequenceList","Single","SingleSubstitution","SubstitutionSubtable","alternate_sets","alternates","backtrack_coverages","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components","coverage","coverage","coverage","coverage","coverage","coverage","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","glyph","into","into","into","into","into","into","into","into","into","is_reverse","ligature_sets","lookahead_coverages","parse","sequences","substitutes","substitutes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","coverage","coverage","delta","substitutes","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","IndexToLocationFormat","Long","Short","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","from","from","global_bbox","index_to_location_format","into","into","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","units_per_em","Table","ascender","borrow","borrow_mut","clone","clone_into","descender","fmt","from","into","line_gap","number_of_metrics","parse","to_owned","try_from","try_into","type_id","Metrics","Table","advance","advance","bearings","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","metrics","number_of_metrics","parse","parse","side_bearing","side_bearing","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Table","advance_offset","borrow","borrow_mut","clone","clone_into","fmt","from","into","parse","side_bearing_offset","to_owned","try_from","try_into","type_id","Format","Format0","Format1","Format2","Format3","KerningPair","Subtable","Subtable0","Subtable2","Subtable3","Subtables","SubtablesIter","Table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","has_cross_stream","has_state_machine","horizontal","into","into","into","into","into","into","into","into","into","into_iter","into_iter","left","len","next","pair","pairs","parse","parse","parse","parse","parse","right","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","variable","AnchorPoints","EntryData","Format","Format0","Format1","Format2","Format4","Format6","Subtable","Subtable0","Subtable1","Subtable2","Subtable4","Subtable6","Subtables","SubtablesIter","Table","action_index","anchor_points","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","get","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","has_cross_stream","has_state_machine","horizontal","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","next","pairs","parse","parse","state_table","state_table","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple_count","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variable","Long","Short","Table","borrow","borrow_mut","clone","clone_into","fmt","from","glyph_range","into","len","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","number_of_glyphs","parse","to_owned","try_from","try_into","type_id","Chain","Chains","ChainsIter","Contextual","ContextualEntryData","ContextualSubtable","Coverage","Feature","Insertion","InsertionEntryData","InsertionSubtable","Ligature","LigatureSubtable","NonContextual","Rearrangement","Subtable","SubtableKind","Subtables","SubtablesIter","Table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chains","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components","coverage","current_index","current_insert_index","default_flags","disable_flags","enable_flags","feature_flags","features","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","glyphs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_all_directions","is_backwards","is_logical","is_vertical","kind","kind","ligature_actions","ligatures","lookup","mark_index","marked_insert_index","next","next","parse","parse","parse","parse","setting","state","state","state","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","metric_offset","parse","to_owned","try_from","try_into","type_id","Custom","Iso","Macintosh","Name","Names","NamesIter","PlatformId","Table","Unicode","Windows","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","count","default","default","encoding_id","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","get","into","into","into","into","into","into_iter","into_iter","is_unicode","language_id","len","name","name_id","names","next","parse","parse","platform_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","COMPATIBLE_FULL","COPYRIGHT_NOTICE","DARK_BACKGROUND_PALETTE","DESCRIPTION","DESIGNER","DESIGNER_URL","FAMILY","FULL_NAME","LICENSE","LICENSE_URL","LIGHT_BACKGROUND_PALETTE","MANUFACTURER","POST_SCRIPT_CID","POST_SCRIPT_NAME","SAMPLE_TEXT","SUBFAMILY","TRADEMARK","TYPOGRAPHIC_FAMILY","TYPOGRAPHIC_SUBFAMILY","UNIQUE_ID","VARIATIONS_POST_SCRIPT_NAME_PREFIX","VENDOR_URL","VERSION","WWS_FAMILY","WWS_SUBFAMILY","ChainedContextLookup","ChainedSequenceRule","ChainedSequenceRuleSet","ChainedSequenceRuleSets","Class","ClassDefinition","ContextLookup","Coverage","Feature","FeatureIndex","FeatureList","FeatureVariations","Format1","Format1","Format1","Format1","Format2","Format2","Format2","Format2","Format3","Format3","LanguageIndex","LanguageSystem","LanguageSystemList","LayoutTable","Lookup","LookupFlags","LookupIndex","LookupList","LookupSubtable","LookupSubtables","LookupSubtablesIter","RangeRecord","RecordList","RecordListItem","RecordListIter","Script","ScriptIndex","ScriptList","SequenceLookupRecord","SequenceRule","SequenceRuleSet","SequenceRuleSets","VariationIndex","backtrack","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","coverage","coverage","default_language","end","feature_indices","features","find","find_index","find_substitute","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","ignore_base_glyphs","ignore_flags","ignore_ligatures","ignore_marks","index","input","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","languages","len","len","lookahead","lookup_indices","lookup_list_index","lookups","lookups","lookups","mark_attachment_type","mark_filtering_set","next","next","parse","parse","parse","parse","parse","parse","parse","parse","required_feature","right_to_left","scripts","sequence_index","start","subtables","tag","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_mark_filtering_set","value","variations","backtrack_classes","backtrack_coverages","coverage","coverage","coverage","input_classes","input_coverages","lookahead_classes","lookahead_coverages","lookups","sets","sets","classes","records","start","classes","coverage","coverage","coverage","coverages","lookups","sets","sets","glyphs","records","Black","Bold","Condensed","Expanded","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","Italic","Light","Medium","Normal","Normal","Normal","Oblique","Other","ScriptMetrics","SemiBold","SemiCondensed","SemiExpanded","Style","Table","Thin","UltraCondensed","UltraExpanded","Weight","Width","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capital_height","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","into","into","into","into","into","is_bold","parse","partial_cmp","strikeout_metrics","style","subscript_metrics","superscript_metrics","to_number","to_number","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","typographic_ascender","typographic_descender","typographic_line_gap","use_typographic_metrics","version","weight","width","windows_ascender","windows_descender","x_height","x_offset","x_size","y_offset","y_size","Names","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","get","into","into","is_monospaced","italic_angle","len","names","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","underline_metrics","Strike","Strikes","StrikesIter","Table","best_strike","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","get","get","into","into","into","into","into_iter","into_iter","len","len","next","parse","pixels_per_em","ppi","strikes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","SvgDocumentsList","SvgDocumentsListIter","Table","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","documents","find","fmt","fmt","from","from","from","get","into","into","into","into_iter","into_iter","len","next","parse","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Table","Track","TrackData","Tracks","TracksIter","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from","get","horizontal","into","into","into","into","into","into_iter","into_iter","len","name_index","next","parse","sizes","to_owned","to_owned","to_owned","to_owned","tracks","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","values","vertical","Table","ascender","borrow","borrow_mut","clone","clone_into","default","descender","fmt","from","into","line_gap","number_of_metrics","parse","to_owned","try_from","try_into","type_id","Table","VerticalOriginMetrics","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default_y","fmt","fmt","from","from","glyph_id","glyph_y_origin","into","into","metrics","parse","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","y"],"q":[[0,"owned_ttf_parser"],[579,"owned_ttf_parser::ankr"],[610,"owned_ttf_parser::apple_layout"],[693,"owned_ttf_parser::apple_layout::class"],[696,"owned_ttf_parser::apple_layout::state"],[697,"owned_ttf_parser::avar"],[751,"owned_ttf_parser::cbdt"],[765,"owned_ttf_parser::cblc"],[778,"owned_ttf_parser::cff"],[793,"owned_ttf_parser::cff2"],[808,"owned_ttf_parser::cmap"],[1027,"owned_ttf_parser::feat"],[1099,"owned_ttf_parser::fvar"],[1133,"owned_ttf_parser::gdef"],[1172,"owned_ttf_parser::glyf"],[1186,"owned_ttf_parser::gpos"],[1491,"owned_ttf_parser::gpos::PairAdjustment"],[1496,"owned_ttf_parser::gpos::SingleAdjustment"],[1500,"owned_ttf_parser::gsub"],[1639,"owned_ttf_parser::gsub::SingleSubstitution"],[1643,"owned_ttf_parser::gvar"],[1657,"owned_ttf_parser::head"],[1688,"owned_ttf_parser::hhea"],[1705,"owned_ttf_parser::hmtx"],[1738,"owned_ttf_parser::hvar"],[1753,"owned_ttf_parser::kern"],[1889,"owned_ttf_parser::kerx"],[2062,"owned_ttf_parser::loca"],[2079,"owned_ttf_parser::maxp"],[2093,"owned_ttf_parser::morx"],[2313,"owned_ttf_parser::mvar"],[2327,"owned_ttf_parser::name"],[2410,"owned_ttf_parser::name_id"],[2435,"owned_ttf_parser::opentype_layout"],[2742,"owned_ttf_parser::opentype_layout::ChainedContextLookup"],[2754,"owned_ttf_parser::opentype_layout::ClassDefinition"],[2757,"owned_ttf_parser::opentype_layout::ContextLookup"],[2765,"owned_ttf_parser::opentype_layout::Coverage"],[2767,"owned_ttf_parser::os2"],[2890,"owned_ttf_parser::post"],[2922,"owned_ttf_parser::sbix"],[2978,"owned_ttf_parser::svg"],[3022,"owned_ttf_parser::trak"],[3093,"owned_ttf_parser::vhea"],[3111,"owned_ttf_parser::vorg"]],"d":["","Used to perform a cheap conversion to a <code>Face</code> reference.","","","","","A list of errors that can occur during a CFF glyph …","","","","","","","","","A font face.","The face index is larger than the number of faces in the …","Trait exposing mutable operations on a <code>ttf_parser::Face</code>.","A list of font face parsing errors.","Parsed face tables.","A 32-bit signed fixed-point number (16.16).","A trait for parsing raw binary data of fixed size.","A type-safe wrapper for glyph ID.","","","","","","","","A form that is generally cursive in nature.","A slice-like container that converts internal binary data …","A slice-like container that converts internal binary data …","An iterator over <code>LazyArray16</code>.","An iterator over <code>LazyArray32</code>.","","A line metrics.","","An attempt to read out of bounds detected.","","","","","","The <code>head</code> table is missing or malformed.","The <code>hhea</code> table is missing or malformed.","","The <code>maxp</code> table is missing or malformed.","","","A face that is neither italic not obliqued.","A variation coordinate in a normalized coordinate system.","A typically-sloped version of the regular face.","","A trait for glyph outline construction.","An owned version of font <code>Face</code>.","","A platform ID.","A <code>Face</code> with cmap &amp; kern subtables parsed once on …","A glyph’s raster image.","A glyph raster image format.","A raw font face.","A list of all supported tables as raw data.","","A rectangle.","Object’s raw data size.","A script metrics used by subscript and superscript.","","","","A face style.","A 4-byte tag.","","","","","Face data must start with <code>0x00010000</code>, <code>0x74727565</code>, …","","A font variation value.","A variation axis.","A face weight.","A face width.","","","An Anchor Point Table implementation.","","","This module contains Apple Advanced Typography Layout …","Convert to a <code>Face</code> reference.","","","","","","","Extracts a slice containing the data passed into …","Returns tag value as <code>u32</code> number.","Returns a horizontal face ascender.","An Axis Variations Table implementation.","","","An axis tag name.","Performs a binary search by specified <code>key</code>.","Performs a binary search by specified <code>key</code>.","Performs a binary search using specified closure.","Performs a binary search using specified closure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns face’s capital height.","A Color Bitmap Data Table implementation.","","","A Color Bitmap Location Table implementation.","","A Compact Font Format Table implementation.","","","A Compact Font Format 2 Table implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends a ClosePath segment.","A Character to Glyph Index Mapping Table implementation.","","","","","","","Appends a CurveTo segment.","A raw image data. It’s up to the caller to decode it.","","","","","","","","Returns a horizontal face descender.","","","","","","","","","","","","","A Feature Name Table implementation.","","","","","","","","","","","","","","","","","","","","","","Returns the number of fonts stored in a TrueType font …","An image format.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new coordinate.","Returns the argument unchanged.","Creates a new coordinate.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>Tag</code> from bytes.","Creates a <code>Tag</code> from bytes.","Creates a new <code>Face</code> from provided <code>RawFaceTables</code>.","Creates a new <code>RawFace</code> from a raw data.","Creates a new <code>Face</code> from a raw data.","Creates an <code>OwnedFace</code> from owned data.","A Font Variations Table implementation.","","","A Glyph Definition Table implementation.","","","Returns a value at <code>index</code>.","Returns a value at <code>index</code>.","Returns the coordinate value as f2.14.","Returns a bounding box that large enough to enclose any …","A Glyph Data Table implementation.","","","Returns a tight glyph bounding box.","Returns glyph’s horizontal advance.","Returns glyph’s horizontal side bearing.","Maps a character to a <code>GlyphId</code> using pre-parsed unicode …","Resolves a Glyph ID for a code point.","Returns glyph’s name.","Returns a reference to a glyph’s raster image.","Returns a reference to a glyph’s SVG image.","Resolves a variation of a Glyph ID from two code points.","Returns glyph’s vertical advance.","Returns glyph’s vertical side bearing.","Returns glyph’s vertical origin according to Vertical …","Returns horizontal kerning for a pair of glyphs using …","A Glyph Positioning Table implementation.","","","A Glyph Substitution Table implementation.","","","A Glyph Variations Table implementation.","","","Checks that face has non-default variation coordinates.","","","A Font Header Table implementation.","","","Returns rect’s height.","Returns face’s height.","Image height.","A Horizontal Header Table implementation.","","","","A Horizontal/Vertical Metrics Table implementation.","","","A Horizontal/Vertical Metrics Variations Table …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Unwraps the data passed into <code>OwnedFace::from_vec</code>.","Checks that face is marked as <em>Bold</em>.","Checks if array is empty.","Checks that face is marked as <em>Italic</em>.","Checks that face is marked as <em>Monospaced</em>.","Checks if tag is null / <code>[0, 0, 0, 0]</code>.","Checks that face is marked as <em>Oblique</em>.","Checks that face is marked as <em>Regular</em>.","Checks that face is variable.","Returns face’s italic angle.","A Kerning Table implementation.","","","An Extended Kerning Table implementation.","","","Returns the last value.","Returns array’s length.","Returns array’s length.","Returns a horizontal face line gap.","Appends a LineTo segment.","An Index to Location Table implementation.","","","A Maximum Profile Table implementation.","","","","An Extended Glyph Metamorphosis Table implementation.","","","Appends a MoveTo segment.","A Metrics Variations Table implementation.","","","A Naming Table implementation.","","","A list of name ID’s.","An axis name in the <code>name</code> table.","Returns a list of names.","Creates a new <code>LazyArray</code>.","Creates a new <code>LazyArray</code>.","","","Returns a total number of glyphs in the face.","This module contains OpenType Layout supplementary tables …","A OS/2 and Windows Metrics Table implementation.","","","Outlines a glyph and returns its tight bounding box.","Parses an object from a raw data.","","","","","","A pixels per em of the selected strike.","Line position.","A PostScript Table implementation.","","","Appends a QuadTo segment.","Returns a <code>RangeRecord</code> for a glyph.","A Standard Bitmap Graphics Table implementation.","","","Sets a variation axis coordinate.","","","","","","","Sets a variation axis coordinate.","Returns sub-array.","Returns face’s strikeout metrics.","Returns face style.","Returns face’s subscript metrics.","Returns face’s superscript metrics.","An SVG Table implementation.","","","Returns the raw data of a selected table.","Returns the raw data of a selected table.","Returns low-level face tables.","","Line thickness.","Returns tag as 4-element byte array.","Returns tag as 4-element byte array.","","","","","","","","","","","","","","","","","","","","","","","A Tracking Table implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a horizontal typographic face ascender.","Returns a horizontal typographic face descender.","Returns a horizontal typographic face line gap.","Returns face’s underline metrics.","Returns face’s units per EM.","An axis value.","Returns an iterator over variation axes.","Returns the current normalized variation coordinates.","Returns a vertical face ascender.","Returns a vertical face descender.","Returns a vertical face height.","Returns a vertical face line gap.","A Vertical Header Table implementation.","","","","","A Vertical Origin Table implementation.","","","","","Returns face’s weight.","Returns rect’s width.","Returns face’s width.","Image width.","Horizontal offset.","Returns face’s x height.","","","X offset.","Horizontal face size.","Vertical offset.","","","Y offset.","Vertical face size.","An anchor point.","An Anchor Point Table.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Parses a table from raw data.","Returns a list of anchor points for the specified glyph.","","","","","","","","","","","An Extended State Table.","A State Table entry.","A lookup table.","A legacy state entry used by StateTable.","A State Table.","A type-safe wrapper for a kerning value offset.","","","","","","","","","","","Predefined classes.","Returns a glyph class.","Returns a glyph class.","","","","","","","","","","","Returns a class entry.","Returns a class entry.","Additional data.","Entry flags.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If set, advance to the next glyph before going to the new …","If set, remember this glyph as the marked glyph.","Checks that entry has an offset.","If set, push this glyph on the kerning stack.","If set, reset the kerning data (clear the stack).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns kerning at offset.","Produces a new state.","A new state.","Returns the next offset.","","Parses an Extended State Table from a stream.","Parses a lookup table from raw data.","Predefined states.","","","","","","","","","","","","","","","","","","","","","Returns a value associated with the specified glyph.","Returns a value offset.","","","","","An axis value map.","A list of segment maps.","An iterator over maps.","An Axis Variations Table.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A normalized coordinate value obtained using default …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of segments.","Maps coordinates.","","","Parses a table from raw data.","The segment maps array — one segment map for each axis …","The modified, normalized coordinate value.","","","","","","","","","","","","","","","","A Color Bitmap Data Table.","","","","","","Returns the argument unchanged.","Returns a raster image for the glyph.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","A Color Bitmap Location Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","A Compact Font Format Table.","","","","","","Returns the argument unchanged.","Returns a glyph name.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","A Compact Font Format 2 Table.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","","A character encoding subtable variant.","Glyph was found in the variation encoding table.","A result of a variation glyph mapping.","","","","","","A character encoding subtable.","A format 0 subtable.","A format 10 subtable.","A format 12 subtable.","A format 13 subtable.","A format 14 subtable.","A format 2 subtable.","A format 4 subtable.","A format 6 subtable.","A list of subtables.","An iterator over <code>Subtables</code>.","A Character to Glyph Index Mapping Table.","","","","Glyph should be looked in other, non-variation tables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for all codepoints contained in this subtable.","","Subtable encoding.","","First character code of subrange.","First character code covered.","","","","","","","","","","","","","","A subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a subtable at an index.","Just a list of 256 8bit glyph IDs.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Maps a character to a glyph ID.","Resolves a variation of a glyph ID from two code points.","Array of glyph indexes for character codes in the range.","Array of glyph indices for the character codes covered.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks that the current encoding is Unicode compatible.","Returns the number","","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a table from raw data.","Subtable platform.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A feature names.","A list fo feature names.","An iterator over <code>FeatureNames</code>.","A setting name.","A Feature Name Table.","","","","","","","","","","","","","","","","","","","The index of the default setting in the <code>setting_names</code>.","The feature’s exclusive settings. If set, the feature …","The feature’s ID.","Finds a feature name by ID.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a feature name at an index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of feature names.","The <code>name</code> table index for the feature’s name in a …","The <code>name</code> table index for the feature’s name in a …","A list of feature names. Sorted by <code>FeatureName.feature</code>.","","","Parses a table from raw data.","The setting.","The feature’s setting names.","","","","","","","","","","","","","","","","","","","","A Font Variations Table.","A variation axis.","A list of variation axes.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","An axis name in the <code>name</code> table.","","Parses a table from raw data.","","","","","","","","","","","","A glyph class.","","","A Glyph Definition Table.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns glyph’s class according to Glyph Class …","Returns glyph’s mark attachment class according to Mark …","Returns glyph’s variation delta at a specified index …","Checks that face has Glyph Class Definition Table.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks that glyph is a mark according to Mark Glyph Sets …","Parses a table from raw data.","","","","","","","","","","A Glyph Data Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","An Anchor Table.","An <code>Anchor</code> parsing helper.","","A <code>ValueRecord</code> pairs matrix used by <code>PairAdjustment</code>.","","","A Cursive Attachment Positioning Subtable.","A list of entry and exit <code>Anchor</code> pairs.","A Device Table.","","","","","","A Device Table hinting values.","An array or ligature anchor matrices.","A Mark Array.","","A Mark-to-Base Attachment Positioning Subtable.","","A Mark-to-Ligature Attachment Positioning Subtable.","","A Mark-to-Mark Attachment Positioning Subtable.","","A Pair Adjustment Positioning Subtable.","A <code>ValueRecord</code> pairs set used by <code>PairAdjustment</code>.","A list of <code>PairSet</code>s.","A glyph positioning lookup subtable enumeration.","","A Single Adjustment Positioning Subtable.","A Value Record.","An array of Value Records.","","A Device Table indexes into Item Variation Store.","An anchors matrix.","A base coverage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of columns in the matrix.","Returns the subtable coverage.","Returns the subtable coverage.","Returns the subtable coverage.","","","Returns an entry <code>Anchor</code> at index.","Returns an exit <code>Anchor</code> at index.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>ValueRecord</code> at index.","Returns a <code>ValueRecord</code> pair using the second glyph.","Returns a value at <code>index</code>.","Returns a <code>ValueRecord</code> pair using specified classes.","Returns an <code>AnchorMatrix</code> at index.","Returns contained data at index.","Returns an <code>Anchor</code> at position.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns array’s length.","Returns array’s length.","Returns the number of items.","Returns the array length.","Returns the array length.","","","","","","A mark coverage.","","A list of mark anchors.","","","","","Number of rows in the matrix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Horizontal value, in design units.","Horizontal adjustment for advance, in design units — …","A <code>Device</code> table with horizontal adjustment for advance.","Returns X-axis delta.","A <code>Device</code> table with horizontal value.","Horizontal adjustment for placement, in design units.","A <code>Device</code> table with horizontal adjustment for placement.","Vertical value, in design units.","Vertical adjustment for advance, in design units — only …","A <code>Device</code> table with vertical adjustment for advance.","Returns Y-axis delta.","A <code>Device</code> table with vertical value.","Vertical adjustment for placement, in design units.","A <code>Device</code> table with vertical adjustment for placement.","","","","","","","","","","","A list of glyphs for Alternate Substitution Subtable.","A set of <code>AlternateSet</code>.","A Alternate Substitution Subtable.","","","","","Glyph components for one ligature.","","A <code>Ligature</code> set.","A list of <code>Ligature</code> sets.","A Ligature Substitution Subtable.","","A Multiple Substitution Subtable.","","A Reverse Chaining Contextual Single Substitution Subtable.","A sequence of glyphs for Multiple Substitution Subtable.","A list of <code>Sequence</code> tables.","","A Single Substitution Subtable.","A glyph substitution lookup subtable enumeration.","","Array of alternate glyph IDs, in arbitrary order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Glyph components for one ligature.","Returns the subtable coverage.","Returns the subtable coverage.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Ligature to substitute.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks that the current subtable is <em>Reverse Chaining </em>…","","","","","A list of substitute glyphs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Glyph Variations Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","An index format used by the Index to Location Table.","","","A Font Header Table.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","A bounding box that large enough to enclose any glyph from …","An index format used by the Index to Location Table.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","","","","","Units per EM.","A Horizontal Header Table.","Face ascender.","","","","","Face descender.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Face line gap.","Number of metrics in the <code>hmtx</code> table.","Parses a table from raw data.","","","","","Horizontal/Vertical Metrics.","A Horizontal/Vertical Metrics Table.","Returns advance for a glyph.","Width/Height advance for <code>hmtx</code>/<code>vmtx</code>.","Side bearings for glyph IDs greater than or equal to the …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A list of metrics indexed by glyph ID.","Sum of long metrics + bearings.","","Parses a table from raw data.","Returns side bearing for a glyph.","Left/Top side bearing for <code>hmtx</code>/<code>vmtx</code>.","","","","","","","","","A Horizontal/Vertical Metrics Variations Table.","Returns advance offset for a glyph.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","Returns side bearing offset for a glyph.","","","","","A kerning subtable format.","","","","","A kerning pair.","A kerning subtable.","A format 0 subtable.","A format 2 subtable.","A format 3 subtable.","A list of subtables.","An iterator over kerning subtables.","A Kerning Table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Indicates that subtable has a cross-stream values.","Indicates that subtable uses a state machine.","Indicates that subtable is for horizontal text.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns left glyph ID.","Returns the number of subtables.","","Glyphs pair.","A list of kerning pairs.","","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a table from raw data.","Returns right glyph ID.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kerning value.","Indicates that subtable is variable.","A container of Anchor Points used by <code>Subtable4</code>.","A state machine entry.","An extended kerning subtable format.","","","","","","A kerning subtable.","A format 0 subtable.","A format 1 subtable.","A format 2 subtable.","A format 4 subtable.","A format 6 subtable.","A list of extended kerning subtables.","An iterator over extended kerning subtables.","An Extended Kerning Table.","An action index.","Anchor points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mark and current anchor points at action index.","Returns kerning for a pair of glyphs.","Returns kerning at action index.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Indicates that subtable has a cross-stream values.","Indicates that subtable uses a state machine.","Indicates that subtable is for horizontal text.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","A list of kerning pairs.","","Parses a table from raw data.","A state table.","A state table.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tuple count.","","","","","","","","","","","","","Indicates that subtable is variable.","Long offsets.","Short offsets.","An Index to Location Table.","","","","","","Returns the argument unchanged.","Returns glyph’s range in the <code>glyf</code> table.","Calls <code>U::from(self)</code>.","Returns offsets length.","Parses a table from raw data.","","","","","A Maximum Profile Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The total number of glyphs in the face.","Parses a table from raw data.","","","","","A metamorphosis chain.","A list of metamorphosis chains.","An iterator over metamorphosis chains.","","A contextual subtable state table trailing data.","A contextual subtable.","A subtable coverage.","The feature table is used to compute the sub-feature flags …","","A contextual subtable state table trailing data.","An insertion subtable.","","A ligature subtable.","","","A subtable in a metamorphosis chain.","A subtable kind.","A list of subtables in a metamorphosis chain.","An iterator over a metamorphosis chain subtables.","An Extended Glyph Metamorphosis Table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of metamorphosis chains.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ligature components.","A subtable coverage.","A current index.","A current insert index.","Default chain features.","Complement of flags for the settings that this feature and …","Flags for the settings that this feature and setting …","Subtable feature flags.","A list of chain features.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Insertion glyphs.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","If true, this subtable will be applied to both horizontal …","If true, this subtable will process glyphs in descending …","If true, this subtable will process glyphs in logical order","If true, this subtable will only be applied to vertical …","The type of feature.","A subtable kind.","Ligature actions.","Ligatures.","Returns a Lookup at index.","A mark index.","A marked insert index.","","","","","","Parses a table from raw data.","The feature’s setting (aka selector).","The contextual glyph substitution state table.","A state table.","A state table.","A list of chain subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Metrics Variations Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a metric offset by tag.","Parses a table from raw data.","","","","","","","","A Name Record.","A list of face names.","An iterator over face names.","A platform ID.","A Naming Table.","","","","","","","","","","","","","","","","","","","","","","","","","","A platform-specific encoding ID.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a name at index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks that the current Name data has a Unicode encoding.","A language ID.","Returns a number of name records.","A raw name data.","A Name ID.","A list of names.","","","Parses a table from raw data.","A platform ID.","","","","","","Returns the Name’s data as a UTF-8 string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Chained Contextual Lookup Subtable.","A Chained Sequence Rule.","A set of <code>ChainedSequenceRule</code>.","A list of <code>ChainedSequenceRule</code> sets.","A value of Class Definition Table.","A Class Definition Table.","A Contextual Lookup Subtable.","A Coverage Table.","A Feature.","An index in <code>FeatureList</code>.","A list of <code>Feature</code> records.","A Feature Variations Table.","Simple glyph contexts.","Simple glyph contexts.","","","Class-based glyph contexts.","Class-based glyph contexts.","","","Coverage-based glyph contexts.","Coverage-based glyph contexts.","An index in <code>LanguageSystemList</code>.","A Language System Table.","A list of <code>LanguageSystem</code> records.","A Layout Table.","A Lookup Table.","Lookup table flags.","An index in <code>LookupList</code>.","A list of <code>Lookup</code> values.","A trait for parsing Lookup subtables.","A list of lookup subtables.","An iterator over lookup subtables.","A record that describes a range of glyph IDs.","A data storage used by <code>ScriptList</code>, <code>LanguageSystemList</code> and …","A trait to parse item in <code>RecordList</code>.","An iterator over <code>RecordList</code> values.","A Script Table.","An index in <code>ScriptList</code>.","A list of <code>Script</code> records.","A sequence rule record.","A sequence rule.","A set of <code>SequenceRule</code>s.","A list of <code>SequenceRuleSet</code>s.","An index in <code>FeatureVariations</code>.","Contains either glyph IDs or glyph Classes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that glyph is present.","Returns the subtable coverage.","Returns the subtable coverage.","Default language.","Last glyph ID in the range","Array of indices into the FeatureList, in arbitrary order.","A list of all supported features.","Returns RecordList value by <code>Tag</code>.","Returns a <code>VariationIndex</code> for variation coordinates.","Returns a <code>Feature</code> at specified indices.","Lookup qualifiers.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Parses a subtable at index.","Returns RecordList value by index.","Returns the coverage index of the glyph or <code>None</code> if it is …","Returns the glyph class of the glyph (zero if it is not …","","","","","Returns RecordList value index by <code>Tag</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates an iterator over subtables.","","Checks that RecordList is empty.","List of supported languages, excluding the default one. …","Returns a number of items in the LookupSubtables.","Returns a number of items in the RecordList.","Contains either glyph IDs or glyph Classes.","","","","","A list of all lookups.","","Index into GDEF mark glyph sets structure.","","","Parses raw data.","Parses raw data.","","","","","","","Index of a feature required for this language system.","","A list of all supported scripts.","","First glyph ID in the range","Available subtables.","Script tag.","Language tag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Coverage Index of first glyph ID in range.","Used to substitute an alternate set of lookup tables to …","","","","","","","","","","","","","","","","","","","","","","","","Array of glyph IDs. Sorted.","Array of glyph ranges. Ordered by <code>RangeRecord.start</code>.","","","","","","","","","A form that is generally cursive in nature.","","","","","A face that is neither italic not obliqued.","A typically-sloped version of the regular face.","","A script metrics used by subscript and superscript.","","","","A face style.","A OS/2 and Windows Metrics Table.","","","","A face weight.","A face width.","","","","","","","","","","","Returns capital height.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if face is bold.","Parses a table from raw data.","","Returns strikeout metrics.","Returns style.","Returns subscript metrics.","Returns superscript metrics.","Returns a numeric representation of a weight.","Returns a numeric representation of a width.","","","","","","","","","","","","","","","","","","","","","Returns typographic ascender.","Returns typographic descender.","Returns typographic line gap.","Checks if typographic metrics should be used.","Table version.","Returns weight class.","Returns face width.","Returns Windows ascender.","Returns Windows descender.","Returns x height.","X offset.","Horizontal face size.","Y offset.","Vertical face size.","A list of glyph names.","A PostScript Table.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a glyph name by ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Flag that indicates that the font is monospaced.","Italic angle in counter-clockwise degrees from the …","Returns names count.","A list of glyph names.","Parses a table from raw data.","","","","","","","","","Underline metrics.","A strike of glyphs.","A list of <code>Strike</code>s.","An iterator over <code>Strikes</code>.","A Standard Bitmap Graphics Table.","Selects the best matching <code>Strike</code> based on <code>pixels_per_em</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a glyph data.","Returns a strike at the index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of glyphs in this strike.","Returns the number of strikes.","","Parses a table from raw data.","The pixels per EM size for which this strike was designed.","The device pixel density (in PPI) for which this strike …","A list of <code>Strike</code>s.","","","","","","","","","","","","","","","","A list of SVG documents.","An iterator over <code>SvgDocumentsList</code> values.","An SVG Table.","","","","","","","","","","","","","","A list of SVG documents.","Returns a SVG document data by glyph ID.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns SVG document data at index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of SVG documents in the list.","","Parses a table from raw data.","","","","","","","","","","","","","A Tracking Table.","A single track.","A track data.","A list of tracks.","An iterator over <code>Tracks</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a track at index.","Horizontal track data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of tracks.","The <code>name</code> table index for the track’s name.","","Parses a table from raw data.","A list of sizes.","","","","","A list of tracks.","","","","","","","","","","","","","","","","A track value.","A list of tracking values for each size.","Vertical track data.","A Vertical Header Table.","Face ascender.","","","","","","Face descender.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Face line gap.","Number of metrics in the <code>vmtx</code> table.","Parses a table from raw data.","","","","","A Vertical Origin Table.","Vertical origin metrics for the Vertical Origin Table.","","","","","","","","","Default origin.","","","Returns the argument unchanged.","Returns the argument unchanged.","Glyph ID.","Returns glyph’s Y origin.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A list of metrics for each glyph.","","Parses a table from raw data.","","","","","","","","","Y coordinate, in the font’s design coordinate system, of …"],"i":[20,0,20,58,20,58,0,59,177,20,59,58,59,59,58,0,28,0,0,0,0,0,0,20,20,20,20,20,20,177,53,0,0,0,0,58,0,177,28,58,20,20,20,20,28,28,20,28,58,59,53,0,53,58,0,0,26,0,0,0,0,0,0,20,0,11,0,58,59,59,0,0,58,59,59,177,28,20,0,0,0,0,177,20,0,30,31,0,3,2,2,4,4,1,1,2,7,1,0,30,31,23,12,14,12,14,2,4,17,12,18,14,19,20,21,22,23,7,24,25,26,27,28,29,30,31,1,2,4,17,12,18,14,19,20,21,22,23,7,24,25,26,27,28,29,30,31,1,1,0,30,31,0,30,0,30,31,0,30,31,4,17,12,18,14,19,20,21,22,23,7,24,25,26,27,28,29,30,31,1,4,17,12,18,14,19,20,21,22,23,7,24,25,26,27,28,29,30,31,1,49,0,30,31,21,7,18,19,49,27,57,12,18,14,21,22,30,1,20,21,22,23,7,24,25,26,27,28,21,7,0,30,31,2,4,17,12,14,20,21,22,23,7,7,24,25,26,27,28,28,29,1,0,27,2,4,4,4,17,12,18,14,19,20,21,22,22,22,23,7,24,25,26,27,28,29,30,31,1,7,7,1,29,1,2,0,30,31,0,30,31,12,14,22,1,0,30,31,1,1,1,4,1,1,1,1,1,1,1,1,4,0,30,31,0,30,31,0,30,31,1,21,7,0,30,31,25,1,27,0,30,31,57,0,30,31,0,30,31,2,4,17,12,18,14,19,20,21,22,23,7,24,25,26,27,28,29,30,31,1,12,18,14,19,2,1,12,1,1,7,1,1,1,1,0,30,31,0,30,31,12,12,14,1,49,0,30,57,0,30,31,57,0,30,31,49,0,30,31,0,30,31,0,57,1,12,14,18,19,1,0,0,30,31,1,11,17,21,7,21,7,27,24,0,30,31,49,12,0,30,31,51,2,2,4,4,1,1,1,12,1,1,1,1,0,30,31,29,1,1,57,24,7,7,4,17,12,18,14,19,20,21,22,23,7,24,25,26,27,28,29,30,31,1,7,28,0,30,31,2,4,17,12,18,14,19,20,21,22,23,7,24,25,26,27,28,29,30,31,1,2,4,17,12,18,14,19,20,21,22,23,7,24,25,26,27,28,29,30,31,1,2,4,17,12,18,14,19,20,21,22,23,7,24,25,26,27,28,29,30,31,1,1,1,1,1,1,23,1,1,1,1,1,1,0,30,31,30,31,0,30,31,30,31,1,25,1,27,27,1,25,25,54,54,27,25,25,54,54,0,0,60,61,60,61,60,61,60,61,60,60,60,61,60,61,60,61,60,61,61,60,61,60,61,60,61,60,61,60,60,0,0,0,0,0,0,65,66,63,64,67,65,66,63,64,67,0,63,64,65,66,63,64,67,65,66,63,64,67,63,64,65,65,65,66,63,64,67,65,66,63,64,67,65,65,65,65,65,65,66,63,64,67,63,63,65,66,65,64,67,0,65,66,63,64,67,65,66,63,64,67,65,66,63,64,67,65,66,63,64,67,67,65,0,0,0,0,0,0,0,0,72,69,70,71,72,69,70,71,69,70,71,69,70,71,69,70,71,72,69,70,71,69,72,69,70,71,72,70,70,71,72,69,71,71,69,69,70,71,72,69,70,71,72,69,70,71,72,69,70,71,0,73,73,73,73,73,73,73,73,73,73,73,73,73,0,74,74,74,74,74,74,74,74,74,74,74,74,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,86,0,84,0,86,86,86,86,86,0,0,0,0,0,0,0,0,0,0,0,0,86,86,86,84,90,77,78,79,80,81,82,83,84,85,86,87,88,89,90,77,78,79,80,81,82,83,84,85,86,87,88,89,77,78,79,80,81,82,83,84,85,86,87,88,89,77,78,79,80,81,82,83,84,85,86,87,88,89,77,78,79,80,81,82,83,87,88,87,84,80,81,77,78,79,80,81,82,83,84,85,86,87,88,89,87,90,77,78,79,80,81,82,83,84,85,86,87,88,89,88,77,77,78,79,80,81,82,83,85,87,87,80,81,90,77,78,79,80,81,82,83,84,85,86,87,88,89,90,88,87,88,90,77,78,79,80,81,82,83,85,89,87,89,77,78,79,80,81,82,83,84,85,86,87,88,89,90,77,78,79,80,81,82,83,84,85,86,87,88,89,90,77,78,79,80,81,82,83,84,85,86,87,88,89,90,77,78,79,80,81,82,83,84,85,86,87,88,89,0,0,0,0,0,95,91,92,93,94,95,91,92,93,94,91,92,93,94,91,92,93,94,92,92,92,93,91,92,93,94,95,91,92,93,94,93,95,91,92,93,94,95,93,93,91,92,94,95,91,94,91,92,91,92,93,94,95,91,92,93,94,95,91,92,93,94,95,91,92,93,94,0,0,96,57,96,57,96,57,96,57,96,57,57,57,96,57,96,57,57,96,57,57,57,57,96,57,57,96,57,96,57,96,57,96,97,97,0,97,97,0,97,98,97,98,97,98,97,98,97,98,97,97,97,97,98,98,98,98,98,97,97,98,98,98,97,97,98,97,98,97,98,97,98,0,99,99,99,99,99,99,99,99,99,99,99,99,99,0,0,120,0,120,120,0,0,0,106,110,106,110,103,0,0,0,120,0,120,0,120,0,120,0,0,0,0,120,0,0,0,103,0,113,113,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,118,106,110,120,112,104,111,111,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,105,107,108,109,115,116,118,102,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,105,108,111,115,116,114,114,119,119,119,113,114,113,114,119,102,120,118,112,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,117,104,104,101,117,104,104,117,104,104,101,117,104,104,218,219,218,218,219,220,221,220,221,131,0,0,0,131,131,123,123,0,131,0,0,0,131,0,131,0,0,0,131,0,0,127,126,130,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,131,128,123,131,125,127,129,130,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,131,128,123,124,125,126,127,128,129,130,131,131,129,130,131,125,124,130,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,131,222,223,222,223,0,132,132,132,132,132,132,132,132,132,132,132,132,132,0,133,133,0,133,134,133,134,133,134,133,134,133,133,134,133,134,134,134,133,134,134,133,134,133,134,133,134,133,134,134,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,0,136,137,136,137,136,137,136,137,136,137,136,137,136,137,136,137,136,136,136,137,136,136,137,137,136,137,136,137,136,137,136,0,138,138,138,138,138,138,138,138,138,138,138,138,138,138,0,140,140,140,140,0,0,0,0,0,0,0,0,139,140,141,142,143,144,145,146,147,139,140,141,142,143,144,145,146,147,139,140,141,142,143,144,145,146,147,139,140,141,142,143,144,145,146,147,143,139,140,141,142,144,145,146,147,141,139,140,141,142,143,144,145,146,147,141,144,145,146,141,141,141,139,140,141,142,143,144,145,146,147,142,143,139,142,143,139,144,139,144,145,146,147,139,147,139,140,141,142,143,144,145,146,147,139,140,141,142,143,144,145,146,147,139,140,141,142,143,144,145,146,147,139,140,141,142,143,144,145,146,147,139,141,0,0,0,155,155,155,155,155,0,0,0,0,0,0,0,0,0,149,153,148,149,150,151,152,153,154,155,156,157,158,159,148,149,150,151,152,153,154,155,156,157,158,159,148,149,150,151,152,153,154,155,156,157,158,159,148,149,150,151,152,153,154,155,156,157,158,159,150,153,148,149,150,151,152,153,154,155,156,157,159,156,148,149,150,151,152,153,154,155,156,157,158,159,152,148,150,151,154,156,156,156,156,148,149,150,151,152,153,154,155,156,157,158,159,157,158,158,148,149,159,150,153,159,148,149,150,151,152,153,154,155,156,157,158,159,148,149,150,151,152,153,154,155,156,157,158,159,148,149,150,151,152,153,154,155,156,157,158,159,156,148,149,150,151,152,153,154,155,156,157,158,159,156,100,100,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,160,160,160,160,160,160,160,160,160,160,160,160,160,0,0,0,167,0,0,0,0,167,0,0,167,0,167,167,0,0,0,0,0,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,175,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,164,169,162,165,172,161,161,169,172,161,162,163,164,165,166,167,168,169,170,172,173,175,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,166,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,170,171,173,174,168,168,168,168,161,169,164,164,163,162,165,171,174,161,162,165,175,161,163,164,166,172,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,0,176,176,176,176,176,176,176,176,176,176,176,176,176,177,177,177,0,0,0,0,0,177,177,177,178,48,179,180,177,178,48,179,180,177,178,48,179,180,177,178,48,179,180,179,48,180,178,177,177,178,48,180,177,178,48,179,180,48,177,178,48,179,180,48,179,178,178,48,178,178,180,179,177,180,178,177,178,48,179,180,178,177,178,48,179,180,177,178,48,179,180,177,178,48,179,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,181,184,121,196,181,184,121,196,181,184,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,185,198,199,181,182,183,184,185,186,187,188,189,191,192,193,194,195,50,121,196,198,199,181,182,183,184,185,186,187,188,189,191,192,193,194,195,50,121,196,181,182,183,184,185,186,187,188,189,191,192,193,194,195,50,121,196,181,182,183,184,185,186,187,188,189,191,192,193,194,195,50,121,196,121,181,184,192,50,193,189,191,195,195,186,181,182,183,184,185,186,187,188,189,191,192,193,194,195,50,121,196,198,199,181,182,183,184,185,186,187,188,189,191,192,193,194,195,50,121,196,187,191,121,196,188,188,188,188,191,182,185,198,199,181,182,183,184,185,186,187,188,189,191,192,193,194,195,50,121,196,198,199,187,191,191,192,187,191,185,194,183,182,185,189,188,186,198,199,197,190,183,188,192,193,194,50,193,188,189,183,50,186,192,193,194,181,182,183,184,185,186,187,188,189,191,192,193,194,195,50,121,196,198,199,181,182,183,184,185,186,187,188,189,191,192,193,194,195,50,121,196,198,199,181,182,183,184,185,186,187,188,189,191,192,193,194,195,50,121,196,198,199,181,182,183,184,185,186,187,188,189,191,192,193,194,195,50,121,196,188,50,189,224,225,226,224,225,224,225,224,225,225,226,224,227,228,227,229,230,229,231,231,231,230,229,232,233,58,58,59,59,58,59,59,58,53,58,58,58,59,53,53,58,0,58,59,59,0,0,58,59,59,0,0,58,59,53,54,200,58,59,53,54,200,200,58,59,53,54,200,58,59,53,54,200,59,58,59,53,58,59,53,54,58,59,53,54,58,59,53,54,200,58,58,59,53,54,200,58,59,53,54,58,59,53,54,200,200,200,59,200,200,200,200,58,59,58,59,53,54,200,58,59,53,54,200,58,59,53,54,200,58,59,53,54,200,200,200,200,200,200,200,200,200,200,200,54,54,54,54,0,0,201,202,201,202,201,202,201,202,201,201,202,201,202,201,201,202,202,202,201,202,202,201,202,201,202,201,202,201,202,202,0,0,0,0,203,206,204,205,203,206,204,205,203,204,205,203,204,205,203,204,205,203,206,204,205,203,204,205,206,204,205,203,206,205,204,205,206,203,204,204,203,204,205,203,206,204,205,203,206,204,205,203,206,204,205,203,0,0,0,207,208,209,207,208,209,207,208,209,207,208,209,208,209,207,207,209,207,208,209,207,207,208,209,207,208,207,208,209,207,208,209,207,208,209,207,208,209,207,208,209,0,0,0,0,0,214,210,211,212,213,214,210,211,212,213,210,211,212,213,210,211,212,213,211,212,210,211,212,213,214,210,211,212,213,211,213,214,210,211,212,213,214,211,211,210,214,213,212,210,211,212,213,212,214,210,211,212,213,214,210,211,212,213,214,210,211,212,213,210,210,213,0,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,0,0,216,217,216,217,216,217,216,217,217,216,217,216,217,216,217,216,217,217,216,217,216,217,216,217,216,217,216,217,216],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2,1],[2,1],[[[4,[3]]],1],[[[4,[3]]],1],[1,1],[1,1],[2,[[6,[5]]]],[7,8],[1,9],0,0,0,0,[[[12,[10,11]],10,11],13],[[[14,[10,11]],10,11],13],[[[12,[11]],15],13],[[[14,[11]],15],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[13,[9]]]],0,0,0,0,0,0,0,0,0,0,0,[[[4,[16]]],[[4,[16]]]],[17,17],[[[12,[16]]],[[12,[16]]]],[[[18,[16]]],[[18,[16]]]],[[[14,[16]]],[[14,[16]]]],[[[19,[16]]],[[19,[16]]]],[20,20],[21,21],[22,22],[23,23],[7,7],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[21,21],32],[[7,7],32],[[[18,[11]]],33],[[[19,[11]]],33],[[34,34,34,34,34,34]],0,0,[[],12],[[],[[18,[11]]]],[[],14],[[],21],[[],22],[[],30],[1,9],[[20,20],35],[[21,21],35],[[22,22],35],[[23,23],35],[[7,7],35],[[24,24],35],[[25,25],35],[[26,26],35],[[27,27],35],[[28,28],35],[[],35],[[],35],0,0,0,[[2,36],37],[[4,36],37],[[17,36],[[39,[38]]]],[[[12,[[0,[11,40,41]]]],36],[[39,[38]]]],[[[14,[[0,[11,40,41]]]],36],[[39,[38]]]],[[20,36],[[39,[38]]]],[[21,36],[[39,[38]]]],[[22,36],[[39,[38]]]],[[23,36],[[39,[38]]]],[[7,36],[[39,[38]]]],[[7,36],[[39,[38]]]],[[24,36],[[39,[38]]]],[[25,36],[[39,[38]]]],[[26,36],[[39,[38]]]],[[27,36],[[39,[38]]]],[[28,36],[[39,[38]]]],[[28,36],[[39,[38]]]],[[29,36],[[39,[38]]]],[[1,36],[[39,[38]]]],[[[6,[5]]],[[13,[8]]]],0,[[]],[2,[[4,[2]]]],[1,[[4,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,22],[[]],[9,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[42,[5]]],7],[[[6,[5]]],7],[30,[[39,[1,28]]]],[[[6,[5]],8],[[39,[29,28]]]],[[[6,[5]],8],[[39,[1,28]]]],[[[43,[5]],8],[[39,[2,28]]]],0,0,0,0,0,0,[[[12,[11]],44],[[13,[11]]]],[[[14,[11]],8],[[13,[11]]]],[22,9],[1,25],0,0,0,[[1,21],[[13,[25]]]],[[1,21],[[13,[44]]]],[[1,21],[[13,[9]]]],[[4,45],[[13,[21]]]],[[1,45],[[13,[21]]]],[[1,21],[[13,[46]]]],[[1,21,44],[[13,[27]]]],[[1,21],[[13,[[6,[5]]]]]],[[1,45,45],[[13,[21]]]],[[1,21],[[13,[44]]]],[[1,21],[[13,[9]]]],[[1,21],[[13,[9]]]],[[4,21,21],[[13,[9]]]],0,0,0,0,0,0,0,0,0,[1,35],[[21,47]],[[7,47]],0,0,0,[25,9],[1,9],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[11]]]],[[]],[[[14,[11]]]],[[]],[2,[[43,[5]]]],[1,35],[[[12,[11]]],35],[1,35],[1,35],[7,35],[1,35],[1,35],[1,35],[1,[[13,[34]]]],0,0,0,0,0,0,[[[12,[11]]],[[13,[11]]]],[[[12,[11]]],44],[[[14,[11]]],8],[1,9],[[34,34]],0,0,0,0,0,0,0,0,0,0,[[34,34]],0,0,0,0,0,0,0,0,[1,48],[[[6,[5]]],[[12,[11]]]],[[[6,[5]]],[[14,[11]]]],[[[18,[11]]],13],[[[19,[11]]],13],[1,44],0,0,0,0,[[1,21,49],[[13,[25]]]],[[[6,[5]]],13],[[[6,[5]]],[[13,[17]]]],[[[6,[5]]],[[13,[21]]]],[[[6,[5]]],[[13,[7]]]],[[21,21],[[13,[32]]]],[[7,7],[[13,[32]]]],0,0,0,0,0,[[34,34,34,34]],[[[12,[50]],21],[[13,[50]]]],0,0,0,[[7,34],13],[[2,7,34],13],[[2,7,34],13],[[[4,[51]],7,34],13],[[[4,[51]],7,34],13],[[1,7,34],13],[[1,7,34],13],[[1,7,34],13],[[[12,[11]],[52,[44]]],[[13,[[12,[11]]]]]],[1,[[13,[24]]]],[1,53],[1,[[13,[54]]]],[1,[[13,[54]]]],0,0,0,[[29,7],[[13,[[6,[5]]]]]],[[1,7],[[13,[[6,[5]]]]]],[1,31],0,0,[7,[[42,[5]]]],[7,[[42,[45]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],55],[[],55],0,0,0,[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[1,[[13,[9]]]],[1,[[13,[9]]]],[1,[[13,[9]]]],[1,[[13,[24]]]],[1,44],0,[1,[[12,[57]]]],[1,[[6,[22]]]],[1,[[13,[9]]]],[1,[[13,[9]]]],[1,[[13,[9]]]],[1,[[13,[9]]]],0,0,0,0,0,0,0,0,0,0,[1,58],[25,9],[1,59],0,0,[1,[[13,[9]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[60,60],[61,61],[[]],[[]],[[],60],[[60,60],35],[[60,36],[[39,[38]]]],[[61,36],[[39,[38]]]],[[]],[[]],[[]],[[]],[[[6,[5]]],[[13,[60]]]],[[62,[6,[5]]],[[13,[61]]]],[[61,21],[[13,[[14,[60]]]]]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[63,21],[[13,[5]]]],[[[64,[11]],21],[[13,[44]]]],[[[65,[[0,[16,11]]]]],[[65,[[0,[16,11]]]]]],[66,66],[63,63],[[[64,[16]]],[[64,[16]]]],[67,67],[[]],[[]],[[]],[[]],[[]],[[63,44,5],[[13,[65]]]],[[[64,[11]],44,44],[[13,[[65,[11]]]]]],0,0,[[[65,[[0,[40,11]]]],36],[[39,[38]]]],[[66,36],[[39,[38]]]],[[63,36],[[39,[38]]]],[[64,36],[[39,[38]]]],[[67,36],[[39,[38]]]],[[]],[[]],[[]],[[]],[[]],[[[65,[11]]],35],[[[65,[11]]],35],[[[65,[11]]],35],[[[65,[11]]],35],[[[65,[11]]],35],[[]],[[]],[[]],[[]],[[]],[[63,66],[[13,[9]]]],[[63,44],44],0,[66,66],[[[6,[5]]],[[13,[[65,[11]]]]]],[[62,68],[[13,[[64,[11]]]]]],[[62,[6,[5]]],[[13,[67]]]],0,[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],[[],56],[[67,21],[[13,[44]]]],[[[65,[11]]],66],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[69,69],[70,70],[71,71],[[]],[[]],[[]],[[69,36],[[39,[38]]]],[[70,36],[[39,[38]]]],[[71,36],[[39,[38]]]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[70],[70,44],[[71,[6,[22]]],13],[72,13],[[[6,[5]]],[[13,[69]]]],[[[6,[5]]],[[13,[71]]]],0,0,[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],0,[[]],[[]],[73,73],[[]],[[73,36],[[39,[38]]]],[[]],[[73,21,44],[[13,[27]]]],[[]],[[74,[6,[5]]],[[13,[73]]]],[[]],[[],39],[[],39],[[],56],0,[[]],[[]],[74,74],[[]],[[74,36],[[39,[38]]]],[[]],[[]],[[[6,[5]]],[[13,[74]]]],[[]],[[],39],[[],39],[[],56],0,[[]],[[]],[75,75],[[]],[[75,36],[[39,[38]]]],[[]],[[75,21],[[13,[46]]]],[[]],[[75,21,49],[[39,[25,20]]]],[[[6,[5]]],[[13,[75]]]],[[]],[[],39],[[],39],[[],56],0,[[]],[[]],[76,76],[[]],[[],76],[[76,36],[[39,[38]]]],[[]],[[]],[[76,[6,[22]],21,49],[[39,[25,20]]]],[[[6,[5]]],[[13,[76]]]],[[]],[[],39],[[],39],[[],56],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[77,15]],[[78,15]],[[79,15]],[[80,15]],[[81,15]],[[82,15]],[[83,15]],[[87,15]],[[],88],0,[[84,84],35],0,0,[[77,36],[[39,[38]]]],[[78,36],[[39,[38]]]],[[79,36],[[39,[38]]]],[[80,36],[[39,[38]]]],[[81,36],[[39,[38]]]],[[82,36],[[39,[38]]]],[[83,36],[[39,[38]]]],[[84,36],[[39,[38]]]],[[85,36],[[39,[38]]]],[[86,36],[[39,[38]]]],[[87,36],[[39,[38]]]],[[88,36],[[39,[38]]]],[[89,36],[[39,[38]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[88,44],[[13,[87]]]],0,[[77,8],[[13,[21]]]],[[78,8],[[13,[21]]]],[[79,8],[[13,[21]]]],[[80,8],[[13,[21]]]],[[81,8],[[13,[21]]]],[[82,8],[[13,[21]]]],[[83,8],[[13,[21]]]],[[85,8,8],[[13,[84]]]],[[87,8],[[13,[21]]]],[[87,8,8],[[13,[84]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88],[87,35],[88,44],[90,13],[[[6,[5]]],[[13,[77]]]],[[[6,[5]]],[[13,[78]]]],[[[6,[5]]],[[13,[79]]]],[[[6,[5]]],[[13,[80]]]],[[[6,[5]]],[[13,[81]]]],[[[6,[5]]],[[13,[82]]]],[[[6,[5]]],[[13,[83]]]],[[[6,[5]]],[[13,[85]]]],[[[6,[5]]],[[13,[89]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[91,91],[92,92],[93,93],[94,94],[[]],[[]],[[]],[[]],0,0,0,[[93,44],[[13,[92]]]],[[91,36],[[39,[38]]]],[[92,36],[[39,[38]]]],[[93,36],[[39,[38]]]],[[94,36],[[39,[38]]]],[[]],[[]],[[]],[[]],[[]],[[93,44],[[13,[92]]]],[[]],[[]],[[]],[[]],[[]],[[]],[93],[93,44],0,0,0,[95,13],[[[6,[5]]],[[13,[91]]]],[[[6,[5]]],[[13,[94]]]],0,0,[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],[[],56],0,0,0,[[]],[[]],[[]],[[]],[57,57],[96,96],[[]],[[]],0,[[57,57],35],[[57,36],[[39,[38]]]],[[96,36],[[39,[38]]]],[[]],[[]],0,[[]],[[]],0,0,0,[[[6,[5]]],[[13,[57]]]],[[[6,[5]]],[[13,[96]]]],0,[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[97,97],[98,98],[[]],[[]],[[97,97],32],[[],98],[[97,97],35],[[],35],[[97,36],[[39,[38]]]],[[]],[[]],[[98,21],[[13,[97]]]],[[98,21],44],[[98,44,44,[6,[22]]],[[13,[34]]]],[98,35],[[97,47]],[[]],[[]],[[98,21,[13,[44]]],35],[[[6,[5]]],[[13,[98]]]],[[97,97],[[13,[32]]]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],0,[[]],[[]],[99,99],[[]],[[99,36],[[39,[38]]]],[[]],[[]],[[99,21,49],[[13,[25]]]],[[100,[6,[5]]],[[13,[99]]]],[[]],[[],39],[[],39],[[],56],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[106,121],[110,121],[120,121],0,[[],104],[[111,44],[[13,[117]]]],[[111,44],[[13,[117]]]],[[101,36],[[39,[38]]]],[[102,36],[[39,[38]]]],[[103,36],[[39,[38]]]],[[104,36],[[39,[38]]]],[[105,36],[[39,[38]]]],[[106,36],[[39,[38]]]],[[107,36],[[39,[38]]]],[[108,36],[[39,[38]]]],[[109,36],[[39,[38]]]],[[110,36],[[39,[38]]]],[[111,36],[[39,[38]]]],[[112,36],[[39,[38]]]],[[113,36],[[39,[38]]]],[[114,36],[[39,[38]]]],[[115,36],[[39,[38]]]],[[116,36],[[39,[38]]]],[[117,36],[[39,[38]]]],[[118,36],[[39,[38]]]],[[119,36],[[39,[38]]]],[[120,36],[[39,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[105,44],[[13,[104]]]],[[107,21],13],[[108,44],[[13,[107]]]],[109,13],[[115,44],[[13,[118]]]],[[116,44],13],[[118,44,44],[[13,[117]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105,44],[108,44],[111,44],[115,44],[116,44],0,0,0,0,0,0,0,0,0,0,0,[[[6,[5]],44],[[13,[120]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],0,0,0,[[101,44,13],[[13,[122]]]],0,0,0,0,0,0,[[101,44,13],[[13,[122]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[123,121],[131,121],0,0,0,0,[[123,36],[[39,[38]]]],[[124,36],[[39,[38]]]],[[125,36],[[39,[38]]]],[[126,36],[[39,[38]]]],[[127,36],[[39,[38]]]],[[128,36],[[39,[38]]]],[[129,36],[[39,[38]]]],[[130,36],[[39,[38]]]],[[131,36],[[39,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[131,35],0,0,[[[6,[5]],44],[[13,[131]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],0,0,0,0,0,[[]],[[]],[132,132],[[]],[[132,36],[[39,[38]]]],[[]],[[]],[[132,99,[6,[22]],21,49],[[13,[25]]]],[[[6,[5]]],[[13,[132]]]],[[]],[[],39],[[],39],[[],56],0,0,0,0,[[]],[[]],[[]],[[]],[133,133],[134,134],[[]],[[]],[[133,133],35],[[133,36],[[39,[38]]]],[[134,36],[[39,[38]]]],[[]],[[]],0,0,[[]],[[]],[[[6,[5]]],[[13,[134]]]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],0,0,0,[[]],[[]],[135,135],[[]],0,[[135,36],[[39,[38]]]],[[]],[[]],0,0,[[[6,[5]]],[[13,[135]]]],[[]],[[],39],[[],39],[[],56],0,0,[[136,21],[[13,[44]]]],0,0,[[]],[[]],[[]],[[]],[137,137],[136,136],[[]],[[]],[[137,36],[[39,[38]]]],[[136,36],[[39,[38]]]],[[]],[[]],[[]],[[]],0,0,[[[6,[5]]],[[13,[137]]]],[[44,62,[6,[5]]],[[13,[136]]]],[[136,21],[[13,[9]]]],0,[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],0,[[138,21,[6,[22]]],[[13,[34]]]],[[]],[[]],[138,138],[[]],[[138,36],[[39,[38]]]],[[]],[[]],[[[6,[5]]],[[13,[138]]]],[[138,21,[6,[22]]],[[13,[34]]]],[[]],[[],39],[[],39],[[],56],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],143],[[139,36],[[39,[38]]]],[[140,36],[[39,[38]]]],[[141,36],[[39,[38]]]],[[142,36],[[39,[38]]]],[[144,36],[[39,[38]]]],[[145,36],[[39,[38]]]],[[146,36],[[39,[38]]]],[[147,36],[[39,[38]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[141,21,21],[[13,[9]]]],[[144,21,21],[[13,[9]]]],[[145,21,21],[[13,[9]]]],[[146,21,21],[[13,[9]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[142],[[]],[139,21],[142,8],[143,13],0,0,[[[6,[5]]],[[13,[139]]]],[[[6,[5]]],[[13,[144]]]],[[5,[6,[5]]],[[13,[145]]]],[[[6,[5]]],[[13,[146]]]],[[[6,[5]]],[[13,[147]]]],[139,21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[150],[153],[[148,36],[[39,[38]]]],[[149,36],[[39,[38]]]],[[150,36],[[39,[38]]]],[[151,36],[[39,[38]]]],[[152,36],[[39,[38]]]],[[153,36],[[39,[38]]]],[[154,36],[[39,[38]]]],[[155,36],[[39,[38]]]],[[156,36],[[39,[38]]]],[[157,36],[[39,[38]]]],[[159,36],[[39,[38]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[152,44],13],[[148,21,21],[[13,[9]]]],[[150,44],[[13,[9]]]],[[151,21,21],[[13,[9]]]],[[154,21,21],[[13,[9]]]],[[156,21,21],[[13,[9]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[157],[[]],[158,13],0,[[[6,[5]]],[[13,[149]]]],[[62,[6,[5]]],[[13,[159]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],0,0,0,0,[[]],[[]],[100,100],[[]],[[100,36],[[39,[38]]]],[[]],[[100,21],[[13,[[52,[33]]]]]],[[]],[100,44],[[62,133,[6,[5]]],[[13,[100]]]],[[]],[[],39],[[],39],[[],56],0,[[]],[[]],[160,160],[[]],[[160,36],[[39,[38]]]],[[]],[[]],0,[[[6,[5]]],[[13,[160]]]],[[]],[[],39],[[],39],[[],56],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[161,36],[[39,[38]]]],[[162,36],[[39,[38]]]],[[163,36],[[39,[38]]]],[[164,36],[[39,[38]]]],[[165,36],[[39,[38]]]],[[166,36],[[39,[38]]]],[[167,36],[[39,[38]]]],[[168,36],[[39,[38]]]],[[169,36],[[39,[38]]]],[[170,36],[[39,[38]]]],[[172,36],[[39,[38]]]],[[173,36],[[39,[38]]]],[[175,36],[[39,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[170],[[]],[173],[[]],[168,35],[168,35],[168,35],[168,35],0,0,0,0,[[163,8],[[13,[67]]]],0,0,[171,13],[174,13],[[[6,[5]]],[[13,[161]]]],[[[6,[5]]],[[13,[162]]]],[[[6,[5]]],[[13,[165]]]],[[62,[6,[5]]],[[13,[175]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],0,[[]],[[]],[176,176],[[]],[[176,36],[[39,[38]]]],[[]],[[]],[[176,7,[6,[22]]],[[13,[34]]]],[[[6,[5]]],[[13,[176]]]],[[]],[[],39],[[],39],[[],56],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[177,177],[178,178],[48,48],[179,179],[180,180],[[]],[[]],[[]],[[]],[[]],[179,33],[[],48],[[],180],0,[[177,177],35],[[177,36],[[39,[38]]]],[[178,36],[[39,[38]]]],[[48,36],[[39,[38]]]],[[180,36],[[39,[38]]]],[[]],[[]],[[]],[[]],[[]],[[48,44],[[13,[178]]]],[[]],[[]],[[]],[[]],[[]],[48],[[]],[178,35],0,[48,44],0,0,0,[179,13],[[[6,[5]]],[[13,[177]]]],[[[6,[5]]],[[13,[180]]]],0,[[]],[[]],[[]],[[]],[[]],[178,[[13,[55]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],[[],56],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[[[191,[[0,[16,190]]]]],[[191,[[0,[16,190]]]]]],[192,192],[193,193],[194,194],[195,195],[50,50],[121,121],[196,196],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[121,21],35],[181,121],[184,121],0,0,0,0,[[[191,[190]],7],[[13,[190]]]],[[195,[6,[22]]],[[13,[8]]]],[[195,44,8],[[13,[194]]]],0,[[181,36],[[39,[38]]]],[[182,36],[[39,[38]]]],[[183,36],[[39,[38]]]],[[184,36],[[39,[38]]]],[[185,36],[[39,[38]]]],[[186,36],[[39,[38]]]],[[187,36],[[39,[38]]]],[[188,36],[[39,[38]]]],[[189,36],[[39,[38]]]],[[[191,[[0,[40,190]]]],36],[[39,[38]]]],[[192,36],[[39,[38]]]],[[193,36],[[39,[38]]]],[[194,36],[[39,[38]]]],[[195,36],[[39,[38]]]],[[50,36],[[39,[38]]]],[[121,36],[[39,[38]]]],[[196,36],[[39,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[187,44],[[13,[197]]]],[[[191,[190]],44],[[13,[190]]]],[[121,21],[[13,[44]]]],[[196,21],44],[188,35],[188,35],[188,35],[188,35],[[[191,[190]],7],[[13,[44]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[187,[[198,[197]]]],[[[191,[190]]]],[[[191,[190]]],35],0,[187,44],[[[191,[190]]],44],0,0,0,0,0,0,[188,5],0,[[[198,[197]]],13],[[[199,[190]]],13],[[[6,[5]],44],13],[[7,[6,[5]]],13],[[[6,[5]]],[[13,[183]]]],[[[6,[5]]],[[13,[188]]]],[[7,[6,[5]]],[[13,[192]]]],[[7,[6,[5]]],[[13,[193]]]],[[7,[6,[5]]],[[13,[194]]]],[[[6,[5]]],[[13,[50]]]],0,[188,35],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[188,35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[200,[[13,[9]]]],[58,58],[59,59],[53,53],[54,54],[200,200],[[]],[[]],[[]],[[]],[[]],[[59,59],32],[[],58],[[],59],[[],53],[[58,58],35],[[59,59],35],[[53,53],35],[[54,54],35],[[],35],[[],35],[[],35],[[],35],[[58,36],[[39,[38]]]],[[59,36],[[39,[38]]]],[[53,36],[[39,[38]]]],[[54,36],[[39,[38]]]],[[200,36],[[39,[38]]]],[[]],[44,58],[[]],[[]],[[]],[[]],[[58,47]],[[59,47]],[[53,47]],[[54,47]],[[]],[[]],[[]],[[]],[[]],[200,35],[[[6,[5]]],[[13,[200]]]],[[59,59],[[13,[32]]]],[200,24],[200,53],[200,54],[200,54],[58,44],[59,44],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],[[],56],[200,9],[200,9],[200,9],[200,35],0,[200,58],[200,59],[200,9],[200,9],[200,[[13,[9]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[201,201],[202,202],[[]],[[]],[[],201],[[201,36],[[39,[38]]]],[[202,36],[[39,[38]]]],[[]],[[]],[[201,21],[[13,[46]]]],[[]],[[]],0,0,[201,44],0,[[[6,[5]]],[[13,[202]]]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],0,0,0,0,0,[[203,44],[[13,[204]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[204,204],[205,205],[203,203],[[]],[[]],[[]],[[204,36],[[39,[38]]]],[[205,36],[[39,[38]]]],[[203,36],[[39,[38]]]],[[]],[[]],[[]],[[]],[[204,21],[[13,[27]]]],[[205,8],[[13,[204]]]],[[]],[[]],[[]],[[]],[[]],[205],[204,44],[205,8],[206,13],[[62,[6,[5]]],[[13,[203]]]],0,0,0,[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[207,207],[208,208],[209,209],[[]],[[]],[[]],[208,33],0,[[207,21],[[13,[[6,[5]]]]]],[[207,36],[[39,[38]]]],[[209,36],[[39,[38]]]],[[]],[[]],[[]],[[207,44],[[13,[[6,[5]]]]]],[[]],[[]],[[]],[207],[[]],[207,44],[208,13],[[[6,[5]]],[[13,[209]]]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[210,210],[211,211],[212,212],[213,213],[[]],[[]],[[]],[[]],[[],211],[[],212],[[210,36],[[39,[38]]]],[[211,36],[[39,[38]]]],[[212,36],[[39,[38]]]],[[213,36],[[39,[38]]]],[[]],[[]],[[]],[[]],[[]],[[211,44],[[13,[210]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[211],[211,44],0,[214,13],[[[6,[5]]],[[13,[213]]]],0,[[]],[[]],[[]],[[]],0,[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],[[],56],[[],56],[[],56],0,0,0,0,0,[[]],[[]],[215,215],[[]],[[],215],0,[[215,36],[[39,[38]]]],[[]],[[]],0,0,[[[6,[5]]],[[13,[215]]]],[[]],[[],39],[[],39],[[],56],0,0,[[]],[[]],[[]],[[]],[216,216],[217,217],[[]],[[]],0,[[216,36],[[39,[38]]]],[[217,36],[[39,[38]]]],[[]],[[]],0,[[217,21],9],[[]],[[]],0,[[[6,[5]]],[[13,[216]]]],[[[6,[5]]],[[13,[217]]]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],56],[[],56],0],"c":[],"p":[[3,"Face"],[3,"OwnedFace"],[8,"AsFaceRef"],[3,"PreParsedSubtables"],[15,"u8"],[15,"slice"],[3,"Tag"],[15,"u32"],[15,"i16"],[8,"Ord"],[8,"FromData"],[3,"LazyArray16"],[4,"Option"],[3,"LazyArray32"],[8,"FnMut"],[8,"Clone"],[3,"Fixed"],[3,"LazyArrayIter16"],[3,"LazyArrayIter32"],[4,"CFFError"],[3,"GlyphId"],[3,"NormalizedCoordinate"],[3,"Variation"],[3,"LineMetrics"],[3,"Rect"],[4,"RasterImageFormat"],[3,"RasterGlyphImage"],[4,"FaceParsingError"],[3,"RawFace"],[3,"RawFaceTables"],[3,"FaceTables"],[4,"Ordering"],[15,"usize"],[15,"f32"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[8,"Debug"],[8,"Copy"],[15,"array"],[3,"Vec"],[15,"u16"],[15,"char"],[15,"str"],[8,"Hasher"],[3,"Names"],[8,"OutlineBuilder"],[3,"RangeRecord"],[8,"FaceMut"],[3,"Range"],[4,"Style"],[3,"ScriptMetrics"],[3,"String"],[3,"TypeId"],[3,"VariationAxis"],[4,"Weight"],[4,"Width"],[3,"Point"],[3,"Table"],[3,"NonZeroU16"],[3,"StateTable"],[3,"ExtendedStateTable"],[3,"GenericStateEntry"],[3,"ValueOffset"],[3,"Lookup"],[3,"Stream"],[3,"AxisValueMap"],[3,"SegmentMaps"],[3,"Table"],[3,"SegmentMapsIter"],[3,"Table"],[3,"Table"],[3,"Table"],[3,"Table"],[3,"Subtable0"],[3,"Subtable2"],[3,"Subtable4"],[3,"Subtable6"],[3,"Subtable10"],[3,"Subtable12"],[3,"Subtable13"],[4,"GlyphVariationResult"],[3,"Subtable14"],[4,"Format"],[3,"Subtable"],[3,"Subtables"],[3,"Table"],[3,"SubtablesIter"],[3,"SettingName"],[3,"FeatureName"],[3,"FeatureNames"],[3,"Table"],[3,"FeatureNamesIter"],[3,"Table"],[4,"GlyphClass"],[3,"Table"],[3,"Table"],[4,"Table"],[3,"HintingDevice"],[3,"VariationDevice"],[4,"Device"],[3,"ValueRecord"],[3,"ValueRecordsArray"],[4,"SingleAdjustment"],[3,"PairSet"],[3,"PairSets"],[3,"ClassMatrix"],[4,"PairAdjustment"],[3,"CursiveAnchorSet"],[3,"CursiveAdjustment"],[3,"MarkToBaseAdjustment"],[3,"MarkToLigatureAdjustment"],[3,"LigatureArray"],[3,"MarkArray"],[3,"Anchor"],[3,"AnchorMatrix"],[3,"MarkToMarkAdjustment"],[4,"PositioningSubtable"],[4,"Coverage"],[15,"i32"],[4,"SingleSubstitution"],[3,"Sequence"],[3,"MultipleSubstitution"],[3,"AlternateSet"],[3,"AlternateSubstitution"],[3,"Ligature"],[3,"LigatureSubstitution"],[3,"ReverseChainSingleSubstitution"],[4,"SubstitutionSubtable"],[3,"Table"],[4,"IndexToLocationFormat"],[3,"Table"],[3,"Table"],[3,"Table"],[3,"Metrics"],[3,"Table"],[3,"KerningPair"],[4,"Format"],[3,"Subtable"],[3,"Subtables"],[3,"SubtablesIter"],[3,"Subtable0"],[3,"Subtable2"],[3,"Subtable3"],[3,"Table"],[3,"Subtable0"],[3,"EntryData"],[3,"Subtable1"],[3,"Subtable2"],[3,"AnchorPoints"],[3,"Subtable4"],[3,"Subtable6"],[4,"Format"],[3,"Subtable"],[3,"Subtables"],[3,"SubtablesIter"],[3,"Table"],[3,"Table"],[3,"Feature"],[3,"ContextualEntryData"],[3,"ContextualSubtable"],[3,"LigatureSubtable"],[3,"InsertionEntryData"],[3,"InsertionSubtable"],[4,"SubtableKind"],[3,"Coverage"],[3,"Subtable"],[3,"Subtables"],[3,"SubtablesIter"],[3,"Chain"],[3,"Chains"],[3,"ChainsIter"],[3,"Table"],[3,"Table"],[4,"PlatformId"],[3,"Name"],[3,"NamesIter"],[3,"Table"],[4,"ContextLookup"],[3,"SequenceRule"],[3,"SequenceLookupRecord"],[4,"ChainedContextLookup"],[3,"ChainedSequenceRule"],[3,"Lookup"],[3,"LookupSubtables"],[3,"LookupFlags"],[3,"LayoutTable"],[8,"RecordListItem"],[3,"RecordList"],[3,"Script"],[3,"LanguageSystem"],[3,"Feature"],[3,"FeatureVariations"],[4,"ClassDefinition"],[8,"LookupSubtable"],[3,"LookupSubtablesIter"],[3,"RecordListIter"],[3,"Table"],[3,"Names"],[3,"Table"],[3,"Table"],[3,"Strike"],[3,"Strikes"],[3,"StrikesIter"],[3,"SvgDocumentsList"],[3,"SvgDocumentsListIter"],[3,"Table"],[3,"Track"],[3,"Tracks"],[3,"TrackData"],[3,"Table"],[3,"TracksIter"],[3,"Table"],[3,"VerticalOriginMetrics"],[3,"Table"],[13,"Format2"],[13,"Format1"],[13,"Format1"],[13,"Format2"],[13,"Format1"],[13,"Format2"],[13,"Format2"],[13,"Format3"],[13,"Format1"],[13,"Format1"],[13,"Format2"],[13,"Format2"],[13,"Format1"],[13,"Format3"],[13,"Format1"],[13,"Format2"]]},\
"piston":{"doc":"A modular game engine written in Rust.","t":"NNNNNNNNINDINNNDNNNNNNNNNNNNNNIENNNNDIENNNNNNNNNNNDINNNNNDIDDNNNNNINNNNNNNNNNNNNRRRNNNNNNNNNNNNNEIDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNININNNNENNNNNDIENNNNNNNENNNNNNNNNNNNNNENNNNNNNNENENINININNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNINNNNNNNNNNDNNINNGNNNNNNNNNNINDINDINNNNNNNNNNNNNNDNNNNNNNNNINGENDINNNNNDNNNDINNNNIDNNNNNNKLLMLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLAKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLMLKLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAKLCLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKKLLKLKLKLKLLLKLKLKKKLLLKLKLKLKLKLLAKLLLLKLLKLLLLKLKLLLLKLLLLLLLLLLLLLLLLLMKLMMMMKLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLALMMKLMLLMAKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLMLMKLLLLMKLLKLLLKLLLMLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLKLLLLLLLKLLLKLKLLLLKLLLLLLKLKLKLLLMMKLLMKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLMLMLLLLKLKLMMCMMKLMMDIDDMMKLKMMMMMMRRRRRDRRRRRRRRRRRLLLLLLLLLLLLLLLLIKKKNSSNNNNNNNNNNNNNNNNNNNNNNNNNSSSSSSSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNNNNNNNNNNNNENNNNNNNNNNNNNNNDNNSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSSNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNEIIINNNNKKKKLKLKL","n":["A","AcBack","AcBookmarks","AcForward","AcHome","AcRefresh","AcSearch","AcStop","AdvancedWindow","AfterRender","AfterRenderArgs","AfterRenderEvent","Again","AltErase","Ampersand","Api","Application","Asterisk","At","AudioMute","AudioNext","AudioPlay","AudioPrev","AudioStop","B","Backquote","Backslash","Backspace","BrightnessDown","BrightnessUp","BuildFromWindowSettings","Button","Button","Button6","Button7","Button8","ButtonArgs","ButtonEvent","ButtonState","C","Calculator","Cancel","Cancel","Cancel","CapsLock","Caret","Centered","Clear","ClearAgain","Close","CloseArgs","CloseEvent","Colon","Comma","Computer","Controller","ControllerAxis","ControllerAxisArgs","ControllerAxisEvent","ControllerButton","ControllerHat","Copy","CrSel","CurrencySubUnit","CurrencyUnit","Cursor","CursorEvent","Custom","Cut","D","D0","D1","D2","D3","D4","D5","D6","D7","D8","D9","DEFAULT_MAX_FPS","DEFAULT_UPS","DEFAULT_UPS_RESET","DecimalSeparator","Delete","DisplaySwitch","Dollar","Down","Down","Drop","E","Eject","End","End","Equals","Escape","Event","EventLoop","EventSettings","Events","ExSel","Exclaim","Execute","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","FileDrag","FileDrag","Find","Focus","FocusEvent","G","GenericEvent","Greater","H","Hash","Hat","HatState","Help","Home","Hover","I","Idle","IdleArgs","IdleEvent","Input","Input","Insert","J","K","KbdIllumDown","KbdIllumToggle","KbdIllumUp","Key","Keyboard","L","LAlt","LCtrl","LGui","LShift","Left","Left","Left","LeftBracket","LeftDown","LeftParen","LeftUp","Less","Loop","Loop","M","Mail","MediaSelect","Menu","Middle","Minus","Mode","Motion","Mouse","MouseButton","MouseCursor","MouseCursorEvent","MouseRelative","MouseRelativeEvent","MouseScroll","MouseScrollEvent","Move","Move","Mute","N","NoWindow","NumLockClear","NumPad0","NumPad00","NumPad000","NumPad1","NumPad2","NumPad3","NumPad4","NumPad5","NumPad6","NumPad7","NumPad8","NumPad9","NumPadA","NumPadAmpersand","NumPadAt","NumPadB","NumPadBackspace","NumPadBinary","NumPadC","NumPadClear","NumPadClearEntry","NumPadColon","NumPadComma","NumPadD","NumPadDblAmpersand","NumPadDblVerticalBar","NumPadDecimal","NumPadDivide","NumPadE","NumPadEnter","NumPadEquals","NumPadEqualsAS400","NumPadExclam","NumPadF","NumPadGreater","NumPadHash","NumPadHexadecimal","NumPadLeftBrace","NumPadLeftParen","NumPadLess","NumPadMemAdd","NumPadMemClear","NumPadMemDivide","NumPadMemMultiply","NumPadMemRecall","NumPadMemStore","NumPadMemSubtract","NumPadMinus","NumPadMultiply","NumPadOctal","NumPadPercent","NumPadPeriod","NumPadPlus","NumPadPlusMinus","NumPadPower","NumPadRightBrace","NumPadRightParen","NumPadSpace","NumPadTab","NumPadVerticalBar","NumPadXor","O","OpenGLWindow","Oper","Out","P","PageDown","PageUp","Paste","Pause","Percent","Period","Plus","Position","Power","Press","PressEvent","PrintScreen","Prior","ProcAddress","Q","Question","Quote","Quotedbl","R","RAlt","RCtrl","RGui","RShift","Release","ReleaseEvent","Render","RenderArgs","RenderEvent","Resize","ResizeArgs","ResizeEvent","Return","Return2","Right","Right","Right","RightBracket","RightDown","RightParen","RightUp","S","ScrollLock","Select","Semicolon","Separator","Size","Slash","Sleep","Space","Start","Stop","Sysreq","T","Tab","Text","TextEvent","ThousandsSeparator","TimeStamp","Touch","Touch","TouchArgs","TouchEvent","U","Underscore","Undo","Unknown","Unknown","UnsupportedGraphicsApiError","Up","Up","Update","UpdateArgs","UpdateEvent","V","VolumeDown","VolumeUp","W","Window","WindowSettings","Www","X","X1","X2","Y","Z","after_render","after_render","after_render_args","api","automatic_close","automatic_close","axis","bench_mode","bench_mode","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_from_window_settings","build_from_window_settings","button","button","button","button","button_args","capture_cursor","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","close_args","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code","controller","controller_axis","controller_axis","controller_axis_args","controllers","cursor","cursor","cursor_args","decorated","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device","directx","draw_size","draw_size","draw_size","draw_size","dt","dt","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_id","event_id","event_id","event_loop","exit_on_esc","exit_on_esc","expected","ext_dt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus","focus_args","found","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_after_render_args","from_after_render_args","from_button","from_button","from_button","from_button","from_button_args","from_button_args","from_close_args","from_close_args","from_controller_axis_args","from_controller_axis_args","from_cursor","from_cursor","from_dt","from_dt","from_focused","from_focused","from_idle_args","from_idle_args","from_pos","from_pos","from_pos","from_pos","from_pos","from_pos","from_render_args","from_render_args","from_resize_args","from_resize_args","from_text","from_text","from_touch_args","from_touch_args","from_update_args","from_update_args","fullscreen","generic_event","get_automatic_close","get_automatic_close","get_automatic_close","get_controllers","get_decorated","get_event_settings","get_event_settings","get_event_settings","get_exit_on_esc","get_exit_on_esc","get_exit_on_esc","get_fullscreen","get_maybe_graphics_api","get_position","get_position","get_proc_address","get_resizable","get_samples","get_size","get_srgb","get_title","get_title","get_title","get_transparent","get_vsync","graphics_api","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","hide","hide","id","id","id","id","idle","idle","idle_args","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_3d","is_current","is_directx","is_metal","is_opengl","is_vulkan","keyboard","lazy","lazy","major","make_current","max_fps","max_fps","maybe_graphics_api","metal","minor","mouse","mouse_cursor","mouse_cursor","mouse_cursor_args","mouse_relative","mouse_relative","mouse_relative_args","mouse_scroll","mouse_scroll","mouse_scroll_args","new","new","new","new","new","new","new","new","new_3d","next","opengl","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","poll_event","poll_event","position","position","position","position_3d","position_3d","press","press","press_args","pressure","pressure_3d","pressure_3d","release","release","release_args","render","render","render_args","resizable","resize","resize","resize_args","samples","scancode","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_automatic_close","set_automatic_close","set_automatic_close","set_bench_mode","set_capture_cursor","set_capture_cursor","set_controllers","set_decorated","set_event_settings","set_event_settings","set_event_settings","set_exit_on_esc","set_exit_on_esc","set_exit_on_esc","set_fullscreen","set_graphics_api","set_lazy","set_max_fps","set_maybe_graphics_api","set_position","set_position","set_resizable","set_samples","set_should_close","set_should_close","set_size","set_size","set_size","set_srgb","set_swap_buffers","set_title","set_title","set_title","set_transparent","set_ups","set_ups_reset","set_vsync","should_close","should_close","show","show","size","size","size","srgb","state","state","swap_buffers","swap_buffers","swap_buffers","swap_buffers","text","text","text_args","time_stamp","time_stamp","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","touch","touch","touch","touch_args","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update_args","ups","ups","ups_reset","ups_reset","viewport","viewport","vsync","vulkan","wait_event","wait_event","wait_event_timeout","wait_event_timeout","which","width","window","window_size","window_size","with_args","with_args","x","y","ControllerAxisArgs","ControllerAxisEvent","ControllerButton","ControllerHat","axis","button","controller_axis","controller_axis_args","from_controller_axis_args","id","id","id","position","state","which","AFTER_RENDER","BUTTON","CLOSE","CONTROLLER_AXIS","CURSOR","EventId","FILE_DRAG","FOCUS","IDLE","MOUSE_CURSOR","MOUSE_RELATIVE","MOUSE_SCROLL","RENDER","RESIZE","TEXT","TOUCH","UPDATE","borrow","borrow_mut","clone","clone_into","cmp","eq","equivalent","fmt","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","GenericEvent","event_id","time_stamp","with_args","A","ALT","ALT_GUI","AcBack","AcBookmarks","AcForward","AcHome","AcRefresh","AcSearch","AcStop","Again","AltErase","Ampersand","Application","Asterisk","At","AudioMute","AudioNext","AudioPlay","AudioPrev","AudioStop","B","Backquote","Backslash","Backspace","BrightnessDown","BrightnessUp","C","CTRL","CTRL_ALT","CTRL_GUI","CTRL_SHIFT","CTRL_SHIFT_ALT","CTRL_SHIFT_ALT_GUI","CTRL_SHIFT_GUI","Calculator","Cancel","CapsLock","Caret","Clear","ClearAgain","Colon","Comma","Computer","Copy","CrSel","CurrencySubUnit","CurrencyUnit","Cut","D","D0","D1","D2","D3","D4","D5","D6","D7","D8","D9","DecimalSeparator","Delete","DisplaySwitch","Dollar","Down","E","Eject","End","Equals","Escape","ExSel","Exclaim","Execute","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Find","G","GUI","Greater","H","Hash","Help","Home","I","Insert","J","K","KbdIllumDown","KbdIllumToggle","KbdIllumUp","Key","L","LAlt","LCtrl","LGui","LShift","Left","LeftBracket","LeftParen","Less","M","Mail","MediaSelect","Menu","Minus","Mode","ModifierKey","Mute","N","NO_MODIFIER","NumLockClear","NumPad0","NumPad00","NumPad000","NumPad1","NumPad2","NumPad3","NumPad4","NumPad5","NumPad6","NumPad7","NumPad8","NumPad9","NumPadA","NumPadAmpersand","NumPadAt","NumPadB","NumPadBackspace","NumPadBinary","NumPadC","NumPadClear","NumPadClearEntry","NumPadColon","NumPadComma","NumPadD","NumPadDblAmpersand","NumPadDblVerticalBar","NumPadDecimal","NumPadDivide","NumPadE","NumPadEnter","NumPadEquals","NumPadEqualsAS400","NumPadExclam","NumPadF","NumPadGreater","NumPadHash","NumPadHexadecimal","NumPadLeftBrace","NumPadLeftParen","NumPadLess","NumPadMemAdd","NumPadMemClear","NumPadMemDivide","NumPadMemMultiply","NumPadMemRecall","NumPadMemStore","NumPadMemSubtract","NumPadMinus","NumPadMultiply","NumPadOctal","NumPadPercent","NumPadPeriod","NumPadPlus","NumPadPlusMinus","NumPadPower","NumPadRightBrace","NumPadRightParen","NumPadSpace","NumPadTab","NumPadVerticalBar","NumPadXor","O","Oper","Out","P","PageDown","PageUp","Paste","Pause","Percent","Period","Plus","Power","PrintScreen","Prior","Q","Question","Quote","Quotedbl","R","RAlt","RCtrl","RGui","RShift","Return","Return2","Right","RightBracket","RightParen","S","SHIFT","SHIFT_ALT","SHIFT_ALT_GUI","SHIFT_GUI","ScrollLock","Select","Semicolon","Separator","Slash","Sleep","Space","Stop","Sysreq","T","Tab","ThousandsSeparator","U","Underscore","Undo","Unknown","Up","V","VolumeDown","VolumeUp","W","Www","X","Y","Z","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","default","deserialize","difference","empty","eq","equivalent","event","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","remove","serialize","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","Button6","Button7","Button8","Left","Middle","MouseButton","MouseCursorEvent","MouseRelativeEvent","MouseScrollEvent","Right","Unknown","X1","X2","from_pos","from_pos","from_pos","mouse_cursor","mouse_cursor_args","mouse_relative","mouse_relative_args","mouse_scroll","mouse_scroll_args"],"q":[[0,"piston"],[1105,"piston::controller"],[1120,"piston::event_id"],[1153,"piston::generic_event"],[1157,"piston::keyboard"],[1464,"piston::mouse"]],"d":["","","","","","","","","Trait representing a window with the most features that …","After rendering and swapping buffers.","After render arguments.","After rendering and buffers are swapped.","","","","Stores graphics API version.","","","","","","","","","","","","","","","Constructs a window from a <code>WindowSettings</code> object.","Models different kinds of buttons.","Changed button state.","Mouse button number 6.","Mouse button number 7.","Mouse button number 8.","Button arguments.","Changed button state.","Stores button state.","","","","The cancel of touch, for example the window loses focus.","A file was hovered, but has exited the window.","","","Centered (no direction).","","","Window closed.","Close arguments.","Window is closing.","","","","A controller button.","Controller axis move event.","Components of a controller axis move event. Not guaranteed …","The position of a controller axis changed.","Components of a controller button event. Not guaranteed …","Components of a controller hat move event (d-Pad).","","","","","Window gained or lost cursor.","When window gets or loses cursor.","Custom event.","","","","","","","","","","","","","The default maximum frames per second.","The default updates per second.","The default delayed updates reset.","","","","","","Down direction.","A file has been dropped into the window.","","","","The end of touch, for example taking a finger away from a …","","","Models all events.","Methods implemented for changing event loop settings.","Stores event loop settings.","An event loop iterator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Models dragging and dropping files.","A file is being dragged or dropped over the window.","","Window gained or lost focus.","When window gets or loses focus.","","Implemented by all events.","","","","A controller hat (d-Pad)","Stores controller hat state.","","","A file is being hovered over the window.","","Do background tasks that can be done incrementally.","Idle arguments, such as expected idle time in seconds.","When background tasks should be performed.","Models input events.","Input events.","","","","","","","Represent a keyboard key. Keycodes follows SDL …","A keyboard button.","","","","","","","Left mouse button.","Left direction.","","Left-down direction.","","Left-up direction.","","Models loop events.","Events that commonly used by event loops.","","","","","Middle mouse button.","","","Models different kinds of motion.","A mouse button.","Represent a mouse button.","Position in window coordinates.","The position of the mouse cursor.","Position in relative coordinates.","The relative movement of mouse cursor.","Position in scroll ticks.","The scroll of the mouse wheel.","The move of touch, for example a finger moving while …","Moved mouse cursor.","","","A window without user interface, often used in server …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait for OpenGL specific operations on a window.","","","","","","","","","","","Structure to store the window position.","","Button was pressed.","The press of a button.","","","The type of an OpenGL function address.","","","","","","","","","","Button was released.","The release of a button.","Render graphics.","Render arguments.","When the next frame should be rendered.","Window got resized.","Resize arguments.","When the window is resized.","","","","Right mouse button.","Right direction.","","Right-down direction.","","Right-up direction.","","","","","","Structure to store the window size.","","","","The start of touch, for example a finger pressed down on a …","","","","","Text (usually from keyboard).","When receiving text from user, such as typing a character.","","The type of time stamp.","Stores the touch state.","Touch event.","Touch arguments","When a touch is started, moved, ended or cancelled.","","","","","Unknown mouse button.","An error for when a graphics API is unsupported.","","Up direction.","Update the state of the application.","Update arguments, such as delta time in seconds.","When the application state should be updated.","","","","","Trait representing the minimum requirements for defining a …","Settings structure for window behavior.","","","Extra mouse button number 1.","Extra mouse button number 2.","","","Calls closure if this is an after render event.","","Returns after render arguments.","A string identifying the API.","Sets whether the window will automatically close when …","Sets whether built windows should automatically close when …","The axis that moved.","Enable or disable benchmark mode. When enabled, it will …","Enable or disable benchmark mode. When enabled, it will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds window from the given settings.","Builds the window from a <code>WindowSettings</code> object.","Errors","Calls closure if this is a button event.","","Which button was pressed.","The button that changed state.","Returns button arguments.","Sets whether to capture/grab the cursor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is a close event.","","Returns close arguments.","","","","","","","","","","","","","","Returns an id of the key","Back-end agnostic controller events.","Calls closure if this is a controller axis event.","","Returns controller axis arguments.","Sets whether built windows should listen to controller …","Calls closure if this is a cursor event.","","Returns cursor arguments.","Sets whether built windows should be decorated.","","","","","","","","","","","","","","","","","","","","","","","A unique identifier for touch device.","Creates a new DirectX version.","Gets the draw size of the window.","","The width and height of rendered area in pixels.","The width of rendered area in pixels.","Expected idle time in seconds.","Delta time in seconds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Event identifiers.","The id of this event.","","","Sets whether to exit when pressing the Esc button.","Sets whether built windows should exit when the Esc key is …","A list of supported graphics APIs.","Extrapolated time in seconds, used to do smooth animation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is a focus event.","","Returns focus arguments.","The requested graphics API.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","Creates an after render event.","","Creates a press event.","Creates a release event.","","","Creates a button event.","","Creates a close event from arguments.","","Creates a controller axis event.","","Creates a cursor event.","","Creates an update event with delta time.","Creates an update event with delta time.","Creates a focus event.","","Creates an idle event.","","Creates a mouse cursor event.","Creates a mouse relative event.","Creates a mouse scroll event.","","","","Creates a render event.","","Creates a resize event.","","Creates a text event.","","Creates a touch event.","","Creates an update event.","","Sets whether built windows will be fullscreen.","Trait for generic events","Gets whether the window will automatically close when …","","Gets whether built windows should automatically close when …","Gets whether built windows should listen to controller …","Gets whether built windows should be decorated.","Returns event loop settings.","","","Gets whether to exit when pressing esc.","","Gets whether built windows should exit when the Esc key is …","Gets whether built windows will be fullscreen.","Gets the graphics API version of built windows.","Gets the position of window.","","Returns the address of the specified OpenGL function if it …","Gets whether built windows should be resizable.","Gets the number of samples to use for anti-aliasing.","Gets the size of built windows.","Gets whether built windows should use hardware accelerated …","Gets a copy of the title of the window.","","Gets the title of built windows.","Gets whether built windows should be transparent.","Gets whether built windows should use vsync.","Sets the graphics API version of built windows.","","","","","","","","","","","","","The height.","Hides the window.","","Which controller was the button on.","Which Controller was the button on.","Which controller moved.","A unique identifier for touch event.","Calls closure if this is an idle event.","","Returns idle arguments.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the touch is in 3D.","Returns true if this window’s gl context is the current …","Returns <code>true</code> if the API is DirectX, <code>false</code> otherwise.","Returns <code>true</code> if the API is metal, <code>false</code> otherwise.","Returns <code>true</code> if the API is OpenGL, <code>false</code> otherwise.","Returns <code>true</code> if the API is Vulkan, <code>false</code> otherwise.","Back-end agnostic keyboard keys.","Enable or disable rendering only when receiving input. …","Enable or disable rendering only when receiving input. …","Major version.","Make the window’s gl context the current gl context.","The maximum number of frames per second","The maximum number of frames per second","Sets graphics API version of built windows.","Creates a new Metal version.","Minor version.","Back-end agnostic mouse buttons.","Calls closure if this is a mouse cursor event.","","Returns mouse cursor arguments.","Calls closure if this is a mouse relative event.","","Returns mouse relative arguments.","Calls a closure if this is a mouse scroll event.","","Returns mouse scroll arguments.","Creates new with default settings.","Creates a new event iterator with default UPS and FPS …","Creates a new <code>NoWindow</code>.","Creates window settings with defaults.","Create a new <code>ControllerButton</code> object. Intended for use by …","Create a new <code>ControllerButton</code> object. Intended for use by …","Create a new <code>ControllerAxisArgs</code> object. Intended for use …","Creates arguments for 2D touch.","Creates arguments for 3D touch.","Returns the next event.","Creates a new OpenGL version.","","","","","","","","","","","","","","","","","","","","","","","","Polls an input event from the window.","","Sets the position of window.","The position of the touch in 2D.","Position of the controller. Usually [-1.0, 1.0], though …","The position of the touch in 3D.","The touch position, normalized 0..1.","Calls closure if this is a press event.","","Returns press arguments.","The pressure magnitude, normalized 0..1.","The pressure vector in 3D.","The touch pressure vector, normalized 0..1.","Calls closure if this is a release event.","","Returns release arguments.","Calls closure if this is a render event.","","Returns render arguments.","Sets whether built windows should be resizable.","Calls closure if this is a resize event.","","Returns resize arguments.","Sets the number of samples to use for anti-aliasing.","An optional scancode that tells the physical layout of a …","","","","","","","","","","","","","","","","","","","","","","Sets whether the window will automatically close when …","","Sets whether built windows should automatically close when …","Enable or disable benchmark mode. When enabled, it will …","Sets whether to capture/grab the cursor.","","Sets whether built windows should listen to controller …","Sets whether built windows should be decorated.","Sets event loop settings.","","","Sets whether to exit when pressing esc.","","Sets whether built windows should exit when the Esc key is …","Sets whether built windows will be fullscreen.","Sets graphics API version of built windows.","Enable or disable rendering only when receiving input. …","The maximum number of frames per second","Sets graphics API version of built windows.","Sets the position of window.","","Sets whether built windows should be resizable.","Sets the number of samples to use for anti-aliasing.","Tells the window to close or stay open.","","Sets the window size.","","Sets the size of built windows.","Sets whether built windows should use hardware accelerated …","Enable or disable automatic swapping of buffers.","Sets the title of the window.","","Sets the title of built windows.","Sets whether built windows should be transparent.","The number of updates per second","The number of delayed updates before skipping them to …","Sets whether built windows should use vsync.","Returns true if the window should close.","","Shows the window.","","Gets the size of the window.","","Sets the size of built windows.","Sets whether built windows should use hardware accelerated …","Which button was pressed.","New state of the button.","Swaps render buffers.","Enable or disable automatic swapping of buffers.","","Enable or disable automatic swapping of buffers.","Calls closure if this is a text event.","","Returns text arguments.","Gets the time stamp of this event.","","Sets title on window.","Sets the title of built windows.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is a touch event.","","The touch state.","Returns touch arguments.","Sets whether built windows should be transparent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls closure if this is an update event.","","Returns update arguments.","The number of updates per second","The number of updates per second","The number of delayed updates before skipping them to …","The number of delayed updates before skipping them to …","Returns viewport information filling entire render area.","Returns viewport information filling entire render area.","Sets whether built windows should use vsync.","Creates a new Vulkan version.","Wait indefinitely for an input event to be available from …","","Wait for an input event to be available from the window or …","","Which hat on the controller was changed","The width.","","The width and height of rendered area in points.","The width and height of rendered area in points.","Calls closure with arguments","","The x coordinate.","The y coordinate.","Components of a controller axis move event. Not guaranteed …","The position of a controller axis changed.","Components of a controller button event. Not guaranteed …","Components of a controller hat move event (d-Pad).","The axis that moved.","Which button was pressed.","Calls closure if this is a controller axis event.","Returns controller axis arguments.","Creates a controller axis event.","Which controller was the button on.","Which Controller was the button on.","Which controller moved.","Position of the controller. Usually [-1.0, 1.0], though …","Which button was pressed.","Which hat on the controller was changed","Event id for after render event.","Event id for button event.","Event id for close event.","Event id for controller axis event.","Event id for cursor event.","Used to identify events arguments provided by traits.","Event id for file drag event.","Event id for focus event.","Event id for idle event.","Event id for mouse cursor event.","Event id for mouse relative event.","Event id for mouse scroll event.","Event id for render event.","Event id for resize event.","Event id for text event.","Event id for touch event.","Event id for update event.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Implemented by all events.","The id of this event.","Gets the time stamp of this event.","Calls closure with arguments","","Alt.","Alt + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","Ctrl.","Ctrl + Alt.","Ctrl + Gui.","Ctrl + Shift.","Ctrl + Shift + Alt.","Ctrl + Shift + Alt + Gui.","Ctrl + Shift + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gui.","","","","","","","","","","","","","Represent a keyboard key. Keycodes follows SDL …","","","","","","","","","","","","","","","","","","","No modifier.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shift.","Shift + Alt.","Shift + Alt + Gui.","Shift + Gui.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","Change modifier key state depending on input.","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Mouse button number 6.","Mouse button number 7.","Mouse button number 8.","Left mouse button.","Middle mouse button.","Represent a mouse button.","The position of the mouse cursor.","The relative movement of mouse cursor.","The scroll of the mouse wheel.","Right mouse button.","Unknown mouse button.","Extra mouse button number 1.","Extra mouse button number 2.","Creates a mouse cursor event.","Creates a mouse relative event.","Creates a mouse scroll event.","Calls closure if this is a mouse cursor event.","Returns mouse cursor arguments.","Calls closure if this is a mouse relative event.","Returns mouse relative arguments.","Calls a closure if this is a mouse scroll event.","Returns mouse scroll arguments."],"i":[22,22,22,22,22,22,22,22,0,37,0,0,22,22,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,36,23,23,23,0,0,0,22,22,22,29,35,22,22,34,22,22,36,0,0,22,22,22,32,33,0,0,0,0,22,22,22,22,36,0,3,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,22,22,22,22,22,34,35,22,22,22,29,22,22,0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,36,22,36,0,22,0,22,22,22,32,0,22,22,35,22,37,0,0,0,3,22,22,22,22,22,22,0,32,22,22,22,22,22,22,23,34,22,34,22,34,22,0,3,22,22,22,22,23,22,22,0,32,0,33,0,33,0,33,0,29,36,22,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22,22,22,0,22,24,0,22,22,0,22,22,22,22,22,22,22,22,22,24,0,37,0,0,36,0,0,22,22,22,23,34,22,34,22,34,22,22,22,22,22,0,22,22,22,29,22,22,22,22,36,0,22,0,0,33,0,0,22,22,22,22,23,0,22,34,37,0,0,22,22,22,22,0,0,22,22,23,23,22,22,63,3,63,14,64,6,21,65,15,14,45,15,16,12,17,18,6,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,3,14,45,15,16,12,17,18,6,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,3,6,7,12,66,3,19,13,66,64,14,15,16,17,18,6,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,3,14,15,16,17,18,6,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,3,67,3,67,14,19,20,22,23,4,24,13,25,29,32,34,35,22,0,68,3,68,6,69,3,69,6,15,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,30,14,55,12,27,28,26,31,14,17,18,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,3,14,18,19,20,22,23,4,24,13,25,29,32,34,35,0,61,3,0,64,6,45,27,14,45,45,15,16,12,17,18,6,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,3,70,3,70,45,14,45,15,16,12,17,17,17,17,17,18,18,18,6,19,20,21,22,22,23,23,4,24,13,25,26,27,28,29,30,31,32,32,32,32,33,33,33,34,35,36,36,36,36,36,36,37,37,37,37,37,3,3,3,3,3,3,3,3,63,3,71,72,3,3,66,3,67,3,68,3,69,3,73,74,70,3,73,3,75,76,77,3,3,3,78,3,79,3,80,3,81,3,74,3,6,0,64,12,6,6,6,65,15,16,64,12,6,6,6,64,12,82,6,6,6,6,64,12,6,6,6,6,19,20,22,23,4,24,13,25,29,32,34,35,17,64,12,19,20,21,30,73,3,73,0,14,45,15,16,12,17,18,6,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,3,30,82,14,14,14,14,0,65,15,14,82,65,15,6,14,14,0,75,3,75,76,3,76,77,3,77,15,16,12,6,19,20,21,30,30,16,14,14,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,3,55,12,64,30,21,30,30,71,3,71,30,30,30,72,3,72,78,3,78,6,79,3,79,6,13,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,64,12,6,65,64,12,6,6,65,15,16,64,12,6,6,6,65,65,6,64,12,6,6,55,12,64,12,6,6,65,64,12,6,6,65,65,6,55,12,64,12,55,12,6,6,20,13,55,65,12,15,80,3,80,61,3,64,6,14,15,16,17,18,6,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,3,45,81,3,30,81,6,14,45,15,16,12,17,18,6,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,3,14,45,15,16,12,17,18,6,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,3,14,45,15,16,12,17,18,6,19,20,21,22,23,4,24,13,25,26,27,28,29,30,31,32,33,34,35,36,37,3,74,3,74,65,15,65,15,27,28,6,14,55,12,55,12,20,17,0,27,28,61,3,18,18,0,0,0,0,21,19,68,68,68,19,20,21,21,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,61,61,61,22,60,60,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,60,60,60,60,60,60,60,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,60,22,22,22,22,22,22,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,22,22,60,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,60,60,60,60,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,23,23,23,23,23,0,0,0,0,23,23,23,23,75,76,77,75,75,76,76,77,77],"fc":[],"p":[[8,"FnMut"],[4,"Option"],[4,"Event"],[3,"AfterRenderArgs"],[15,"bool"],[3,"WindowSettings"],[8,"BuildFromWindowSettings"],[8,"Error"],[3,"Global"],[3,"Box"],[4,"Result"],[3,"NoWindow"],[3,"ButtonArgs"],[3,"Api"],[3,"EventSettings"],[3,"Events"],[3,"Size"],[3,"Position"],[3,"ControllerButton"],[3,"ControllerHat"],[3,"ControllerAxisArgs"],[4,"Key"],[4,"MouseButton"],[4,"ButtonState"],[3,"CloseArgs"],[3,"IdleArgs"],[3,"RenderArgs"],[3,"ResizeArgs"],[4,"Touch"],[3,"TouchArgs"],[3,"UpdateArgs"],[4,"Button"],[4,"Motion"],[4,"HatState"],[4,"FileDrag"],[4,"Input"],[4,"Loop"],[4,"Ordering"],[15,"i32"],[8,"Deserializer"],[15,"u32"],[3,"EventId"],[3,"Formatter"],[3,"Error"],[3,"UnsupportedGraphicsApiError"],[15,"array"],[15,"f64"],[15,"str"],[15,"u8"],[3,"String"],[8,"Into"],[8,"Hasher"],[15,"u64"],[15,"i64"],[8,"Window"],[8,"Serializer"],[3,"TypeId"],[3,"Viewport"],[3,"Duration"],[3,"ModifierKey"],[8,"GenericEvent"],[8,"IntoIterator"],[8,"AfterRenderEvent"],[8,"AdvancedWindow"],[8,"EventLoop"],[8,"ButtonEvent"],[8,"CloseEvent"],[8,"ControllerAxisEvent"],[8,"CursorEvent"],[8,"FocusEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"IdleEvent"],[8,"UpdateEvent"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"RenderEvent"],[8,"ResizeEvent"],[8,"TextEvent"],[8,"TouchEvent"],[8,"OpenGLWindow"]]},\
"png":{"doc":"PNG encoder and decoder","t":"SNNEDNNNNEENNEEDEDENESNDENENNNDNNNNNSNNNNDNNDNNNNNNNNDNNNNDNNDNNDNNNNSNDNNDEDDNDNENNDLLLLLMMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMLLLMLMLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMMMMLLLLLLLMMMMDRRRRRRLLRLLLLRRLLRLRRLFFRFRFRRRLLLLRRIDDDLLLLLLLLLLLLLLMLLLLKLLLLLLLLLLLLLLLLLLLLMMMMLLLMLLLMLLLLLLLLL","n":["ALPHA","AbsoluteColorimetric","Adaptive","AdaptiveFilterType","AnimationControl","AnimationControl","Avg","Background","Best","BitDepth","BlendOp","ChunkBegin","ChunkComplete","ColorType","Compression","DecodeOptions","Decoded","Decoder","DecodingError","Default","DisposeOp","EXPAND","Eight","Encoder","EncodingError","Fast","FilterType","Format","Format","Four","FrameControl","FrameControl","Grayscale","GrayscaleAlpha","Header","Huffman","IDENTITY","ImageData","ImageDataFlushed","ImageEnd","Indexed","Info","IoError","IoError","Limits","LimitsExceeded","LimitsExceeded","Meter","NoFilter","NonAdaptive","None","Nothing","One","OutputInfo","Over","Paeth","Parameter","Parameter","ParameterError","PartialChunk","Perceptual","PixelDimensions","PixelDimensions","Previous","Reader","RelativeColorimetric","Rgb","Rgba","Rle","STRIP_16","Saturation","ScaledFloat","Sixteen","Source","SourceChromaticities","SrgbRenderingIntent","StreamWriter","StreamingDecoder","Sub","Transformations","Two","Unit","Unspecified","Up","Writer","add_itxt_chunk","add_text_chunk","add_ztxt_chunk","all","animation_control","animation_control","bit_depth","bit_depth","bitand","bitand_assign","bitor","bitor_assign","bits","bits_per_pixel","bitxor","bitxor_assign","blend_op","blue","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_size","bytes","bytes_per_pixel","cause","cause","chrm_chunk","chunk","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","color_type","color_type","complement","compressed_latin1_text","compression","contains","default","default","default","default","default","default","default","default","default","delay_den","delay_num","difference","dispose_op","drop","drop","empty","encode","encode","encode","encode","encode","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exact","extend","finish","finish","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_control","frame_control","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_scaled","from_u8","from_u8","from_u8","from_u8","from_u8","from_u8","gama_chunk","green","hash","height","height","height","icc_profile","ignore_adler32","ignore_checksums","in_range","inc_seq_num","info","info","insert","interlaced","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_scaled","into_stream_writer","into_stream_writer_with_size","into_value","is_all","is_animated","is_empty","line_size","new","new","new","new","new","new_with_limits","new_with_options","new_with_options","next_frame","next_interlaced_row","next_row","normalize_to_color8","not","num_frames","num_plays","output_buffer_size","output_color_type","output_line_size","palette","partial_cmp","pixel_dims","raw_bytes","raw_row_length","raw_row_length_from_width","read_header_info","read_info","red","remove","reset","reset_frame_dimension","reset_frame_dimension","reset_frame_position","reset_frame_position","samples","sequence_number","set","set_adaptive_filter","set_adaptive_filter","set_adaptive_filter","set_animated","set_blend_op","set_blend_op","set_blend_op","set_color","set_compression","set_depth","set_dispose_op","set_dispose_op","set_dispose_op","set_filter","set_filter","set_filter","set_frame_delay","set_frame_delay","set_frame_delay","set_frame_dimension","set_frame_dimension","set_frame_position","set_frame_position","set_ignore_adler32","set_ignore_adler32","set_ignore_checksums","set_ignore_crc","set_ignore_crc","set_ignore_text_chunk","set_ignore_text_chunk","set_ignore_text_chunk","set_limits","set_palette","set_pixel_dims","set_sep_def_img","set_seq_num","set_skip_ancillary_crc_failures","set_skip_ancillary_crc_failures","set_source_chromaticities","set_source_gamma","set_srgb","set_transformations","set_trns","size","source_chromaticities","source_gamma","srgb","stream_writer","stream_writer_with_size","sub","sub_assign","symmetric_difference","text_metadata","to_be_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","toggle","trns","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_latin1_text","union","unit","update","utf8_text","validate_sequence","white","width","width","width","with_info","with_size","write","write_chunk","write_header","write_image_data","write_text_chunk","x_offset","xppu","y_offset","yppu","ChunkType","IDAT","IEND","IHDR","PLTE","acTL","bKGD","borrow","borrow_mut","cHRM","clone","clone_into","eq","equivalent","fcTL","fdAT","fmt","from","gAMA","hash","iCCP","iTXt","into","is_critical","is_private","pHYs","reserved_set","sRGB","safe_to_copy","tEXt","tIME","tRNS","to_owned","try_from","try_into","type_id","zTXt","DECOMPRESSION_LIMIT","EncodableTextChunk","ITXtChunk","TEXtChunk","ZTXtChunk","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compress_text","compress_text","compressed","decompress_text","decompress_text","decompress_text_with_limit","decompress_text_with_limit","encode","encode","encode","encode","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","get_text","get_text","into","into","into","keyword","keyword","keyword","language_tag","new","new","new","text","to_owned","to_owned","to_owned","translated_keyword","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"png"],[614,"png::chunk"],[651,"png::text_metadata"]],"d":["Expand paletted images to include an alpha channel. …","For images requiring preservation of absolute colorimetry, …","","The filtering method for preprocessing scanline data …","Animation control information","","","Clear buffer with the background color.","Higher compression level","Bit depth of the PNG file. Specifies the number of bits …","How pixels are written into the buffer.","","","Describes how a pixel is encoded.","The type and strength of applied compression.","Decoder configuration options","Result of the decoding process","PNG Decoder","Any kind of error during PNG decoding.","Default level","How to reset buffer of an animated png (APNG) at the end …","Expand paletted images to RGB; expand grayscale images of …","","PNG Encoder.","","Fast minimal compression","The byte level filter applied to scanlines to prepare them …","The input image was not a valid PNG.","","","Frame control information","","1 grayscale sample.","1 grayscale sample, then 1 alpha sample.","","","No transformation","Decoded raw image data.","The last of a consecutive chunk of IDAT was done. This is …","","1 sample for the palette index.","PNG info struct","An error in IO of the underlying reader.","","Limits on the resources the <code>Decoder</code> is allowed too use","The image would have required exceeding the limits …","","","","","Leave the buffer unchanged.","Nothing decoded yet","","Output info.","The new pixels are blended into the current state based on …","","An interface was used incorrectly.","","","","For images preferring good adaptation to the output device …","Pixel dimensions information","","Reset the buffer to the state before the current frame.","PNG reader (mostly high-level interface)","For images requiring colour appearance matching (relative …","1 red sample, 1 green sample, 1 blue sample.","1 red sample, 1 green sample, 1 blue sample, and finally, …","","Strip 16-bit samples to 8 bits","For images preferring preservation of saturation at the …","An unsigned integer scaled version of a floating point …","","Pixels overwrite the value at their position.","Chromaticities of the color space primaries","The rendering intent for an sRGB image.","Streaming PNG writer","PNG StreamingDecoder (low-level interface)","","Output transformations","","Physical unit of the pixel dimensions","","","PNG writer","Convenience function to add iTXt chunks to <code>Info</code> struct","Convenience function to add tEXt chunks to <code>Info</code> struct","Convenience function to add zTXt chunks to <code>Info</code> struct","Returns the set containing all flags.","Returns the frame control information of the image.","","","The chosen output bit depth.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the number of bits per pixel.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Type of frame area rendering for this frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the size needed to hold a decoded frame If the …","maximum number of bytes the decoder is allowed to …","Returns the number of bytes per pixel.","","","The contents of the image’s <code>cHRM</code> chunk, if present. …","Chunk types and functions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How colors are stored in the image.","The chosen output color type.","Returns the complement of this set of flags.","zTXt field","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","Frame delay fraction denominator","Frame delay fraction numerator","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Type of frame area disposal to be done after rendering …","","","Returns an empty set of flags.","","","","","Encode this header to the writer.","","","","","","","","","","","","","","","","","","","","","","","","","Gets whether the value can be exactly converted in …","","Read the rest of the image and chunks and finish up, …","Consume the stream writer with validation.","Consume the stream writer with validation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the frame control information of the current frame","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Fully accurate construction from a value scaled as per …","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Using enum_primitive or transmute is probably …","u8 -&gt; Self. Using enum_primitive or transmute is probably …","u8 -&gt; Self. Temporary solution until Rust provides a …","The contents of the image’s gAMA chunk, if present. …","","","Height of the following frame","","The pixel height of this frame.","The ICC profile for the image.","Return whether the decoder is set to ignore the Adler-32 …","Set the decoder to ignore and not verify the Adler-32 …","Gets whether the value is within the clamped range of this …","","Provides access to the inner <code>info</code> field","Get information on the image.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the accurate encoded value.","Turn this into a stream writer for image data.","Turn this into a stream writer with custom buffer size.","Get the unscaled value as a floating point.","Returns <code>true</code> if all flags are currently set.","Returns true if the image is an APNG image.","Returns <code>true</code> if no flags are currently stored.","The byte count of each scan line in the image.","Creates a new StreamingDecoder","Create a new decoder configuration with default limits.","","Slightly inaccurate scaling and quantization. Clamps the …","","Create a new decoder configuration with custom limits.","","Create a new decoder configuration with custom …","Decodes the next frame into <code>buf</code>.","Returns the next processed row of the image","Returns the next processed row of the image","Transform every input to 8bit grayscale or color.","Returns the complement of this set of flags.","Number of frames","Number of times to loop this APNG.  0 indicates infinite …","Returns the number of bytes required to hold a …","Returns the color type and the number of bits per sample …","Returns the number of bytes required to hold a …","The image’s <code>PLTE</code> chunk, if present; contains the RGB …","","","Returns the number of bytes needed for one deinterlaced …","Returns the number of bytes needed for one deinterlaced …","Returns the number of bytes needed for one deinterlaced …","Read the PNG header and return the information contained …","Reads all meta data until the first IDAT chunk","","Removes the specified flags in-place.","Resets the StreamingDecoder","Set the frame dimension to occupy all the image, starting …","Set the frame dimension to occupy all the image, starting …","Set the frame position to (0, 0).","Set the frame position to (0, 0).","Returns the number of samples used per pixel encoded in …","Sequence number of the animation chunk, starting from 0","Inserts or removes the specified flags depending on the …","Set the adaptive filter type.","Set the adaptive filter type for the following frames.","Set the adaptive filter type for the next frame.","Specify that the image is animated.","Set the blend operation for every frame.","Set the blend operation for the following frames.","Set the blend operation for the following frames.","Set the color of the encoded image.","Set compression parameters.","Set the indicated depth of the image data.","Set the dispose operation for every frame.","Set the dispose operation for the following frames.","Set the dispose operation for the following frames.","Set the used filter type.","Set the used filter type for the following frames.","Set the used filter type for the next frame.","Set the fraction of time every frame is going to be …","Set the fraction of time the following frames are going to …","Set the fraction of time the following frames are going to …","Set the dimension of the following frames.","Set the dimension of the following frames.","Set the position of the following frames.","Set the position of the following frames.","Set whether to compute and verify the Adler-32 checksum …","When set, the decoder will not compute and verify the …","Flag to ignore computing and verifying the Adler-32 …","Set whether to compute and verify the Adler-32 checksum …","When set, the decoder will not compute and verify the CRC …","","Set the decoder to ignore all text chunks while parsing.","Ignore text chunks while decoding.","Limit resource usage.","Sets the raw byte contents of the PLTE chunk. This method …","","Mark the first animated frame as a ‘separate default …","","Ignore ancillary chunks if CRC fails","Ignore ancillary chunks if CRC fails","Set the chromaticities for the source system’s display …","Set the display gamma of the source system on which the …","Mark the image data as conforming to the SRGB color space …","Set the allowed and performed transformations.","Sets the raw byte contents of the tRNS chunk. This method …","Size of the image, width then height.","Chromaticities of the source system. Set by both <code>cHRM</code> as …","Gamma of the source system. Set by both <code>gAMA</code> as well as to …","The rendering intent of an SRGB image.","Create a stream writer.","Create a stream writer with custom buffer size.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Text chunks (tEXt/zTXt/iTXt) structs and functions","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","The image’s <code>tRNS</code> chunk, if present; contains the alpha …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tEXt field","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Either <em>Meter</em> or <em>Unspecified</em>","Low level StreamingDecoder interface.","iTXt field","Validate the written image sequence.","","Width of the following frame","","The pixel width of this frame.","","A utility constructor for a default info with width and …","","Write a raw chunk of PNG data.","Start encoding by writing the header data.","Writes the next image data.","","X position at which to render the following frame","Pixels per unit, X axis","Y position at which to render the following frame","Pixels per unit, Y axis","","Image data","Image trailer","Image header","Palette","Animation control","Background colour","","","Source system’s pixel chromaticities","","","","","Frame control","Frame data","","Returns the argument unchanged.","Source system’s gamma value","","ICC profile chunk","UTF-8 textual data","Calls <code>U::from(self)</code>.","Returns true if the chunk is critical.","Returns true if the chunk is private.","Physical pixel dimensions","Checks whether the reserved bit of the chunk name is set. …","sRGB color space chunk","Returns true if the chunk is safe to copy if unknown.","Latin-1 uncompressed textual data","Image last-modification time","Transparency","","","","","Latin-1 compressed textual data","Default decompression limit for compressed text chunks.","A generalized text chunk trait","Struct encoding an iTXt chunk","Struct representing a tEXt chunk","Struct representing a zTXt chunk","","","","","","","","","","","","","Compresses the inner text, mutating its own state.","Compresses the inner text, mutating its own state.","Indicates whether the text will be (or was) compressed in …","Decompresses the inner text, mutating its own state. Can …","Decompresses the inner text, mutating its own state. Can …","Decompresses the inner text, mutating its own state. Can …","Decompresses the inner text, mutating its own state. Can …","Encode text chunk as Vec to a <code>Write</code>","Encodes TEXtChunk to a Writer. The keyword and text are …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Decompresses the inner text, and returns it as a <code>String</code>. …","Decompresses the inner text, and returns it as a <code>String</code>. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Keyword field of the tEXt chunk. Needs to be between 1-79 …","Keyword field of the tEXt chunk. Needs to be between 1-79 …","The keyword field. This needs to be between 1-79 bytes …","A hyphen separated list of languages that the keyword is …","Constructs a new TEXtChunk. Not sure whether it should …","Creates a new ZTXt chunk.","Constructs a new iTXt chunk. Leaves all but keyword and …","Text field of tEXt chunk. Can be at most 2GB.","","","","Translated keyword. This is UTF-8 encoded.","","","","","","","","",""],"i":[6,25,29,0,0,43,28,19,22,0,0,43,43,0,0,0,0,0,0,22,0,6,16,0,0,22,0,13,4,16,0,43,15,15,43,22,6,43,43,43,15,0,13,4,0,13,4,18,28,29,19,43,16,0,20,28,13,4,0,43,25,0,43,19,0,25,15,15,22,6,25,0,16,20,0,0,0,0,28,0,16,0,18,28,0,2,2,2,6,7,7,7,12,6,6,6,6,6,7,6,6,21,24,32,48,38,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,42,43,13,26,12,27,4,28,29,32,48,38,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,42,43,13,26,12,27,4,28,29,12,27,7,13,4,7,0,15,16,17,18,19,20,21,8,22,23,24,25,7,6,26,27,28,29,15,16,17,18,19,20,21,8,22,23,24,25,7,6,26,27,28,29,6,7,12,6,7,7,6,32,21,22,7,6,26,27,28,29,21,21,6,21,33,34,6,21,8,24,25,7,15,16,18,19,20,23,24,25,6,12,28,29,15,16,18,19,20,23,24,25,6,12,28,29,23,6,38,33,34,34,15,16,17,18,19,19,20,20,21,8,22,23,24,25,7,6,6,6,6,6,42,42,43,13,13,12,27,4,4,28,29,7,7,32,48,38,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,42,43,13,13,26,12,27,4,4,28,29,6,6,6,6,23,15,16,18,19,20,28,7,24,6,21,7,12,7,32,48,23,21,32,38,6,7,6,6,32,48,38,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,42,43,13,26,12,27,4,28,29,23,33,33,23,6,7,6,12,32,48,2,23,24,48,32,48,38,38,38,6,6,8,8,38,38,38,7,6,7,7,7,7,48,48,24,6,32,33,34,33,34,15,21,6,2,33,34,2,2,33,34,2,2,2,2,33,34,2,33,34,2,33,34,33,34,33,34,32,26,26,32,26,32,48,26,48,2,2,2,21,32,26,2,2,2,48,2,7,7,7,7,33,33,6,6,6,0,24,15,16,17,18,19,20,21,8,22,23,24,25,7,6,26,27,28,29,19,20,42,13,4,6,7,32,48,38,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,42,43,13,26,12,27,4,28,29,32,48,38,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,42,43,13,26,12,27,4,28,29,32,48,38,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,42,43,13,26,12,27,4,28,29,7,6,17,32,7,2,24,21,7,12,2,7,34,33,2,33,33,21,17,21,17,0,0,0,0,0,0,0,56,56,0,56,56,56,56,0,0,56,56,0,56,0,0,56,0,0,0,0,0,0,0,0,0,56,56,56,56,0,0,0,0,0,0,58,59,60,58,59,60,58,59,60,58,59,60,59,60,60,59,60,59,60,57,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,59,60,58,59,60,58,59,60,60,58,59,60,58,58,59,60,60,58,59,60,58,59,60,58,59,60],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3,3],[[5,[4]]]],[[[2,[1]],3,3],[[5,[4]]]],[[[2,[1]],3,3],[[5,[4]]]],[[],6],[7,[[9,[8]]]],0,0,0,[[6,6],6],[[6,6]],[[6,6],6],[[6,6]],[6,10],[7,11],[[6,6],6],[[6,6]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,11],0,[7,11],[13,[[9,[14]]]],[4,[[9,[14]]]],0,0,[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[8,8],[22,22],[23,23],[24,24],[25,25],[7,7],[6,6],[26,26],[27,27],[28,28],[29,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],30],0,0,[6,6],0,0,[[6,6],31],[[],32],[[],21],[[],22],[[],7],[[],6],[[],26],[[],27],[[],28],[[],29],0,0,[[6,6],6],0,[[[33,[1]]]],[[[34,[1]]]],[[],6],[[21,1],[[5,[4]]]],[[8,1],[[5,[4]]]],[[24,1],[[5,[4]]]],[[25,1],[[5,[4]]]],[[7,1],[[5,[4]]]],[[15,15],31],[[16,16],31],[[18,18],31],[[19,19],31],[[20,20],31],[[23,23],31],[[24,24],31],[[25,25],31],[[6,6],31],[[12,12],31],[[28,28],31],[[29,29],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[35,31],[[6,36]],[[[38,[37]]],[[5,[13]]]],[[[33,[1]]],[[5,[4]]]],[[[34,[1]]],[[5,[4]]]],[[[34,[1]]],39],[[15,40],41],[[16,40],41],[[17,40],41],[[18,40],41],[[19,40],41],[[19,40],41],[[20,40],41],[[20,40],41],[[21,40],41],[[8,40],41],[[22,40],41],[[23,40],41],[[24,40],41],[[25,40],41],[[7,40],41],[[6,40],41],[[6,40],41],[[6,40],41],[[6,40],41],[[6,40],41],[[42,40],41],[[42,40],41],[[43,40],41],[[13,40],[[5,[44]]]],[[13,40],41],[[12,40],41],[[27,40],41],[[4,40],[[5,[44]]]],[[4,40],41],[[28,40],41],[[29,40],41],[7,[[9,[21]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,13],[[]],[[]],[[]],[[]],[[]],[45,4],[[]],[[]],[10,[[9,[6]]]],[10,6],[10,6],[36,6],[10,23],[46,[[9,[15]]]],[46,[[9,[16]]]],[46,[[9,[18]]]],[46,[[9,[19]]]],[46,[[9,[20]]]],[46,[[9,[28]]]],0,0,[[6,47]],0,0,0,0,[32,31],[[[48,[37]],31]],[35,31],[[21,10]],[32,[[9,[7]]]],[[[38,[37]]],7],[[6,6]],0,[[6,6],6],[[6,6],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,10],[[[33,[1]]],[[5,[[34,[1]],4]]]],[[[33,[1]],11],[[5,[[34,[1]],4]]]],[23,35],[6,31],[7,31],[6,31],0,[[],32],[37,[[48,[37]]]],[[1,10,10],[[2,[1]]]],[35,23],[[],24],[[37,27],[[48,[37]]]],[26,32],[[37,26],[[48,[37]]]],[[[38,[37]],[49,[46]]],[[5,[12,13]]]],[[[38,[37]]],[[5,[[9,[0]],13]]]],[[[38,[37]]],[[5,[[9,[0]],13]]]],[[],6],[6,6],0,0,[[[38,[37]]],11],[[[38,[37]]]],[[[38,[37]],10],11],0,[[6,6],[[9,[30]]]],0,[7,11],[7,11],[[7,10],11],[[[48,[37]]],[[5,[7,13]]]],[[[48,[37]]],[[5,[[38,[37]],13]]]],0,[[6,6]],[32],[[[33,[1]]],[[5,[4]]]],[[[34,[1]]],[[5,[4]]]],[[[33,[1]]],[[5,[4]]]],[[[34,[1]]],[[5,[4]]]],[15,11],0,[[6,6,31]],[[[2,[1]],29]],[[[33,[1]],29]],[[[34,[1]],29]],[[[2,[1]],10,10],[[5,[4]]]],[[[2,[1]],20],[[5,[4]]]],[[[33,[1]],20],[[5,[4]]]],[[[34,[1]],20],[[5,[4]]]],[[[2,[1]],15]],[[[2,[1]],22]],[[[2,[1]],16]],[[[2,[1]],19],[[5,[4]]]],[[[33,[1]],19],[[5,[4]]]],[[[34,[1]],19],[[5,[4]]]],[[[2,[1]],28]],[[[33,[1]],28]],[[[34,[1]],28]],[[[2,[1]],50,50],[[5,[4]]]],[[[33,[1]],50,50],[[5,[4]]]],[[[34,[1]],50,50],[[5,[4]]]],[[[33,[1]],10,10],[[5,[4]]]],[[[34,[1]],10,10],[[5,[4]]]],[[[33,[1]],10,10],[[5,[4]]]],[[[34,[1]],10,10],[[5,[4]]]],[[32,31],31],[[26,31]],[[26,31]],[[32,31]],[[26,31]],[[32,31]],[[[48,[37]],31]],[[26,31]],[[[48,[37]],27]],[[[2,[1]],[52,[[51,[[49,[46]]]]]]]],[[[2,[1]],[9,[17]]]],[[[2,[1]],31],[[5,[4]]]],[[21,10]],[[32,31]],[[26,31]],[[[2,[1]],24]],[[[2,[1]],23]],[[[2,[1]],25]],[[[48,[37]],6]],[[[2,[1]],[52,[[51,[[49,[46]]]]]]]],[7],0,0,0,[[[33,[1]]],[[5,[[34,[1]],4]]]],[[[33,[1]],11],[[5,[[34,[1]],4]]]],[[6,6],6],[[6,6]],[[6,6],6],0,[24,[[53,[46]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[6,6]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],0,[[6,6],6],0,[[32,[49,[46]],[55,[46]]],[[5,[13]]]],0,[[[2,[1]],31]],0,0,0,0,[[1,7],[[5,[[2,[1]],4]]]],[[10,10],7],[[[34,[1]],[49,[46]]],[[39,[11]]]],[[[33,[1]],56,[49,[46]]],[[5,[4]]]],[[[2,[1]]],[[5,[[33,[1]],4]]]],[[[33,[1]],[49,[46]]],[[5,[4]]]],[[[33,[1]],57],[[5,[4]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[56,56],[[]],[[56,56],31],[[],31],0,0,[[56,40],41],[[]],0,[[56,47]],0,0,[[]],[56,31],[56,31],0,[56,31],0,[56,31],0,0,0,[[]],[[],5],[[],5],[[],54],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[58,58],[59,59],[60,60],[[]],[[]],[[]],[59,[[5,[4]]]],[60,[[5,[4]]]],0,[59,[[5,[13]]]],[60,[[5,[13]]]],[[59,11],[[5,[13]]]],[[60,11],[[5,[13]]]],[1,[[5,[4]]]],[[58,1],[[5,[4]]]],[[59,1],[[5,[4]]]],[[60,1],[[5,[4]]]],[[58,58],31],[[59,59],31],[[60,60],31],[[],31],[[],31],[[],31],[[58,40],41],[[59,40],41],[[60,40],41],[[]],[[]],[[]],[59,[[5,[3,13]]]],[60,[[5,[3,13]]]],[[]],[[]],[[]],0,0,0,0,[[[52,[3]],[52,[3]]],58],[[[52,[3]],[52,[3]]],59],[[[52,[3]],[52,[3]]],60],0,[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],54],[[],54],[[],54]],"c":[35,68],"p":[[8,"Write"],[3,"Encoder"],[3,"String"],[4,"EncodingError"],[4,"Result"],[3,"Transformations"],[3,"Info"],[3,"AnimationControl"],[4,"Option"],[15,"u32"],[15,"usize"],[3,"OutputInfo"],[4,"DecodingError"],[8,"Error"],[4,"ColorType"],[4,"BitDepth"],[3,"PixelDimensions"],[4,"Unit"],[4,"DisposeOp"],[4,"BlendOp"],[3,"FrameControl"],[4,"Compression"],[3,"ScaledFloat"],[3,"SourceChromaticities"],[4,"SrgbRenderingIntent"],[3,"DecodeOptions"],[3,"Limits"],[4,"FilterType"],[4,"AdaptiveFilterType"],[4,"Ordering"],[15,"bool"],[3,"StreamingDecoder"],[3,"Writer"],[3,"StreamWriter"],[15,"f32"],[8,"IntoIterator"],[8,"Read"],[3,"Reader"],[6,"Result"],[3,"Formatter"],[6,"Result"],[3,"ParameterError"],[4,"Decoded"],[3,"Error"],[3,"Error"],[15,"u8"],[8,"Hasher"],[3,"Decoder"],[15,"slice"],[15,"u16"],[4,"Cow"],[8,"Into"],[15,"array"],[3,"TypeId"],[3,"Vec"],[3,"ChunkType"],[8,"EncodableTextChunk"],[3,"TEXtChunk"],[3,"ZTXtChunk"],[3,"ITXtChunk"]]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":"NNNEDNDNNDDNNNDNEDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDCLLLLLLLLLLLLLL","n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[231,"proc_macro2::extra"],[246,"proc_macro2::token_stream"]],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[11,10,10,0,0,8,0,8,11,0,0,8,10,10,0,8,0,0,0,0,1,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,6,5,7,6,8,9,10,1,11,12,5,7,6,8,9,10,1,11,12,5,12,7,9,9,10,11,12,12,10,11,12,7,7,0,5,5,5,5,22,22,7,7,6,8,8,9,9,10,1,1,11,12,12,5,5,22,7,7,7,6,6,8,8,8,8,8,9,10,1,11,12,5,7,7,7,5,12,5,5,5,5,5,5,5,5,5,5,22,7,6,8,9,10,1,11,12,5,7,7,5,5,6,6,6,7,9,1,12,12,12,6,8,9,1,12,5,6,1,22,8,9,1,12,5,9,9,9,5,5,7,6,8,9,10,1,11,12,5,22,7,8,9,1,12,5,0,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,5,5,5,5,5,5,5,5,5,6,5,5,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],5],[[],6],[2,5],[7,7],[6,6],[8,8],[9,9],[10,10],[1,1],[11,11],[12,12],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,12],13],[[],7],[9,14],[9,10],[[10,10],15],[[11,11],15],[[12,[0,[16,[18,[17]]]]],15],[[12,12],15],[[],15],[[],15],[[],15],[[7,19]],[[7,19]],0,[20,5],[20,5],[21,5],[21,5],[[22,23],24],[[22,23],24],[[7,23],24],[[7,23],24],[[6,23],24],[[8,23],24],[[8,23],24],[[9,23],24],[[9,23],24],[[10,23],24],[[1,23],24],[[1,23],24],[[11,23],24],[[12,23],24],[[12,23],24],[[5,23],24],[[5,23],24],[[]],[[]],[8,7],[25,7],[[]],[26,6],[[]],[9,8],[1,8],[5,8],[12,8],[[]],[[]],[[]],[[]],[[]],[[]],[19,7],[19,7],[17,[[27,[7,22]]]],[17,[[27,[5,22]]]],[[12,28]],[29,5],[29,5],[30,5],[30,5],[31,5],[31,5],[32,5],[32,5],[33,5],[33,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,34],[7,15],[35,5],[35,5],[[6,6],[[36,[6]]]],[[6,6],6],[[],6],[[],7],[[10,7],9],[[2,11],1],[[17,6],12],[[17,6],12],[[12,12],[[36,[13]]]],[[6,6],6],[[8,6]],[[9,6]],[[1,6]],[[12,6]],[[5,6]],[6,[[36,[37]]]],[1,11],[22,6],[8,6],[9,6],[1,6],[12,6],[5,6],[9,6],[9,6],[9,7],[17,5],[[5,[39,[38]]],[[36,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[41,5],[41,5],[42,5],[42,5],[43,5],[43,5],[44,5],[44,5],[3,5],[3,5],[6,26],[38,5],[38,5],0,[[]],[[]],[14,14],[[]],[14,6],[[14,23],24],[[]],[[]],[14,6],[14,6],[[]],[[],27],[[],27],[[],40],0,0,[[]],[[]],[34,34],[[]],[[34,23],24],[[]],[[]],[[]],[34,[[36,[8]]]],[34],[[]],[[],27],[[],27],[[],40]],"c":[],"p":[[3,"Punct"],[15,"char"],[15,"u8"],[15,"slice"],[3,"Literal"],[3,"Span"],[3,"TokenStream"],[4,"TokenTree"],[3,"Group"],[4,"Delimiter"],[4,"Spacing"],[3,"Ident"],[4,"Ordering"],[3,"DelimSpan"],[15,"bool"],[8,"Sized"],[15,"str"],[8,"AsRef"],[8,"IntoIterator"],[15,"f32"],[15,"f64"],[3,"LexError"],[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[4,"Result"],[8,"Hasher"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter"],[15,"isize"],[4,"Option"],[3,"String"],[15,"usize"],[8,"RangeBounds"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"]]},\
"qoi":{"doc":"Fast encoder/decoder for QOI image format, implemented in …","t":"EEDDEDNNNNNNNNNGNNNNLLLLLLLLLLLLLLLLMLLLLLLLLLLMLFFLFLLLLFLFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMMMMMMMM","n":["Channels","ColorSpace","Decoder","Encoder","Error","Header","InvalidChannels","InvalidColorSpace","InvalidImageDimensions","InvalidImageLength","InvalidMagic","InvalidPadding","IoError","Linear","OutputBufferTooSmall","Result","Rgb","Rgba","Srgb","UnexpectedBufferEnd","as_u8","as_u8","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channels","channels","channels","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colorspace","data","decode_header","decode_to_buf","decode_to_buf","decode_to_vec","decode_to_vec","default","default","default","encode_max_len","encode_max_len","encode_to_buf","encode_to_buf","encode_to_stream","encode_to_vec","encode_to_vec","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_stream","hash","hash","hash","header","header","height","into","into","into","into","into","into","into_reader","is_linear","is_rgb","is_rgba","is_srgb","n_bytes","n_pixels","new","new","partial_cmp","partial_cmp","reader","required_buf_len","required_buf_len","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","type_id","type_id","type_id","width","with_channels","with_channels","with_colorspace","with_colorspace","channels","colorspace","height","height","magic","required","size","size","width","width"],"q":[[0,"qoi"],[141,"qoi::Error"]],"d":["Number of 8-bit channels in a pixel.","Image color space.","Decode QOI images from slices or from streams.","Encode QOI images into buffers or into streams.","Errors that can occur during encoding or decoding.","Image header: dimensions, channels, color space.","Invalid number of channels: expected 3 or 4","Invalid color space: expected 0 or 1","Invalid image dimensions: can’t be empty or larger than …","Image dimensions are inconsistent with image buffer length","Leading 4 magic bytes don’t match when decoding","Invalid stream end marker encountered when decoding","Generic I/O error from the wrapped reader/writer","All channels are linear","Output buffer is too small to fit encoded/decoded image","Alias for <code>Result</code> with the error type of <code>Error</code>.","Three 8-bit channels (RGB)","Four 8-bit channels (RGBA)","sRGB with linear alpha","Input buffer ended unexpectedly before decoding was …","Converts to an integer (0 if sRGB, 1 if all linear).","Converts to an integer (3 if RGB, 4 if RGBA).","","","","","","","","","","","","","Returns the inferred number of channels.","Returns the number of channels in the decoded image.","Number of 8-bit channels per pixel","","","","","","","","","","","Color space (informative field, doesn’t affect encoding)","Returns the undecoded tail of the input slice of bytes.","Decode the image header from a slice of bytes.","Decode the image into a pre-allocated buffer.","Decodes the image to a pre-allocated buffer and returns …","Decode the image into a newly allocated vector.","Decodes the image into a newly allocated vector of bytes …","","","","The maximum number of bytes the encoded image will take.","The maximum number of bytes the encoded image will take.","Encode the image into a pre-allocated buffer.","Encodes the image to a pre-allocated buffer and returns …","Encodes the image directly to a generic writer that …","Encode the image into a newly allocated vector.","Encodes the image into a newly allocated vector of bytes …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new decoder from a generic reader that …","","","","Returns the header that will be stored in the encoded …","Returns the decoded image header.","Image height in pixels","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the decoder and returns the underlying reader …","Returns true is all channels are linear.","Returns true if there are 3 channels (RGB).","Returns true if there are 4 channels (RGBA).","Returns true if the color space is sRGB with linear alpha.","Returns the total number of bytes in the raw pixel array.","Returns a number of pixels in the image.","Creates a new encoder from a given array of pixel data and …","Creates a new decoder from a slice of bytes.","","","Returns an immutable reference to the underlying reader.","The maximum number of bytes the encoded image will take.","The number of bytes the decoded image will take.","","","","","","","","","","","","","","","","","","","","Creates a new header and validates image dimensions.","","","","","","","Image width in pixels","Returns a new decoder with modified number of channels.","Creates a new header with modified channels.","Returns a new encoder with modified color space.","Creates a new header with modified color space.","","","","","","","","","",""],"i":[0,0,0,0,0,0,19,19,19,19,19,19,19,1,19,0,3,3,1,19,1,3,4,5,19,7,1,3,4,5,19,7,1,3,4,5,7,5,7,1,3,5,7,1,3,1,3,7,5,0,0,5,0,5,7,1,3,0,7,0,4,4,0,4,7,1,3,7,1,3,19,19,7,1,3,4,5,19,19,19,7,1,3,5,7,1,3,4,5,7,4,5,19,7,1,3,5,1,3,3,1,7,7,4,5,1,3,5,4,5,5,7,1,3,19,4,5,19,7,1,1,3,3,4,5,19,7,1,3,7,4,5,19,7,1,3,7,5,7,4,7,31,32,33,34,35,36,34,36,33,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,3],[[[5,[0]]],3],0,[[[5,[6]]],[[5,[6]]]],[7,7],[1,1],[3,3],[[]],[[]],[[]],[[]],[[1,1],8],[[3,3],8],0,[[[5,[0]]],[[9,[2]]]],[[[10,[[9,[2]]]]],[[11,[7]]]],[[[12,[[9,[2]]]],[10,[[9,[2]]]]],[[11,[7]]]],[[[5,[0]],[12,[[9,[2]]]]],[[11,[13]]]],[[[10,[[9,[2]]]]],11],[[[5,[0]]],[[11,[[14,[2]]]]]],[[],7],[[],1],[[],3],[[15,15,[16,[2]]],13],[7,13],[[[12,[[9,[2]]]],[10,[[9,[2]]]],15,15],[[11,[13]]]],[[4,[12,[[9,[2]]]]],[[11,[13]]]],[[4,17],[[11,[13]]]],[[[10,[[9,[2]]]],15,15],[[11,[[14,[2]]]]]],[4,[[11,[[14,[2]]]]]],[[7,7],18],[[1,1],18],[[3,3],18],[[],18],[[],18],[[],18],[[19,20],21],[[19,20],21],[[7,20],21],[[1,20],21],[[3,20],21],[[]],[[]],[22,19],[[]],[23,19],[[]],[[]],[[]],[24,[[11,[[5,[24]]]]]],[[7,25]],[[1,25]],[[3,25]],[4,7],[[[5,[0]]],7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[24]]],24],[1,18],[3,18],[3,18],[1,18],[7,13],[7,13],[[[0,[[10,[[9,[2]]]],26]],15,15],[[11,[4]]]],[[[0,[[10,[[9,[2]]]],26]]],[[11,[[5,[0]]]]]],[[1,1],[[27,[8]]]],[[3,3],[[27,[8]]]],[[[5,[24]]],24],[4,13],[[[5,[0]]],13],[[]],[[]],[[]],[[]],[[],28],[[],29],[[],29],[[],29],[[],29],[2,[[11,[1]]]],[[],29],[2,[[11,[3]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[15,15,3,1],[[11,[7]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,[[[5,[0]],3],[[5,[0]]]],[[7,3],7],[[4,1],4],[[7,1],7],0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[4,"ColorSpace"],[15,"u8"],[4,"Channels"],[3,"Encoder"],[3,"Decoder"],[8,"Clone"],[3,"Header"],[4,"Ordering"],[15,"slice"],[8,"AsRef"],[6,"Result"],[8,"AsMut"],[15,"usize"],[3,"Vec"],[15,"u32"],[8,"Into"],[8,"Write"],[15,"bool"],[4,"Error"],[3,"Formatter"],[6,"Result"],[4,"Infallible"],[3,"Error"],[8,"Read"],[8,"Hasher"],[8,"Sized"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[13,"InvalidChannels"],[13,"InvalidColorSpace"],[13,"InvalidImageDimensions"],[13,"InvalidImageLength"],[13,"InvalidMagic"],[13,"OutputBufferTooSmall"]]},\
"quote":{"doc":"github crates-io docs-rs","t":"IIIKKKKKOLLOOLLLLK","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":[[0,"quote"]],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,11,11,11,11,12,0,4,4,0,0,12,12,4,4,4],"f":[0,0,0,[[[2,[1]]]],[3],[[3,4]],[[3,4]],[5,6],0,[7,8],[7,8],0,0,[[],[[10,[9]]]],[[],[[10,[9]]]],[[],8],[[],8],[8]],"c":[],"p":[[4,"TokenTree"],[8,"Into"],[8,"IntoIterator"],[8,"ToTokens"],[3,"Formatter"],[6,"Result"],[8,"Sized"],[3,"TokenStream"],[3,"Span"],[4,"Option"],[8,"TokenStreamExt"],[8,"IdentFragment"]]},\
"raw_window_handle":{"doc":"Interoperability library for Rust Windowing applications.","t":"DDNDNDNNDDDNNDDNNDDNNDDEIIIINNNDDEENNDDNNDDNNDDNDNDDNDNNDDNNDDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMKLKLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMKL","n":["Active","ActiveHandle","Android","AndroidDisplayHandle","AndroidNdk","AndroidNdkWindowHandle","AppKit","AppKit","AppKitDisplayHandle","AppKitWindowHandle","DisplayHandle","Drm","Drm","DrmDisplayHandle","DrmWindowHandle","Gbm","Gbm","GbmDisplayHandle","GbmWindowHandle","Haiku","Haiku","HaikuDisplayHandle","HaikuWindowHandle","HandleError","HasDisplayHandle","HasRawDisplayHandle","HasRawWindowHandle","HasWindowHandle","Inactive","Orbital","Orbital","OrbitalDisplayHandle","OrbitalWindowHandle","RawDisplayHandle","RawWindowHandle","UiKit","UiKit","UiKitDisplayHandle","UiKitWindowHandle","Wayland","Wayland","WaylandDisplayHandle","WaylandWindowHandle","Web","Web","WebDisplayHandle","WebWindowHandle","Win32","Win32WindowHandle","WinRt","WinRtWindowHandle","WindowHandle","Windows","WindowsDisplayHandle","Xcb","Xcb","XcbDisplayHandle","XcbWindowHandle","Xlib","Xlib","XlibDisplayHandle","XlibWindowHandle","a_native_window","b_direct_window","b_window","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_raw","borrow_raw","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","connection","core_window","display","display","display_handle","display_handle","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gbm_device","gbm_surface","handle","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hinstance","hwnd","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new_unchecked","ns_view","ns_window","plane","raw_display_handle","raw_display_handle","raw_window_handle","raw_window_handle","screen","screen","set_active","set_inactive","surface","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui_view","ui_view_controller","ui_window","visual_id","visual_id","window","window","window","window_handle","window_handle"],"q":[[0,"raw_window_handle"]],"d":["Keeps track of whether the application is currently active.","Represents a live window handle.","A raw display handle for Android NDK.","Raw display handle for Android.","A raw window handle for Android NDK.","Raw window handle for Android NDK.","A raw window handle for AppKit.","A raw display handle for AppKit.","Raw display handle for AppKit.","Raw window handle for AppKit.","The handle to the display controller of the windowing …","A raw window handle for the Linux Kernel Mode Set/Direct …","A raw display handle for the Linux Kernel Mode Set/Direct …","Raw display handle for the Linux Kernel Mode Set/Direct …","Raw window handle for the Linux Kernel Mode Set/Direct …","A raw window handle for the Linux Generic Buffer Manager.","A raw display handle for the Linux Generic Buffer Manager.","Raw display handle for the Linux Generic Buffer Manager.","Raw window handle for the Linux Generic Buffer Manager.","A raw window handle for Haiku.","A raw display handle for Haiku.","Raw display handle for Haiku.","Raw window handle for Haiku.","The error type returned when a handle cannot be obtained.","A display that acts as a wrapper around a display handle.","Display that wraps around a raw display handle.","Window that wraps around a raw window handle.","A handle to a window.","The handle is not currently active.","A raw window handle for the Redox operating system.","A raw display handle for the Redox operating system.","Raw display handle for the Redox operating system.","Raw window handle for the Redox operating system.","A display server handle for a particular windowing system.","A window handle for a particular windowing system.","A raw window handle for UIKit (Apple’s non-macOS …","A raw display handle for UIKit (Apple’s non-macOS …","Raw display handle for UIKit.","Raw window handle for UIKit.","A raw window handle for Wayland.","A raw display handle for Wayland.","Raw display handle for Wayland.","Raw window handle for Wayland.","A raw window handle for the Web.","A raw display handle for the Web.","Raw display handle for the Web.","Raw window handle for the Web.","A raw window handle for Win32.","Raw window handle for Win32.","A raw window handle for WinRT.","Raw window handle for WinRT.","The handle to a window.","A raw display handle for Win32.","Raw display handle for Windows.","A raw window handle for Xcb.","A raw display handle for Xcb.","Raw display handle for Xcb.","Raw window handle for Xcb.","A raw window handle for Xlib.","A raw display handle for Xlib.","Raw display handle for Xlib.","Raw window handle for Xlib.","A pointer to an <code>ANativeWindow</code>.","A pointer to a BDirectWindow object that might be null","A pointer to a BWindow object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>DisplayHandle</code> from a <code>RawDisplayHandle</code>.","Borrow a <code>WindowHandle</code> from a <code>RawWindowHandle</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an X server <code>xcb_connection_t</code>.","A WinRT <code>CoreWindow</code> handle.","A pointer to an Xlib <code>Display</code>.","A pointer to a <code>wl_display</code>.","Get a handle to the display controller of the windowing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The drm file descriptor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","The gbm device.","The gbm surface.","Get a live window handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>HINSTANCE</code> associated with this type’s <code>HWND</code>.","A Win32 <code>HWND</code> handle.","An ID value inserted into the data attributes of the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>Active</code> tracker.","Create a new <code>ActiveHandle</code>.","Create a new freestanding active handle.","A pointer to an <code>NSView</code> object.","A pointer to an <code>NSWindow</code> object.","The primary drm plane handle.","","","","","An X11 screen to use with this display handle.","An X11 screen to use with this display handle.","Set the application to be active.","Set the application to be inactive.","A pointer to a <code>wl_surface</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an <code>UIView</code> object.","A pointer to an <code>UIViewController</code> object.","A pointer to an <code>UIWindow</code> object.","An Xlib visual ID, or 0 if unknown.","An X11 <code>xcb_visualid_t</code>, or 0 if unknown.","A pointer to an orbclient window.","An Xlib <code>Window</code>.","An X11 <code>xcb_window_t</code>.","Get a handle to the window.",""],"i":[0,0,1,0,3,0,3,1,0,0,0,3,1,0,0,3,1,0,0,3,1,0,0,0,0,0,0,0,31,3,1,0,0,0,0,3,1,0,0,3,1,0,0,3,1,0,0,3,0,3,0,0,1,0,3,1,0,0,3,1,0,0,7,11,11,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,2,5,6,7,8,9,4,2,5,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,18,30,16,20,40,2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,6,7,8,9,2,5,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,22,34,6,7,8,9,4,2,5,31,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,24,25,34,6,7,8,9,2,5,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,29,29,27,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,4,4,9,9,23,41,2,42,5,16,18,34,34,21,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,15,15,15,17,19,13,17,19,43,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[3,4],5],[6,6],[7,7],[8,8],[9,9],[4,4],[2,2],[5,5],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[3,3],[1,1],0,0,0,0,[[],[[32,[2,31]]]],[2,[[32,[2,31]]]],[[],6],[[],7],[[],8],[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],[[],15],[[],16],[[],17],[[],18],[[],19],[[],20],[[],21],[[],22],[[],23],[[],24],[[],25],[[],26],[[],27],[[],28],[[],29],[[],30],[[6,6],33],[[7,7],33],[[8,8],33],[[9,9],33],[[2,2],33],[[5,5],33],[[10,10],33],[[11,11],33],[[12,12],33],[[13,13],33],[[14,14],33],[[15,15],33],[[16,16],33],[[17,17],33],[[18,18],33],[[19,19],33],[[20,20],33],[[21,21],33],[[22,22],33],[[23,23],33],[[24,24],33],[[25,25],33],[[26,26],33],[[27,27],33],[[28,28],33],[[29,29],33],[[30,30],33],[[3,3],33],[[1,1],33],0,[[34,35],36],[[6,35],36],[[7,35],36],[[8,35],36],[[9,35],36],[[4,35],36],[[2,35],36],[[5,35],36],[[31,35],36],[[31,35],36],[[10,35],36],[[11,35],36],[[12,35],36],[[13,35],36],[[14,35],36],[[15,35],36],[[16,35],36],[[17,35],36],[[18,35],36],[[19,35],36],[[20,35],36],[[21,35],36],[[22,35],36],[[23,35],36],[[24,35],36],[[25,35],36],[[26,35],36],[[27,35],36],[[28,35],36],[[29,35],36],[[30,35],36],[[3,35],36],[[1,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,3],[15,3],[23,3],[17,3],[11,3],[30,3],[19,3],[25,3],[7,3],[29,3],[27,3],[21,3],[[]],[9,3],[10,1],[12,1],[20,1],[16,1],[28,1],[26,1],[18,1],[14,1],[24,1],[22,1],[[]],[6,1],[8,1],0,0,[34,[[37,[4]]]],[[6,38]],[[7,38]],[[8,38]],[[9,38]],[[2,38]],[[5,38]],[[10,38]],[[11,38]],[[12,38]],[[13,38]],[[14,38]],[[15,38]],[[16,38]],[[17,38]],[[18,38]],[[19,38]],[[20,38]],[[21,38]],[[22,38]],[[23,38]],[[24,38]],[[25,38]],[[26,38]],[[27,38]],[[28,38]],[[29,38]],[[30,38]],[[3,38]],[[1,38]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],4],[[],4],0,0,0,[[],1],[2,1],[[],3],[5,3],0,0,[34],[34],0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,0,0,0,0,0,0,0,[[],[[32,[5,31]]]],[5,[[32,[5,31]]]]],"c":[],"p":[[4,"RawDisplayHandle"],[3,"DisplayHandle"],[4,"RawWindowHandle"],[3,"ActiveHandle"],[3,"WindowHandle"],[3,"AndroidDisplayHandle"],[3,"AndroidNdkWindowHandle"],[3,"AppKitDisplayHandle"],[3,"AppKitWindowHandle"],[3,"HaikuDisplayHandle"],[3,"HaikuWindowHandle"],[3,"OrbitalDisplayHandle"],[3,"OrbitalWindowHandle"],[3,"UiKitDisplayHandle"],[3,"UiKitWindowHandle"],[3,"XlibDisplayHandle"],[3,"XlibWindowHandle"],[3,"XcbDisplayHandle"],[3,"XcbWindowHandle"],[3,"WaylandDisplayHandle"],[3,"WaylandWindowHandle"],[3,"DrmDisplayHandle"],[3,"DrmWindowHandle"],[3,"GbmDisplayHandle"],[3,"GbmWindowHandle"],[3,"WebDisplayHandle"],[3,"WebWindowHandle"],[3,"WindowsDisplayHandle"],[3,"Win32WindowHandle"],[3,"WinRtWindowHandle"],[4,"HandleError"],[4,"Result"],[15,"bool"],[3,"Active"],[3,"Formatter"],[6,"Result"],[4,"Option"],[8,"Hasher"],[3,"TypeId"],[8,"HasDisplayHandle"],[8,"HasRawDisplayHandle"],[8,"HasRawWindowHandle"],[8,"HasWindowHandle"]]},\
"rayon":{"doc":"Rayon is a data-parallelism library that makes it easy to …","t":"DNDNDDDDDDEALLLLLLLLLLLLLLLLLLLFLLLLLLAFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLAFLFFLLLLLLALAAAALFLFLALFLLFLLLFLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAFLFLDLLLLLLLLLLLLLLLLLLLLLAAAAAAADDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDEDDDDDDDDDDDDDIIDDDDIIIQQQQQQQQQQQDNDDDDDDDDIIIIIDDDDNDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLKKLLLLLALLLLLLLLLFFLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIQQQQQIIIQQQIIFFFKKKLKLKKKKLLKKKKKKDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCCCCCCCDLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDIIDDDDDDDDDKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDIDDDDDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BroadcastContext","Executed","FnContext","Idle","Scope","ScopeFifo","ThreadBuilder","ThreadPool","ThreadPoolBuildError","ThreadPoolBuilder","Yield","array","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","breadth_first","broadcast","broadcast","build","build_global","build_scoped","clone","clone_into","collections","current_num_threads","current_num_threads","current_thread_has_pending_tasks","current_thread_index","current_thread_index","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","exit_handler","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","in_place_scope","in_place_scope","in_place_scope_fifo","in_place_scope_fifo","index","index","init","init","init","init","init","init","init","init","init","install","into","into","into","into","into","into","into","into","into","iter","join","join","join_context","max_num_threads","migrated","name","new","new","num_threads","num_threads","option","panic_handler","prelude","range","range_inclusive","result","run","scope","scope","scope_fifo","scope_fifo","slice","source","spawn","spawn","spawn","spawn_broadcast","spawn_broadcast","spawn_broadcast","spawn_broadcast","spawn_fifo","spawn_fifo","spawn_fifo","spawn_handler","stack_size","stack_size","start_handler","str","string","thread_name","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_current_thread","vec","yield_local","yield_local","yield_now","yield_now","IntoIter","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drive","drive_unindexed","drop","fmt","from","init","into","into_par_iter","len","opt_len","to_owned","try_from","try_into","type_id","with_producer","binary_heap","btree_map","btree_set","hash_map","hash_set","linked_list","vec_deque","Drain","IntoIter","Iter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","len","len","len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_producer","with_producer","with_producer","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","IntoIter","Iter","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drop","drop","fmt","fmt","from","from","init","init","into","into","into_par_iter","into_par_iter","opt_len","opt_len","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Drain","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","opt_len","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Drain","IntoIter","Iter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Drain","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","len","len","len","len","opt_len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_producer","with_producer","with_producer","with_producer","Chain","Chunks","Cloned","Copied","Either","Empty","Enumerate","ExponentialBlocks","Filter","FilterMap","FlatMap","FlatMapIter","Flatten","FlattenIter","Fold","FoldChunks","FoldChunksWith","FoldWith","FromParallelIterator","IndexedParallelIterator","Inspect","Interleave","InterleaveShortest","Intersperse","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","Item","Item","Item","Item","Item","Item","Iter","Iter","Iter","Iter","Iter","IterBridge","Left","Map","MapInit","MapWith","MaxLen","MinLen","MultiZip","Once","PanicFuse","ParallelBridge","ParallelDrainFull","ParallelDrainRange","ParallelExtend","ParallelIterator","Positions","Repeat","RepeatN","Rev","Right","Skip","SkipAny","SkipAnyWhile","Split","StepBy","Take","TakeAny","TakeAnyWhile","TryFold","TryFoldWith","UniformBlocks","Update","WalkTree","WalkTreePostfix","WalkTreePrefix","WhileSome","Zip","ZipEq","all","all","any","any","as_mut","as_mut","as_mut","as_mut","as_pin_mut","as_pin_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_exponential_blocks","by_uniform_blocks","chain","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","cmp","cmp","collect","collect","collect_into_vec","collect_vec_list","copied","count","count","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","either","either_into","either_with","empty","enumerate","eq","eq","equivalent","expect_left","expect_right","extend","factor_err","factor_first","factor_into_iter","factor_iter","factor_iter_mut","factor_none","factor_ok","factor_second","filter","filter_map","find","find_any","find_first","find_last","find_map","find_map_any","find_map_first","find_map_last","flat_map","flat_map_iter","flatten","flatten_iter","flip","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold_chunks","fold_chunks_with","fold_with","for_each","for_each","for_each_init","for_each_with","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_par_iter","ge","gt","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inspect","interleave","interleave_shortest","intersperse","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_inner","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","is_left","is_right","iter","iter_mut","last","le","left","left_and_then","left_or","left_or_default","left_or_else","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","lt","map","map","map_either","map_either_with","map_init","map_left","map_right","map_with","max","max_by","max_by_key","min","min_by","min_by_key","ne","next","next_back","nth","once","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","panic_fuse","par_bridge","par_drain","par_drain","par_extend","par_extend","par_iter","par_iter_mut","partial_cmp","partial_cmp","partition","partition","partition_map","plumbing","poll","position","position_any","position_first","position_last","positions","product","reduce","reduce_with","repeat","repeatn","rev","rfind","rfold","right","right_and_then","right_or","right_or_default","right_or_else","size_hint","skip","skip_any","skip_any_while","split","step_by","sum","take","take","take_any","take_any_while","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_fold","try_fold_with","try_for_each","try_for_each_init","try_for_each_with","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reduce","try_reduce_with","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_left","unwrap_right","unzip","unzip_into_vecs","update","walk_tree","walk_tree_postfix","walk_tree_prefix","while_some","with_max_len","with_min_len","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","zip","zip","zip_eq","Consumer","Folder","Folder","IntoIter","Item","Item","Output","Producer","ProducerCallback","Reducer","Reducer","Result","Result","UnindexedConsumer","UnindexedProducer","bridge","bridge_producer_consumer","bridge_unindexed","callback","complete","consume","consume_iter","fold_with","fold_with","full","full","into_folder","into_iter","max_len","min_len","reduce","split","split_at","split_at","split_off_left","to_reducer","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","len","len","len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_producer","with_producer","with_producer","FromParallelIterator","IndexedParallelIterator","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","ParallelBridge","ParallelDrainFull","ParallelDrainRange","ParallelExtend","ParallelIterator","ParallelSlice","ParallelSliceMut","ParallelString","Iter","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drive","drive","drive_unindexed","drive_unindexed","drop","fmt","from","init","into","into_par_iter","len","len","opt_len","opt_len","to_owned","try_from","try_into","type_id","with_producer","with_producer","Iter","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drive","drive","drive_unindexed","drive_unindexed","drop","fmt","from","init","into","into_par_iter","len","len","opt_len","opt_len","to_owned","try_from","try_into","type_id","with_producer","with_producer","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","len","len","len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_producer","with_producer","with_producer","Chunks","ChunksExact","ChunksExactMut","ChunksMut","Iter","IterMut","ParallelSlice","ParallelSliceMut","RChunks","RChunksExact","RChunksExactMut","RChunksMut","Split","SplitInclusive","SplitInclusiveMut","SplitMut","Windows","as_parallel_slice","as_parallel_slice_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_remainder","into_remainder","len","len","len","len","len","len","len","len","len","len","len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","par_chunks","par_chunks_exact","par_chunks_exact_mut","par_chunks_mut","par_rchunks","par_rchunks_exact","par_rchunks_exact_mut","par_rchunks_mut","par_sort","par_sort_by","par_sort_by_cached_key","par_sort_by_key","par_sort_unstable","par_sort_unstable_by","par_sort_unstable_by_key","par_split","par_split_inclusive","par_split_inclusive_mut","par_split_mut","par_windows","remainder","remainder","remainder","remainder","take_remainder","take_remainder","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","Bytes","CharIndices","Chars","EncodeUtf16","Lines","MatchIndices","Matches","ParallelString","Split","SplitAsciiWhitespace","SplitInclusive","SplitTerminator","SplitWhitespace","as_parallel_string","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","par_bytes","par_char_indices","par_chars","par_encode_utf16","par_lines","par_match_indices","par_matches","par_split","par_split_ascii_whitespace","par_split_inclusive","par_split_terminator","par_split_whitespace","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Drain","borrow","borrow_mut","deref","deref_mut","drive_unindexed","drop","drop","fmt","from","init","into","into_par_iter","try_from","try_into","type_id","Drain","IntoIter","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drive","drive","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","from","from","init","init","into","into","into_par_iter","into_par_iter","len","len","opt_len","opt_len","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_producer","with_producer"],"q":[[0,"rayon"],[197,"rayon::array"],[219,"rayon::collections"],[226,"rayon::collections::binary_heap"],[290,"rayon::collections::btree_map"],[341,"rayon::collections::btree_set"],[376,"rayon::collections::hash_map"],[443,"rayon::collections::hash_set"],[494,"rayon::collections::linked_list"],[548,"rayon::collections::vec_deque"],[631,"rayon::iter"],[1963,"rayon::iter::plumbing"],[1999,"rayon::option"],[2062,"rayon::prelude"],[2075,"rayon::range"],[2102,"rayon::range_inclusive"],[2129,"rayon::result"],[2192,"rayon::slice"],[2517,"rayon::str"],[2747,"rayon::string"],[2763,"rayon::vec"]],"d":["Provides context to a closure called by <code>broadcast</code>.","Work was found and executed.","Provides the calling context to a closure called by …","No available work was found.","Represents a fork-join scope which can be used to spawn …","Represents a fork-join scope which can be used to spawn …","Thread builder used for customization via …","Represents a user created thread-pool.","Error when initializing a thread pool.","Used to create a new <code>ThreadPool</code> or to configure the global …","Result of <code>yield_now()</code> or <code>yield_local()</code>.","Parallel iterator types for arrays (<code>[T; N]</code>)","","","","","","","","","","","","","","","","","","","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …","Executes <code>op</code> within every thread in the current threadpool. …","Executes <code>op</code> within every thread in the threadpool. Any …","Creates a new <code>ThreadPool</code> initialized using this …","Initializes the global thread pool. This initialization is …","Creates a scoped <code>ThreadPool</code> initialized using this …","","","Parallel iterator types for standard collections","Returns the number of threads in the current registry. If …","Returns the (current) number of threads in the thread pool.","Returns true if the current worker thread currently has “…","If called from a Rayon worker thread, returns the index of …","If called from a Rayon worker thread in this thread-pool, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets a callback to be invoked on thread exit.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that spawns work into this thread-pool.","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that spawns work into this thread-pool in …","Our index amongst the broadcast threads (ranges from …","Gets the index of this thread in the pool, within …","","","","","","","","","","Executes <code>op</code> within the threadpool. Any attempts to use <code>join</code>…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Traits for writing parallel programs using an …","Takes two closures and <em>potentially</em> runs them in parallel. …","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …","Identical to <code>join</code>, except that the closures have a …","Returns the maximum number of threads that Rayon supports …","Returns <code>true</code> if the closure was called from a different …","Gets the string that was specified by …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Creates and returns a valid rayon thread pool builder, but …","The number of threads receiving the broadcast in the …","Sets the number of threads to be used in the rayon …","Parallel iterator types for options","Normally, whenever Rayon catches a panic, it tries to …","The rayon prelude imports the various <code>ParallelIterator</code> …","Parallel iterator types for ranges, the type for values …","Parallel iterator types for inclusive ranges, the type for …","Parallel iterator types for results","Executes the main loop for this thread. This will not …","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that executes within this thread-pool. …","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that executes within this thread-pool. …","Parallel iterator types for slices","","Puts the task into the Rayon threadpool’s job queue in …","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This task …","Spawns an asynchronous task on every thread in this …","Spawns a job into every thread of the fork-join scope <code>self</code>…","Spawns a job into every thread of the fork-join scope <code>self</code>…","Spawns an asynchronous task on every thread in this …","Fires off a task into the Rayon threadpool in the “static…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This task …","Sets a custom function for spawning threads.","Gets the value that was specified by …","Sets the stack size of the worker threads","Sets a callback to be invoked on thread start.","Parallel iterator types for strings","This module contains the parallel iterator types for owned …","Sets a closure which takes a thread index and returns the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use the current thread as one of the threads in the pool.","Parallel iterator types for vectors (<code>Vec&lt;T&gt;</code>)","Cooperatively yields execution to local Rayon work.","Cooperatively yields execution to local Rayon work.","Cooperatively yields execution to Rayon.","Cooperatively yields execution to Rayon.","Parallel iterator that moves out of an array.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","This module contains the parallel iterator types for heaps …","This module contains the parallel iterator types for …","This module contains the parallel iterator types for …","This module contains the parallel iterator types for hash …","This module contains the parallel iterator types for hash …","This module contains the parallel iterator types for …","This module contains the parallel iterator types for …","Draining parallel iterator that moves out of a binary heap,","Parallel iterator over a binary heap","Parallel iterator over an immutable reference to a binary …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over a B-Tree map","Parallel iterator over an immutable reference to a B-Tree …","Parallel iterator over a mutable reference to a B-Tree map","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Parallel iterator over a B-Tree set","Parallel iterator over an immutable reference to a B-Tree …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Draining parallel iterator that moves out of a hash map, …","Parallel iterator over a hash map","Parallel iterator over an immutable reference to a hash map","Parallel iterator over a mutable reference to a hash map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Draining parallel iterator that moves out of a hash set, …","Parallel iterator over a hash set","Parallel iterator over an immutable reference to a hash set","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Parallel iterator over a linked list","Parallel iterator over an immutable reference to a linked …","Parallel iterator over a mutable reference to a linked list","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Draining parallel iterator that moves a range out of a …","Parallel iterator over a double-ended queue","Parallel iterator over an immutable reference to a …","Parallel iterator over a mutable reference to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Chain</code> is an iterator that joins <code>b</code> after <code>a</code> in one …","<code>Chunks</code> is an iterator that groups elements of an …","<code>Cloned</code> is an iterator that clones the elements of an …","<code>Copied</code> is an iterator that copies the elements of an …","The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","Iterator adaptor for the <code>empty()</code> function.","<code>Enumerate</code> is an iterator that returns the current count …","<code>ExponentialBlocks</code> is a parallel iterator that consumes …","<code>Filter</code> takes a predicate <code>filter_op</code> and filters out …","<code>FilterMap</code> creates an iterator that uses <code>filter_op</code> to both …","<code>FlatMap</code> maps each element to a parallel iterator, then …","<code>FlatMapIter</code> maps each element to a serial iterator, then …","<code>Flatten</code> turns each element to a parallel iterator, then …","<code>FlattenIter</code> turns each element to a serial iterator, then …","<code>Fold</code> is an iterator that applies a function over an …","<code>FoldChunks</code> is an iterator that groups elements of an …","<code>FoldChunksWith</code> is an iterator that groups elements of an …","<code>FoldWith</code> is an iterator that applies a function over an …","<code>FromParallelIterator</code> implements the creation of a …","An iterator that supports “random access” to its data, …","<code>Inspect</code> is an iterator that calls a function with a …","<code>Interleave</code> is an iterator that interleaves elements of …","<code>InterleaveShortest</code> is an iterator that works similarly to …","<code>Intersperse</code> is an iterator that inserts a particular item …","<code>IntoParallelIterator</code> implements the conversion to a …","<code>IntoParallelRefIterator</code> implements the conversion to a …","<code>IntoParallelRefMutIterator</code> implements the conversion to a …","The type of item that the parallel iterator will produce.","The type of item that the parallel iterator will produce. …","The type of item that will be produced; this is typically …","The type of item that this parallel iterator produces. For …","The type of item that the parallel iterator will produce. …","The type of item that the parallel iterator will produce. …","The parallel iterator type that will be created.","The type of the parallel iterator that will be returned.","The type of iterator that will be created.","The draining parallel iterator type that will be created.","The draining parallel iterator type that will be created.","<code>IterBridge</code> is a parallel iterator that wraps a sequential …","A value of type <code>L</code>.","<code>Map</code> is an iterator that transforms the elements of an …","<code>MapInit</code> is an iterator that transforms the elements of an …","<code>MapWith</code> is an iterator that transforms the elements of an …","<code>MaxLen</code> is an iterator that imposes a maximum length on …","<code>MinLen</code> is an iterator that imposes a minimum length on …","<code>MultiZip</code> is an iterator that zips up a tuple of parallel …","Iterator adaptor for the <code>once()</code> function.","<code>PanicFuse</code> is an adaptor that wraps an iterator with a fuse …","Conversion trait to convert an <code>Iterator</code> to a …","<code>ParallelDrainFull</code> creates a parallel iterator that moves …","<code>ParallelDrainRange</code> creates a parallel iterator that moves …","<code>ParallelExtend</code> extends an existing collection with items …","Parallel version of the standard iterator trait.","<code>Positions</code> takes a predicate <code>predicate</code> and filters out …","Iterator adaptor for the <code>repeat()</code> function.","Iterator adaptor for the <code>repeatn()</code> function.","<code>Rev</code> is an iterator that produces elements in reverse …","A value of type <code>R</code>.","<code>Skip</code> is an iterator that skips over the first <code>n</code> elements. …","<code>SkipAny</code> is an iterator that skips over <code>n</code> elements from …","<code>SkipAnyWhile</code> is an iterator that skips over elements from …","<code>Split</code> is a parallel iterator using arbitrary data and a …","<code>StepBy</code> is an iterator that skips <code>n</code> elements between each …","<code>Take</code> is an iterator that iterates over the first <code>n</code> …","<code>TakeAny</code> is an iterator that iterates over <code>n</code> elements from …","<code>TakeAnyWhile</code> is an iterator that iterates over elements …","<code>TryFold</code> is an iterator that applies a function over an …","<code>TryFoldWith</code> is an iterator that applies a function over an …","<code>UniformBlocks</code> is a parallel iterator that consumes itself …","<code>Update</code> is an iterator that mutates the elements of an …","ParallelIterator for arbitrary tree-shaped patterns. …","ParallelIterator for arbitrary tree-shaped patterns. …","ParallelIterator for arbitrary tree-shaped patterns. …","<code>WhileSome</code> is an iterator that yields the <code>Some</code> elements of …","<code>Zip</code> is an iterator that zips up <code>a</code> and <code>b</code> into a single …","An <code>IndexedParallelIterator</code> that iterates over two parallel …","","Tests that every item in the parallel iterator matches the …","","Searches for <strong>some</strong> item in the parallel iterator that …","","Convert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.","","","Convert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, …","","Convert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divides an iterator into sequential blocks of …","Divides an iterator into sequential blocks of the given …","Takes two iterators and creates a new iterator over both.","Splits an iterator up into fixed-size chunks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an iterator which clones all of its elements.  …","","Lexicographically compares the elements of this …","","Creates a fresh collection containing all the elements …","Collects the results of the iterator into the specified …","Collects this iterator into a linked list of vectors.","Creates an iterator which copies all of its elements.  …","","Counts the number of items in this parallel iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply one of two functions depending on contents, unifying …","Convert the contained value into <code>T</code>","Like <code>either</code>, but provide some context to whichever of the …","Creates a parallel iterator that produces nothing.","Yields an index along with each item.","","Determines if the elements of this <code>ParallelIterator</code> are …","","Returns the left value","Returns the right value","","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Converts an <code>Either</code> of <code>Iterator</code>s to be an <code>Iterator</code> of <code>Either</code>…","Borrows an <code>Either</code> of <code>Iterator</code>s to be an <code>Iterator</code> of <code>Either</code>s","Mutably borrows an <code>Either</code> of <code>Iterator</code>s to be an <code>Iterator</code> …","Factors out <code>None</code> from an <code>Either</code> of <code>Option</code>.","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Applies <code>filter_op</code> to each item of this iterator, producing …","Applies <code>filter_op</code> to each item of this iterator to get an …","","Searches for <strong>some</strong> item in the parallel iterator that …","Searches for the sequentially <strong>first</strong> item in the parallel …","Searches for the sequentially <strong>last</strong> item in the parallel …","","Applies the given predicate to the items in the parallel …","Applies the given predicate to the items in the parallel …","Applies the given predicate to the items in the parallel …","Applies <code>map_op</code> to each item of this iterator to get nested …","Applies <code>map_op</code> to each item of this iterator to get nested …","An adaptor that flattens parallel-iterable <code>Item</code>s into one …","An adaptor that flattens serial-iterable <code>Item</code>s into one …","Convert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel fold is similar to sequential fold except that the","Splits an iterator into fixed-size chunks, performing a …","Splits an iterator into fixed-size chunks, performing a …","Applies <code>fold_op</code> to the given <code>init</code> value with each item of …","","Executes <code>OP</code> on each item produced by the iterator, in …","Executes <code>OP</code> on a value returned by <code>init</code> with each item …","Executes <code>OP</code> on the given <code>init</code> value with each item …","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an instance of the collection from the parallel …","Determines if the elements of this <code>ParallelIterator</code> are …","Determines if the elements of this <code>ParallelIterator</code> are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Applies <code>inspect_op</code> to a reference to each item of this …","Interleaves elements of this iterator and the other given …","Interleaves elements of this iterator and the other given …","Intersperses clones of an element between items of this …","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Extract the value of an either over two equivalent types.","","Convert the inner value to an iterator.","Converts <code>self</code> into a parallel iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return true if the value is the <code>Left</code> variant.","Return true if the value is the <code>Right</code> variant.","Borrow the inner value as an iterator.","Mutably borrow the inner value as an iterator.","","Determines if the elements of this <code>ParallelIterator</code> are …","Convert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","Produces an exact count of how many items this iterator …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determines if the elements of this <code>ParallelIterator</code> are …","Map <code>f</code> over the contained value and return the result in the","Applies <code>map_op</code> to each item of this iterator, producing a …","Apply the functions <code>f</code> and <code>g</code> to the <code>Left</code> and <code>Right</code> variants …","Similar to <code>map_either</code>, with an added context <code>ctx</code> …","Applies <code>map_op</code> to a value returned by <code>init</code> with each item …","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Applies <code>map_op</code> to the given <code>init</code> value with each item of …","Computes the maximum of all the items in the iterator. If …","Computes the maximum of all the items in the iterator with …","Computes the item that yields the maximum value for the …","Computes the minimum of all the items in the iterator. If …","Computes the minimum of all the items in the iterator with …","Computes the item that yields the minimum value for the …","Determines if the elements of this <code>ParallelIterator</code> are …","","","","Creates a parallel iterator that produces an element …","","","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wraps an iterator with a fuse in case of panics, to halt …","Creates a bridge from this type to a <code>ParallelIterator</code>.","Returns a draining parallel iterator over an entire …","Returns a draining parallel iterator over a range of the …","Extends an instance of the collection with the elements …","","Converts <code>self</code> into a parallel iterator.","Creates the parallel iterator from <code>self</code>.","","Lexicographically compares the elements of this …","","Partitions the items of a parallel iterator into a pair of …","Partitions and maps the items of a parallel iterator into …","Traits and functions used to implement parallel iteration. …","","","Searches for <strong>some</strong> item in the parallel iterator that …","Searches for the sequentially <strong>first</strong> item in the parallel …","Searches for the sequentially <strong>last</strong> item in the parallel …","Searches for items in the parallel iterator that match the …","Multiplies all the items in the iterator.","Reduces the items in the iterator into one item using <code>op</code>. …","Reduces the items in the iterator into one item using <code>op</code>. …","Creates a parallel iterator that endlessly repeats <code>elt</code> (by …","Creates a parallel iterator that produces <code>n</code> repeats of <code>elt</code> …","Produces a new iterator with the elements of this iterator …","","","Convert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","","Creates an iterator that skips the first <code>n</code> elements.","Creates an iterator that skips <code>n</code> elements from <em>anywhere</em> in …","Creates an iterator that skips elements from <em>anywhere</em> in …","The <code>split</code> function takes arbitrary data and a closure that …","Creates an iterator that steps by the given amount","Sums up the items in the iterator.","Creates an iterator that yields the first <code>n</code> elements.","Takes only <code>n</code> repeats of the element, similar to the general","Creates an iterator that yields <code>n</code> elements from <em>anywhere</em> …","Creates an iterator that takes elements from <em>anywhere</em> in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs a fallible parallel fold.","Performs a fallible parallel fold with a cloneable <code>init</code> …","Executes a fallible <code>OP</code> on each item produced by the …","Executes a fallible <code>OP</code> on a value returned by <code>init</code> with …","Executes a fallible <code>OP</code> on the given <code>init</code> value with each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reduces the items in the iterator into one item using a …","Reduces the items in the iterator into one item using a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the left value","Returns the right value","Unzips the items of a parallel iterator into a pair of …","Unzips the results of the iterator into the specified …","Mutates each item of this iterator before yielding it.","Create a tree like parallel iterator from an initial root …","Create a tree like postfix parallel iterator from an …","Create a tree-like prefix parallel iterator from an …","Creates an iterator over the <code>Some</code> items of this iterator, …","Sets the maximum length of iterators desired to process in …","Sets the minimum length of iterators desired to process in …","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterates over tuples <code>(A, B)</code>, where the items <code>A</code> are from …","Iterates tuples, repeating the element with items from …","The same as <code>Zip</code>, but requires that both iterators have the …","A consumer is effectively a generalized “fold” …","The <code>Folder</code> trait encapsulates the standard fold operation. …","The type of folder that this consumer can be converted …","The type of iterator we will become.","The type of item that will be produced by this producer …","The type of item returned by this producer.","The type of value returned by this callback. Analogous to …","A <code>Producer</code> is effectively a “splittable <code>IntoIterator</code>”. …","The <code>ProducerCallback</code> trait is a kind of generic closure, …","The reducer is the final step of a <code>Consumer</code> – after a …","The type of reducer that is produced if this consumer is …","The type of result that this consumer will ultimately …","The type of result that will ultimately be produced by the …","A stateless consumer can be freely copied. These consumers …","A variant on <code>Producer</code> which does not know its exact length …","This helper function is used to “connect” a parallel …","This helper function is used to “connect” a producer …","A variant of <code>bridge_producer_consumer</code> where the producer …","Invokes the callback with the given producer as argument. …","Finish consuming items, produce final result.","Consume next item and return new sequential state.","Consume items from the iterator until full, and return new …","Iterate the producer, feeding each element to <code>folder</code>, and …","Iterate the producer, feeding each element to <code>folder</code>, and …","Hint whether this <code>Consumer</code> would like to stop processing …","Hint whether this <code>Folder</code> would like to stop processing …","Convert the consumer into a folder that can consume items …","Convert <code>self</code> into an iterator; at this point, no more …","The maximum number of items that we will process …","The minimum number of items that we will process …","Reduce two final results into one; this is executed after a","Split midway into a new producer if possible, otherwise …","Split into two producers; one produces items <code>0..index</code>, the …","Divide the consumer into two consumers, one processing …","Splits off a “left” consumer and returns it. The <code>self</code> …","Creates a reducer that can be used to combine the results …","A parallel iterator over the value in <code>Some</code> variant of an …","A parallel iterator over a reference to the <code>Some</code> variant …","A parallel iterator over a mutable reference to the <code>Some</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over a range, implemented for all …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Parallel iterator over an inclusive range, implemented for …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Parallel iterator over a result","Parallel iterator over an immutable reference to a result","Parallel iterator over a mutable reference to a result","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over immutable non-overlapping chunks of …","Parallel iterator over immutable non-overlapping chunks of …","Parallel iterator over mutable non-overlapping chunks of a …","Parallel iterator over mutable non-overlapping chunks of a …","Parallel iterator over immutable items in a slice","Parallel iterator over mutable items in a slice","Parallel extensions for slices.","Parallel extensions for mutable slices.","Parallel iterator over immutable non-overlapping chunks of …","Parallel iterator over immutable non-overlapping chunks of …","Parallel iterator over mutable non-overlapping chunks of a …","Parallel iterator over mutable non-overlapping chunks of a …","Parallel iterator over slices separated by a predicate","Parallel iterator over slices separated by a predicate, …","Parallel iterator over mutable slices separated by a …","Parallel iterator over mutable slices separated by a …","Parallel iterator over immutable overlapping windows of a …","Returns a plain slice, which is used to implement the rest …","Returns a plain mutable slice, which is used to implement …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","","","","","","","","","","","","","","","","","","","","","","","Returns a parallel iterator over at most <code>chunk_size</code> …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over at most <code>chunk_size</code> …","Returns a parallel iterator over at most <code>chunk_size</code> …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over at most <code>chunk_size</code> …","Sorts the slice in parallel.","Sorts the slice in parallel with a comparator function.","Sorts the slice in parallel with a key extraction function.","Sorts the slice in parallel with a key extraction function.","Sorts the slice in parallel, but might not preserve the …","Sorts the slice in parallel with a comparator function, …","Sorts the slice in parallel with a key extraction …","Returns a parallel iterator over subslices separated by …","Returns a parallel iterator over subslices separated by …","Returns a parallel iterator over mutable subslices …","Returns a parallel iterator over mutable subslices …","Returns a parallel iterator over all contiguous windows of …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over the bytes of a string","Parallel iterator over the characters of a string, with …","Parallel iterator over the characters of a string","Parallel iterator over a string encoded as UTF-16","Parallel iterator over lines in a string","Parallel iterator over substrings that match a pattern, …","Parallel iterator over substrings that match a pattern","Parallel extensions for strings.","Parallel iterator over substrings separated by a pattern","Parallel iterator over substrings separated by ASCII …","Parallel iterator over substrings separated by a pattern","Parallel iterator over substrings separated by a …","Parallel iterator over substrings separated by whitespace","Returns a plain string slice, which is used to implement …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns a parallel iterator over the bytes of a string.","Returns a parallel iterator over the characters of a …","Returns a parallel iterator over the characters of a …","Returns a parallel iterator over a string encoded as …","Returns a parallel iterator over the lines of a string, …","Returns a parallel iterator over substrings that match a …","Returns a parallel iterator over substrings that match a …","Returns a parallel iterator over substrings separated by a …","Returns a parallel iterator over the sub-slices of a …","Returns a parallel iterator over substrings separated by a …","Returns a parallel iterator over substrings terminated by a","Returns a parallel iterator over the sub-slices of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draining parallel iterator that moves a range of …","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Draining parallel iterator that moves a range out of a …","Parallel iterator that moves out of a vector.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,13,0,13,0,0,0,0,0,0,0,0,18,21,22,23,7,1,13,9,24,18,21,22,23,7,1,13,9,24,1,0,7,1,1,1,13,13,0,0,7,7,0,7,1,18,21,22,23,7,1,13,9,24,18,21,22,23,7,1,13,9,24,9,18,21,22,23,7,7,1,13,9,24,13,13,1,18,21,22,23,7,1,13,9,9,24,18,21,22,23,7,1,13,9,24,0,7,0,7,18,21,18,21,22,23,7,1,13,9,24,7,18,21,22,23,7,1,13,9,24,0,0,7,0,0,24,21,7,1,18,1,0,1,0,0,0,0,21,0,7,0,7,0,9,0,22,7,0,22,23,7,0,23,7,1,21,1,1,0,0,1,13,9,18,21,22,23,7,1,13,9,24,18,21,22,23,7,1,13,9,24,18,21,22,23,7,1,13,9,24,1,0,0,7,0,7,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,0,0,0,0,0,0,0,0,40,41,42,40,41,42,40,41,40,41,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,40,41,42,40,41,42,40,41,42,40,41,42,0,0,0,44,43,45,44,43,45,43,43,44,43,45,44,43,45,44,43,45,44,43,45,44,43,45,44,43,45,44,43,45,44,43,45,44,43,45,44,43,45,43,44,43,45,44,43,45,44,43,45,0,0,47,46,47,46,46,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,46,47,46,47,46,47,46,0,0,0,0,51,50,52,53,51,50,52,53,50,50,51,50,52,53,51,50,52,53,51,50,52,53,51,50,52,53,51,50,52,53,51,50,52,53,51,50,52,53,51,50,52,53,51,50,52,53,51,50,52,53,50,51,50,52,53,51,50,52,53,51,50,52,53,0,0,0,55,54,56,55,54,56,54,54,55,54,56,55,54,56,55,54,56,55,54,56,55,54,56,55,54,56,55,54,56,55,54,56,55,54,56,55,54,56,54,55,54,56,55,54,56,55,54,56,0,0,0,57,58,59,57,58,59,57,58,57,58,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,57,58,57,58,59,57,58,59,57,58,59,0,0,0,0,60,61,62,63,60,61,62,63,60,61,60,61,60,61,62,63,60,61,62,63,60,61,62,63,60,61,62,63,60,61,62,63,63,60,61,62,63,60,61,62,63,60,61,62,63,60,61,62,63,60,61,62,63,60,61,62,63,60,61,62,63,60,61,60,61,62,63,60,61,62,63,60,61,62,63,60,61,62,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,191,192,76,193,194,72,191,192,193,194,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,76,65,76,65,65,65,65,65,65,65,65,65,65,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,77,77,76,77,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,65,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,76,65,77,65,76,77,76,76,65,76,65,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,65,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,77,65,75,73,74,78,79,80,89,90,91,92,93,94,95,96,97,98,99,100,100,100,100,100,100,100,100,100,100,100,100,101,102,106,107,108,112,113,118,120,121,76,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,100,100,100,100,100,100,100,100,100,100,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,65,65,65,0,77,65,77,65,65,65,65,65,65,65,65,65,65,65,65,76,76,65,76,76,76,65,76,76,76,76,76,76,76,65,65,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,65,76,77,77,76,65,76,76,76,65,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,124,77,77,65,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,76,77,77,76,65,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,65,65,65,65,72,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,65,65,65,65,65,77,65,65,65,65,65,77,65,65,75,73,74,78,79,80,89,90,91,92,93,94,95,96,97,98,99,100,100,100,100,100,100,100,100,100,100,100,100,101,102,106,107,108,112,113,118,120,121,77,65,76,65,65,76,65,65,76,76,76,76,76,76,76,77,65,65,65,0,65,75,76,73,74,78,79,80,89,90,91,92,93,94,95,96,97,98,99,100,100,100,100,100,100,100,100,100,100,100,100,101,102,106,107,108,112,113,118,120,121,76,195,193,194,142,65,191,192,65,77,65,76,76,0,65,65,77,77,77,77,76,76,76,0,0,77,65,65,65,65,65,65,65,65,77,76,76,0,77,76,77,105,76,76,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,65,76,76,76,76,76,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,76,76,65,75,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,128,129,130,119,120,121,65,65,76,77,76,0,0,0,76,77,77,77,65,75,73,74,78,79,80,89,90,91,92,93,94,95,96,97,98,99,100,100,100,100,100,100,100,100,100,100,100,100,101,102,106,107,108,112,113,118,120,121,77,105,77,0,0,34,149,149,150,38,0,0,0,34,34,151,0,0,0,0,0,38,151,151,151,150,149,34,151,34,149,149,149,196,150,149,34,35,35,0,0,0,152,153,154,152,153,154,152,153,152,153,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,153,152,153,154,152,153,154,152,153,154,152,153,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,0,0,158,159,160,158,159,160,158,159,158,159,158,159,160,158,159,160,158,159,160,158,159,160,158,159,160,158,159,160,158,159,160,158,159,160,158,159,160,158,159,160,158,159,160,158,159,160,158,159,158,159,160,158,159,160,158,159,160,158,159,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,197,198,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,161,162,163,164,165,166,167,168,161,162,163,164,165,166,167,168,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,163,164,169,170,165,166,171,172,167,168,173,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,170,172,163,164,169,170,165,166,171,172,167,168,173,163,164,169,170,165,166,171,172,167,168,173,197,197,198,198,197,197,198,198,198,198,198,198,198,198,198,197,197,198,198,197,164,170,166,172,170,172,161,162,163,164,165,166,167,168,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,161,162,174,175,163,164,169,170,165,166,171,172,167,168,173,163,164,169,170,165,166,171,172,167,168,173,0,0,0,0,0,0,0,0,0,0,0,0,0,199,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,199,199,199,199,199,199,199,199,199,199,199,199,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,176,177,178,179,180,181,182,183,184,185,186,187,0,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,0,0,189,190,189,190,189,189,189,190,189,190,189,190,189,190,189,190,190,189,190,189,190,189,190,189,190,189,190,189,190,189,190,189,189,190,189,190,189,190,189,190],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[[0,[2,3]]],[[6,[4,5]]]],[[7,[0,[2,3]]],[[6,[4,5]]]],[[[1,[8]]],[[10,[7,9]]]],[[[1,[8]]],[[10,[9]]]],[[[1,[11]],[0,[2,3]],12],[[10,[9]]]],[13,13],[[]],0,[[],14],[7,14],[7,[[16,[15]]]],[[],[[16,[14]]]],[7,[[16,[14]]]],[[],[[1,[11]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[9,17],[14],[14],[14],[14],[7],[14],[14],[14],[14],[14],[[13,13],15],[[],15],[[1,[0,[2,4,3]]],1],[[18,19],[[10,[20]]]],[[21,19],[[10,[20]]]],[[22,19],[[10,[20]]]],[[23,19],[[10,[20]]]],[[7,19],[[10,[20]]]],[[1,19],[[10,[20]]]],[[13,19],[[10,[20]]]],[[9,19],[[10,[20]]]],[[9,19],[[10,[20]]]],[[24,19],[[10,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[[7,12]],[12],[[7,12]],[18,14],[21,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[7,[0,[12,4]]],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[0,[12,4]],[0,[12,4]]]],[[7,[0,[12,4]],[0,[12,4]]]],[[[0,[12,4]],[0,[12,4]]]],[[],14],[24,15],[21,[[16,[17]]]],[25,[[10,[7,[27,[26,5]]]]]],[[],[[1,[11]]]],[18,14],[[1,14],1],0,[[1,[0,[2,4,3]]],1],0,0,0,0,[21],[[[0,[12,4]]],4],[[7,[0,[12,4]]],4],[[[0,[12,4]]],4],[[7,[0,[12,4]]],4],0,[9,[[16,[26]]]],[[[0,[12,4]]]],[[22,[0,[12,4]]]],[[7,[0,[12,4]]]],[[[0,[2,4,3]]]],[[22,[0,[2,4,3]]]],[[23,[0,[2,4,3]]]],[[7,[0,[2,4,3]]]],[[[0,[12,4]]]],[[23,[0,[12,4]]]],[[7,[0,[12,4]]]],[[1,28],[[1,[[29,[28]]]]]],[21,[[16,[14]]]],[[1,14],1],[[1,[0,[2,4,3]]],1],0,0,[[1,28],1],[[]],[[],30],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[1,1],0,[[],[[16,[13]]]],[7,[[16,[13]]]],[[],[[16,[13]]]],[7,[[16,[13]]]],0,[[]],[[]],[[[33,[[0,[32,4]]]]],[[33,[[0,[32,4]]]]]],[[]],[14],[14],[[[33,[4]],34]],[[[33,[4]],35]],[14],[[[33,[[0,[36,4]]]],19],37],[[]],[[],14],[[]],[[]],[[[33,[4]]],14],[[[33,[4]]],[[16,[14]]]],[[]],[[],10],[[],10],[[],31],[[[33,[4]],38]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[40,[[0,[32,39,4]]]]],[[40,[[0,[32,39,4]]]]]],[[[41,[[0,[39,3]]]]],[[41,[[0,[39,3]]]]]],[[]],[[]],[14],[14],[14],[14],[14],[14],[[[40,[[0,[39,4]]]],34]],[[[41,[[0,[39,3]]]],34]],[[[42,[[0,[39,4]]]],34]],[[[40,[[0,[39,4]]]],35]],[[[41,[[0,[39,3]]]],35]],[[[42,[[0,[39,4]]]],35]],[14],[14],[14],[[[42,[[0,[39,4]]]]]],[[[40,[[0,[36,39,4]]]],19],37],[[[41,[[0,[36,39,3]]]],19],37],[[[42,[[0,[36,39,4]]]],19],37],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[[40,[[0,[39,4]]]]],14],[[[41,[[0,[39,3]]]]],14],[[[42,[[0,[39,4]]]]],14],[[[40,[[0,[39,4]]]]],[[16,[14]]]],[[[41,[[0,[39,3]]]]],[[16,[14]]]],[[[42,[[0,[39,4]]]]],[[16,[14]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],[[[40,[[0,[39,4]]]],38]],[[[41,[[0,[39,3]]]],38]],[[[42,[[0,[39,4]]]],38]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[43,[[0,[39,3]],3]]],[[43,[[0,[39,3]],3]]]],[[]],[14],[14],[14],[14],[14],[14],[[[44,[[0,[39,4]],4]],35]],[[[43,[[0,[39,3]],3]],35]],[[[45,[[0,[39,3]],4]],35]],[14],[14],[14],[[[44,[[0,[36,39,4]],[0,[36,4]]]],19],37],[[[43,[[0,[36,39,3]],[0,[36,3]]]],19],37],[[[45,[[0,[36,39,3]],[0,[36,4]]]],19],37],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[[0,[39,4]],4]]],[[16,[14]]]],[[[43,[[0,[39,3]],3]]],[[16,[14]]]],[[[45,[[0,[39,3]],4]]],[[16,[14]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],0,0,[[]],[[]],[[]],[[]],[[[46,[[0,[39,3]]]]],[[46,[[0,[39,3]]]]]],[[]],[14],[14],[14],[14],[[[47,[[0,[39,4]]]],35]],[[[46,[[0,[39,3]]]],35]],[14],[14],[[[47,[[0,[36,39,4]]]],19],37],[[[46,[[0,[36,39,3]]]],19],37],[[]],[[]],[[],14],[[],14],[[]],[[]],[[]],[[]],[[[47,[[0,[39,4]]]]],[[16,[14]]]],[[[46,[[0,[39,3]]]]],[[16,[14]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[[0,[48,49,3]],3]]],[[50,[[0,[48,49,3]],3]]]],[[]],[14],[14],[14],[14],[14],[14],[14],[14],[[[51,[[0,[48,49,4]],4]],35]],[[[50,[[0,[48,49,3]],3]],35]],[[[52,[[0,[48,49,3]],4]],35]],[[[53,[[0,[48,49,4]],4]],35]],[14],[14],[14],[14],[[[51,[[0,[36,48,49,4]],[0,[36,4]]]],19],37],[[[50,[[0,[36,48,49,3]],[0,[36,3]]]],19],37],[[[52,[[0,[36,48,49,3]],[0,[36,4]]]],19],37],[[[53,[[0,[36,48,49,4]],[0,[36,4]]]],19],37],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[[0,[48,49,4]],4]]],[[16,[14]]]],[[[50,[[0,[48,49,3]],3]]],[[16,[14]]]],[[[52,[[0,[48,49,3]],4]]],[[16,[14]]]],[[[53,[[0,[48,49,4]],4]]],[[16,[14]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],[[],31],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[54,[[0,[48,49,3]]]]],[[54,[[0,[48,49,3]]]]]],[[]],[14],[14],[14],[14],[14],[14],[[[55,[[0,[48,49,4]]]],35]],[[[54,[[0,[48,49,3]]]],35]],[[[56,[[0,[48,49,4]]]],35]],[14],[14],[14],[[[55,[[0,[36,48,49,4]]]],19],37],[[[54,[[0,[36,48,49,3]]]],19],37],[[[56,[[0,[36,48,49,4]]]],19],37],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[[55,[[0,[48,49,4]]]]],[[16,[14]]]],[[[54,[[0,[48,49,3]]]]],[[16,[14]]]],[[[56,[[0,[48,49,4]]]]],[[16,[14]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[57,[[0,[32,4]]]]],[[57,[[0,[32,4]]]]]],[[[58,[3]]],[[58,[3]]]],[[]],[[]],[14],[14],[14],[14],[14],[14],[[[57,[4]],35]],[[[58,[3]],35]],[[[59,[4]],35]],[14],[14],[14],[[[57,[[0,[36,4]]]],19],37],[[[58,[[0,[36,3]]]],19],37],[[[59,[[0,[36,4]]]],19],37],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[[57,[4]]],[[16,[14]]]],[[[58,[3]]],[[16,[14]]]],[[[59,[4]]],[[16,[14]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[60,[[0,[32,4]]]]],[[60,[[0,[32,4]]]]]],[[[61,[3]]],[[61,[3]]]],[[]],[[]],[14],[14],[14],[14],[14],[14],[14],[14],[[[60,[4]],34]],[[[61,[3]],34]],[[[62,[4]],34]],[[[63,[4]],34]],[[[60,[4]],35]],[[[61,[3]],35]],[[[62,[4]],35]],[[[63,[4]],35]],[14],[14],[14],[14],[[[63,[4]]]],[[[60,[[0,[36,4]]]],19],37],[[[61,[[0,[36,3]]]],19],37],[[[62,[[0,[36,4]]]],19],37],[[[63,[[0,[36,4]]]],19],37],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[60,[4]]],14],[[[61,[3]]],14],[[[62,[4]]],14],[[[63,[4]]],14],[[[60,[4]]],[[16,[14]]]],[[[61,[3]]],[[16,[14]]]],[[[62,[4]]],[[16,[14]]]],[[[63,[4]]],[[16,[14]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],[[],31],[[[60,[4]],38]],[[[61,[3]],38]],[[[62,[4]],38]],[[[63,[4]],38]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[65,[64,64]],28],15],[[[0,[2,3,4]]],15],[[[65,[64,64]],28],15],[[[0,[2,3,4]]],15],[[[65,[[66,[17]],[66,[17]]]]],17],[65,65],[[[65,[[66,[67]],[66,[67]]]]],67],[[[65,[66,66]]]],[[[68,[65]]],[[65,[68,68]]]],[[[68,[65]]],[[65,[68,68]]]],[[[65,[[69,[67]],[69,[67]]]]],67],[65,65],[[[65,[[69,[17]],[69,[17]]]]],17],[[[65,[69,69]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],70],[14,71],[72,73],[14,74],[[[65,[32,32]]],[[65,[32,32]]]],[[[75,[4]]],[[75,[4]]]],[[[70,[32]]],[[70,[32]]]],[[[71,[32]]],[[71,[32]]]],[[[73,[[0,[76,32]],[0,[76,32]]]]],[[73,[[0,[76,32]],[0,[76,32]]]]]],[[[74,[[0,[77,32]]]]],[[74,[[0,[77,32]]]]]],[[[78,[[0,[32,76]]]]],[[78,[[0,[32,76]]]]]],[[[79,[[0,[32,76]]]]],[[79,[[0,[32,76]]]]]],[[[80,[[0,[32,77]]]]],[[80,[[0,[32,77]]]]]],[[[81,[[0,[32,76]],32]]],[[81,[[0,[32,76]],32]]]],[[[82,[[0,[32,76]],32]]],[[82,[[0,[32,76]],32]]]],[[[83,[[0,[32,76]],32]]],[[83,[[0,[32,76]],32]]]],[[[84,[[0,[32,76]],32]]],[[84,[[0,[32,76]],32]]]],[[[85,[[0,[32,76]]]]],[[85,[[0,[32,76]]]]]],[[[86,[[0,[32,76]]]]],[[86,[[0,[32,76]]]]]],[[[87,[32,32,32]]],[[87,[32,32,32]]]],[[[88,[32,32,32]]],[[88,[32,32,32]]]],[[[89,[[0,[77,32]],32,32]]],[[89,[[0,[77,32]],32,32]]]],[[[90,[[0,[77,32]],32,32]]],[[90,[[0,[77,32]],32,32]]]],[[[91,[[0,[32,76]],32]]],[[91,[[0,[32,76]],32]]]],[[[92,[[0,[77,32]],[0,[77,32]]]]],[[92,[[0,[77,32]],[0,[77,32]]]]]],[[[93,[[0,[77,32]],[0,[77,32]]]]],[[93,[[0,[77,32]],[0,[77,32]]]]]],[[[94,[[0,[76,32]]]]],[[94,[[0,[76,32]]]]]],[[[95,[[0,[32,77]]]]],[[95,[[0,[32,77]]]]]],[[[96,[[0,[32,77]]]]],[[96,[[0,[32,77]]]]]],[[[97,[[0,[32,76]],32]]],[[97,[[0,[32,76]],32]]]],[[[98,[[0,[32,76]],32,32]]],[[98,[[0,[32,76]],32,32]]]],[[[99,[[0,[32,76]],32,32]]],[[99,[[0,[32,76]],32,32]]]],[[[100,[32]]],[[100,[32]]]],[[[101,[[0,[32,4]]]]],[[101,[[0,[32,4]]]]]],[[[102,[[0,[32,76]]]]],[[102,[[0,[32,76]]]]]],[[[103,[32]]],[[103,[32]]]],[[[104,[[0,[32,77]],32]]],[[104,[[0,[32,77]],32]]]],[[[105,[[0,[32,32,4]]]]],[[105,[[0,[32,32,4]]]]]],[[[106,[[0,[32,32,4]]]]],[[106,[[0,[32,32,4]]]]]],[[[107,[[0,[32,77]]]]],[[107,[[0,[32,77]]]]]],[[[108,[32]]],[[108,[32]]]],[[[109,[[0,[32,76]]]]],[[109,[[0,[32,76]]]]]],[[[110,[[0,[32,76]],32]]],[[110,[[0,[32,76]],32]]]],[[[111,[32,32]]],[[111,[32,32]]]],[[[112,[[0,[32,77]]]]],[[112,[[0,[32,77]]]]]],[[[113,[32]]],[[113,[32]]]],[[[114,[[0,[32,76]]]]],[[114,[[0,[32,76]]]]]],[[[115,[[0,[32,76]],32]]],[[115,[[0,[32,76]],32]]]],[[[116,[32,32,32,32]]],[[116,[32,32,32,32]]]],[[[117,[32,[0,[32,0]],32]]],[[117,[32,[0,[32,0]],32]]]],[[[118,[[0,[32,76]],32]]],[[118,[[0,[32,76]],32]]]],[[[119,[[0,[32,76]]]]],[[119,[[0,[32,76]]]]]],[[[120,[[0,[32,77]],[0,[32,77]]]]],[[120,[[0,[32,77]],[0,[32,77]]]]]],[[[121,[[0,[32,77]],[0,[32,77]]]]],[[121,[[0,[32,77]],[0,[32,77]]]]]],[[[65,[32,32]],[65,[32,32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[76,[[78,[76]]]],[[[65,[39,39]],[65,[39,39]]],122],[72,122],[[[65,[64,64]]],123],[[],124],[6],[[],[[125,[6]]]],[76,[[79,[76]]]],[[[65,[64,64]]],14],[[],14],[[[65,[126,126]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[[65,[127,127]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[34],[[[65,[77,77]],34]],[[[75,[4]],34]],[[[73,[77,77]],34]],[[[74,[77]],34]],[[[78,[77]],34]],[[[79,[77]],34]],[[[80,[77]],34]],[[[89,[77,[0,[2,4,3]],[0,[2,4,3]]]],34]],[[[90,[77,[0,[4,32]],[0,[2,4,3]]]],34]],[[[91,[77,[0,[2,3,4]]]],34]],[[[92,[77,77]],34]],[[[93,[77,77]],34]],[[[94,[77]],34]],[[[95,[77]],34]],[[[96,[77]],34]],[[[97,[77,[0,[2,3,4]]]],34]],[[[98,[77,[0,[4,32]],[0,[2,3,4]]]],34]],[[[99,[77,[0,[2,3,4]],[0,[2,3,4]]]],34]],[[100,34]],[[100,34]],[[100,34]],[[100,34]],[[100,34]],[[100,34]],[[100,34]],[[100,34]],[[100,34]],[[100,34]],[[100,34]],[[100,34]],[[[101,[4]],34]],[[[102,[77]],34]],[[[106,[[0,[32,4]]]],34]],[[[107,[77]],34]],[[[108,[77]],34]],[[[112,[77]],34]],[[[113,[77]],34]],[[[118,[77,[0,[2,4,3]]]],34]],[[[120,[77,77]],34]],[[[121,[77,77]],34]],[35],[[[65,[76,76]],35]],[[[75,[4]],35]],[[[70,[77]],35]],[[[71,[77]],35]],[[[73,[76,76]],35]],[[[74,[77]],[34,[6]]]],[[[78,[76]],35]],[[[79,[76]],35]],[[[80,[77]],35]],[[[81,[76,[0,[2,3,4]]]],35]],[[[82,[76,[0,[2,3,4]]]],35]],[[[83,[76,[0,[2,3,4]]]],35]],[[[84,[76,[0,[2,3,4]]]],35]],[[[85,[76]],35]],[[[86,[76]],35]],[[[87,[76,[0,[2,3,4]],[0,[2,3,4]]]],35]],[[[88,[76,[0,[4,32]],[0,[2,3,4]]]],35]],[[[89,[77,[0,[2,4,3]],[0,[2,4,3]]]],[34,[4]]]],[[[90,[77,[0,[4,32]],[0,[2,4,3]]]],[34,[[0,[4,32]]]]]],[[[91,[76,[0,[2,3,4]]]],35]],[[[92,[77,77]],34]],[[[93,[77,77]],34]],[[[94,[76]],35]],[[[95,[77]],35]],[[[96,[77]],35]],[[[97,[76,[0,[2,3,4]]]],35]],[[[98,[76,[0,[4,32]],[0,[2,3,4]]]],35]],[[[99,[76,[0,[2,3,4]],[0,[2,3,4]]]],35]],[[100,35]],[[100,35]],[[100,35]],[[100,35]],[[100,35]],[[100,35]],[[100,35]],[[100,35]],[[100,35]],[[100,35]],[[100,35]],[[100,35]],[[[101,[4]],35]],[[[102,[76]],35]],[[[103,[[0,[64,4]]]],35]],[[[104,[77,[0,[2,3,4]]]],35]],[[[105,[[0,[32,4]]]],35]],[[[106,[[0,[32,4]]]],35]],[[[107,[77]],35]],[[[108,[77]],35]],[[[109,[76]],35]],[[[110,[76,[0,[2,3,4]]]],35]],[[[111,[4,[0,[2,3,4]]]],35]],[[[112,[77]],35]],[[[113,[77]],35]],[[[114,[76]],35]],[[[115,[76,[0,[2,3,4]]]],35]],[[[116,[76,[0,[0,4]],[0,[2,3,4]],[0,[2,3,4]]]],35]],[[[117,[76,[0,[0,4]],[0,[2,3,4]]]],35]],[[[118,[76,[0,[2,4,3]]]],35]],[[[128,[4,[0,[2,4,3]]]],35]],[[[129,[4,[0,[2,4,3]]]],35]],[[[130,[4,[0,[2,4,3]]]],35]],[[[119,[76]],35]],[[[120,[77,77]],35]],[[[121,[77,77]],35]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[65,12,12]],[[[65,[131,131]]]],[[65,12,12]],[[],[[75,[4]]]],[[],80],[[[65,[[132,[[132,[[132,[132]]]]]],[132,[[132,[[132,[132]]]]]]]],[65,[[132,[[132,[[132,[132]]]]]],[132,[[132,[[132,[132]]]]]]]]],15],[72,15],[[],15],[[[65,[36]],17]],[[[65,[36]],17]],[[[65,[133,133]],134]],[[[65,[10,10]]],[[10,[65]]]],[65],[[[65,[134,134]]],135],[65,135],[65,135],[[[65,[16,16]]],[[16,[65]]]],[[[65,[10,10]]],[[10,[65]]]],[65],[[[0,[2,3,4]]],[[81,[[0,[2,3,4]]]]]],[[[0,[2,3,4]]],[[82,[[0,[2,3,4]]]]]],[[[65,[64,64]],28],16],[[[0,[2,3,4]]],16],[[[0,[2,3,4]]],16],[[[0,[2,3,4]]],16],[[[65,[64,64]],28],16],[[[0,[2,3,4]]],[[16,[4]]]],[[[0,[2,3,4]]],[[16,[4]]]],[[[0,[2,3,4]]],[[16,[4]]]],[[[0,[2,3,4]]],[[83,[[0,[2,3,4]]]]]],[[[0,[2,3,4]]],[[84,[[0,[2,3,4]]]]]],[[],85],[[],86],[65,65],[[[65,[36,36]],19],[[10,[20]]]],[[[65,[136,136]],19],[[10,[20]]]],[[[75,[4]],19],37],[[[70,[36]],19],37],[[[71,[36]],19],37],[[[73,[[0,[76,36]],[0,[76,36]]]],19],37],[[[74,[[0,[77,36]]]],19],37],[[[78,[[0,[36,76]]]],19],37],[[[79,[[0,[36,76]]]],19],37],[[[80,[[0,[36,77]]]],19],37],[[[81,[[0,[76,36]]]],19],37],[[[82,[[0,[76,36]]]],19],37],[[[83,[[0,[76,36]]]],19],37],[[[84,[[0,[76,36]]]],19],37],[[[85,[[0,[36,76]]]],19],37],[[[86,[[0,[36,76]]]],19],37],[[[87,[[0,[76,36]]]],19],37],[[[88,[[0,[76,36]],36]],19],37],[[[89,[[0,[77,36]]]],19],37],[[[90,[[0,[77,36]],36]],19],37],[[[91,[[0,[76,36]]]],19],37],[[[92,[[0,[77,36]],[0,[77,36]]]],19],37],[[[93,[[0,[77,36]],[0,[77,36]]]],19],37],[[[94,[[0,[76,36]]]],19],37],[[[95,[[0,[36,77]]]],19],37],[[[96,[[0,[36,77]]]],19],37],[[[97,[[0,[76,36]]]],19],37],[[[98,[[0,[76,36]],36]],19],37],[[[99,[[0,[76,36]]]],19],37],[[[100,[36]],19],37],[[[101,[[0,[36,4]]]],19],37],[[[102,[[0,[36,76]]]],19],37],[[[103,[36]],19],37],[[[104,[[0,[77,36]]]],19],37],[[[105,[[0,[36,32,4]]]],19],37],[[[106,[[0,[36,32,4]]]],19],37],[[[107,[[0,[36,77]]]],19],37],[[[108,[36]],19],37],[[[109,[[0,[36,76]]]],19],37],[[[110,[[0,[76,36]]]],19],37],[[[111,[36]],19],37],[[[112,[[0,[36,77]]]],19],37],[[[113,[36]],19],37],[[[114,[[0,[36,76]]]],19],37],[[[115,[[0,[76,36]]]],19],37],[[[116,[[0,[76,36]]]],19],37],[[[117,[[0,[76,36]],0]],19],37],[[[118,[[0,[76,36]]]],19],37],[[[128,[36,36]],19],37],[[[129,[36,36]],19],37],[[[130,[36,36]],19],37],[[[119,[[0,[36,76]]]],19],37],[[[120,[[0,[36,77]],[0,[36,77]]]],19],37],[[[121,[[0,[36,77]],[0,[36,77]]]],19],37],[[[65,[64,64]],28]],[[[0,[2,3,4]],[0,[2,3,4]]],[[87,[[0,[2,3,4]],[0,[2,3,4]]]]]],[[14,[0,[2,4,3]],[0,[2,4,3]]],[[89,[[0,[2,4,3]],[0,[2,4,3]]]]]],[[14,[0,[4,32]],[0,[2,4,3]]],[[90,[[0,[4,32]],[0,[2,4,3]]]]]],[[[0,[4,32]],[0,[2,3,4]]],[[88,[[0,[4,32]],[0,[2,3,4]]]]]],[[[65,[64,64]],28]],[[[0,[2,3,4]]]],[[[0,[2,3,4]],[0,[2,3,4]]]],[[[0,[4,32]],[0,[2,3,4]]]],[[]],[10,65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72],[72,15],[72,15],[[[65,[48,48]],137]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[0,[2,3,4]]],[[91,[[0,[2,3,4]]]]]],[72,92],[72,93],[[],94],[[]],[65,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65],[[]],[[[65,[134,134]]],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,15],[65,15],[65,65],[65,65],[[[65,[64,64]]],16],[72,15],[65,16],[[65,12],65],[65],[[[65,[138]]],138],[[65,12]],[[],14],[[[65,[139,139]]],14],[[[65,[77,77]]],14],[[[75,[4]]],14],[[[73,[77,77]]],14],[[[74,[77]]],14],[[[78,[77]]],14],[[[79,[77]]],14],[[[80,[77]]],14],[[[89,[77,[0,[2,4,3]],[0,[2,4,3]]]]],14],[[[90,[77,[0,[4,32]],[0,[2,4,3]]]]],14],[[[91,[77,[0,[2,3,4]]]]],14],[[[92,[77,77]]],14],[[[93,[77,77]]],14],[[[94,[77]]],14],[[[95,[77]]],14],[[[96,[77]]],14],[[[97,[77,[0,[2,3,4]]]]],14],[[[98,[77,[0,[4,32]],[0,[2,3,4]]]]],14],[[[99,[77,[0,[2,3,4]],[0,[2,3,4]]]]],14],[100,14],[100,14],[100,14],[100,14],[100,14],[100,14],[100,14],[100,14],[100,14],[100,14],[100,14],[100,14],[[[101,[4]]],14],[[[102,[77]]],14],[[[106,[[0,[32,4]]]]],14],[[[107,[77]]],14],[[[108,[77]]],14],[[[112,[77]]],14],[[[113,[77]]],14],[[[118,[77,[0,[2,4,3]]]]],14],[[[120,[77,77]]],14],[[[121,[77,77]]],14],[72,15],[[65,12],65],[[[0,[2,3,4]]],[[97,[[0,[2,3,4]]]]]],[[65,12,12],65],[[65,12,12],65],[[[0,[2,3,4]],[0,[2,3,4]]],[[99,[[0,[2,3,4]],[0,[2,3,4]]]]]],[[65,12],65],[[65,12],65],[[[0,[4,32]],[0,[2,3,4]]],[[98,[[0,[4,32]],[0,[2,3,4]]]]]],[[],16],[[[0,[3,4,2]]],16],[[[0,[3,4,2]]],16],[[],16],[[[0,[3,4,2]]],16],[[[0,[3,4,2]]],16],[72,15],[[[65,[64,64]]],16],[[[65,[140,140]]],16],[[[65,[64,64]],14],16],[4,[[101,[4]]]],[[[65,[76,76]]],[[16,[14]]]],[[[75,[4]]],[[16,[14]]]],[[],[[16,[14]]]],[[[73,[76,76]]],[[16,[14]]]],[[[74,[77]]],[[16,[14]]]],[[[78,[76]]],[[16,[14]]]],[[[79,[76]]],[[16,[14]]]],[[[80,[77]]],[[16,[14]]]],[[[89,[77,[0,[2,4,3]],[0,[2,4,3]]]]],[[16,[14]]]],[[[90,[77,[0,[4,32]],[0,[2,4,3]]]]],[[16,[14]]]],[[[91,[76,[0,[2,3,4]]]]],[[16,[14]]]],[[[92,[77,77]]],[[16,[14]]]],[[[93,[77,77]]],[[16,[14]]]],[[[94,[76]]],[[16,[14]]]],[[[95,[77]]],[[16,[14]]]],[[[96,[77]]],[[16,[14]]]],[[[97,[76,[0,[2,3,4]]]]],[[16,[14]]]],[[[98,[76,[0,[4,32]],[0,[2,3,4]]]]],[[16,[14]]]],[[[99,[76,[0,[2,3,4]],[0,[2,3,4]]]]],[[16,[14]]]],[100,[[16,[14]]]],[100,[[16,[14]]]],[100,[[16,[14]]]],[100,[[16,[14]]]],[100,[[16,[14]]]],[100,[[16,[14]]]],[100,[[16,[14]]]],[100,[[16,[14]]]],[100,[[16,[14]]]],[100,[[16,[14]]]],[100,[[16,[14]]]],[100,[[16,[14]]]],[[[101,[4]]],[[16,[14]]]],[[[102,[76]]],[[16,[14]]]],[[[106,[[0,[32,4]]]]],[[16,[14]]]],[[[107,[77]]],[[16,[14]]]],[[[108,[77]]],[[16,[14]]]],[[[112,[77]]],[[16,[14]]]],[[[113,[77]]],[[16,[14]]]],[[[118,[76,[0,[2,4,3]]]]],[[16,[14]]]],[[[120,[77,77]]],[[16,[14]]]],[[[121,[77,77]]],[[16,[14]]]],[[],102],[[],103],[[]],[141],[72],[[[65,[[142,[4]],[142,[4]]]],72]],[[]],[[]],[[[65,[[143,[[143,[[143,[143]]]]]],[143,[[143,[[143,[143]]]]]]]],[65,[[143,[[143,[[143,[143]]]]]],[143,[[143,[[143,[143]]]]]]]]],[[16,[122]]]],[72,[[16,[122]]]],[[[65,[64,64]],28]],[[[0,[2,3,4]]]],[[[0,[2,3,4]]]],0,[[[68,[[65,[144,144]]]],145],146],[[[65,[64,64]],28],[[16,[14]]]],[[[0,[2,3,4]]],[[16,[14]]]],[[[0,[2,3,4]]],[[16,[14]]]],[[[0,[2,3,4]]],[[16,[14]]]],[[[0,[2,3,4]]],[[104,[[0,[2,3,4]]]]]],[[],[[0,[4,147,[147,[[0,[4,147,[147,[[0,[4,147,[147,[[0,[4,147,[147,[[0,[4,147,147]]]]]]]]]]]]]]]]]]]],[[[0,[2,3,4]],[0,[2,3,4]]]],[[[0,[2,3,4]]],16],[[[0,[32,4]]],[[105,[[0,[32,4]]]]]],[[[0,[32,4]],14],[[106,[[0,[32,4]]]]]],[[],107],[[[65,[140,140]],28],16],[[[65,[140,140]],28]],[65,16],[[65,12],65],[65],[[[65,[138]]],138],[[65,12]],[[[65,[64,64]]]],[14,108],[14,109],[[[0,[2,3,4]]],[[110,[[0,[2,3,4]]]]]],[[4,[0,[2,3]]],[[111,[4,[0,[2,3]]]]]],[14,112],[[],[[0,[4,148,[148,[[0,[4,148,[148,[[0,[4,148,[148,[[0,[4,148,[148,[[0,[4,148,148]]]]]]]]]]]]]]]]]]]],[14,113],[[[105,[[0,[32,4]]]],14],[[106,[[0,[32,4]]]]]],[14,114],[[[0,[2,3,4]]],[[115,[[0,[2,3,4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[[0,[2,3,4]],[0,[2,3,4]]],[[116,[[0,[0,4]],[0,[2,3,4]],[0,[2,3,4]]]]]],[[[0,[32,4]],[0,[2,3,4]]],[[117,[[0,[0,4]],[0,[2,3,4]]]]]],[[[0,[2,3,4]]],[[0,[0,4]]]],[[[0,[2,3,4]],[0,[2,3,4]]],[[0,[0,4]]]],[[[0,[4,32]],[0,[2,3,4]]],[[0,[0,4]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[[0,[2,3,4]],[0,[2,3,4]]]],[[[0,[2,3,4]]],16],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[[65,[36]]]],[[[65,[36]]]],[76],[[77,[6,[4]],[6,[4]]]],[[[0,[2,3,4]]],[[118,[[0,[2,3,4]]]]]],[[4,[0,[2,4,3]]],[[130,[4,[0,[2,4,3]]]]]],[[4,[0,[2,4,3]]],[[129,[4,[0,[2,4,3]]]]]],[[4,[0,[2,4,3]]],[[128,[4,[0,[2,4,3]]]]]],[76,[[119,[76]]]],[14,96],[14,95],[38],[[[65,[77,77]],38]],[[[75,[4]],38]],[[[73,[77,77]],38]],[[[74,[77]],38]],[[[78,[77]],38]],[[[79,[77]],38]],[[[80,[77]],38]],[[[89,[77,[0,[2,4,3]],[0,[2,4,3]]]],38]],[[[90,[77,[0,[4,32]],[0,[2,4,3]]]],38]],[[[91,[77,[0,[2,3,4]]]],38]],[[[92,[77,77]],38]],[[[93,[77,77]],38]],[[[94,[77]],38]],[[[95,[77]],38]],[[[96,[77]],38]],[[[97,[77,[0,[2,3,4]]]],38]],[[[98,[77,[0,[4,32]],[0,[2,3,4]]]],38]],[[[99,[77,[0,[2,3,4]],[0,[2,3,4]]]],38]],[[100,38]],[[100,38]],[[100,38]],[[100,38]],[[100,38]],[[100,38]],[[100,38]],[[100,38]],[[100,38]],[[100,38]],[[100,38]],[[100,38]],[[[101,[4]],38]],[[[102,[77]],38]],[[[106,[[0,[32,4]]]],38]],[[[107,[77]],38]],[[[108,[77]],38]],[[[112,[77]],38]],[[[113,[77]],38]],[[[118,[77,[0,[2,4,3]]]],38]],[[[120,[77,77]],38]],[[[121,[77,77]],38]],[72,120],[[[105,[[0,[32,4]]]],72],[[120,[[106,[[0,[32,4]]]]]]]],[72,121],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[77,34]],[[14,149,34]],[[150,35]],[149],[[]],[[]],[134],[151,151],[151,151],[[],15],[[],15],[[]],[[]],[[],14],[[],14],[[]],[[]],[14],[14],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[152,[[0,[32,4]]]]],[[152,[[0,[32,4]]]]]],[[[153,[3]]],[[153,[3]]]],[[]],[[]],[14],[14],[14],[14],[14],[14],[[[152,[4]],34]],[[[153,[3]],34]],[[[154,[4]],34]],[[[152,[4]],35]],[[[153,[3]],35]],[[[154,[4]],35]],[14],[14],[14],[[[152,[[0,[36,4]]]],19],37],[[[153,[[0,[36,3]]]],19],37],[[[154,[[0,[36,4]]]],19],37],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[[152,[4]]],14],[[[153,[3]]],14],[[[154,[4]]],14],[[[152,[4]]],[[16,[14]]]],[[[153,[3]]],[[16,[14]]]],[[[154,[4]]],[[16,[14]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],[[[152,[4]],38]],[[[153,[3]],38]],[[[154,[4]],38]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[155,[32]]],[[155,[32]]]],[[]],[14],[14],[[[155,[0]],[34,[0]]]],[[[155,[156]],34]],[[[155,[156]],35]],[[[155,[0]],[35,[0]]]],[14],[[[155,[36]],19],37],[[]],[[],14],[[]],[[]],[[[155,[156]]],14],[[[155,[0]]],14],[[[155,[156]]],[[16,[14]]]],[[[155,[0]]],[[16,[14]]]],[[]],[[],10],[[],10],[[],31],[[[155,[156]],38]],[[[155,[0]],[38,[0]]]],0,[[]],[[]],[[[157,[32]]],[[157,[32]]]],[[]],[14],[14],[[[157,[0]],[34,[0]]]],[[[157,[156]],34]],[[[157,[0]],[35,[0]]]],[[[157,[156]],35]],[14],[[[157,[36]],19],37],[[]],[[],14],[[]],[[]],[[[157,[156]]],14],[[[157,[0]]],14],[[[157,[156]]],[[16,[14]]]],[[[157,[0]]],[[16,[14]]]],[[]],[[],10],[[],10],[[],31],[[[157,[156]],38]],[[[157,[0]],[38,[0]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[158,[[0,[32,4]]]]],[[158,[[0,[32,4]]]]]],[[[159,[3]]],[[159,[3]]]],[[]],[[]],[14],[14],[14],[14],[14],[14],[[[158,[4]],34]],[[[159,[3]],34]],[[[160,[4]],34]],[[[158,[4]],35]],[[[159,[3]],35]],[[[160,[4]],35]],[14],[14],[14],[[[158,[[0,[36,4]]]],19],37],[[[159,[[0,[36,3]]]],19],37],[[[160,[[0,[36,4]]]],19],37],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[[158,[4]]],14],[[[159,[3]]],14],[[[160,[4]]],14],[[[158,[4]]],[[16,[14]]]],[[[159,[3]]],[[16,[14]]]],[[[160,[4]]],[[16,[14]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],[[[158,[4]],38]],[[[159,[3]],38]],[[[160,[4]],38]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],67],[[],67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[161,[32]]],[[161,[32]]]],[[[162,[32]]],[[162,[32]]]],[[[163,[3]]],[[163,[3]]]],[[[164,[3]]],[[164,[3]]]],[[[165,[3]]],[[165,[3]]]],[[[166,[3]]],[[166,[3]]]],[[[167,[3]]],[[167,[3]]]],[[[168,[3]]],[[168,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[[163,[3]],34]],[[[164,[3]],34]],[[[169,[4]],34]],[[[170,[4]],34]],[[[165,[3]],34]],[[[166,[3]],34]],[[[171,[4]],34]],[[[172,[4]],34]],[[[167,[3]],34]],[[[168,[3]],34]],[[[173,[4]],34]],[[[161,[3,[0,[2,3,4]]]],35]],[[[162,[3,[0,[2,3,4]]]],35]],[[[174,[4,[0,[2,3,4]]]],35]],[[[175,[4,[0,[2,3,4]]]],35]],[[[163,[3]],35]],[[[164,[3]],35]],[[[169,[4]],35]],[[[170,[4]],35]],[[[165,[3]],35]],[[[166,[3]],35]],[[[171,[4]],35]],[[[172,[4]],35]],[[[167,[3]],35]],[[[168,[3]],35]],[[[173,[4]],35]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[[161,[36]],19],37],[[[162,[36]],19],37],[[[174,[36]],19],37],[[[175,[36]],19],37],[[[163,[[0,[36,3]]]],19],37],[[[164,[[0,[36,3]]]],19],37],[[[169,[[0,[36,4]]]],19],37],[[[170,[[0,[36,4]]]],19],37],[[[165,[[0,[36,3]]]],19],37],[[[166,[[0,[36,3]]]],19],37],[[[171,[[0,[36,4]]]],19],37],[[[172,[[0,[36,4]]]],19],37],[[[167,[[0,[36,3]]]],19],37],[[[168,[[0,[36,3]]]],19],37],[[[173,[[0,[36,4]]]],19],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[170,[4]]],[[67,[4]]]],[[[172,[4]]],[[67,[4]]]],[[[163,[3]]],14],[[[164,[3]]],14],[[[169,[4]]],14],[[[170,[4]]],14],[[[165,[3]]],14],[[[166,[3]]],14],[[[171,[4]]],14],[[[172,[4]]],14],[[[167,[3]]],14],[[[168,[3]]],14],[[[173,[4]]],14],[[[163,[3]]],[[16,[14]]]],[[[164,[3]]],[[16,[14]]]],[[[169,[4]]],[[16,[14]]]],[[[170,[4]]],[[16,[14]]]],[[[165,[3]]],[[16,[14]]]],[[[166,[3]]],[[16,[14]]]],[[[171,[4]]],[[16,[14]]]],[[[172,[4]]],[[16,[14]]]],[[[167,[3]]],[[16,[14]]]],[[[168,[3]]],[[16,[14]]]],[[[173,[4]]],[[16,[14]]]],[14,163],[14,164],[14,170],[14,169],[14,165],[14,166],[14,172],[14,171],[[]],[[[0,[2,3]]]],[[[0,[2,3]]]],[[[0,[2,3]]]],[[]],[[[0,[2,3]]]],[[[0,[2,3]]]],[[[0,[2,3,4]]],[[161,[[0,[2,3,4]]]]]],[[[0,[2,3,4]]],[[162,[[0,[2,3,4]]]]]],[[[0,[2,3,4]]],[[175,[[0,[2,3,4]]]]]],[[[0,[2,3,4]]],[[174,[[0,[2,3,4]]]]]],[14,168],[[[164,[3]]],[[67,[3]]]],[[[170,[4]]],[[67,[4]]]],[[[166,[3]]],[[67,[3]]]],[[[172,[4]]],[[67,[4]]]],[[[170,[4]]],[[67,[4]]]],[[[172,[4]]],[[67,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[[163,[3]],38]],[[[164,[3]],38]],[[[169,[4]],38]],[[[170,[4]],38]],[[[165,[3]],38]],[[[166,[3]],38]],[[[171,[4]],38]],[[[172,[4]],38]],[[[167,[3]],38]],[[[168,[3]],38]],[[[173,[4]],38]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[176,176],[177,177],[178,178],[179,179],[[[180,[[0,[32,0]]]]],[[180,[[0,[32,0]]]]]],[[[181,[[0,[32,0]]]]],[[181,[[0,[32,0]]]]]],[[[182,[[0,[32,0]]]]],[[182,[[0,[32,0]]]]]],[183,183],[184,184],[185,185],[[[186,[[0,[32,0]]]]],[[186,[[0,[32,0]]]]]],[[[187,[[0,[32,0]]]]],[[187,[[0,[32,0]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[176,35]],[[177,35]],[[178,35]],[[179,35]],[[[180,[0]],35]],[[[181,[0]],35]],[[[182,[0]],35]],[[183,35]],[[184,35]],[[185,35]],[[[186,[0]],35]],[[[187,[0]],35]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[176,19],37],[[177,19],37],[[178,19],37],[[179,19],37],[[[180,[[0,[36,0]]]],19],37],[[[181,[[0,[36,0]]]],19],37],[[[182,[[0,[36,0]]]],19],37],[[183,19],37],[[184,19],37],[[185,19],37],[[[186,[[0,[36,0]]]],19],37],[[[187,[[0,[36,0]]]],19],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],178],[[],177],[[],176],[[],179],[[],183],0,0,0,[[],185],0,0,[[],184],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],0,[[]],[[]],[14],[14],[[188,35]],[188],[14],[[188,19],37],[[]],[[],14],[[]],[[]],[[],10],[[],10],[[],31],0,0,[[]],[[]],[[]],[[]],[[[189,[[0,[32,4]]]]],[[189,[[0,[32,4]]]]]],[[]],[14],[14],[14],[14],[[[189,[4]],34]],[[[190,[4]],34]],[[[189,[4]],35]],[[[190,[4]],35]],[14],[[[190,[4]]]],[14],[[[189,[[0,[36,4]]]],19],37],[[[190,[[0,[36,4]]]],19],37],[[]],[[]],[[],14],[[],14],[[]],[[]],[[]],[[]],[[[189,[4]]],14],[[[190,[4]]],14],[[[189,[4]]],[[16,[14]]]],[[[190,[4]]],[[16,[14]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[[189,[4]],38]],[[[190,[4]],38]]],"c":[30,128],"p":[[3,"ThreadPoolBuilder"],[8,"Fn"],[8,"Sync"],[8,"Send"],[3,"Global"],[3,"Vec"],[3,"ThreadPool"],[8,"ThreadSpawn"],[3,"ThreadPoolBuildError"],[4,"Result"],[3,"DefaultSpawn"],[8,"FnOnce"],[4,"Yield"],[15,"usize"],[15,"bool"],[4,"Option"],[15,"str"],[3,"BroadcastContext"],[3,"Formatter"],[3,"Error"],[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"FnContext"],[3,"Configuration"],[8,"Error"],[3,"Box"],[8,"FnMut"],[3,"CustomSpawn"],[3,"String"],[3,"TypeId"],[8,"Clone"],[3,"IntoIter"],[8,"Consumer"],[8,"UnindexedConsumer"],[8,"Debug"],[6,"Result"],[8,"ProducerCallback"],[8,"Ord"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Iter"],[3,"IntoIter"],[3,"IterMut"],[3,"Iter"],[3,"IntoIter"],[8,"Hash"],[8,"Eq"],[3,"Iter"],[3,"IntoIter"],[3,"IterMut"],[3,"Drain"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[8,"Iterator"],[4,"Either"],[8,"AsMut"],[15,"slice"],[3,"Pin"],[8,"AsRef"],[3,"ExponentialBlocks"],[3,"UniformBlocks"],[8,"IntoParallelIterator"],[3,"Chain"],[3,"Chunks"],[3,"Empty"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[3,"Cloned"],[3,"Copied"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"FlatMapIter"],[3,"Flatten"],[3,"FlattenIter"],[3,"Fold"],[3,"FoldWith"],[3,"FoldChunks"],[3,"FoldChunksWith"],[3,"Inspect"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"MinLen"],[3,"MaxLen"],[3,"Map"],[3,"MapWith"],[3,"MapInit"],[3,"MultiZip"],[3,"Once"],[3,"PanicFuse"],[3,"IterBridge"],[3,"Positions"],[3,"Repeat"],[3,"RepeatN"],[3,"Rev"],[3,"Skip"],[3,"SkipAny"],[3,"SkipAnyWhile"],[3,"Split"],[3,"StepBy"],[3,"Take"],[3,"TakeAny"],[3,"TakeAnyWhile"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Update"],[3,"WhileSome"],[3,"Zip"],[3,"ZipEq"],[4,"Ordering"],[8,"FromIterator"],[8,"FromParallelIterator"],[3,"LinkedList"],[8,"Deref"],[8,"DerefMut"],[3,"WalkTreePrefix"],[3,"WalkTreePostfix"],[3,"WalkTree"],[8,"Into"],[8,"PartialEq"],[8,"Extend"],[8,"IntoIterator"],[3,"IterEither"],[8,"Display"],[8,"Hasher"],[8,"Default"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[8,"RangeBounds"],[8,"ParallelExtend"],[8,"PartialOrd"],[8,"Future"],[3,"Context"],[4,"Poll"],[8,"Product"],[8,"Sum"],[8,"Producer"],[8,"UnindexedProducer"],[8,"Folder"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[15,"char"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitInclusive"],[3,"Chunks"],[3,"ChunksExact"],[3,"RChunks"],[3,"RChunksExact"],[3,"Iter"],[3,"Windows"],[3,"ChunksMut"],[3,"ChunksExactMut"],[3,"RChunksMut"],[3,"RChunksExactMut"],[3,"IterMut"],[3,"SplitMut"],[3,"SplitInclusiveMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitInclusive"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"SplitAsciiWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelDrainFull"],[8,"ParallelDrainRange"],[8,"ParallelBridge"],[8,"Reducer"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[8,"ParallelString"]]},\
"rayon_core":{"doc":"Rayon-core houses the core stable APIs of Rayon.","t":"DDNDNDDDDDDELLLLLLLLLLLLLLLLLLLLLLFLLLLLLLFLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLFLLLLLLLLLLLFLFFLLLLLLLLLLLFLFLLFLLFLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFL","n":["BroadcastContext","Configuration","Executed","FnContext","Idle","Scope","ScopeFifo","ThreadBuilder","ThreadPool","ThreadPoolBuildError","ThreadPoolBuilder","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","breadth_first","breadth_first","broadcast","broadcast","build","build","build_global","build_scoped","clone","clone_into","current_num_threads","current_num_threads","current_thread_has_pending_tasks","current_thread_has_pending_tasks","current_thread_index","current_thread_index","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","exit_handler","exit_handler","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","in_place_scope","in_place_scope","in_place_scope_fifo","in_place_scope_fifo","index","index","init","init","init","init","init","init","init","init","init","init","initialize","install","into","into","into","into","into","into","into","into","into","into","join","join","join_context","max_num_threads","migrated","name","new","new","new","num_threads","num_threads","num_threads","panic_handler","panic_handler","run","scope","scope","scope_fifo","scope_fifo","source","spawn","spawn","spawn","spawn_broadcast","spawn_broadcast","spawn_broadcast","spawn_broadcast","spawn_fifo","spawn_fifo","spawn_fifo","spawn_handler","stack_size","stack_size","stack_size","start_handler","start_handler","thread_name","thread_name","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_current_thread","yield_local","yield_local","yield_now","yield_now"],"q":[[0,"rayon_core"]],"d":["Provides context to a closure called by <code>broadcast</code>.","Contains the rayon thread pool configuration. Use …","Work was found and executed.","Provides the calling context to a closure called by …","No available work was found.","Represents a fork-join scope which can be used to spawn …","Represents a fork-join scope which can be used to spawn …","Thread builder used for customization via …","Represents a user created thread-pool.","Error when initializing a thread pool.","Used to create a new <code>ThreadPool</code> or to configure the global …","Result of <code>yield_now()</code> or <code>yield_local()</code>.","","","","","","","","","","","","","","","","","","","","","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …","Deprecated in favor of <code>ThreadPoolBuilder::breadth_first</code>.","Executes <code>op</code> within every thread in the current threadpool. …","Executes <code>op</code> within every thread in the threadpool. Any …","Creates a new <code>ThreadPool</code> initialized using this …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Initializes the global thread pool. This initialization is …","Creates a scoped <code>ThreadPool</code> initialized using this …","","","Returns the number of threads in the current registry. If …","Returns the (current) number of threads in the thread pool.","If called from a Rayon worker thread, indicates whether …","Returns true if the current worker thread currently has “…","If called from a Rayon worker thread, returns the index of …","If called from a Rayon worker thread in this thread-pool, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets a callback to be invoked on thread exit.","Deprecated in favor of <code>ThreadPoolBuilder::exit_handler</code>.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that spawns work into this thread-pool.","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that spawns work into this thread-pool in …","Our index amongst the broadcast threads (ranges from …","Gets the index of this thread in the pool, within …","","","","","","","","","","","Deprecated in favor of <code>ThreadPoolBuilder::build_global</code>.","Executes <code>op</code> within the threadpool. Any attempts to use <code>join</code>…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Takes two closures and <em>potentially</em> runs them in parallel. …","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …","Identical to <code>join</code>, except that the closures have a …","Returns the maximum number of threads that Rayon supports …","Returns <code>true</code> if the closure was called from a different …","Gets the string that was specified by …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Creates and returns a valid rayon thread pool builder, but …","Creates and return a valid rayon thread pool …","The number of threads receiving the broadcast in the …","Sets the number of threads to be used in the rayon …","Deprecated in favor of <code>ThreadPoolBuilder::num_threads</code>.","Normally, whenever Rayon catches a panic, it tries to …","Deprecated in favor of <code>ThreadPoolBuilder::panic_handler</code>.","Executes the main loop for this thread. This will not …","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that executes within this thread-pool. …","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that executes within this thread-pool. …","","Puts the task into the Rayon threadpool’s job queue in …","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This task …","Spawns an asynchronous task on every thread in this …","Spawns a job into every thread of the fork-join scope <code>self</code>…","Spawns a job into every thread of the fork-join scope <code>self</code>…","Spawns an asynchronous task on every thread in this …","Fires off a task into the Rayon threadpool in the “static…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This task …","Sets a custom function for spawning threads.","Gets the value that was specified by …","Sets the stack size of the worker threads","Deprecated in favor of <code>ThreadPoolBuilder::stack_size</code>.","Sets a callback to be invoked on thread start.","Deprecated in favor of <code>ThreadPoolBuilder::start_handler</code>.","Sets a closure which takes a thread index and returns the …","Deprecated in favor of <code>ThreadPoolBuilder::thread_name</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use the current thread as one of the threads in the pool.","Cooperatively yields execution to local Rayon work.","Cooperatively yields execution to local Rayon work.","Cooperatively yields execution to Rayon.","Cooperatively yields execution to Rayon."],"i":[0,0,13,0,13,0,0,0,0,0,0,0,18,21,22,23,7,1,13,8,2,24,18,21,22,23,7,1,13,8,2,24,1,2,0,7,1,2,1,1,13,13,0,7,0,7,0,7,1,2,18,21,22,23,7,1,13,8,2,24,18,21,22,23,7,1,13,8,2,24,8,18,21,22,23,7,7,1,13,8,2,24,13,13,1,2,18,21,22,23,7,1,13,8,8,2,24,18,21,22,23,7,1,13,8,2,24,0,7,0,7,18,21,18,21,22,23,7,1,13,8,2,24,0,7,18,21,22,23,7,1,13,8,2,24,0,7,0,0,24,21,7,1,2,18,1,2,1,2,21,0,7,0,7,8,0,22,7,0,22,23,7,0,23,7,1,21,1,2,1,2,1,2,13,8,18,21,22,23,7,1,13,8,2,24,18,21,22,23,7,1,13,8,2,24,18,21,22,23,7,1,13,8,2,24,1,0,7,0,7],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[[0,[3,4]]],[[6,[5]]]],[[7,[0,[3,4]]],[[6,[5]]]],[[[1,[0]]],[[9,[7,8]]]],[2,[[9,[7,[11,[10]]]]]],[[[1,[0]]],[[9,[8]]]],[[1,[0,[3,4]],12],[[9,[8]]]],[13,13],[[]],[[],14],[7,14],[[],[[16,[15]]]],[7,[[16,[15]]]],[[],[[16,[14]]]],[7,[[16,[14]]]],[[],1],[[],2],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[8,17],[14],[14],[14],[14],[14],[7],[14],[14],[14],[14],[14],[[13,13],15],[[],15],[[1,[0,[3,5,4]]],1],[[2,[0,[3,5,4]]],2],[[18,19],20],[[21,19],20],[[22,19],20],[[23,19],20],[[7,19],20],[[1,19],20],[[13,19],20],[[8,19],20],[[8,19],20],[[2,19],20],[[24,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[[7,12]],[12],[[7,12]],[18,14],[21,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[2,[[9,[[11,[10]]]]]],[[7,[0,[12,5]]],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[12,5]],[0,[12,5]]]],[[7,[0,[12,5]],[0,[12,5]]]],[[[0,[12,5]],[0,[12,5]]]],[[],14],[24,15],[21,[[16,[17]]]],[2,[[9,[7,[11,[10]]]]]],[[],1],[[],2],[18,14],[[1,14],1],[[2,14],2],[[1,[0,[3,5,4]]],1],[[2,[0,[3,5,4]]],2],[21],[[[0,[12,5]]],5],[[7,[0,[12,5]]],5],[[[0,[12,5]]],5],[[7,[0,[12,5]]],5],[8,[[16,[10]]]],[[[0,[12,5]]]],[[22,[0,[12,5]]]],[[7,[0,[12,5]]]],[[[0,[3,5,4]]]],[[22,[0,[3,5,4]]]],[[23,[0,[3,5,4]]]],[[7,[0,[3,5,4]]]],[[[0,[12,5]]]],[[23,[0,[12,5]]]],[[7,[0,[12,5]]]],[[1,25],[[1,[[0,[25]]]]]],[21,[[16,[14]]]],[[1,14],1],[[2,14],2],[[1,[0,[3,5,4]]],1],[[2,[0,[3,5,4]]],2],[[1,25],1],[[2,25],2],[[]],[[],26],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[1,1],[[],[[16,[13]]]],[7,[[16,[13]]]],[[],[[16,[13]]]],[7,[[16,[13]]]]],"c":[1,32,123,141],"p":[[3,"ThreadPoolBuilder"],[3,"Configuration"],[8,"Fn"],[8,"Sync"],[8,"Send"],[3,"Vec"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[4,"Result"],[8,"Error"],[3,"Box"],[8,"FnOnce"],[4,"Yield"],[15,"usize"],[15,"bool"],[4,"Option"],[15,"str"],[3,"BroadcastContext"],[3,"Formatter"],[6,"Result"],[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"FnContext"],[8,"FnMut"],[3,"String"],[3,"TypeId"]]},\
"read_color":{"doc":"A simple library for reading hex colors.","t":"FFFFFF","n":["char_to_hex","hex","hex_pair","rgb","rgb_maybe_a","rgba"],"q":[[0,"read_color"]],"d":["Converts a character into a u8 value.","Reads a hex value from an iterator of characters.","Reads a pair of hex values, joining them in value range …","Reads RGB colors from iterator of characters.","Reads RGB with optional alpha from iterator of characters.","Reads RGBA colors from iterator of characters."],"i":[0,0,0,0,0,0],"f":[[1,[[3,[2]]]],[4,[[3,[2]]]],[4,[[3,[2]]]],[4,[[3,[[5,[2]]]]]],[4,3],[4,[[3,[[5,[2]]]]]]],"c":[],"p":[[15,"char"],[15,"u8"],[4,"Option"],[3,"Chars"],[15,"array"]]},\
"rusttype":{"doc":"RustType is a pure Rust alternative to libraries like …","t":"EDDDDIDINDDDNDDDDLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLMMKMMKLLLLLLLLLLLLLLFLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLMMMMMM","n":["Font","Glyph","GlyphId","GlyphIter","HMetrics","IntoGlyphId","LayoutIter","OutlineBuilder","Owned","Point","PositionedGlyph","Rect","Ref","Scale","ScaledGlyph","VMetrics","Vector","add","add","add","advance_width","ascent","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_outline","build_outline","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","cmp","cmp","curve_to","default","default","default","descent","div","div","draw","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","exact_bounding_box","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","font","font","from","from","from","from","from","from","from","from","from","from","from","from","from","from","glyph","glyph_count","glyphs_for","h_metrics","hash","hash","hash","hash","height","id","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into_glyph_id","into_glyph_id","into_iter","into_iter","into_unpositioned","into_unscaled","layout","left_side_bearing","line_gap","line_to","max","min","move_to","mul","mul","mul","next","next","pair_kerning","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pixel_bounding_box","point","position","positioned","quad_to","scale","scale","scale_for_pixel_height","scaled","set_position","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_from_bytes_and_index","try_from_vec","try_from_vec_and_index","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniform","units_per_em","unpositioned","unscaled","v_metrics","v_metrics_unscaled","vector","width","x","x","x","y","y","y"],"q":[[0,"rusttype"]],"d":["A single font. This may or may not own the font data.","A single glyph of a font.","","","The “horizontal metrics” of a glyph. This is useful …","A trait for types that can be converted into a <code>GlyphId</code>, in …","","A trait for glyph outline construction.","","A point in 2-dimensional space, with each dimension of …","A glyph augmented with positioning and scaling …","A rectangle, with top-left corner at <code>min</code>, and bottom-right …","","Defines the size of a rendered face of a font, in pixels, …","A glyph augmented with scaling information. You can query …","The “vertical metrics” of a font at a particular …","A vector in 2-dimensional space, with each dimension of …","","","","The horizontal offset that the origin of the next glyph …","The highest point that any glyph in the font extends to …","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the outline of the glyph with the builder …","Builds the outline of the glyph with the builder …","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends a ClosePath segment.","","","","","Appends a CurveTo segment.","","","","The lowest point that any glyph in the font extends to …","","","Rasterises this glyph. For each pixel in the rect given by …","","","","","","","","","","","","The bounding box of the shape of this glyph, not to be …","","","","","","","","","","","","The font to which this glyph belongs.","The font to which this glyph belongs.","The font to which this glyph belongs.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the corresponding glyph for a Unicode code point …","The number of glyphs present in this font. Glyph …","A convenience function.","Retrieves the “horizontal metrics” of this glyph. See …","","","","","","The glyph identifier for this glyph.","The glyph identifier for this glyph.","The glyph identifier for this glyph.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>self</code> into a <code>GlyphId</code>, consulting the index map of …","","","","Removes the positioning from this glyph","A reference to this glyph without the scaling","A convenience function for laying out glyphs for a string …","The horizontal offset between the origin of this glyph and …","The gap to leave between the descent of one line and the …","Appends a LineTo segment.","","","Appends a MoveTo segment.","","","","","","Returns additional kerning to apply as well as that given …","","","","","","","","The conservative pixel-boundary bounding box for this …","A convenience function for generating <code>Point</code>s.","","Augments this glyph with positioning information, making …","Appends a QuadTo segment.","","","Computes a scale factor to produce a font whose “height…","Augments this glyph with scaling information, making …","Resets positioning information and recalculates the pixel …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a Font from byte-slice data.","Creates a Font from byte-slice data &amp; a font collection …","Creates a Font from owned font data.","Creates a Font from owned font data &amp; a font collection …","","","","","","","","","","","","","","","","","","","","","","","","","","","Uniform scaling, equivalent to <code>Scale { x: s, y: s }</code>.","Returns the units per EM square of this font","A reference to this glyph without positioning","Removes the scaling from this glyph","The “vertical metrics” for this font at a given scale. …","Get the unscaled VMetrics for this font, shared by all …","A convenience function for generating <code>Vector</code>s.","","","","Horizontal scale, in pixels.","","","Vertical scale, in pixels."],"i":[0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,0,2,3,3,13,14,8,2,3,10,11,12,13,14,4,7,15,17,18,8,2,3,10,11,12,13,14,4,7,15,17,18,4,7,8,2,3,10,11,12,13,14,4,7,15,17,18,8,2,3,10,11,12,13,14,4,7,15,17,18,5,2,3,10,11,5,2,3,10,14,3,3,7,2,3,10,11,13,14,15,2,3,10,11,4,8,2,3,10,11,12,13,14,4,7,15,12,4,7,8,2,3,10,11,11,12,13,14,4,7,15,17,18,8,8,8,4,2,3,10,11,10,12,4,7,8,2,3,10,11,12,13,14,4,7,15,17,18,31,11,17,18,7,4,8,13,14,5,10,10,5,3,3,14,17,18,8,2,3,10,11,13,14,15,7,0,7,4,5,4,7,8,12,7,2,2,3,8,2,3,10,11,12,13,14,4,7,15,17,18,8,2,3,10,11,12,13,14,4,7,15,17,18,8,8,8,8,8,2,3,10,11,12,13,14,4,7,15,17,18,8,2,3,10,11,12,13,14,4,7,15,17,18,15,8,7,4,8,8,0,10,2,3,15,2,3,15],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],[3,[1]]],[[2,[1]]]],[[[3,[1]],[3,[1]]],[[3,[1]]]],[[[3,[1]],[2,[1]]],[[2,[1]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,5],6],[[7,5],6],[8,8],[[[2,[9]]],[[2,[9]]]],[[[3,[9]]],[[3,[9]]]],[[[10,[9]]],[[10,[9]]]],[11,11],[12,12],[13,13],[14,14],[4,4],[7,7],[15,15],[[[17,[[0,[9,16]]]]],[[17,[[0,[9,16]]]]]],[18,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[19]],[2,[19]]],20],[[[3,[19]],[3,[19]]],20],[[[10,[19]],[10,[19]]],20],[[11,11],20],[[21,21,21,21,21,21]],[[],[[2,[22]]]],[[],[[3,[22]]]],[[],[[10,[22]]]],0,[[[3,[21]],21],[[3,[21]]]],[[[3,[23]],23],[[3,[23]]]],[[7,24]],[[[2,[25]],[2,[25]]],6],[[[3,[25]],[3,[25]]],6],[[[10,[25]],[10,[25]]],6],[[11,11],6],[[13,13],6],[[14,14],6],[[15,15],6],[[],6],[[],6],[[],6],[[],6],[4,[[26,[[10,[21]]]]]],[[8,27],28],[[[2,[29]],27],28],[[[3,[29]],27],28],[[[10,[29]],27],28],[[11,27],28],[[12,27],28],[[13,27],28],[[14,27],28],[[4,27],28],[[7,27],28],[[15,27],28],[12,8],[4,8],[7,8],[[]],[[]],[[]],[[]],[[]],[30,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,31],12],[8,32],[[8,16],[[17,[16]]]],[4,13],[[[2,[33]],34]],[[[3,[33]],34]],[[[10,[33]],34]],[[11,34]],[[[10,[[0,[35,36]]]]],[[0,[35,36]]]],[12,11],[4,11],[7,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,11],[8,11],[[]],[[]],[7,4],[4,12],[[8,37,15,[2,[21]]],18],0,0,[[21,21]],0,0,[[21,21]],[[[3,[21]],21],[[3,[21]]]],[[[3,[23]],23],[[3,[23]]]],[[14,21],14],[[[17,[16]]],[[26,[12]]]],[18,[[26,[7]]]],[[8,15,31,31],21],[[[2,[38]],[2,[38]]],[[26,[20]]]],[[[3,[38]],[3,[38]]],[[26,[20]]]],[[[10,[38]],[10,[38]]],[[26,[20]]]],[[11,11],[[26,[20]]]],[[13,13],[[26,[20]]]],[[14,14],[[26,[20]]]],[[15,15],[[26,[20]]]],[7,[[26,[[10,[39]]]]]],[[],2],[7,[[2,[21]]]],[[4,[2,[21]]],7],[[21,21,21,21]],[4,15],[7,15],[[8,21],21],[[12,15],4],[[7,[2,[21]]]],[[[2,[35]],[2,[35]]],[[3,[35]]]],[[[2,[35]],[3,[35]]],[[2,[35]]]],[[[3,[35]],[3,[35]]],[[3,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[[42,[41]]],[[26,[8]]]],[[[42,[41]],43],[[26,[8]]]],[[[44,[41]]],[[26,[8]]]],[[[44,[41]],43],[[26,[8]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[21,15],[8,46],[7,4],[4,12],[[8,15],14],[8,14],[[],3],[[[10,[[0,[35,36]]]]],[[0,[35,36]]]],0,0,0,0,0,0],"c":[],"p":[[8,"Add"],[3,"Point"],[3,"Vector"],[3,"ScaledGlyph"],[8,"OutlineBuilder"],[15,"bool"],[3,"PositionedGlyph"],[4,"Font"],[8,"Clone"],[3,"Rect"],[3,"GlyphId"],[3,"Glyph"],[3,"HMetrics"],[3,"VMetrics"],[3,"Scale"],[8,"Iterator"],[3,"GlyphIter"],[3,"LayoutIter"],[8,"Ord"],[4,"Ordering"],[15,"f32"],[8,"Default"],[15,"f64"],[8,"FnMut"],[8,"PartialEq"],[4,"Option"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"GlyphId"],[8,"IntoGlyphId"],[15,"usize"],[8,"Hash"],[8,"Hasher"],[8,"Sub"],[8,"Copy"],[15,"str"],[8,"PartialOrd"],[15,"i32"],[4,"Result"],[15,"u8"],[15,"slice"],[15,"u32"],[3,"Vec"],[3,"TypeId"],[15,"u16"]]},\
"scoped_threadpool":{"doc":"This crate provides a stable, safe and scoped threadpool.","t":"DDLLLLLLLLLLLLLLLLLLLLL","n":["Pool","Scope","borrow","borrow","borrow_mut","borrow_mut","drop","drop","execute","from","from","into","into","join_all","new","scoped","thread_count","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"scoped_threadpool"]],"d":["A threadpool that acts as a handle to a number of threads …","Handle to the scope during which the threadpool is …","","","","","","","Execute a job on the threadpool.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Blocks until all currently queued jobs have run to …","Construct a threadpool with the given number of threads. …","Borrows the pool and allows executing jobs on other …","Returns the number of threads inside this pool.","","","","","",""],"i":[0,0,1,2,1,2,1,2,2,1,2,1,2,2,1,1,1,1,2,1,2,1,2],"f":[0,0,[[]],[[]],[[]],[[]],[1],[2],[[2,[0,[3,4]]]],[[]],[[]],[[]],[[]],[2],[5,1],[[1,3]],[1,5],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7]],"c":[],"p":[[3,"Pool"],[3,"Scope"],[8,"FnOnce"],[8,"Send"],[15,"u32"],[4,"Result"],[3,"TypeId"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":"EDILLLLOLLLLLLLFLLLKLLLLLLLL","n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":[[0,"scopeguard"]],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,3,7,3,7,0,3,3,3,3,7,3,7,0,3,7,3,2,7,3,7,3,7,3,7,3],"f":[0,0,0,[[]],[[]],[[]],[[]],0,[[[3,[1,2]]]],[[[3,[1,2]]]],[[[3,[1,2]]]],[[[3,[4,1,2]],5],6],[[7,5],6],[[]],[[]],[1,[[3,[1,7]]]],[[]],[[]],[[[3,[1,2]]]],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[1,[[3,[1,2]]]]],"c":[],"p":[[8,"FnOnce"],[8,"Strategy"],[3,"ScopeGuard"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Always"],[15,"bool"],[4,"Result"],[3,"TypeId"]]},\
"serde":{"doc":"Serde","t":"IIQQQIQQQQQQQILLLAKKKKKKKKKLKKKKKKKKKKKKKKKLKKKKKKOLLAKKKKKKLKKKKKKKKKKKKKKKKLKKKKKKKNNNIIIIQNIIQQQQQINDININNNNNINCNNNENNNQQQIILLLLLLLLKLKKLKKKKKKKKLKKKKKKKKKKKKKKKLKKKKKKLLLKLKLLLLLLLLLKLLLLLLKLKLLLKLKLLKLLLLLLLKLLKLLALKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIQQQQQQQQDQQQQQQQQIIQIQIQIQIQIQIQICLLLLLKKKKKKKKLLLLLLLLLLKKKKKKLLLKKKKKKLLLLLKKKKKLKKKKKKKKKKKKLKKKKKKKKLLLLLL","n":["Deserialize","Deserializer","Error","Error","Ok","Serialize","SerializeMap","SerializeSeq","SerializeStruct","SerializeStructVariant","SerializeTuple","SerializeTupleStruct","SerializeTupleVariant","Serializer","collect_map","collect_seq","collect_str","de","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","forward_to_deserialize_any","is_human_readable","is_human_readable","ser","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","Bool","Bytes","Char","Deserialize","DeserializeOwned","DeserializeSeed","Deserializer","Deserializer","Enum","EnumAccess","Error","Error","Error","Error","Error","Error","Expected","Float","IgnoredAny","IntoDeserializer","Map","MapAccess","NewtypeStruct","NewtypeVariant","Option","Other","Seq","SeqAccess","Signed","StdError","Str","StructVariant","TupleVariant","Unexpected","Unit","UnitVariant","Unsigned","Value","Value","Variant","VariantAccess","Visitor","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","custom","default","deserialize","deserialize","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","duplicate_field","eq","eq","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","from","from","into","into","into_deserializer","invalid_length","invalid_type","invalid_value","is_human_readable","missing_field","newtype_variant","newtype_variant_seed","next_element","next_element_seed","next_entry","next_entry_seed","next_key","next_key_seed","next_value","next_value_seed","size_hint","size_hint","struct_variant","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","tuple_variant","type_id","type_id","unit_variant","unknown_field","unknown_variant","value","variant","variant_seed","visit_bool","visit_bool","visit_borrowed_bytes","visit_borrowed_str","visit_byte_buf","visit_bytes","visit_bytes","visit_char","visit_enum","visit_enum","visit_f32","visit_f64","visit_f64","visit_i128","visit_i128","visit_i16","visit_i32","visit_i64","visit_i64","visit_i8","visit_map","visit_map","visit_newtype_struct","visit_newtype_struct","visit_none","visit_none","visit_seq","visit_seq","visit_some","visit_some","visit_str","visit_str","visit_string","visit_u128","visit_u128","visit_u16","visit_u32","visit_u64","visit_u64","visit_u8","visit_unit","visit_unit","BoolDeserializer","BorrowedBytesDeserializer","BorrowedStrDeserializer","BytesDeserializer","CharDeserializer","CowStrDeserializer","EnumAccessDeserializer","Error","F32Deserializer","F64Deserializer","I128Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","I8Deserializer","IsizeDeserializer","MapAccessDeserializer","MapDeserializer","SeqAccessDeserializer","SeqDeserializer","StrDeserializer","StringDeserializer","U128Deserializer","U16Deserializer","U32Deserializer","U64Deserializer","U8Deserializer","UnitDeserializer","UsizeDeserializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","custom","custom","description","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","end","end","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next_element_seed","next_element_seed","next_entry_seed","next_key_seed","next_value_seed","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","Error","Error","Error","Error","Error","Error","Error","Error","Error","Impossible","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Serialize","SerializeMap","SerializeMap","SerializeSeq","SerializeSeq","SerializeStruct","SerializeStruct","SerializeStructVariant","SerializeStructVariant","SerializeTuple","SerializeTuple","SerializeTupleStruct","SerializeTupleStruct","SerializeTupleVariant","SerializeTupleVariant","Serializer","StdError","borrow","borrow_mut","collect_map","collect_seq","collect_str","custom","end","end","end","end","end","end","end","end","end","end","end","end","end","end","from","into","is_human_readable","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_element","serialize_element","serialize_element","serialize_element","serialize_entry","serialize_f32","serialize_f64","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","serialize_value","skip_field","skip_field","try_from","try_into","type_id"],"q":[[0,"serde"],[85,"serde::de"],[263,"serde::de::value"],[1529,"serde::ser"]],"d":["A <strong>data structure</strong> that can be deserialized from any data …","A <strong>data format</strong> that can deserialize any data structure …","The error type that can be returned if some error occurs …","The error type when some error occurs during serialization.","The output type produced by this <code>Serializer</code> during …","A <strong>data structure</strong> that can be serialized into any data …","Type returned from <code>serialize_map</code> for serializing the …","Type returned from <code>serialize_seq</code> for serializing the …","Type returned from <code>serialize_struct</code> for serializing the …","Type returned from <code>serialize_struct_variant</code> for …","Type returned from <code>serialize_tuple</code> for serializing the …","Type returned from <code>serialize_tuple_struct</code> for serializing …","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Generic data structure deserialization framework.","Deserialize this value from the given Serde deserializer.","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Helper macro when implementing the <code>Deserializer</code> part of a …","Determine whether <code>Deserialize</code> implementations should …","Determine whether <code>Serialize</code> implementations should …","Generic data structure serialization framework.","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","The input contained a boolean value that was not expected.","The input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not …","The input contained a <code>char</code> that was not expected.","A <strong>data structure</strong> that can be deserialized from any data …","A data structure that can be deserialized without …","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …","A <strong>data format</strong> that can deserialize any data structure …","The type of the deserializer being converted into.","The input contained an enum that was not expected.","Provides a <code>Visitor</code> access to the data of an enum in the …","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …","The input contained a floating point <code>f32</code> or <code>f64</code> that was …","An efficient way of discarding data from a deserializer.","Converts an existing value into a <code>Deserializer</code> from which …","The input contained a map that was not expected.","Provides a <code>Visitor</code> access to each entry of a map in the …","The input contained a newtype struct that was not expected.","The input contained a newtype variant that was not …","The input contained an <code>Option&lt;T&gt;</code> that was not expected.","A message stating what uncategorized thing the input …","The input contained a sequence that was not expected.","Provides a <code>Visitor</code> access to each element of a sequence in …","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …","","The input contained a <code>&amp;str</code> or <code>String</code> that was not expected.","The input contained a struct variant that was not expected.","The input contained a tuple variant that was not expected.","<code>Unexpected</code> represents an unexpected invocation of any one …","The input contained a unit <code>()</code> that was not expected.","The input contained a unit variant that was not expected.","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>…","The type produced by using this seed.","The value produced by this visitor.","The <code>Visitor</code> that will be used to deserialize the content …","<code>VariantAccess</code> is a visitor that is created by the …","This trait represents a visitor that walks through a …","","","","","","","","","Raised when there is general error when deserializing a …","","Deserialize this value from the given Serde deserializer.","Equivalent to the more common <code>Deserialize::deserialize</code> …","","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Raised when a <code>Deserialize</code> struct type received more than …","","","Format a message stating what data this Visitor expects to …","","Format an explanation of what data was being expected. …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this value into a deserializer.","Raised when deserializing a sequence or map and the input …","Raised when a <code>Deserialize</code> receives a type different from …","Raised when a <code>Deserialize</code> receives a value of the right …","Determine whether <code>Deserialize</code> implementations should …","Raised when a <code>Deserialize</code> struct type expected to receive …","Called when deserializing a variant with a single value.","Called when deserializing a variant with a single value.","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns a <code>Ok(value)</code> for the next value in the map.","This returns a <code>Ok(value)</code> for the next value in the map.","Returns the number of elements remaining in the sequence, …","Returns the number of entries remaining in the map, if …","Called when deserializing a struct-like variant.","","","","","","","","Called when deserializing a tuple-like variant.","","","Called when deserializing a variant with no values.","Raised when a <code>Deserialize</code> struct type received a field …","Raised when a <code>Deserialize</code> enum type received a variant …","Building blocks for deserializing basic values using the …","<code>variant</code> is called to identify which variant to deserialize.","<code>variant</code> is called to identify which variant to deserialize.","The input contains a boolean.","","The input contains a byte array that lives at least as …","The input contains a string that lives at least as long as …","The input contains a byte array and ownership of the byte …","The input contains a byte array. The lifetime of the byte …","","The input contains a <code>char</code>.","The input contains an enum.","","The input contains an <code>f32</code>.","The input contains an <code>f64</code>.","","The input contains a <code>i128</code>.","","The input contains an <code>i16</code>.","The input contains an <code>i32</code>.","The input contains an <code>i64</code>.","","The input contains an <code>i8</code>.","The input contains a key-value map.","","The input contains a newtype struct.","","The input contains an optional that is absent.","","The input contains a sequence of elements.","","The input contains an optional that is present.","","The input contains a string. The lifetime of the string is …","","The input contains a string and ownership of the string is …","The input contains a <code>u128</code>.","","The input contains a <code>u16</code>.","The input contains a <code>u32</code>.","The input contains a <code>u64</code>.","","The input contains a <code>u8</code>.","The input contains a unit <code>()</code>.","","A deserializer holding a <code>bool</code>.","A deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to …","A deserializer holding a <code>&amp;str</code> with a lifetime tied to …","A deserializer holding a <code>&amp;[u8]</code>. Always calls …","A deserializer holding a <code>char</code>.","A deserializer holding a <code>Cow&lt;str&gt;</code>.","A deserializer holding an <code>EnumAccess</code>.","A minimal representation of all possible errors that can …","A deserializer holding an <code>f32</code>.","A deserializer holding an <code>f64</code>.","A deserializer holding an <code>i128</code>.","A deserializer holding an <code>i16</code>.","A deserializer holding an <code>i32</code>.","A deserializer holding an <code>i64</code>.","A deserializer holding an <code>i8</code>.","A deserializer holding an <code>isize</code>.","A deserializer holding a <code>MapAccess</code>.","A deserializer that iterates over a map.","A deserializer holding a <code>SeqAccess</code>.","A deserializer that iterates over a sequence.","A deserializer holding a <code>&amp;str</code>.","A deserializer holding a <code>String</code>.","A deserializer holding a <code>u128</code>.","A deserializer holding a <code>u16</code>.","A deserializer holding a <code>u32</code>.","A deserializer holding a <code>u64</code>.","A deserializer holding a <code>u8</code>.","A deserializer holding a <code>()</code>.","A deserializer holding a <code>usize</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check for remaining elements after passing a …","Check for remaining elements after passing a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new borrowed deserializer from the given string.","","","Create a new deserializer from the given bytes.","Create a new borrowed deserializer from the given borrowed …","Construct a new <code>MapDeserializer&lt;I, E&gt;</code>.","","","","","","","","","","","","","","","","Construct a new <code>SeqDeserializer&lt;I, E&gt;</code>.","Construct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>MapAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait used by <code>Serialize</code> implementations to generically …","The error type when some error occurs during serialization.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Helper type for implementing a <code>Serializer</code> that does not …","The output type produced by this <code>Serializer</code> during …","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","A <strong>data structure</strong> that can be serialized into any data …","Returned from <code>Serializer::serialize_map</code>.","Type returned from <code>serialize_map</code> for serializing the …","Returned from <code>Serializer::serialize_seq</code>.","Type returned from <code>serialize_seq</code> for serializing the …","Returned from <code>Serializer::serialize_struct</code>.","Type returned from <code>serialize_struct</code> for serializing the …","Returned from <code>Serializer::serialize_struct_variant</code>.","Type returned from <code>serialize_struct_variant</code> for …","Returned from <code>Serializer::serialize_tuple</code>.","Type returned from <code>serialize_tuple</code> for serializing the …","Returned from <code>Serializer::serialize_tuple_struct</code>.","Type returned from <code>serialize_tuple_struct</code> for serializing …","Returned from <code>Serializer::serialize_tuple_variant</code>.","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","","","","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Used when a <code>Serialize</code> implementation encounters any error …","Finish serializing a sequence.","Finish serializing a tuple.","Finish serializing a tuple struct.","Finish serializing a tuple variant.","Finish serializing a map.","Finish serializing a struct.","Finish serializing a struct variant.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Determine whether <code>Serialize</code> implementations should …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize a sequence element.","Serialize a tuple element.","","","Serialize a map entry consisting of a key and a value.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize a tuple struct field.","Serialize a tuple variant field.","Serialize a struct field.","Serialize a struct variant field.","","","","","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Serialize a map key.","","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","Serialize a map value.","","Indicate that a struct field has been skipped.","Indicate that a struct variant field has been skipped.","","",""],"i":[0,0,5,11,11,0,11,11,11,11,11,11,11,0,11,11,11,0,33,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,11,0,22,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,28,28,28,0,0,0,0,78,28,0,0,5,41,40,39,79,0,28,0,0,28,0,28,28,28,28,28,0,28,0,28,28,28,0,28,28,28,34,6,39,0,0,27,28,27,28,27,28,27,28,37,27,33,34,27,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,37,27,28,6,27,31,31,27,27,28,28,27,28,27,28,78,37,37,37,5,37,79,79,41,41,40,40,40,40,40,40,41,40,79,27,28,28,27,28,27,28,79,27,28,79,37,37,0,39,39,6,27,6,6,6,6,27,6,6,27,6,6,27,6,27,6,6,6,27,6,6,27,6,27,6,27,6,27,6,27,6,27,6,6,27,6,6,6,27,6,6,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,53,53,53,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,52,69,53,42,43,44,45,46,47,48,49,52,53,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,52,69,52,52,52,52,52,69,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,53,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,43,44,45,46,47,71,0,11,80,81,82,83,84,85,86,0,11,80,81,82,83,84,85,86,0,0,11,0,11,0,11,0,11,0,11,0,11,0,11,0,0,77,77,11,11,11,76,80,81,82,83,84,85,86,77,77,77,77,77,77,77,77,77,11,22,11,11,11,80,81,77,77,84,11,11,82,83,85,86,77,77,77,77,11,11,11,11,11,84,77,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,84,77,85,86,77,77,77],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[[[0,[3,4]]],2],0,[5,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[[9,6],2],[[7,9,6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],0,[[],10],[[],10],0,[11,2],[10,2],[[[8,[12]]],2],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[[[21,[9]]],2],[[7,[0,[22,4]]],2],[[7,23,7,[0,[22,4]]],2],[[],2],[[[21,[9]]],2],[[[0,[22,4]]],2],[7,2],[[7,9],2],[[7,23,7,9],2],[9,2],[[7,9],2],[[7,23,7,9],2],[24,2],[25,2],[23,2],[26,2],[12,2],[[],2],[7,2],[[7,23,7],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[27,27],[28,28],[[]],[[]],[3],[[],27],[5,2],[5,2],[5,[[2,[27]]]],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[[9,6],2],[[7,9,6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[7],[[27,27],10],[[28,28],10],[29,30],[[27,29],30],[29,30],[[31,29],30],[29,[[2,[32]]]],[[27,29],30],[[28,29],30],[[28,29],30],[[]],[[]],[[]],[[]],[[]],[[9,31]],[[28,31]],[[28,31]],[[],10],[7],[[],[[2,[33]]]],[34,2],[[],[[2,[[21,[33]]]]]],[34,[[2,[21]]]],[[],[[2,[21]]]],[[34,34],[[2,[21]]]],[[],[[2,[[21,[33]]]]]],[34,[[2,[21]]]],[[],[[2,[33]]]],[34,2],[[],[[21,[9]]]],[[],[[21,[9]]]],[[[8,[7]],6],2],[[]],[[]],[[],35],[[],2],[[],2],[[],2],[[],2],[[9,6],2],[[],36],[[],36],[[],2],[[7,[8,[7]]]],[[7,[8,[7]]]],0,[[],2],[34,2],[10,[[2,[37]]]],[[27,10],2],[[[8,[12]]],[[2,[37]]]],[7,[[2,[37]]]],[[[38,[12]]],[[2,[37]]]],[[[8,[12]]],[[2,[37]]]],[[27,[8,[12]]],[[2,[37]]]],[13,[[2,[37]]]],[39,2],[[27,39],2],[14,[[2,[37]]]],[15,[[2,[37]]]],[[27,15],2],[16,[[2,[37]]]],[[27,16],2],[17,[[2,[37]]]],[18,[[2,[37]]]],[19,[[2,[37]]]],[[27,19],2],[20,[[2,[37]]]],[40,2],[[27,40],2],[5,2],[[27,5],2],[[],[[2,[37]]]],[27,2],[41,2],[[27,41],2],[5,2],[[27,5],2],[7,[[2,[37]]]],[[27,7],[[2,[37]]]],[35,[[2,[37]]]],[24,[[2,[37]]]],[[27,24],2],[25,[[2,[37]]]],[23,[[2,[37]]]],[26,[[2,[37]]]],[[27,26],2],[12,[[2,[37]]]],[[],[[2,[37]]]],[27,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[[[52,[[0,[50,51]]]]],[[52,[[0,[50,51]]]]]],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[[[69,[51,51]]],[[69,[51,51]]]],[[[70,[51]]],[[70,[51]]]],[[[71,[51]]],[[71,[51]]]],[[[72,[51]]],[[72,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,53],[3,53],[53,7],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,[8,[7]],6],2],[[[43,[37]],7,[8,[7]],6],2],[[[44,[37]],7,[8,[7]],6],2],[[[45,[37]],7,[8,[7]],6],2],[[[46,[37]],7,[8,[7]],6],2],[[[47,[37]],7,[8,[7]],6],2],[[[48,[37]],7,[8,[7]],6],2],[[[49,[37]],7,[8,[7]],6],2],[[[52,[50,37]],7,[8,[7]],6],2],[[[54,[37]],7,[8,[7]],6],2],[[[55,[37]],7,[8,[7]],6],2],[[[56,[37]],7,[8,[7]],6],2],[[[57,[37]],7,[8,[7]],6],2],[[[58,[37]],7,[8,[7]],6],2],[[[59,[37]],7,[8,[7]],6],2],[[[60,[37]],7,[8,[7]],6],2],[[[61,[37]],7,[8,[7]],6],2],[[[62,[37]],7,[8,[7]],6],2],[[[63,[37]],7,[8,[7]],6],2],[[[64,[37]],7,[8,[7]],6],2],[[[65,[37]],7,[8,[7]],6],2],[[[66,[37]],7,[8,[7]],6],2],[[[67,[37]],7,[8,[7]],6],2],[[[68,[37]],7,[8,[7]],6],2],[[[69,[50,37]],7,[8,[7]],6],2],[[[70,[41]],7,[8,[7]],6],2],[[[71,[40]],7,[8,[7]],6],2],[[[72,[39]],7,[8,[7]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,6],2],[[[43,[37]],7,6],2],[[[44,[37]],7,6],2],[[[45,[37]],7,6],2],[[[46,[37]],7,6],2],[[[47,[37]],7,6],2],[[[48,[37]],7,6],2],[[[49,[37]],7,6],2],[[[52,[50,37]],7,6],2],[[[54,[37]],7,6],2],[[[55,[37]],7,6],2],[[[56,[37]],7,6],2],[[[57,[37]],7,6],2],[[[58,[37]],7,6],2],[[[59,[37]],7,6],2],[[[60,[37]],7,6],2],[[[61,[37]],7,6],2],[[[62,[37]],7,6],2],[[[63,[37]],7,6],2],[[[64,[37]],7,6],2],[[[65,[37]],7,6],2],[[[66,[37]],7,6],2],[[[67,[37]],7,6],2],[[[68,[37]],7,6],2],[[[69,[50,37]],7,6],2],[[[70,[41]],7,6],2],[[[71,[40]],7,6],2],[[[72,[39]],7,6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,[8,[7]],6],2],[[[43,[37]],7,[8,[7]],6],2],[[[44,[37]],7,[8,[7]],6],2],[[[45,[37]],7,[8,[7]],6],2],[[[46,[37]],7,[8,[7]],6],2],[[[47,[37]],7,[8,[7]],6],2],[[[48,[37]],7,[8,[7]],6],2],[[[49,[37]],7,[8,[7]],6],2],[[[52,[50,37]],7,[8,[7]],6],2],[[[54,[37]],7,[8,[7]],6],2],[[[55,[37]],7,[8,[7]],6],2],[[[56,[37]],7,[8,[7]],6],2],[[[57,[37]],7,[8,[7]],6],2],[[[58,[37]],7,[8,[7]],6],2],[[[59,[37]],7,[8,[7]],6],2],[[[60,[37]],7,[8,[7]],6],2],[[[61,[37]],7,[8,[7]],6],2],[[[62,[37]],7,[8,[7]],6],2],[[[63,[37]],7,[8,[7]],6],2],[[[64,[37]],7,[8,[7]],6],2],[[[65,[37]],7,[8,[7]],6],2],[[[66,[37]],7,[8,[7]],6],2],[[[67,[37]],7,[8,[7]],6],2],[[[68,[37]],7,[8,[7]],6],2],[[[69,[50,37]],7,[8,[7]],6],2],[[[70,[41]],7,[8,[7]],6],2],[[[71,[40]],7,[8,[7]],6],2],[[[72,[39]],7,[8,[7]],6],2],[[[42,[37]],9,6],2],[[[43,[37]],9,6],2],[[[44,[37]],9,6],2],[[[45,[37]],9,6],2],[[[46,[37]],9,6],2],[[[47,[37]],9,6],2],[[[48,[37]],9,6],2],[[[49,[37]],9,6],2],[[[52,[50,37]],9,6],2],[[[54,[37]],9,6],2],[[[55,[37]],9,6],2],[[[56,[37]],9,6],2],[[[57,[37]],9,6],2],[[[58,[37]],9,6],2],[[[59,[37]],9,6],2],[[[60,[37]],9,6],2],[[[61,[37]],9,6],2],[[[62,[37]],9,6],2],[[[63,[37]],9,6],2],[[[64,[37]],9,6],2],[[[65,[37]],9,6],2],[[[66,[37]],9,6],2],[[[67,[37]],9,6],2],[[[68,[37]],9,6],2],[[[69,[50,37]],9,6],2],[[[70,[41]],9,6],2],[[[71,[40]],9,6],2],[[[72,[39]],9,6],2],[[[42,[37]],7,9,6],2],[[[43,[37]],7,9,6],2],[[[44,[37]],7,9,6],2],[[[45,[37]],7,9,6],2],[[[46,[37]],7,9,6],2],[[[47,[37]],7,9,6],2],[[[48,[37]],7,9,6],2],[[[49,[37]],7,9,6],2],[[[52,[50,37]],7,9,6],2],[[[54,[37]],7,9,6],2],[[[55,[37]],7,9,6],2],[[[56,[37]],7,9,6],2],[[[57,[37]],7,9,6],2],[[[58,[37]],7,9,6],2],[[[59,[37]],7,9,6],2],[[[60,[37]],7,9,6],2],[[[61,[37]],7,9,6],2],[[[62,[37]],7,9,6],2],[[[63,[37]],7,9,6],2],[[[64,[37]],7,9,6],2],[[[65,[37]],7,9,6],2],[[[66,[37]],7,9,6],2],[[[67,[37]],7,9,6],2],[[[68,[37]],7,9,6],2],[[[69,[50,37]],7,9,6],2],[[[70,[41]],7,9,6],2],[[[71,[40]],7,9,6],2],[[[72,[39]],7,9,6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,6],2],[[[43,[37]],7,6],2],[[[44,[37]],7,6],2],[[[45,[37]],7,6],2],[[[46,[37]],7,6],2],[[[47,[37]],7,6],2],[[[48,[37]],7,6],2],[[[49,[37]],7,6],2],[[[52,[50,37]],7,6],2],[[[54,[37]],7,6],2],[[[55,[37]],7,6],2],[[[56,[37]],7,6],2],[[[57,[37]],7,6],2],[[[58,[37]],7,6],2],[[[59,[37]],7,6],2],[[[60,[37]],7,6],2],[[[61,[37]],7,6],2],[[[62,[37]],7,6],2],[[[63,[37]],7,6],2],[[[64,[37]],7,6],2],[[[65,[37]],7,6],2],[[[66,[37]],7,6],2],[[[67,[37]],7,6],2],[[[68,[37]],7,6],2],[[[69,[50,37]],7,6],2],[[[70,[41]],7,6],2],[[[71,[40]],7,6],2],[[[72,[39]],7,6],2],[[[52,[50,37]]],[[2,[37]]]],[[[69,[50,37]]],[[2,[37]]]],[[53,53],10],[[42,29],30],[[43,29],30],[[44,29],30],[[45,29],30],[[46,29],30],[[47,29],30],[[48,29],30],[[49,29],30],[[[52,[[0,[50,73]]]],29],30],[[53,29],30],[[53,29],30],[[54,29],30],[[55,29],30],[[56,29],30],[[57,29],30],[[58,29],30],[[59,29],30],[[60,29],30],[[61,29],30],[[62,29],30],[[63,29],30],[[64,29],30],[[65,29],30],[[66,29],30],[[67,29],30],[[68,29],30],[[[69,[73]],29],30],[[[70,[73]],29],30],[[[71,[73]],29],30],[[[72,[73]],29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],42],[23,43],[7,44],[7,45],[35,46],[[[74,[7]]],47],[[[8,[12]]],48],[[[8,[12]]],49],[50,[[52,[50]]]],[10,54],[20,55],[17,56],[18,57],[19,58],[16,59],[75,60],[12,61],[25,62],[26,63],[24,64],[9,65],[14,66],[15,67],[13,68],[50,[[69,[50]]]],[[],70],[[],71],[[],72],[[[52,[50,37]],34],[[2,[21]]]],[[[69,[50,37]],34],[[2,[21]]]],[[[52,[50,37]],34,34],[[2,[21]]]],[[[52,[50,37]],34],[[2,[21]]]],[[[52,[50,37]],34],2],[[[52,[50,37]]],[[21,[9]]]],[[[52,[50,37]]],[[21,[9]]]],[[[69,[50,37]]],[[21,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[43,[37]],34],2],[[[44,[37]],34],2],[[[45,[37]],34],2],[[[46,[37]],34],2],[[[47,[37]],34],2],[[[71,[40]],34],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,2],[1,2],[[[0,[3,4]]],2],[3],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[]],[[]],[[],10],[11,2],[10,2],[[[8,[12]]],2],[13,2],[[[0,[22,4]]],2],[[[0,[22,4]]],2],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[[[0,[22,4]],[0,[22,4]]],2],[14,2],[15,2],[[[0,[22,4]]],2],[[[0,[22,4]]],2],[[7,[0,[22,4]]],2],[[7,[0,[22,4]]],2],[[[77,[76]],7,[0,[22,4]]],[[2,[76]]]],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[[[77,[76]],7,[0,[22,4]]],[[2,[76]]]],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[16,2],[17,2],[18,2],[19,2],[20,2],[[[0,[22,4]]],2],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[[[21,[9]]],2],[[7,[0,[22,4]]],2],[[7,23,7,[0,[22,4]]],2],[[],2],[[[21,[9]]],2],[[[0,[22,4]]],2],[7,2],[[7,9],2],[[7,23,7,9],2],[9,2],[[7,9],2],[[7,23,7,9],2],[24,2],[25,2],[23,2],[26,2],[12,2],[[],2],[7,2],[[7,23,7],2],[[[0,[22,4]]],2],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[7,2],[7,2],[[],2],[[],2],[[],36]],"c":[],"p":[[8,"IntoIterator"],[4,"Result"],[8,"Display"],[8,"Sized"],[8,"Deserializer"],[8,"Visitor"],[15,"str"],[15,"slice"],[15,"usize"],[15,"bool"],[8,"Serializer"],[15,"u8"],[15,"char"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[4,"Option"],[8,"Serialize"],[15,"u32"],[15,"u128"],[15,"u16"],[15,"u64"],[3,"IgnoredAny"],[4,"Unexpected"],[3,"Formatter"],[6,"Result"],[8,"Expected"],[3,"Error"],[8,"Deserialize"],[8,"DeserializeSeed"],[3,"String"],[3,"TypeId"],[8,"Error"],[3,"Vec"],[8,"EnumAccess"],[8,"MapAccess"],[8,"SeqAccess"],[3,"UnitDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[8,"Iterator"],[8,"Clone"],[3,"MapDeserializer"],[3,"Error"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"I128Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"U128Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapAccessDeserializer"],[3,"EnumAccessDeserializer"],[8,"Debug"],[4,"Cow"],[15,"isize"],[8,"Error"],[3,"Impossible"],[8,"IntoDeserializer"],[8,"VariantAccess"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"]]},\
"serde_derive":{"doc":"This crate provides Serde’s two derive macros.","t":"YY","n":["Deserialize","Serialize"],"q":[[0,"serde_derive"]],"d":["",""],"i":[0,0],"f":[0,0],"c":[],"p":[]},\
"shader_version":{"doc":"A helper library for detecting and picking compatible …","t":"CCIDLLLLALLAKLLLLEDNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["OpenGL","ParseOpenGLError","PickShader","Shaders","borrow","borrow_mut","from","get","glsl","into","new","opengl","pick_shader","set","try_from","try_into","type_id","GLSL","ParseGLSLError","V1_10","V1_20","V1_30","V1_40","V1_50","V3_30","V4_00","V4_10","V4_20","V4_30","V4_40","V4_50","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","description","eq","equivalent","fmt","fmt","fmt","from","from","from_str","into","into","partial_cmp","pick_shader","to_opengl","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","OpenGL","ParseOpenGLError","V2_0","V2_1","V3_0","V3_1","V3_2","V3_3","V4_0","V4_1","V4_2","V4_3","V4_4","V4_5","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","description","eq","equivalent","fmt","fmt","fmt","from","from","from_api","from_str","get_major_minor","into","into","into","partial_cmp","to_glsl","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"shader_version"],[17,"shader_version::glsl"],[60,"shader_version::opengl"]],"d":["","","Implemented by shader version enums.","Shader picker.","","","Returns the argument unchanged.","Get the closest shader to a shader version.","Models versions of OpenGL Shader Language (GLSL)","Calls <code>U::from(self)</code>.","Creates a new shader picker.","Models versions of OpenGL","Pick shader.","Sets source for a shader version.","","","","For OpenGL version 3.3 and above, the GLSL version is the …","Represents an error while trying to get <code>GLSL</code> from <code>&amp;str</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Gets OpenGL version associated with GLSL.","","","","","","","","","","Represents an error while trying to get <code>OpenGL</code> from <code>&amp;str</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>OpenGL</code> version from graphics API version.","","Gets the minor version of OpenGL.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Gets GLSL version associated with OpenGL.","","","","","","","",""],"i":[0,0,0,0,3,3,3,3,0,3,3,0,1,3,3,3,3,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,9,7,7,7,9,7,7,7,9,9,7,9,7,7,9,7,7,7,7,9,7,9,7,9,7,9,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,16,14,16,14,14,14,16,14,14,14,16,16,14,16,14,14,14,14,14,16,14,14,14,16,14,16,14,16,14,16],"f":[0,0,0,0,[[]],[[]],[[]],[[[3,[1,2]],1],[[4,[2]]]],0,[[]],[[],[[3,[1,2]]]],0,[[[3,[2]]],[[4,[2]]]],[[[3,[1,2]],1,2],[[3,[1,2]]]],[[],5],[[],5],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[7,7],[[]],[[7,7],8],[9,10],[[7,7],11],[[],11],[[7,12],13],[[9,12],13],[[9,12],13],[[]],[[]],[10,[[5,[7]]]],[[]],[[]],[[7,7],[[4,[8]]]],[[7,[3,[7,2]]],[[4,[2]]]],[7,14],[[]],[[],15],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[14,14],[[]],[[14,14],8],[16,10],[[14,14],11],[[],11],[[14,12],13],[[16,12],13],[[16,12],13],[[]],[[]],[17,[[4,[14]]]],[10,[[5,[14]]]],[14],[[]],[14,17],[[]],[[14,14],[[4,[8]]]],[14,7],[[]],[[],15],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6]],"c":[],"p":[[8,"PickShader"],[8,"Sized"],[3,"Shaders"],[4,"Option"],[4,"Result"],[3,"TypeId"],[4,"GLSL"],[4,"Ordering"],[3,"ParseGLSLError"],[15,"str"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"OpenGL"],[3,"String"],[3,"ParseOpenGLError"],[3,"Version"]]},\
"shaders_graphics2d":{"doc":"Shaders for 2D graphics backends.","t":"AAARRRRRRRRRRRRRRRRRRRRRRRR","n":["colored","textured","textured_color","FRAGMENT_GLSL_120","FRAGMENT_GLSL_120_WEBGL","FRAGMENT_GLSL_150_CORE","FRAGMENT_GLSL_150_CORE_WEBGL","VERTEX_GLSL_120","VERTEX_GLSL_120_WEBGL","VERTEX_GLSL_150_CORE","VERTEX_GLSL_150_CORE_WEBGL","FRAGMENT_GLSL_120","FRAGMENT_GLSL_120_WEBGL","FRAGMENT_GLSL_150_CORE","FRAGMENT_GLSL_150_CORE_WEBGL","VERTEX_GLSL_120","VERTEX_GLSL_120_WEBGL","VERTEX_GLSL_150_CORE","VERTEX_GLSL_150_CORE_WEBGL","FRAGMENT_GLSL_120","FRAGMENT_GLSL_120_WEBGL","FRAGMENT_GLSL_150_CORE","FRAGMENT_GLSL_150_CORE_WEBGL","VERTEX_GLSL_120","VERTEX_GLSL_120_WEBGL","VERTEX_GLSL_150_CORE","VERTEX_GLSL_150_CORE_WEBGL"],"q":[[0,"shaders_graphics2d"],[3,"shaders_graphics2d::colored"],[11,"shaders_graphics2d::textured"],[19,"shaders_graphics2d::textured_color"]],"d":["Shaders for colored rendering.","Shaders for textured rendering.","Shaders for textured rendering with individual vertex …","Fragment shader for GLSL 1.20","Fragment shader for GLSL 1.20 WebGL","Fragmentshader for GLSL 1.50","Fragmentshader for GLSL 1.50 WebGL","Vertex shader for GLSL 1.20","Vertex shader for GLSL 1.20 WebGL","Vertex shader for GLSL 1.50","Vertex shader for GLSL 1.50 WebGL","Fragment shader for GLSL 1.20","Fragment shader for GLSL 1.20","Fragment shader for GLSL 1.50","Fragment shader for GLSL 1.50","Vertex shader for GLSL 1.20","Vertex shader for GLSL 1.20","Vertex shader for GLSL 1.50","Vertex shader for GLSL 1.50","Fragment shader for GLSL 1.20","Fragment shader for GLSL 1.20","Fragment shader for GLSL 1.50","Fragment shader for GLSL 1.50","Vertex shader for GLSL 1.20","Vertex shader for GLSL 1.20","Vertex shader for GLSL 1.50","Vertex shader for GLSL 1.50"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[]},\
"shared_library":{"doc":"","t":"NENLLLLALLLOLLLLMMDLLLLLLLLLLLLLL","n":["LibraryNotFound","LoadingError","SymbolNotFound","borrow","borrow_mut","clone","clone_into","dynamic_library","fmt","from","into","shared_library","to_owned","try_from","try_into","type_id","descr","symbol","DynamicLibrary","borrow","borrow_mut","create_path","drop","envvar","from","into","open","prepend_search_path","search_path","symbol","try_from","try_into","type_id"],"q":[[0,"shared_library"],[16,"shared_library::LoadingError"],[18,"shared_library::dynamic_library"]],"d":["","Error that can happen while loading the shared library.","One of the symbols could not be found in the library.","","","","","Dynamic library facilities.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","The symbol.","","","","From a slice of paths, create a new vector which is …","","Returns the environment variable for this process’s …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Lazily loads the dynamic library named <code>filename</code> into …","Prepends a path to this process’s search path for …","Returns the current search path for dynamic libraries …","Returns the address of where symbol <code>symbol</code> was loaded into …","","",""],"i":[1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,15,16,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9],"f":[0,0,0,[[]],[[]],[1,1],[[]],0,[[1,2],3],[[]],[[]],0,[[]],[[],4],[[],4],[[],5],0,0,0,[[]],[[]],[[[7,[6]]],8],[9],[[],10],[[]],[[]],[[[12,[11]]],[[4,[9,13]]]],[11],[[],[[14,[6]]]],[[9,10],[[4,[13]]]],[[],4],[[],4],[[],5]],"c":[],"p":[[4,"LoadingError"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"PathBuf"],[15,"slice"],[3,"OsString"],[3,"DynamicLibrary"],[15,"str"],[3,"Path"],[4,"Option"],[3,"String"],[3,"Vec"],[13,"LibraryNotFound"],[13,"SymbolNotFound"]]},\
"simd_adler32":{"doc":"simd-adler32","t":"DIFLLALLLLLLKLLALLLLLLFF","n":["Adler32","Adler32Hash","adler32","borrow","borrow_mut","bufread","clone","clone_into","default","finish","from","from_checksum","hash","into","new","read","reset","to_owned","try_from","try_into","type_id","write","adler32","adler32"],"q":[[0,"simd_adler32"],[22,"simd_adler32::bufread"],[23,"simd_adler32::read"]],"d":["An adler32 hash generator type.","A Adler-32 hash-able type.","Compute Adler-32 hash on <code>Adler32Hash</code> type.","","","BufRead-based hashing.","","","","Returns the hash value for the values written so far.","Returns the argument unchanged.","Constructs a new <code>Adler32</code> using existing checksum.","Feeds this value into <code>Adler32</code>.","Calls <code>U::from(self)</code>.","Constructs a new <code>Adler32</code>.","Reader-based hashing.","Resets the internal state.","","","","","Computes hash for supplied data and stores results in …","Compute Adler-32 hash on buf reader until EOF.","Compute Adler-32 hash on reader until EOF."],"i":[0,0,0,3,3,0,3,3,3,3,3,3,1,3,3,0,3,3,3,3,3,3,0,0],"f":[0,0,[1,2],[[]],[[]],0,[3,3],[[]],[[],3],[3,2],[[]],[2,3],[[],2],[[]],[[],3],0,[3],[[]],[[],4],[[],4],[[],5],[[3,[7,[6]]]],[8,[[9,[2]]]],[10,[[9,[2]]]]],"c":[],"p":[[8,"Adler32Hash"],[15,"u32"],[3,"Adler32"],[4,"Result"],[3,"TypeId"],[15,"u8"],[15,"slice"],[8,"BufRead"],[6,"Result"],[8,"Read"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","t":"NINEDDQDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLOLLLLKLLLLLLLLLLLLLLLLLLM","n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":[[0,"smallvec"],[138,"smallvec::CollectionAllocErr"]],"d":["The allocator return an error","Types that can be used as the backing store for a <code>SmallVec</code>.","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the <code>SmallVec</code> into an <code>A</code> if possible. Otherwise …","","","","","","Convert a <code>SmallVec</code> to a <code>Vec</code>, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[15,0,15,0,0,0,1,0,0,2,2,2,2,4,2,2,2,4,10,2,2,4,15,10,2,2,4,15,2,2,2,4,2,2,4,2,2,2,2,2,2,2,2,10,2,4,2,2,2,10,2,4,15,15,10,2,2,2,2,2,4,15,15,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,2,4,15,2,2,10,2,2,2,4,2,2,10,2,2,10,4,10,4,2,2,2,2,2,2,2,2,2,2,2,2,1,10,4,0,2,2,2,4,27,15,2,10,2,4,15,2,10,2,4,15,2,2,10,2,4,15,2,28],"f":[0,0,0,0,0,0,0,0,0,[[[2,[1]],[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]]],[[[2,[1]]],3],[[[4,[1]]],3],[[[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]],3],[[[4,[1]]],3],[[]],[[]],[[[2,[1]]],3],[[]],[[]],[[]],[[[2,[1]]],3],[[]],[[]],[[]],[[[2,[1]]],5],[[[2,[1]]]],[[[2,[1]]],[[2,[1]]]],[[[4,[[0,[1,6]]]]],[[4,[[0,[1,6]]]]]],[[[2,[1]],[2,[1]]]],[[]],[[]],[[[2,[1]],[2,[1]]],7],[[[2,[1]]]],[[[2,[1]],8]],[[[2,[1]],8]],[[],[[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]],3],[[[2,[1]],[9,[5]]],[[10,[1]]]],[[[10,[1]]]],[[[2,[1]]]],[[[4,[1]]]],[[[2,[1]],[2,[1]]],11],[[[2,[1]],12]],[[[2,[1]],3]],[[[10,[1]],13],14],[[[2,[1]],13],14],[[[4,[1]],13],14],[[15,13],14],[[15,13],14],[[]],[16,[[2,[1]]]],[[]],[1,[[2,[1]]]],[3,[[2,[1]]]],[17],[[]],[18,15],[[]],[1,[[2,[1]]]],[[1,5],[[2,[1]]]],[[[19,[1]],5],[[2,[1]]]],[5,[[2,[1]]]],[12,[[2,[1]]]],[[5,5],[[2,[1]]]],[3,[[2,[1]]]],[16,[[2,[1]]]],[[[2,[1]],5]],[[[2,[1]],20]],[[[2,[1]],[21,[3]]]],[[[2,[1]],[21,[3]]]],[[[2,[1]]],5],[[[2,[1]],5]],[[[2,[1]],5,3]],[[[2,[1]],5,12]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[22,[3]]]],[[[2,[1]]],[[23,[1,[2,[1]]]]]],[[]],[[[2,[1]]]],[[[2,[1]]]],[[[2,[1]]]],[[]],[[[2,[1]]],16],[[[2,[1]]],11],[[[10,[1]]],5],[[[2,[1]]],5],[[],[[2,[1]]]],[[[10,[1]]],24],[[[4,[1]]],24],[[[10,[1]]],24],[[[4,[1]]],24],[[[2,[1]],[2,[1]]],[[24,[7]]]],[[[2,[1]]],24],[[[2,[1]]]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5,8]],[[[2,[1]],8]],[[[2,[1]],8]],[[[2,[1]],5]],[[[2,[1]]]],[[],5],[[[10,[1]]]],[[[4,[1]]]],0,[[[2,[1]]],11],[[[2,[1]],5]],[[]],[[]],[[],2],[[],25],[[[2,[1]],5]],[[],23],[[],23],[[],23],[[],23],[[[2,[1]],5],[[23,[15]]]],[[],23],[[],23],[[],23],[[],23],[[[2,[1]],5],[[23,[15]]]],[[[2,[1]],5],[[23,[15]]]],[[],26],[[],26],[[],26],[[],26],[5,[[2,[1]]]],0],"c":[],"p":[[8,"Array"],[3,"SmallVec"],[15,"slice"],[3,"IntoIter"],[15,"usize"],[8,"Clone"],[4,"Ordering"],[8,"FnMut"],[8,"RangeBounds"],[3,"Drain"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[4,"CollectionAllocErr"],[3,"Vec"],[15,"never"],[6,"LayoutErr"],[19,"MaybeUninit"],[8,"Hasher"],[8,"SliceIndex"],[3,"Box"],[4,"Result"],[4,"Option"],[3,"String"],[3,"TypeId"],[8,"ToSmallVec"],[13,"AllocErr"]]},\
"snake_game":{"doc":"","t":"ENDNNDNLLLLLLLLLLLLMLLLLLLMLLLLLLFMMLLMLLLLLLLLLLL","n":["Direction","Down","Game","Left","Right","Snake","Up","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","dir","drop","drop","drop","from","from","from","gl","init","init","init","into","into","into","main","pos_x","pos_y","render","render","snake","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","update"],"q":[[0,"snake_game"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,8,0,8,8,0,8,8,2,4,8,2,4,8,2,4,8,2,4,4,8,2,4,8,2,4,2,8,2,4,8,2,4,0,4,4,2,4,2,8,2,4,8,2,4,8,2,4,2,4],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1],[1],[1],[1],[1],[1],0,[1],[1],[1],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,0,[[2,3]],[[4,5,3]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[2],[4]],"c":[],"p":[[15,"usize"],[3,"Game"],[3,"RenderArgs"],[3,"Snake"],[3,"GlGraphics"],[4,"Result"],[3,"TypeId"],[4,"Direction"]]},\
"spin":{"doc":"This crate provides spin-based versions of the primitives …","t":"GGGCGCGCGGCAAAAAAADDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLGGGGGGDDCCLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDLLLLLLLLLLLLLLLLLLLLLLLLLLDIDLLLLLLLLKLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Barrier","Lazy","Mutex","MutexGuard","Once","RelaxStrategy","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","Spin","barrier","lazy","lock_api","mutex","once","relax","rwlock","Barrier","BarrierWaitResult","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_leader","new","try_from","try_from","try_into","try_into","type_id","type_id","wait","Lazy","as_mut_ptr","borrow","borrow_mut","default","deref","fmt","force","from","into","new","try_from","try_into","type_id","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","Mutex","MutexGuard","SpinMutex","SpinMutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","spin","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","SpinMutex","SpinMutexGuard","as_mut_ptr","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","INIT","Once","as_mut_ptr","borrow","borrow_mut","call_once","default","drop","fmt","from","from","from","get","get_mut","get_mut_unchecked","get_unchecked","initialized","into","into_inner_unchecked","is_completed","new","poll","try_call_once","try_from","try_into","try_into_inner","type_id","wait","Loop","RelaxStrategy","Spin","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","relax","relax","relax","try_from","try_from","try_into","try_into","type_id","type_id","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","as_mut_ptr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradeable","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_read_decrement","force_write_unlock","from","from","from","from","from","from","get_mut","into","into","into","into","into_inner","is_locked","leak","leak","leak","lock_exclusive","lock_shared","lock_upgradable","new","read","reader_count","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_lock_exclusive","try_lock_shared","try_lock_upgradable","try_read","try_upgrade","try_upgrade","try_upgradeable_read","try_write","type_id","type_id","type_id","type_id","unlock_exclusive","unlock_shared","unlock_upgradable","upgrade","upgrade","upgradeable_read","write","writer_count"],"q":[[0,"spin"],[18,"spin::barrier"],[37,"spin::lazy"],[51,"spin::lock_api"],[57,"spin::mutex"],[96,"spin::mutex::spin"],[134,"spin::once"],[162,"spin::relax"],[182,"spin::rwlock"]],"d":["A primitive that synchronizes the execution of multiple …","A value which is initialized on the first access. See …","A primitive that synchronizes the execution of multiple …","","A primitive that provides lazy one-time initialization. …","","A lock that provides data access to either one writer or …","","A guard that provides immutable data access but can be …","A guard that provides mutable data access. See …","","Synchronization primitive allowing multiple threads to …","Synchronization primitives for lazy evaluation.","Spin synchronisation primitives, but compatible with …","Locks that have the same behaviour as a mutex.","Synchronization primitives for one-time evaluation.","Strategies that determine the behaviour of locks when …","A lock that provides data access to either one writer or …","A primitive that synchronizes the execution of multiple …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this thread from <code>wait</code> is the “leader …","Creates a new barrier that can block a given number of …","","","","","","","Blocks the current thread until all threads have …","A value which is initialized on the first access.","Retrieves a mutable pointer to the inner data.","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new lazy value with the given initializing …","","","","A lock that provides mutually exclusive data access …","A guard that provides mutable data access (compatible with …","A lock that provides data access to either one writer or …","A guard that provides immutable data access (compatible …","A guard that provides immutable data access but can be …","A guard that provides mutable data access (compatible with …","A spin-based lock providing mutually exclusive access to …","A generic guard that will protect some data access and …","","","","","","","","","","","","","Force unlock this <code>Mutex</code>.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Mutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","Locks the <code>Mutex</code> and returns a guard that permits access to …","","Creates a new <code>Mutex</code> wrapping the supplied data.","A naïve spinning mutex.","","","","","","Try to lock this <code>Mutex</code>, returning a lock guard if …","","","","A spin lock providing mutually exclusive access to data.","A guard that provides mutable data access.","Returns a mutable pointer to the underlying data.","","","","","","","","The dropping of the MutexGuard will release the lock it …","","","","Force unlock this <code>SpinMutex</code>.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>SpinMutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","Locks the <code>SpinMutex</code> and returns a guard that permits …","","Creates a new <code>SpinMutex</code> wrapping the supplied data.","","","","","Try to lock this <code>SpinMutex</code>, returning a lock guard if …","","","","","Initialization constant of <code>Once</code>.","A primitive that provides lazy one-time initialization.","Retrieve a pointer to the inner data.","","","Performs an initialization routine once and only once. The …","","","","","","Returns the argument unchanged.","Returns a reference to the inner value if the <code>Once</code> has …","Returns a mutable reference to the inner value if the <code>Once</code> …","Returns a mutable reference to the inner value","Returns a reference to the inner value on the unchecked …","Creates a new initialized <code>Once</code>.","Calls <code>U::from(self)</code>.","Returns a the inner value if the <code>Once</code> has been initialized.","Checks whether the value has been initialized.","Creates a new <code>Once</code>.","Like <code>Once::get</code>, but will spin if the <code>Once</code> is in the …","This method is similar to <code>call_once</code>, but allows the given …","","","Returns a the inner value if the <code>Once</code> has been initialized.","","Spins until the <code>Once</code> contains a value.","A strategy that rapidly spins, without telling the CPU to …","A trait implemented by spinning relax strategies.","A strategy that rapidly spins while informing the CPU that …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform the relaxing operation during a period of …","","","","","","","","","A lock that provides data access to either one writer or …","A guard that provides immutable data access.","A guard that provides immutable data access but can be …","A guard that provides mutable data access.","Returns a mutable pointer to the underying data.","","","","","","","","","","","","","","","Downgrades the writable lock guard to a readable, shared …","Downgrades the upgradeable lock guard to a readable, …","Downgrades the writable lock guard to an upgradable, …","","","","","","","","","","","Force decrement the reader count.","Force unlock exclusive write access.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>RwLock</code>, returning the underlying data.","","Leak the lock guard, yielding a reference to the …","Leak the lock guard, yielding a mutable reference to the …","Leak the lock guard, yielding a reference to the …","","","","Creates a new spinlock wrapping the supplied data.","Locks this rwlock with shared read access, blocking the …","Return the number of readers that currently hold the lock …","","","","","","","","","","","","Attempt to acquire this lock with shared read access.","","Tries to upgrade an upgradeable lock guard to a writable …","Tries to obtain an upgradeable lock guard.","Attempt to lock this rwlock with exclusive write access.","","","","","","","","","Upgrades an upgradeable lock guard to a writable lock …","Obtain a readable lock guard that can later be upgraded to …","Lock this rwlock with exclusive write access, blocking the …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,1,4,1,4,1,1,4,4,1,4,1,4,1,4,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,15,16,15,16,15,16,16,15,16,16,15,15,15,15,16,15,15,16,15,15,15,16,15,15,15,0,15,16,15,16,15,15,15,16,15,0,0,20,20,21,20,21,20,21,21,21,20,21,21,20,20,20,20,21,20,20,21,20,20,20,21,20,20,20,20,21,20,21,20,20,20,21,20,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,27,28,27,28,27,28,27,28,7,27,28,27,28,27,28,27,28,0,0,0,0,23,23,24,25,26,23,24,25,26,23,24,25,26,25,23,25,26,25,24,25,26,23,24,24,25,25,26,26,23,23,23,23,23,24,25,26,23,23,24,25,26,23,23,24,25,26,23,23,23,23,23,23,23,24,25,26,23,24,25,26,23,23,23,23,23,26,23,23,23,24,25,26,23,23,23,23,26,23,23,23],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[3,4],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[[4,[7]]],1],0,[8],[[]],[[]],[[],[[8,[9]]]],[[[8,[10,7]]]],[[[8,[11]],12],13],[[[8,[10,7]]]],[[]],[[]],[[],8],[[],5],[[],5],[[],6],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[15,[[0,[14,9]]]]]],[[[16,[14]]],14],[[[16,[14]]],14],[[[15,[[0,[14,11]]]],12],13],[[[16,[[0,[14,11]]]],12],13],[[[16,[[0,[14,17]]]],12],13],[[[15,[14]]]],[18],[[]],[[],15],[[]],[[[15,[14]]],14],[[]],[[]],[15],[[[15,[7]]],2],[[[15,[14]]],2],[[[16,[14]]],14],[[[15,[14,7]]],[[16,[14]]]],[[[15,[7]]]],[[],15],0,[[],5],[[],5],[[],5],[[],5],[[[15,[7]]],2],[[[15,[14]]],[[19,[[16,[14]]]]]],[[],6],[[],6],[[[15,[7]]]],0,0,[20],[[]],[[]],[[]],[[]],[[],[[20,[[0,[14,9]]]]]],[[[21,[14]]],14],[[[21,[14]]],14],[[[21,[14]]]],[[[20,[[0,[14,11]]]],12],13],[[[21,[[0,[14,11]]]],12],13],[[[21,[[0,[14,17]]]],12],13],[[[20,[14]]]],[[]],[18],[[],20],[[]],[[[20,[14]]],14],[[]],[[]],[20],[[[20,[7]]],2],[[[20,[14]]],2],[[[21,[14]]],14],[[[20,[14,7]]],[[21,[14]]]],[[[20,[7]]]],[[],20],[[],5],[[],5],[[],5],[[],5],[[[20,[14]]],[[19,[[21,[14]]]]]],[[[20,[7]]],2],[[],6],[[],6],[[[20,[7]]]],0,0,[22],[[]],[[]],[[[22,[7]],10]],[[],22],[22],[[[22,[11]],12],13],[[],22],[18],[[]],[22,19],[22,19],[22],[22],[[],22],[[]],[22],[22,2],[[],22],[[[22,[7]]],19],[[[22,[7]],10],5],[[],5],[[],5],[22,19],[[],6],[[[22,[7]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],0,0,0,0,[23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[23,[[0,[14,9]]]]]],[[[24,[14]]],14],[[[25,[14]]],14],[[[26,[14]]],14],[[[25,[14]]],14],[[[23,[7]]]],[[[25,[14]]],[[24,[14]]]],[[[26,[14]]],[[24,[14]]]],[[[25,[14]]],[[26,[14]]]],[[[24,[14]]]],[[[25,[14]]]],[[[26,[14]]]],[[[23,[[0,[14,11]]]],12],13],[[[24,[[0,[14,11]]]],12],13],[[[24,[[0,[14,17]]]],12],13],[[[25,[[0,[14,17]]]],12],13],[[[25,[[0,[14,11]]]],12],13],[[[26,[[0,[14,17]]]],12],13],[[[26,[[0,[14,11]]]],12],13],[[[23,[14]]]],[[[23,[14]]]],[[],23],[[]],[18],[[]],[[]],[[]],[[[23,[14]]],14],[[]],[[]],[[]],[[]],[23],[[[23,[7]]],2],[[[24,[14]]],14],[[[25,[14]]],14],[[[26,[14]]],14],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[],23],[[[23,[14,7]]],[[24,[14]]]],[[[23,[14]]],3],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[23,[7]]],2],[[[23,[7]]],2],[[[23,[7]]],2],[[[23,[14]]],[[19,[[24,[14]]]]]],[[[23,[7]]],2],[[[26,[14]]],[[5,[[25,[14]],[26,[14]]]]]],[[[23,[14]]],[[19,[[26,[14]]]]]],[[[23,[14]]],[[19,[[25,[14]]]]]],[[],6],[[],6],[[],6],[[],6],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[[26,[14,7]]],[[25,[14,7]]]],[[[23,[14,7]]],[[26,[14,7]]]],[[[23,[14,7]]],[[25,[14,7]]]],[[[23,[14]]],3]],"c":[],"p":[[3,"BarrierWaitResult"],[15,"bool"],[15,"usize"],[3,"Barrier"],[4,"Result"],[3,"TypeId"],[8,"RelaxStrategy"],[3,"Lazy"],[8,"Default"],[8,"FnOnce"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Sized"],[3,"Mutex"],[3,"MutexGuard"],[8,"Display"],[15,"never"],[4,"Option"],[3,"SpinMutex"],[3,"SpinMutexGuard"],[3,"Once"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableGuard"],[3,"Spin"],[3,"Loop"]]},\
"spin_sleep":{"doc":"Accurate sleeping. Only use native sleep as far as it can …","t":"GGGNDEGNLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLL","n":["Nanoseconds","RatePerSecond","Seconds","SpinLoopHint","SpinSleeper","SpinStrategy","SubsecondNanoseconds","YieldThread","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","hash","into","into","native_accuracy_ns","native_sleep","new","sleep","sleep","sleep_ns","sleep_s","spin_strategy","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_spin_strategy"],"q":[[0,"spin_sleep"]],"d":["Marker alias to show the meaning of a <code>u64</code> in certain …","Marker alias to show the meaning of a <code>f64</code> in certain …","Marker alias to show the meaning of a <code>f64</code> in certain …","Call <code>std::hint::spin_loop</code> while spinning.","Accuracy container for spin sleeping. See crate docs.","What to do while spinning.","Marker alias to show the meaning of a <code>u32</code> in certain …","Call <code>std::thread::yield_now</code> while spinning.","","","","","","","","","Constructs new SpinSleeper with defaults suiting the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns configured native_accuracy_ns.","Asks the OS to put the current thread to sleep for at …","Constructs new SpinSleeper with the input native sleep …","Puts the current thread to sleep for the duration less the …","Puts the current thread to sleep for the duration less the …","Puts the current thread to sleep for the give …","Puts the current thread to sleep for the give …","Returns configured spin strategy.","","","","","","","","","Returns a spin sleeper with the given <code>SpinStrategy</code>."],"i":[0,0,0,2,0,0,0,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[],1],[[],2],[[1,1],3],[[2,2],3],[[],3],[[],3],[[1,4],5],[[2,4],5],[[]],[[]],[[1,6]],[[2,6]],[[]],[[]],[1,7],[8],[7,1],[8],[[1,8]],[[1,9]],[[1,10]],[1,2],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[1,2],1]],"c":[],"p":[[3,"SpinSleeper"],[4,"SpinStrategy"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[6,"SubsecondNanoseconds"],[3,"Duration"],[6,"Nanoseconds"],[6,"Seconds"],[4,"Result"],[3,"TypeId"]]},\
"syn":{"doc":"github crates-io docs-rs","t":"DNNNNDNNNDNDNNEDNNDDENNNNNNNNNDNNNNNNNNNNNNDDNNEDDDNNDNNNNDEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDNEDEDDNNNEEDNNNDNDNDNNNNNNNNDNNNNDNENDDDDDDDNNDNNENNEEDDNNNNNNNNNNNNNNNNNNNDDNNNEDDDNNDNNNNNNNGNENNNNNNNNNNONDENNNNNDENNNNDDDDDDDDDEDDDDDDDENNNNNNDNNNNDEDENNMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMOMMMMOALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLMMOOMLLLMMMMMMMMMMMMMMMMMMLLLLLMMMMMLLLLMMMMMMMAMMMMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMMMMMMLLLLMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMLMMMMLMMMMMMMLMMAMMMMMMMMMMMLLLLLLLLLLLLMMMMMMMMMMMMMMMOAFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLOLLLLLOOFLLLLLLMMMMMMMMMMMMAMMMMLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMALMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLLLLLMMMMMMMMMLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKSKDLLLLMLLFMLLLLDDDQIDGIIGDLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIKKNDDDDEDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDIDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Abi","Add","AddAssign","And","AngleBracketed","AngleBracketedGenericArguments","Array","Array","Assign","AssocConst","AssocConst","AssocType","AssocType","Async","AttrStyle","Attribute","Await","BareFn","BareFnArg","BareVariadic","BinOp","Binary","BitAnd","BitAndAssign","BitOr","BitOrAssign","BitXor","BitXorAssign","Block","Bool","BoundLifetimes","Brace","Bracket","Break","Byte","ByteStr","Call","Cast","Char","Closure","Const","Const","Const","ConstParam","Constraint","Constraint","Continue","Data","DataEnum","DataStruct","DataUnion","Default","Deref","DeriveInput","Div","DivAssign","Enum","Eq","Error","Expr","ExprArray","ExprAssign","ExprAsync","ExprAwait","ExprBinary","ExprBlock","ExprBreak","ExprCall","ExprCast","ExprClosure","ExprConst","ExprContinue","ExprField","ExprForLoop","ExprGroup","ExprIf","ExprIndex","ExprInfer","ExprLet","ExprLit","ExprLoop","ExprMacro","ExprMatch","ExprMethodCall","ExprParen","ExprPath","ExprRange","ExprReference","ExprRepeat","ExprReturn","ExprStruct","ExprTry","ExprTryBlock","ExprTuple","ExprUnary","ExprUnsafe","ExprWhile","ExprYield","Field","Field","FieldMutability","FieldValue","Fields","FieldsNamed","FieldsUnnamed","Float","ForLoop","Ge","GenericArgument","GenericParam","Generics","Group","Group","Gt","Ident","If","ImplGenerics","ImplTrait","Index","Index","Infer","Infer","Inherited","Inner","Int","Le","Let","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","LifetimeParam","List","Lit","Lit","LitBool","LitByte","LitByteStr","LitChar","LitFloat","LitInt","LitStr","Loop","Lt","Macro","Macro","Macro","MacroDelimiter","Match","Maybe","Member","Meta","MetaList","MetaNameValue","MethodCall","Mul","MulAssign","NameValue","Named","Named","Ne","Neg","Never","None","None","None","Not","Or","Outer","Paren","Paren","Paren","Parenthesized","ParenthesizedGenericArguments","Path","Path","Path","Path","PathArguments","PathSegment","PredicateLifetime","PredicateType","Ptr","Public","QSelf","Range","Reference","Reference","Rem","RemAssign","Repeat","Restricted","Result","Return","ReturnType","Shl","ShlAssign","Shr","ShrAssign","Slice","Str","Struct","Struct","Sub","SubAssign","Token","Trait","TraitBound","TraitBoundModifier","TraitObject","Try","TryBlock","Tuple","Tuple","Turbofish","Type","Type","Type","Type","Type","TypeArray","TypeBareFn","TypeGenerics","TypeGroup","TypeImplTrait","TypeInfer","TypeMacro","TypeNever","TypeParam","TypeParamBound","TypeParen","TypePath","TypePtr","TypeReference","TypeSlice","TypeTraitObject","TypeTuple","UnOp","Unary","Union","Unit","Unnamed","Unnamed","Unsafe","Variant","Verbatim","Verbatim","Verbatim","Verbatim","VisRestricted","Visibility","WhereClause","WherePredicate","While","Yield","abi","and_token","and_token","apostrophe","args","args","args","arguments","as_token","as_token","as_turbofish","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","bang_token","bang_token","base","base10_digits","base10_digits","base10_parse","base10_parse","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_ty","bounds","bounds","bounds","bounds","bounds","bounds","bounds","brace_token","brace_token","brace_token","braced","bracket_token","bracket_token","bracket_token","bracket_token","bracketed","buffer","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colon2_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","comma","const_params","const_params_mut","const_token","const_token","custom_keyword","custom_punctuation","data","default","default","default","default","default","delimiter","delimiter","discriminant","dot2_token","dot_token","dot_token","dots","dyn_token","elem","elem","elem","elem","elem","elem","elems","enum_token","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","equivalent","equivalent","equivalent","equivalent","expr","expr","expr","expr","expr","expr","expr","ext","extern_token","fields","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","for_token","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","generics","generics","generics","generics","get_ident","group_token","group_token","gt_token","gt_token","gt_token","gt_token","hash","hash","hash","hash","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","impl_token","in_token","index","index","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","is_ident","is_none","iter","iter_mut","leading_colon","left","len","len","lifetime","lifetime","lifetime","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes_mut","lit","lt_token","lt_token","lt_token","lt_token","mac","mac","make_where_clause","member","member","meta","meta","method","modifier","mutability","mutability","mutability","mutability","name","name","name","named","new","new","new","new","new","new","new","new","new","new","new","new_raw","op","op","output","output","params","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","parenthesized","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse2","parse_any","parse_args","parse_args","parse_args_with","parse_args_with","parse_body","parse_body_with","parse_inner","parse_macro_input","parse_mod_style","parse_named","parse_nested_meta","parse_nested_meta","parse_outer","parse_quote","parse_quote_spanned","parse_str","parse_unnamed","parse_with","partial_cmp","partial_cmp","path","path","path","path","path","path","path","path","path","path","position","pound_token","predicates","pub_token","punctuated","qself","qself","qself","receiver","require_ident","require_list","require_name_value","require_path_only","rest","right","segments","semi_token","semi_token","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned","split_for_impl","star_token","struct_token","style","suffix","suffix","suffix","suffix","suffix","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","token","token","token","token","token","token","token","token","tokens","tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","turbofish","ty","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params_mut","underscore_token","union_token","unnamed","unraw","unsafety","value","value","value","value","value","value","value","value","variadic","variants","vis","vis","where_clause","where_token","without_plus","without_plus","without_plus","without_plus","Cursor","TokenBuffer","begin","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","empty","eof","eq","equivalent","from","from","group","ident","into","into","lifetime","literal","new","new2","partial_cmp","punct","span","to_owned","token_stream","token_tree","try_from","try_from","try_into","try_into","type_id","type_id","IdentExt","parse_any","peek_any","unraw","ParseNestedMeta","borrow","borrow_mut","error","from","input","into","parse_nested_meta","parser","path","try_from","try_into","type_id","value","Error","Lookahead1","Nothing","Output","Parse","ParseBuffer","ParseStream","Parser","Peek","Result","StepCursor","advance_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","combine","cursor","deref","discouraged","drop","error","error","error","extend","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","into","into","into","into","into","into_compile_error","into_iter","into_iter","is_empty","lookahead1","new","new_spanned","parse","parse","parse","parse","parse2","parse_any_delimiter","parse_str","parse_terminated","peek","peek","peek2","peek3","span","span","step","to_compile_error","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","AnyDelimiter","Speculative","advance_to","parse_any_delimiter","End","IntoIter","IntoPairs","Iter","IterMut","Pair","Pairs","PairsMut","Punctuated","Punctuated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","default","empty_or_trailing","extend","extend","first","first_mut","from","from","from","from","from","from","from","from","from_iter","from_iter","index","index_mut","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_pairs","into_tuple","into_value","is_empty","iter","iter_mut","last","last_mut","len","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","pairs","pairs_mut","parse_separated_nonempty","parse_separated_nonempty_with","parse_terminated","parse_terminated_with","pop","pop_punct","punct","punct_mut","push","push_punct","push_value","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","trailing_punct","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_mut","Spanned","span","Abstract","And","AndAnd","AndEq","As","Async","At","Auto","Await","Become","Box","Brace","Bracket","Break","Caret","CaretEq","Colon","Comma","Const","Continue","Crate","Default","Do","Dollar","Dot","DotDot","DotDotDot","DotDotEq","Dyn","Else","Enum","Eq","EqEq","Extern","FatArrow","Final","Fn","For","Ge","Group","Gt","If","Impl","In","LArrow","Le","Let","Loop","Lt","Macro","Match","Minus","MinusEq","Mod","Move","Mut","Ne","Not","Or","OrEq","OrOr","Override","Paren","PathSep","Percent","PercentEq","Plus","PlusEq","Pound","Priv","Pub","Question","RArrow","Ref","Return","SelfType","SelfValue","Semi","Shl","ShlEq","Shr","ShrEq","Slash","SlashEq","Star","StarEq","Static","Struct","Super","Tilde","Token","Trait","Try","Type","Typeof","Underscore","Union","Unsafe","Unsized","Use","Virtual","Where","While","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","surround","surround","surround","surround","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"syn"],[2123,"syn::buffer"],[2158,"syn::ext"],[2162,"syn::meta"],[2176,"syn::parse"],[2270,"syn::parse::discouraged"],[2274,"syn::punctuated"],[2436,"syn::spanned"],[2438,"syn::token"]],"d":["The binary interface of a function: <code>extern &quot;C&quot;</code>.","The <code>+</code> operator (addition)","The <code>+=</code> operator","The <code>&amp;&amp;</code> operator (logical and)","The <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.","Angle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in …","A slice literal expression: <code>[a, b, c, d]</code>.","A fixed size array type: <code>[T; n]</code>.","An assignment expression: <code>a = compute()</code>.","An equality constraint on an associated constant: the …","An equality constraint on an associated constant: the …","A binding (equality constraint) on an associated type: the …","A binding (equality constraint) on an associated type: the …","An async block: <code>async { ... }</code>.","Distinguishes between attributes that decorate an item and …","An attribute, like <code>#[repr(transparent)]</code>.","An await expression: <code>fut.await</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","An argument in a function type: the <code>usize</code> in …","The variadic argument of a function pointer like …","A binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.","A binary operation: <code>a + b</code>, <code>a += b</code>.","The <code>&amp;</code> operator (bitwise and)","The <code>&amp;=</code> operator","The <code>|</code> operator (bitwise or)","The <code>|=</code> operator","The <code>^</code> operator (bitwise xor)","The <code>^=</code> operator","A blocked scope: <code>{ ... }</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.","","","A <code>break</code>, with an optional label to break and an optional …","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A character literal: <code>&#39;a&#39;</code>.","A closure expression: <code>|a, b| a + b</code>.","A const block: <code>const { ... }</code>.","A const generic parameter: <code>const LENGTH: usize</code>.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","A <code>continue</code>, with an optional label.","The storage of a struct, enum or union data structure.","An enum input to a <code>proc_macro_derive</code> macro.","A struct input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","Return type is not specified.","The <code>*</code> operator for dereferencing","Data structure sent to a <code>proc_macro_derive</code> macro.","The <code>/</code> operator (division)","The <code>/=</code> operator","","The <code>==</code> operator (equality)","Error returned when a Syn parser cannot parse the input …","A Rust expression.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a += b</code>.","A blocked scope: <code>{ ... }</code>.","A <code>break</code>, with an optional label to break and an optional …","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A const block: <code>const { ... }</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: …","A square bracketed indexing expression: <code>vector[2]</code>.","The inferred value of a const generic argument, denoted <code>_</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","An array literal constructed from one repeated element: …","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","A field of a struct or enum variant.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","Unused, but reserved for RFC 3323 restrictions.","A field-value pair in a struct literal.","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as …","Unnamed fields of a tuple struct or tuple variant such as …","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A for loop: <code>for pat in expr { ... }</code>.","The <code>&gt;=</code> operator (greater than or equal to)","An individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.","A generic type parameter, lifetime, or const generic: …","Lifetimes and type parameters attached to a declaration of …","An expression contained within invisible delimiters.","A type contained within invisible delimiters.","The <code>&gt;</code> operator (greater than)","A word of Rust code, which may be a keyword or legal …","An <code>if</code> expression with an optional <code>else</code> block: …","Returned by <code>Generics::split_for_impl</code>.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","The index of an unnamed tuple struct field.","A square bracketed indexing expression: <code>vector[2]</code>.","The inferred value of a const generic argument, denoted <code>_</code>.","Indication that a type should be inferred by the compiler: …","An inherited visibility, which usually means private.","","An integer literal: <code>1</code> or <code>1u16</code>.","The <code>&lt;=</code> operator (less than or equal to)","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A Rust lifetime: <code>&#39;a</code>.","A lifetime parameter: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A lifetime argument.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","A structured list within an attribute, like …","A Rust literal such as a string or integer or boolean.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A character literal: <code>&#39;a&#39;</code>.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","An integer literal: <code>1</code> or <code>1u16</code>.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","The <code>&lt;</code> operator (less than)","A macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A macro in the type position.","A grouping token that surrounds a macro body: <code>m!(...)</code> or …","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","","A struct or tuple struct field accessed in a struct …","Content of a compile-time structured attribute.","A structured list within an attribute, like …","A name-value pair within an attribute, like …","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","The <code>*</code> operator (multiplication)","The <code>*=</code> operator","A name-value pair within an attribute, like …","Named fields of a struct or struct variant such as …","A named field like <code>self.x</code>.","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","The never type: <code>!</code>.","","","","The <code>!</code> operator for logical inversion","The <code>||</code> operator (logical or)","","A parenthesized expression: <code>(a + b)</code>.","","A parenthesized type equivalent to the inner type.","The <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.","Arguments of a function path segment: the <code>(A, B) -&gt; C</code> in …","A path at which a named item is exported (e.g. …","","A path like <code>std::mem::replace</code> possibly containing generic …","A path like <code>std::slice::Iter</code>, optionally qualified with a …","Angle bracketed or parenthesized arguments of a path …","A segment of a path together with any path arguments on …","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A type predicate in a <code>where</code> clause: …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A public visibility level: <code>pub</code>.","The explicit Self type in a qualified path: the <code>T</code> in …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","The <code>%</code> operator (modulus)","The <code>%=</code> operator","An array literal constructed from one repeated element: …","A visibility level restricted to some path: <code>pub(self)</code> or …","The result of a Syn parser.","A <code>return</code>, with an optional value to be returned.","Return type of a function signature.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&lt;&lt;=</code> operator","The <code>&gt;&gt;</code> operator (shift right)","The <code>&gt;&gt;=</code> operator","A dynamically sized slice type: <code>[T]</code>.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","The <code>-</code> operator (subtraction)","The <code>-=</code> operator","A type-macro that expands to the name of the Rust type …","","A trait used as a bound on a type parameter.","A modifier on a trait bound, currently only used for the <code>?</code> …","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A tuple type: <code>(A, B, C, String)</code>.","Returned by <code>TypeGenerics::as_turbofish</code>.","The possible types that a Rust value could have.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A type predicate in a <code>where</code> clause: …","A type argument.","A particular type is returned.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","Returned by <code>Generics::split_for_impl</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","Indication that a type should be inferred by the compiler: …","A macro in the type position.","The never type: <code>!</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A trait or lifetime used as a bound on a type parameter.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A tuple type: <code>(A, B, C, String)</code>.","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","","Unit struct or unit variant such as <code>None</code>.","Unnamed fields of a tuple struct or tuple variant such as …","An unnamed field like <code>self.0</code>.","An unsafe block: <code>unsafe { ... }</code>.","An enum variant.","Tokens in expression position not interpreted by Syn.","","A raw token literal not interpreted by Syn.","Tokens in type position not interpreted by Syn.","A visibility level restricted to some path: <code>pub(self)</code> or …","The visibility level of an item: inherited or <code>pub</code> or …","A <code>where</code> clause in a definition: …","A single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","","","","","","","","","","","Turn a type’s generics like <code>&lt;X, Y&gt;</code> into a turbofish like …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses the literal into a selected number typehe type being bounded","","","","Trait and lifetime bounds (<code>Clone+Send+&#39;static</code>)","","","","","","","Parse a set of curly braces and expose their content to …","","","","","Parse a set of square brackets and expose their content to …","A stably addressed token buffer supporting efficient …he colon in <code>Struct { x: x }</code>. If written in shorthand like …","","","","","","","","Returns an Iterator&lt;Item = &amp;ConstParam&gt; over the constant …","Returns an Iterator&lt;Item = &amp;mut ConstParam&gt; over the …","","","Define a type that supports parsing and printing a given …","Define a type that supports parsing and printing a …","","","","","","","","","Explicit discriminant: <code>Variant = 1</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension traits to provide parsing methods on foreign …","","Content stored in the variant.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","If this path consists of a single ident, returns the ident.","","","","","","","","","","","","Name of the variant.","Name of the field, if any.","","","","","","","","","","","","<code>(A, B)</code>","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if there are zero fields.","","Determines whether this is a path of length 1 equal to the …","","Get an iterator over the borrowed <code>Field</code> items in this …","Get an iterator over the mutably borrowed <code>Field</code> items in …","","","Returns the number of fields.","","","","","Returns an Iterator&lt;Item = &amp;LifetimeParam&gt; over the …","","The <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","Any lifetimes from a <code>for</code> binding","","Returns an Iterator&lt;Item = &amp;mut LifetimeParam&gt; over the …","","","","","","","","Initializes an empty <code>where</code>-clause if there is not one …","","","Facility for interpreting structured content inside of an …","","","","","","","","","","","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Panics","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","","","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","<code>C</code>","","","","","","","","","","","","","Parse a set of parentheses and expose their content to …","Parsing interface for parsing a token stream into a syntax …","Parse tokens of source code into the chosen syntax tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a syntax tree node from the content of this string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse the arguments to the attribute as a syntax tree.","See <code>Attribute::parse_args</code>.","Parse the arguments to the attribute using the given …","See <code>Attribute::parse_args_with</code>.","Parse the tokens within the macro invocation’s …","Parse the tokens within the macro invocation’s …","Parses zero or more inner attributes from the stream.","Parse the input TokenStream of a macro, triggering a …","Parse a <code>Path</code> containing no path arguments on any of its …","Parses a named (braced struct) field.","Parse the arguments to the attribute, expecting it to …","See <code>Attribute::parse_nested_meta</code>.","Parses zero or more outer attributes from the stream.","Quasi-quotation macro that accepts input like the <code>quote!</code> …","This macro is <code>parse_quote!</code> + <code>quote_spanned!</code>.","Parse a string of Rust code into the chosen syntax tree …","Parses an unnamed (tuple struct) field.","Invoke parser on the content of this string literal.","","","Returns the path that identifies the interpretation of …","Returns the path that begins this structured meta item.","","","","","The <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","","","","","","","","A punctuated sequence of syntax tree nodes separated by …","","","","","An error if this path is not a single ident, as defined in …","Error if this is a <code>Meta::Path</code> or <code>Meta::NameValue</code>.","Error if this is a <code>Meta::Path</code> or <code>Meta::List</code>.","Error if this is a <code>Meta::List</code> or <code>Meta::NameValue</code>.","","","","","","Configures the span of this <code>Ident</code>, possibly changing its …","","","","","","","","","","Returns the span of this <code>Ident</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait that can provide the <code>Span</code> of the complete contents …","Split a type’s generics into the pieces required for impl…okens representing Rust punctuation, keywords, and …eturns an Iterator&lt;Item = &amp;TypeParam&gt; over the type …","Returns an Iterator&lt;Item = &amp;mut TypeParam&gt; over the type …","","","","","","","","","","","","","","","","","","","","In some positions, types may not contain the <code>+</code> character, …","","","","A cheaply copyable cursor into a <code>TokenBuffer</code>.","A buffer that can be efficiently traversed multiple times, …","Creates a cursor referencing the first token in the buffer …","","","","","","","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the end …","","","Returns the argument unchanged.","Returns the argument unchanged.","If the cursor is pointing at a <code>Group</code> with the given …","If the cursor is pointing at a <code>Ident</code>, returns it along …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the cursor is pointing at a <code>Lifetime</code>, returns it along …","If the cursor is pointing at a <code>Literal</code>, return it along …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","","If the cursor is pointing at a <code>Punct</code>, returns it along …","Returns the <code>Span</code> of the current token, or <code>Span::call_site()</code>…","","Copies all remaining tokens visible from this cursor into a","If the cursor is pointing at a <code>TokenTree</code>, returns it along …","","","","","","","Additional methods for <code>Ident</code> not provided by proc-macro2 …","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: …","Strips the raw marker <code>r#</code>, if any, from the beginning of an …","Context for parsing a single property in the conventional …","","","Report that the attribute’s content did not conform to …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Used when parsing <code>list(...)</code> syntax <strong>if</strong> the content inside …","Make a parser that is usable with <code>parse_macro_input!</code> in a …","","","","","Used when parsing <code>key = &quot;value&quot;</code> syntax.","Error returned when a Syn parser cannot parse the input …","Support for checking the next token in a stream to decide …","An empty syntax tree node that consumes no tokens when …","","Parsing interface implemented by all types that can be …","Cursor position within a buffered token stream.","Input to a Syn parser function.","Parser that can parse Rust tokens into a particular syntax …","Types that can be parsed by looking at just one token.","The result of a Syn parser.","Cursor state associated with speculative parsing.","","","","","","","","","","","","Calls the given parser function to parse a syntax tree …","","","","","Add another error message to self such that when …","Provides low-level access to the token representation …","","Extensions to the parsing API with niche applicability.","","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","","","","","","Forks a parse stream so that parsing tokens out of either …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Render the error as an invocation of <code>compile_error!</code>.","","","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this …","Usually the <code>ParseStream::error</code> method will be used …","Creates an error with the specified message spanning the …","","Parses a syntax tree node of type <code>T</code>, advancing the …","Parse tokens of source code into the chosen syntax tree …","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse a string of Rust code into the chosen syntax tree …","Parses zero or more occurrences of <code>T</code> separated by …","Looks at the next token in the parse stream to determine …","Looks at the next token in the parse stream to determine …","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","The source location of the error.","Returns the <code>Span</code> of the next token in the parse stream, or …","Speculatively parses tokens from this parse stream, …","Render the error as an invocation of <code>compile_error!</code>.","","","","","","","","","","","","","","","","","","","","Extensions to the <code>ParseStream</code> API to support manipulating …","Extensions to the <code>ParseStream</code> API to support speculative …","Advance this parse stream to the position of a forked …","Returns the delimiter, the span of the delimiter token, …","","An iterator over owned values of type <code>T</code>.","An iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.","An iterator over borrowed values of type <code>&amp;T</code>.","An iterator over mutably borrowed values of type <code>&amp;mut T</code>.","A single syntax tree node of type <code>T</code> followed by its …","An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.","An iterator over mutably borrowed pairs of type …","<strong>A punctuated sequence of syntax tree nodes of type <code>T</code> </strong>…","","","","","","","","","","","","","","","","","","Clears the sequence of all values and punctuation, making …","","","","","","","","","","","","","","","","Returns true if either this <code>Punctuated</code> is empty, or it has …","","","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Inserts an element at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Produces this punctuated pair as a tuple of syntax tree …","Extracts the syntax tree node from this punctuated pair, …","Determines whether this punctuated sequence is empty, …","Returns an iterator over borrowed syntax tree nodes of …","Returns an iterator over mutably borrowed syntax tree …","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns the number of syntax tree nodes in this punctuated …","","","","","","","Creates an empty punctuated sequence.","Creates a punctuated pair out of a syntax tree node and an …","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Parses one or more occurrences of <code>T</code> separated by …","Parses one or more occurrences of <code>T</code> using the given parse …","Parses zero or more occurrences of <code>T</code> separated by …","Parses zero or more occurrences of <code>T</code> using the given parse …","Removes the last punctuated pair from this sequence, or …","Removes the trailing punctuation from this punctuated …","Borrows the punctuation from this punctuated pair, unless …","Mutably borrows the punctuation from this punctuated pair, …","Appends a syntax tree node onto the end of this punctuated …","Appends a trailing punctuation onto the end of this …","Appends a syntax tree node onto the end of this punctuated …","","","","","","","","","","","","","","","","","Determines whether this punctuated sequence ends with a …","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated …","A trait that can provide the <code>Span</code> of the complete contents …","Returns a <code>Span</code> covering the complete contents of this …","<code>abstract</code>","<code>&amp;</code>","<code>&amp;&amp;</code>","<code>&amp;=</code>","<code>as</code>","<code>async</code>","<code>@</code>","<code>auto</code>","<code>await</code>","<code>become</code>","<code>box</code>","<code>{</code>…<code>}</code>","<code>[</code>…<code>]</code>","<code>break</code>","<code>^</code>","<code>^=</code>","<code>:</code>","<code>,</code>","<code>const</code>","<code>continue</code>","<code>crate</code>","<code>default</code>","<code>do</code>","<code>$</code>","<code>.</code>","<code>..</code>","<code>...</code>","<code>..=</code>","<code>dyn</code>","<code>else</code>","<code>enum</code>","<code>=</code>","<code>==</code>","<code>extern</code>","<code>=&gt;</code>","<code>final</code>","<code>fn</code>","<code>for</code>","<code>&gt;=</code>","None-delimited group","<code>&gt;</code>","<code>if</code>","<code>impl</code>","<code>in</code>","<code>&lt;-</code>","<code>&lt;=</code>","<code>let</code>","<code>loop</code>","<code>&lt;</code>","<code>macro</code>","<code>match</code>","<code>-</code>","<code>-=</code>","<code>mod</code>","<code>move</code>","<code>mut</code>","<code>!=</code>","<code>!</code>","<code>|</code>","<code>|=</code>","<code>||</code>","<code>override</code>","<code>(</code>…<code>)</code>","<code>::</code>","<code>%</code>","<code>%=</code>","<code>+</code>","<code>+=</code>","<code>#</code>","<code>priv</code>","<code>pub</code>","<code>?</code>","<code>-&gt;</code>","<code>ref</code>","<code>return</code>","<code>Self</code>","<code>self</code>","<code>;</code>","<code>&lt;&lt;</code>","<code>&lt;&lt;=</code>","<code>&gt;&gt;</code>","<code>&gt;&gt;=</code>","<code>/</code>","<code>/=</code>","<code>*</code>","<code>*=</code>","<code>static</code>","<code>struct</code>","<code>super</code>","<code>~</code>","Marker trait for types that represent single tokens.","<code>trait</code>","<code>try</code>","<code>type</code>","<code>typeof</code>","<code>_</code>","<code>union</code>","<code>unsafe</code>","<code>unsized</code>","<code>use</code>","<code>virtual</code>","<code>where</code>","<code>while</code>","<code>yield</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,65,65,65,69,0,26,80,26,0,70,0,70,26,0,0,26,80,0,0,0,26,65,65,65,65,65,65,26,57,0,64,64,26,57,57,26,26,57,26,26,45,70,0,0,70,26,0,0,0,0,98,66,0,65,65,22,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,57,26,65,0,0,0,26,80,65,0,26,0,80,0,26,26,80,77,12,57,65,26,0,45,50,54,70,0,13,0,26,0,0,0,0,0,0,0,26,65,0,26,80,0,26,52,0,0,0,0,26,65,65,13,17,41,65,66,80,52,69,79,66,65,12,26,64,80,69,0,0,13,26,80,0,0,0,0,80,77,0,26,26,80,65,65,26,77,0,26,0,65,65,65,65,80,57,22,26,65,65,0,50,0,0,80,26,26,26,80,0,0,45,54,70,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,22,17,17,41,26,0,26,50,57,80,0,0,0,0,26,26,82,38,91,10,28,35,71,68,29,76,1,16,20,21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,46,47,48,96,97,63,87,30,3,5,3,5,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,118,120,117,135,27,126,124,28,29,130,122,136,30,134,31,125,32,123,127,33,116,34,114,35,36,37,115,38,132,133,39,113,119,131,40,128,121,129,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,3,5,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,118,120,117,135,27,126,124,28,29,130,122,136,30,134,31,125,32,123,127,33,116,34,114,35,36,37,115,38,132,133,39,113,119,131,40,128,121,129,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,3,5,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,56,46,47,55,56,74,84,93,18,24,39,0,11,32,81,92,0,0,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,3,5,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,3,5,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,8,10,71,20,43,46,47,48,55,56,74,97,44,44,48,90,0,0,21,44,49,69,47,48,14,63,16,39,30,35,97,93,81,83,88,90,91,92,94,24,8,8,10,41,42,15,47,48,72,73,8,10,41,42,29,31,32,36,38,40,43,0,95,16,23,25,39,8,8,8,10,41,42,3,5,82,49,8,8,8,8,8,8,8,9,1,2,10,11,12,13,13,13,13,14,15,16,17,17,17,18,19,20,21,22,23,24,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,118,120,117,135,27,126,124,28,29,130,122,136,30,134,31,125,32,123,127,33,116,34,114,35,36,37,115,38,132,133,39,113,119,131,40,128,121,129,41,41,41,41,42,42,43,44,45,45,45,45,46,47,47,48,49,50,50,50,51,52,53,54,54,54,55,56,57,57,57,57,57,57,57,57,58,59,60,61,3,3,5,5,62,63,64,65,66,67,67,68,68,69,70,71,72,73,74,75,76,77,78,79,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,28,21,72,73,74,67,31,83,44,49,71,76,8,10,41,42,10,16,20,21,47,48,68,72,73,74,84,78,32,42,75,82,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,118,120,117,135,27,126,124,28,29,130,122,136,30,134,31,125,32,123,127,33,116,34,114,35,36,37,115,38,132,133,39,113,119,131,40,128,121,129,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,3,5,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,17,17,17,17,69,67,69,17,17,67,27,17,81,46,55,91,44,49,51,56,82,44,33,44,49,71,76,34,86,44,30,43,0,11,35,51,20,38,90,91,95,96,97,18,8,10,46,57,58,59,60,61,3,5,62,8,27,40,75,82,44,19,28,35,36,51,75,78,82,88,94,0,0,0,8,10,13,14,15,16,18,19,21,26,33,34,37,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,58,59,60,61,3,5,62,63,65,66,67,68,70,71,75,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,0,8,11,14,11,14,63,63,11,0,67,20,11,14,11,0,0,0,20,58,8,10,11,13,14,15,37,39,51,63,78,89,76,11,53,78,0,37,39,89,35,67,13,13,13,39,27,67,23,81,8,10,57,58,59,60,61,3,5,62,8,8,8,9,1,2,10,10,11,13,14,15,16,17,18,19,20,21,26,118,120,117,135,27,126,124,28,29,130,122,136,30,134,31,125,32,123,127,33,116,34,114,35,36,37,115,38,132,133,39,113,119,131,40,128,121,129,41,41,42,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,57,58,58,59,59,60,60,61,61,3,3,5,5,62,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,42,62,0,44,90,23,11,57,58,59,60,61,3,5,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,3,5,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,8,10,3,5,8,9,1,2,10,11,13,14,15,16,17,18,19,20,21,26,118,120,117,135,27,126,124,28,29,130,122,136,30,134,31,125,32,123,127,33,116,34,114,35,36,37,115,38,132,133,39,113,119,131,40,128,121,129,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,3,5,62,63,65,66,67,68,69,70,71,72,73,74,75,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,0,58,59,60,61,3,5,62,14,63,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,118,120,117,135,27,126,124,28,29,130,122,136,30,134,31,125,32,123,127,33,116,34,114,35,36,37,115,38,132,133,39,113,119,131,40,128,121,129,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,3,5,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,118,120,117,135,27,126,124,28,29,130,122,136,30,134,31,125,32,123,127,33,116,34,114,35,36,37,115,38,132,133,39,113,119,131,40,128,121,129,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,3,5,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,35,20,29,48,72,76,96,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,118,120,117,135,27,126,124,28,29,130,122,136,30,134,31,125,32,123,127,33,116,34,114,35,36,37,115,38,132,133,39,113,119,131,40,128,121,129,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,3,5,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,44,44,85,25,19,8,82,58,59,60,61,62,15,62,73,82,24,20,21,44,53,80,84,93,98,0,0,158,158,159,158,159,159,159,159,159,159,159,158,159,159,159,158,159,159,159,158,158,159,159,159,159,159,159,158,159,158,159,158,159,0,279,279,279,0,161,161,161,161,161,161,161,0,161,161,161,161,161,0,0,0,152,0,0,0,0,0,0,0,164,163,166,164,165,170,163,166,164,165,170,164,163,165,163,165,163,164,165,0,164,166,164,165,163,163,163,164,164,164,163,163,166,164,165,170,163,166,164,165,170,163,163,163,164,164,163,163,149,164,152,170,152,164,152,164,166,164,164,164,163,164,164,163,163,165,163,164,163,166,164,165,170,163,166,164,165,170,163,166,164,165,170,0,0,280,281,178,0,0,0,0,0,0,0,0,178,172,175,180,176,177,142,143,178,172,175,180,176,177,142,143,178,172,172,175,176,177,142,178,172,172,175,176,177,142,178,178,172,172,172,172,172,172,172,175,180,176,177,142,143,178,172,172,172,172,172,172,175,180,176,177,142,143,178,172,172,172,175,180,176,177,142,143,172,178,178,172,172,172,172,172,172,175,180,176,177,142,143,172,178,175,180,176,177,142,143,175,180,176,177,142,143,172,172,172,172,172,172,172,172,178,178,172,172,172,175,180,176,177,142,143,172,178,172,175,176,177,142,178,172,178,172,172,175,180,176,177,142,143,178,172,175,180,176,177,142,143,178,172,175,180,176,177,142,143,178,178,178,0,282,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,182,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,182,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,182,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,182,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,182,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,107,230,233,234,236,237,238,239,243,247,250,251,254,255,259,261,263,264,266,271,273,275,107,230,233,234,236,237,238,239,243,247,250,251,254,255,259,261,263,264,266,271,273,275,182,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,182,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,182,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,276,277,278,107,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,182,276,277,278,182,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,182,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,182,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,182,107,183,184,185,186,187,188,189,190,191,192,109,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,111,110,216,217,112,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278],"fc":[],"p":[[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitInt"],[15,"str"],[3,"LitFloat"],[8,"FromStr"],[6,"Result"],[3,"Ident"],[3,"ImplGenerics"],[3,"Lifetime"],[3,"Attribute"],[4,"AttrStyle"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Variant"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Field"],[3,"DeriveInput"],[4,"Data"],[3,"DataStruct"],[3,"DataEnum"],[3,"DataUnion"],[4,"Expr"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprGroup"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprMacro"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprReference"],[3,"ExprStruct"],[3,"ExprUnary"],[4,"Member"],[3,"Index"],[3,"FieldValue"],[3,"Generics"],[4,"GenericParam"],[3,"LifetimeParam"],[3,"TypeParam"],[3,"ConstParam"],[3,"BoundLifetimes"],[4,"TypeParamBound"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"WhereClause"],[4,"WherePredicate"],[3,"PredicateLifetime"],[3,"PredicateType"],[4,"Lit"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitBool"],[3,"Macro"],[4,"MacroDelimiter"],[4,"BinOp"],[4,"UnOp"],[3,"Path"],[3,"PathSegment"],[4,"PathArguments"],[4,"GenericArgument"],[3,"AngleBracketedGenericArguments"],[3,"AssocType"],[3,"AssocConst"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"QSelf"],[4,"Visibility"],[3,"VisRestricted"],[4,"FieldMutability"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Abi"],[3,"BareFnArg"],[3,"BareVariadic"],[4,"ReturnType"],[4,"Ordering"],[8,"AsRef"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[3,"Underscore"],[3,"Extern"],[3,"Crate"],[3,"SelfValue"],[3,"SelfType"],[3,"Super"],[3,"ExprTry"],[3,"ExprMatch"],[3,"ExprRange"],[3,"ExprLoop"],[3,"ExprAsync"],[3,"ExprArray"],[3,"ExprTryBlock"],[3,"ExprAssign"],[3,"ExprWhile"],[3,"ExprConst"],[3,"ExprInfer"],[3,"ExprBreak"],[3,"ExprIf"],[3,"ExprBlock"],[3,"ExprLet"],[3,"ExprUnsafe"],[3,"ExprYield"],[3,"ExprClosure"],[3,"ExprTuple"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprForLoop"],[3,"ExprAwait"],[3,"ExprContinue"],[15,"usize"],[3,"Literal"],[8,"Into"],[4,"Option"],[8,"Hasher"],[3,"Iter"],[3,"IterMut"],[3,"Span"],[15,"u8"],[15,"slice"],[15,"char"],[3,"TokenStream"],[8,"Parse"],[6,"ParseStream"],[3,"TokenStream"],[8,"Parser"],[3,"Vec"],[8,"FnMut"],[3,"DelimSpan"],[3,"String"],[3,"TypeId"],[3,"TokenBuffer"],[3,"Cursor"],[4,"Delimiter"],[3,"ParseNestedMeta"],[8,"Display"],[3,"Error"],[3,"ParseBuffer"],[3,"StepCursor"],[3,"Lookahead1"],[8,"IntoIterator"],[3,"LexError"],[8,"ToTokens"],[3,"Nothing"],[8,"Peek"],[3,"Punctuated"],[8,"FnOnce"],[8,"Clone"],[3,"Pairs"],[3,"IntoPairs"],[3,"IntoIter"],[4,"Pair"],[8,"Default"],[3,"PairsMut"],[8,"Token"],[3,"Group"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Static"],[3,"Struct"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Comma"],[3,"Dollar"],[3,"Dot"],[3,"DotDot"],[3,"DotDotDot"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"FatArrow"],[3,"Ge"],[3,"Gt"],[3,"LArrow"],[3,"Le"],[3,"Lt"],[3,"Minus"],[3,"MinusEq"],[3,"Ne"],[3,"Not"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"PathSep"],[3,"Percent"],[3,"PercentEq"],[3,"Plus"],[3,"PlusEq"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Slash"],[3,"SlashEq"],[3,"Star"],[3,"StarEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[8,"IdentExt"],[8,"Speculative"],[8,"AnyDelimiter"],[8,"Spanned"]]},\
"texture":{"doc":"A generic library for textures.","t":"NNIQEEINNNNNIDIELLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLKLLFF","n":["ClampToBorder","ClampToEdge","CreateTexture","Error","Filter","Format","ImageSize","Linear","MirroredRepeat","Nearest","Repeat","Rgba8","TextureOp","TextureSettings","UpdateTexture","Wrap","border_color","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compress","convert_gamma","create","eq","filter","fmt","fmt","fmt","from","from","from","from","generate_mipmap","get_border_color","get_compress","get_convert_gamma","get_filter","get_generate_mipmap","get_height","get_mag","get_min","get_mipmap","get_size","get_width","get_wrap_u","get_wrap_v","into","into","into","into","mag","min","mipmap","new","ops","set_border_color","set_compress","set_convert_gamma","set_filter","set_generate_mipmap","set_mag","set_min","set_mipmap","set_wrap_u","set_wrap_v","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","wrap_u","wrap_v","alpha_to_rgba8","flip_vertical"],"q":[[0,"texture"],[97,"texture::ops"]],"d":["Coordinates outside the range [0.0, 1.0] will be given a …","The coordinate will be clamped between 0 and 1.","Implemented by textures for creation.","The error when performing an operation.","Sampling filter","Texture format.","Implemented by all images to be used with generic …","A Weighted Linear Blend","Repeats the texture and mirrors it, when the integer part …","Nearest Texel","Repeats the texture by ignoring the integer part of the …","<code>(red, green, blue, alpha)</code> with values 0-255.","Implemented by texture operations.","Texture creation parameters.","Implemented by textures for updating.","Wrap mode","Sets the border color","","","","","","","","","","","","","","","","","Sets compress.","Sets convert gamma.","Create texture from memory.","","Sets the min and mag filter","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Sets generate mipmap.","Gets the border color","Gets wheter compress on the GPU.","Gets whether to convert gamma, treated as sRGB color space.","Returns the min and mag filter","Gets generate mipmap.","Gets the image height.","Gets magnify filter","Gets minify filter.","Gets minify mipmap filter","Get the image size.","Gets the image width.","Gets the wrapping mode for the u coordinate","Gets the wrapping mode for the v coordinate","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets magnify filter","Sets minify filter.","Sets magnify mipmap filter, and sets generate_mipmap to …","Create default settings.","Image operations for textures.","Sets the border color","Sets compress.","Sets convert gamma.","Sets the min and mag filter","Sets generate mipmap.","Sets magnify filter","Sets minify filter.","Sets magnify mipmap filter, and sets generate_mipmap to …","Sets the wrapping mode for the u coordinate","Sets the wrapping mode for the v coordinate","","","","","","","","","","","","","","","","","Update the texture.","Sets the wrapping mode for the u coordinate","Sets the wrapping mode for the v coordinate","Converts from alpha to rgba8.","Flips the image vertically."],"i":[6,6,0,17,0,0,0,5,6,5,6,4,0,0,0,0,1,1,4,5,6,1,4,5,6,1,4,5,6,1,4,5,6,1,1,18,6,1,4,5,6,1,4,5,6,1,1,1,1,1,1,19,1,1,1,19,19,1,1,1,4,5,6,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,4,5,6,1,4,5,6,1,4,5,6,1,4,5,6,20,1,1,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[3,[2]]],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[4,4],[5,5],[6,6],[[]],[[]],[[]],[[]],[[1,7],1],[[1,7],1],[[4,[9,[8]],[11,[[3,[10]]]],1],12],[[6,6],7],[[1,5],1],[[4,13],14],[[5,13],14],[[6,13],14],[[]],[[]],[[]],[[]],[[1,7],1],[1,[[3,[2]]]],[1,7],[1,7],[1],[1,7],[[],10],[1,5],[1,5],[1,5],[[]],[[],10],[1,6],[1,6],[[]],[[]],[[]],[[]],[[1,5],1],[[1,5],1],[[1,5],1],[[],1],0,[[1,[3,[2]]]],[[1,7]],[[1,7]],[[1,5]],[[1,7]],[[1,5]],[[1,5]],[[1,5]],[[1,6]],[[1,6]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],15],[[],15],[[],15],[[],15],[[4,[9,[8]],[11,[[3,[10]]]],[11,[[3,[10]]]]],12],[[1,6],1],[[1,6],1],[[[9,[8]],[3,[10]]],[[16,[8]]]],[[[9,[8]],[3,[10]],8],[[16,[8]]]]],"c":[],"p":[[3,"TextureSettings"],[15,"f32"],[15,"array"],[4,"Format"],[4,"Filter"],[4,"Wrap"],[15,"bool"],[15,"u8"],[15,"slice"],[15,"u32"],[8,"Into"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[3,"Vec"],[8,"TextureOp"],[8,"CreateTexture"],[8,"ImageSize"],[8,"UpdateTexture"]]},\
"tiff":{"doc":"Decoding and Encoding of TIFF Images","t":"NNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEGNNENNNNNNNNNNNNNNNNENNLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLMMMMEDEENNNNNNNNNNNNDNNNNNNNNNNLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLAMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNGNDNNNNNNNNNNNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDSDDDQQDDDIDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLAAKLLKLLKLLLLMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLKLLLLLLSDDDDDDIDDDDDDDDDDQDDDDDDDDDDDDSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNSIIEDNENDNDNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNENENNNNENNNNNNNNNNENNNNNNENNNNNNENNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ByteExpected","CMYK","ColorType","CycleInOffsets","FloatingPointPredictor","Format","FormatError","Gray","GrayA","HorizontalPredictor","ImageFileDirectoryNotFound","InconsistentBitsPerSample","InconsistentSizesEncountered","InconsistentStripSamples","IntSizeError","InterpretationWithBits","InvalidChunkIndex","InvalidChunkType","InvalidDimensions","InvalidTag","InvalidTagValueType","IoError","JpegDecoder","LimitsExceeded","Palette","RGB","RGBA","RequiredTagEmpty","RequiredTagNotFound","SamplesPerPixelIsZero","SignedIntegerExpected","StripTileTagConflict","TiffError","TiffFormatError","TiffResult","TiffSignatureInvalid","TiffSignatureNotFound","TiffUnsupportedError","UnexpectedCompressedData","UnknownCompressionMethod","UnknownInterpretation","UnknownPlanarConfiguration","UnknownPredictor","UnsignedIntegerExpected","UnsupportedBitsPerChannel","UnsupportedColorType","UnsupportedCompressionMethod","UnsupportedDataType","UnsupportedError","UnsupportedInterpretation","UnsupportedJpegFeature","UnsupportedPlanarConfig","UnsupportedSampleDepth","UnsupportedSampleFormat","UsageError","UsageError","YCbCr","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone_into","clone_into","clone_into","decoder","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","encoder","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","init","init","init","init","init","into","into","into","into","into","tags","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","actual_bytes","actual_samples","required_bytes","required_samples","ChunkType","Decoder","DecodingBuffer","DecodingResult","F32","F32","F64","F64","I16","I16","I32","I32","I64","I64","I8","I8","Limits","Strip","Tile","U16","U16","U32","U32","U64","U64","U8","U8","as_buffer","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_order","chunk_data_dimensions","chunk_dimensions","clone","clone","clone_into","clone_into","colortype","decoding_buffer_size","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","drop","eq","find_tag","find_tag_unsigned","find_tag_unsigned_vec","fmt","fmt","fmt","fmt","fp_predict_f32","fp_predict_f64","from","from","from","from","from","get_chunk_type","get_tag","get_tag_ascii_string","get_tag_f32","get_tag_f32_vec","get_tag_f64","get_tag_f64_vec","get_tag_u16_vec","get_tag_u32","get_tag_u32_vec","get_tag_u64","get_tag_u64_vec","get_tag_u8_vec","get_tag_unsigned","goto_offset","goto_offset_u64","ifd","ifd_value_size","init","init","init","init","init","intermediate_buffer_size","into","into","into","into","into","more_images","new","next_image","read_byte","read_chunk","read_chunk_to_buffer","read_double","read_float","read_ifd_offset","read_image","read_long","read_long8","read_offset","read_offset_u64","read_short","read_slong","read_slong8","read_sshort","read_string","seek_to_image","strip_count","tile_count","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unlimited","with_limits","Ascii","Byte","Directory","Double","Entry","Float","Ifd","IfdBig","List","Rational","RationalBig","SRational","SRationalBig","Short","Signed","SignedBig","Unsigned","UnsignedBig","Value","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","from","from","init","init","into","into","into_f32","into_f32_vec","into_f64","into_f64_vec","into_i32","into_i32_vec","into_i64","into_i64_vec","into_string","into_u16","into_u16_vec","into_u32","into_u32_vec","into_u64","into_u64_vec","into_u8","into_u8_vec","new","new_u64","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","val","BYTE_LEN","DirectoryEncoder","FIELD_TYPE","Ifd","Ifd8","ImageEncoder","OffsetArrayType","OffsetType","Rational","SRational","TiffEncoder","TiffKind","TiffKindBig","TiffKindStandard","TiffValue","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","colortype","compression","convert_offset","convert_offset","convert_offset","convert_slice","convert_slice","convert_slice","count","count","count","count","count","d","d","data","data","data","data","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encoder","finish","finish","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","n","n","new","new_big","new_directory","new_generic","new_image","new_image_with_compression","next_strip_sample_count","resolution","resolution_unit","rows_per_strip","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write","write","write_data","write_data","write_entry_count","write_entry_count","write_entry_count","write_header","write_header","write_header","write_image","write_image_with_compression","write_offset","write_offset","write_offset","write_strip","write_tag","x_resolution","y_resolution","BITS_PER_SAMPLE","CMYK16","CMYK32","CMYK32Float","CMYK64","CMYK64Float","CMYK8","ColorType","Gray16","Gray32","Gray32Float","Gray64","Gray64Float","Gray8","GrayI16","GrayI32","GrayI64","GrayI8","Inner","RGB16","RGB32","RGB32Float","RGB64","RGB64Float","RGB8","RGBA16","RGBA32","RGBA32Float","RGBA64","RGBA64Float","RGBA8","SAMPLE_FORMAT","TIFF_VALUE","YCbCr8","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Balanced","Best","COMPRESSION_METHOD","Compression","CompressionAlgorithm","Compressor","Deflate","Deflate","DeflateLevel","Fast","Lzw","Lzw","Packbits","Packbits","Uncompressed","Uncompressed","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_algorithm","get_algorithm","get_algorithm","get_algorithm","get_algorithm","init","init","init","init","init","init","into","into","into","into","into","into","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","with_level","write_to","write_to","write_to","write_to","write_to","write_to","ASCII","Artist","BYTE","BitsPerSample","BlackIsZero","CIELab","CMYK","CellLength","CellWidth","Centimeter","Chunky","ColorMap","Compression","CompressionMethod","Copyright","DOUBLE","DateTime","Deflate","ExtraSamples","FLOAT","Fax3","Fax4","FillOrder","FloatingPoint","FreeByteCounts","FreeOffsets","GdalNodata","GeoAsciiParamsTag","GeoDoubleParamsTag","GeoKeyDirectoryTag","GrayResponseCurve","GrayResponseUnit","Horizontal","HostComputer","Huffman","IEEEFP","IFD","IFD8","ImageDescription","ImageLength","ImageWidth","Inch","Int","JPEG","JPEGTables","LONG","LONG8","LZW","Make","MaxSampleValue","MinSampleValue","Model","ModelPixelScaleTag","ModelTiepointTag","ModelTransformationTag","ModernJPEG","NewSubfileType","None","None","None","OldDeflate","Orientation","PackBits","PhotometricInterpretation","PhotometricInterpretation","Planar","PlanarConfiguration","PlanarConfiguration","Predictor","Predictor","RATIONAL","RGB","RGBPalette","ResolutionUnit","ResolutionUnit","RowsPerStrip","SBYTE","SHORT","SLONG","SLONG8","SMaxSampleValue","SMinSampleValue","SRATIONAL","SSHORT","SampleFormat","SampleFormat","SamplesPerPixel","Software","StripByteCounts","StripOffsets","SubfileType","Tag","Threshholding","TileByteCounts","TileLength","TileOffsets","TileWidth","TransparencyMask","Type","UNDEFINED","Uint","Unknown","Unknown","Unknown","Void","WhiteIsZero","XResolution","YCbCr","YResolution","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_u16","from_u16","from_u16","from_u16","from_u16","from_u16","from_u16","from_u16","from_u16_exhaustive","from_u16_exhaustive","from_u16_exhaustive","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_u16","to_u16","to_u16","to_u16","to_u16","to_u16","to_u16","to_u16","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"tiff"],[155,"tiff::TiffFormatError"],[159,"tiff::decoder"],[308,"tiff::decoder::ifd"],[378,"tiff::encoder"],[566,"tiff::encoder::colortype"],[919,"tiff::encoder::compression"],[1049,"tiff::tags"]],"d":["","Pixel is CMYK","An enumeration over supported color types and their bit …","","","","The Image is not formatted properly.","Pixel is grayscale","Pixel is grayscale with an alpha channel","","","","","","An integer conversion to or from a platform size failed, …","","","","","","","An I/O Error occurred while decoding the image.","","The Limits of the Decoder is exceeded.","Pixel is an index into a color palette","Pixel contains R, G and B channels","Pixel is RGB with an alpha channel","","","","","","Tiff error kinds.","The image is not formatted properly.","Result of an image decoding/encoding process","","","The Decoder does not support features required by the …","","","","","","","","","","","The Decoder does not support features required by the …","","","","","","User attempted to use the Decoder in a way that is …","The image does not support the requested operation","Pixel is YCbCr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Chunk type of the internal representation","The representation of a TIFF decoder","","Result of a decoding process","A slice of 32 bit IEEE floats","A vector of 32 bit IEEE floats","A slice of 64 bit IEEE floats","A vector of 64 bit IEEE floats","A slice of 16 bits signed ints","A vector of 16 bit signed ints","A slice of 32 bits signed ints","A vector of 32 bit signed ints","A slice of 64 bits signed ints","A vector of 64 bit signed ints","A slice of 8 bits signed ints","A vector of 8 bit signed ints","Decoding limits","","","A slice of unsigned words","A vector of unsigned words","A slice of 32 bit unsigned ints","A vector of 32 bit unsigned ints","A slice of 64 bit unsigned ints","A vector of 64 bit unsigned ints","A slice of unsigned bytes","A vector of unsigned bytes","","","","","","","","","","","","Returns the byte_order","Returns the size of the data in the chunk with the …","Returns the default chunk size for the current image. Any …","","","","","","The maximum size of any <code>DecodingResult</code> in bytes, the …","","","","","","","","","","","","","","","","","","","Tries to retrieve a tag. Return <code>Ok(None)</code> if the tag is not …","Tries to retrieve a tag and convert it to the desired …","Tries to retrieve a vector of all a tag’s values and …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The chunk type (Strips / Tiles) of the image","Tries to retrieve a tag. Returns an error if the tag is …","Tries to retrieve a tag and convert it to a ascii vector.","Tries to retrieve a tag and convert it to the desired type.","Tries to retrieve a tag and convert it to the desired type.","Tries to retrieve a tag and convert it to the desired type.","Tries to retrieve a tag and convert it to the desired type.","","Tries to retrieve a tag and convert it to the desired type.","Tries to retrieve a tag and convert it to the desired type.","","","Tries to retrieve a tag and convert it to a 8bit vector.","Tries to retrieve a tag and convert it to the desired …","Moves the cursor to the specified offset","","Function for reading TIFF tags","The maximum size of any ifd value in bytes, the default is …","","","","","","Maximum size for intermediate buffer which may be used to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if there is at least one more image available.","Create a new decoder that decodes from the stream <code>r</code>","Reads in the next image. If there is no further image in …","Reads a TIFF byte value","Read the specified chunk (at index <code>chunk_index</code>) and return …","","Reads a TIFF double value","Reads a TIFF float value","","Decodes the entire image and return it as a Vector","Reads a TIFF long value","","Reads a TIFF IFA offset/value field","Reads a TIFF IFA offset/value field","Reads a TIFF short value","Reads a TIFF slong value","","Reads a TIFF sshort value","Reads a string","Loads the IFD at the specified index in the list, if one …","Number of strips in image","Number of tiles in image","","","","","","","","","","","","","","","","","","A configuration that does not impose any limits.","","","","Type representing an Image File Directory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Low level interface to encode ifd directories.","","Type to represent tiff values of type <code>IFD</code>","Type to represent tiff values of type <code>IFD8</code>","Type to encode images strip by strip.","Needed for the <code>convert_slice</code> method.","The type of offset fields, <code>u32</code> for normal Tiff, <code>u64</code> for …","Type to represent tiff values of type <code>RATIONAL</code>","Type to represent tiff values of type <code>SRATIONAL</code>","Encoder for Tiff and BigTiff files.","Trait to abstract over Tiff/BigTiff differences.","Create a BigTiff file.","Create a standard Tiff file.","Trait for types that can be encoded in a tiff file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a file offset to <code>Self::OffsetType</code>.","","","Internal helper method for satisfying Rust’s type …","","","","","","","","","","Access this value as an contiguous sequence of bytes. If …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference of the underlying <code>DirectoryEncoder</code>","Write out the ifd directory.","Write out image and ifd directory.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new encoder for standard Tiff files.","Creates a new encoder for BigTiff files.","Create a <code>DirectoryEncoder</code> to encode an ifd directory.","Creates a new Tiff or BigTiff encoder, inferred from the …","Create an <code>ImageEncoder</code> to encode an image one slice at a …","Create an <code>ImageEncoder</code> to encode an image one slice at a …","Number of samples the next strip should have.","Set image resolution","Set image resolution unit","Set image number of lines per strip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write this value to a TiffWriter. While the default …","Write this value to a TiffWriter. While the default …","","","","","Write some data to the tiff file, the offset of the data …","Write strips from data","Write the IFD entry count field with the given <code>count</code> value.","","","Write the (Big)Tiff header.","","","Convenience function to write an entire image from memory.","Convenience function to write an entire image from memory …","Write an offset value to the given writer.","","","Write a single strip.","Write a single ifd tag.","Set image x-resolution","Set image y-resolution","The value of the tiff tag <code>BitsPerSample</code>","","","","","","","Trait for different colortypes that can be encoded.","","","","","","","","","","","The type of each sample of this colortype","","","","","","","","","","","","","The value of the tiff tag <code>SampleFormat</code>","The value of the tiff tag <code>PhotometricInterpretation</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The conserative choice between speed and ratio.","The best compression available with Deflate.","The corresponding tag to the algorithm.","An algorithm used for compression with associated enums …","An algorithm used for compression","An enum to store each compression algorithm.","The Deflate algorithm used to compress image data in TIFF …","","The level of compression used by the Deflate algorithm. It …","The fastest possible compression mode.","The LZW algorithm used to compress image data in TIFF …","","Compressor that uses the Packbits algorithm to compress …","","The default algorithm which does not compress at all.","","","","","","","","","","","","","","","","","","","","","","","","","The default compression strategy does not apply any …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Method to optain a type that can store each variant of …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Create a new deflate compressor with a specific level of …","The algorithm writes data directly into the writer. It …","","","","","","8-bit byte that contains a 7-bit ASCII code; the last byte …","","8-bit unsigned integer","","","","","","","","","","","See TIFF compression tags for reference.","","64-bit IEEE floating point","","","","32-bit IEEE floating point","","","","","","","","","","","","","","","","","32-bit unsigned integer (offset)","BigTIFF 64-bit unsigned integer (offset)","","","","","","","","32-bit unsigned integer","BigTIFF 64-bit unsigned integer","","","","","","","","","","","","","","","","","","","","","","","","Fraction stored as two 32-bit unsigned integers","","","Type to represent resolution units","","","8-bit signed integer","16-bit unsigned integer","32-bit signed integer","BigTIFF 64-bit signed integer","","","Fraction stored as two 32-bit signed integers","16-bit signed integer","","","","","","","","TIFF tags","","","","","","","The type of an IFD entry (a 2 byte field).","8-bit byte that may contain anything, depending on the …","","A private or extension tag","A custom compression method","An unknown extension sample format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[4,6,0,4,5,4,1,6,6,5,4,5,4,4,1,5,14,14,4,4,4,1,4,1,6,6,6,4,4,4,4,4,0,0,0,4,4,0,4,5,5,4,4,4,5,5,5,5,1,5,5,5,5,5,0,1,6,1,4,5,14,6,1,4,5,14,6,1,4,5,6,4,5,6,0,1,4,5,14,6,1,4,5,14,6,1,1,4,5,14,6,0,4,5,6,5,6,1,1,4,4,5,5,14,14,6,1,1,1,1,1,1,1,1,1,1,4,5,14,6,5,6,1,4,5,14,6,1,4,5,14,6,0,4,5,6,1,4,5,14,1,4,5,14,6,1,4,5,14,6,1,4,5,14,6,79,80,79,80,0,0,0,0,25,24,25,24,25,24,25,24,25,24,25,24,0,30,30,25,24,25,24,25,24,25,24,24,25,24,30,31,28,25,24,30,31,28,28,28,28,30,31,30,31,28,31,31,25,24,30,31,28,25,24,30,31,28,28,25,24,30,31,28,30,28,28,28,24,30,31,28,0,0,25,24,30,31,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,31,25,24,30,31,28,31,25,24,30,31,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,30,31,25,24,30,31,28,25,24,30,31,28,25,24,30,31,28,31,28,34,34,0,34,0,34,34,34,34,34,34,34,34,34,34,34,34,34,0,34,49,34,49,34,49,34,49,34,49,34,49,34,49,34,34,49,34,49,34,49,34,49,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,49,49,34,49,34,49,34,49,34,49,49,67,0,67,0,0,0,57,57,0,0,0,0,0,0,0,63,58,61,62,64,51,52,53,54,63,58,61,62,64,51,52,53,54,67,67,51,52,53,54,51,52,53,54,0,0,57,62,64,57,62,64,67,51,52,53,54,53,54,67,51,52,53,54,63,58,61,62,64,51,52,53,54,63,58,61,62,64,51,52,53,54,63,58,58,61,61,62,64,51,52,53,54,61,58,61,63,58,61,62,64,51,52,53,54,63,58,61,62,64,51,52,53,54,63,58,61,62,64,51,52,53,54,53,54,63,63,63,63,63,63,61,61,61,61,51,52,53,54,63,58,61,62,64,51,52,53,54,63,58,61,62,64,51,52,53,54,63,58,61,62,64,51,52,53,54,67,67,51,52,53,54,58,61,57,62,64,57,62,64,63,63,57,62,64,61,58,61,61,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0,0,0,0,0,59,59,0,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,69,69,60,0,0,0,0,73,0,69,0,73,0,73,0,73,73,68,69,70,71,65,73,68,69,70,71,65,68,69,70,71,65,68,69,70,71,65,69,73,68,69,70,71,65,73,68,69,70,71,65,73,68,69,70,71,65,73,68,69,70,71,65,69,70,71,65,69,70,71,65,68,69,70,71,65,73,68,69,70,71,65,60,68,70,71,65,73,68,69,70,71,65,73,68,69,70,71,65,69,68,69,70,71,65,73,68,69,70,71,65,73,68,69,70,71,65,73,68,69,70,71,65,68,110,73,68,70,71,65,50,33,50,33,75,75,75,33,33,66,76,33,33,0,33,50,33,74,33,50,74,74,33,77,33,33,33,33,33,33,33,33,77,33,74,78,50,50,33,33,33,66,78,74,33,50,50,74,33,33,33,33,33,33,33,74,33,74,77,66,74,33,74,0,33,76,0,33,0,33,50,75,75,0,33,33,50,50,50,50,33,33,50,50,0,33,33,33,33,33,33,0,33,33,33,33,33,75,0,50,78,33,74,78,78,75,33,75,33,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,74,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78,33,50,74,75,76,77,66,78],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[3,[2]]]],[4,4],[5,5],[6,6],[[]],[[]],[[]],0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[1,8],[7],[7],[7],[7],[7],0,[[4,4],9],[[5,5],9],[[6,6],9],[[],9],[[],9],[[1,10],[[12,[11]]]],[[1,10],13],[[4,10],[[12,[11]]]],[[4,10],13],[[5,10],[[12,[11]]]],[[5,10],13],[[14,10],13],[[14,10],13],[[6,10],13],[[]],[14,1],[4,1],[5,1],[15,1],[16,1],[17,1],[18,1],[19,1],[20,1],[[]],[[]],[[]],[[]],[[5,21]],[[6,21]],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[24,7],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[28,[[0,[26,27]]]],29]],[[[28,[[0,[26,27]]]]]],[30,30],[31,31],[[]],[[]],[[[28,[[0,[26,27]]]]],[[32,[6]]]],0,[[],31],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[28,[[0,[26,27]]]]],32],[7],[7],[7],[7],[7],[[30,30],9],[[[28,[[0,[26,27]]]],33],[[32,[[3,[34]]]]]],[[[28,[[0,[26,27]]]],33],[[32,[[3,[[36,[35]]]]]]]],[[[28,[[0,[26,27]]]],33],[[32,[[3,[[37,[[36,[35]]]]]]]]]],[[24,10],13],[[30,10],13],[[31,10],13],[[[28,[[0,[26,27,38]]]],10],13],[[[40,[39]],[40,[41]],7]],[[[40,[39]],[40,[42]],7]],[[]],[[]],[[]],[[]],[[]],[[[28,[[0,[26,27]]]]],30],[[[28,[[0,[26,27]]]],33],[[32,[34]]]],[[[28,[[0,[26,27]]]],33],[[32,[22]]]],[[[28,[[0,[26,27]]]],33],[[32,[41]]]],[[[28,[[0,[26,27]]]],33],[[32,[[37,[41]]]]]],[[[28,[[0,[26,27]]]],33],[[32,[42]]]],[[[28,[[0,[26,27]]]],33],[[32,[[37,[42]]]]]],[[[28,[[0,[26,27]]]],33],[[32,[[37,[43]]]]]],[[[28,[[0,[26,27]]]],33],[[32,[29]]]],[[[28,[[0,[26,27]]]],33],[[32,[[37,[29]]]]]],[[[28,[[0,[26,27]]]],33],[[32,[35]]]],[[[28,[[0,[26,27]]]],33],[[32,[[37,[35]]]]]],[[[28,[[0,[26,27]]]],33],[[32,[[37,[39]]]]]],[[[28,[[0,[26,27]]]],33],[[32,[[36,[35]]]]]],[[[28,[[0,[26,27]]]],29],44],[[[28,[[0,[26,27]]]],35],44],0,0,[[],7],[[],7],[[],7],[[],7],[[],7],0,[[]],[[]],[[]],[[]],[[]],[[[28,[[0,[26,27]]]]],9],[[[0,[26,27]]],[[32,[[28,[[0,[26,27]]]]]]]],[[[28,[[0,[26,27]]]]],32],[[[28,[[0,[26,27]]]]],[[12,[39,17]]]],[[[28,[[0,[26,27]]]],29],[[32,[24]]]],[[[28,[[0,[26,27]]]],25,29,7],32],[[[28,[[0,[26,27]]]]],[[12,[42,17]]]],[[[28,[[0,[26,27]]]]],[[12,[41,17]]]],[[[28,[[0,[26,27]]]]],[[12,[35,17]]]],[[[28,[[0,[26,27]]]]],[[32,[24]]]],[[[28,[[0,[26,27]]]]],[[12,[29,17]]]],[[[28,[[0,[26,27]]]]],[[12,[35,17]]]],[[[28,[[0,[26,27]]]]],[[32,[[45,[39]]]]]],[[[28,[[0,[26,27]]]]],[[12,[[45,[39]],17]]]],[[[28,[[0,[26,27]]]]],[[12,[43,17]]]],[[[28,[[0,[26,27]]]]],[[12,[46,17]]]],[[[28,[[0,[26,27]]]]],[[12,[47,17]]]],[[[28,[[0,[26,27]]]]],[[12,[48,17]]]],[[[28,[[0,[26,27]]]],7],[[32,[22]]]],[[[28,[[0,[26,27]]]],7],32],[[[28,[[0,[26,27]]]]],[[32,[29]]]],[[[28,[[0,[26,27]]]]],[[32,[29]]]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],[[],31],[[[28,[[0,[26,27]]]],31],[[28,[[0,[26,27]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[34,34],[49,49],[[]],[[]],[7],[7],[7],[7],[7],[7],[[34,34],9],[[34,10],13],[[49,10],[[12,[11]]]],[[]],[[]],[[],7],[[],7],[[]],[[]],[34,[[32,[41]]]],[34,[[32,[[37,[41]]]]]],[34,[[32,[42]]]],[34,[[32,[[37,[42]]]]]],[34,[[32,[46]]]],[34,[[32,[[37,[46]]]]]],[34,[[32,[47]]]],[34,[[32,[[37,[47]]]]]],[34,[[32,[22]]]],[34,[[32,[43]]]],[34,[[32,[[37,[43]]]]]],[34,[[32,[29]]]],[34,[[32,[[37,[29]]]]]],[34,[[32,[35]]]],[34,[[32,[[37,[35]]]]]],[34,[[32,[39]]]],[34,[[32,[[37,[39]]]]]],[[50,29,[45,[39]]],49],[[50,35,[45,[39]]],49],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[49,31,9,[0,[[0,[26,27]]]]],[[32,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[51,51],[52,52],[53,53],[54,54],[[]],[[]],[[]],[[]],0,0,[35,32],[35,32],[35,32],[40],[40],[40],[[],7],[51,7],[52,7],[53,7],[54,7],0,0,[[],[[55,[[40,[39]]]]]],[51,[[55,[[40,[39]]]]]],[52,[[55,[[40,[39]]]]]],[53,[[55,[[40,[39]]]]]],[54,[[55,[[40,[39]]]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[58,[[0,[56,27]],57]]]],[7],[[[61,[[0,[56,27]],59,57,60]]]],[7],[7],[7],[7],[7],[7],[7],[[[61,[[0,[56,27]],59,57,60]]],[[58,[[0,[56,27]],57]]]],[[[58,[[0,[56,27]],57]]],32],[[[61,[[0,[56,27]],59,57,60]]],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[0,[56,27]]],[[32,[[63,[[0,[56,27]],62]]]]]],[[[0,[56,27]]],[[32,[[63,[[0,[56,27]],64]]]]]],[[[63,[[0,[56,27]],57]]],[[32,[[58,[[0,[56,27]],57]]]]]],[[[0,[56,27]]],[[32,[[63,[[0,[56,27]],57]]]]]],[[[63,[[0,[56,27]],57]],29,29],[[32,[[61,[[0,[56,27]],59,57,65]]]]]],[[[63,[[0,[56,27]],57]],29,29,60],[[32,[[61,[[0,[56,27]],59,57,60]]]]]],[[[61,[[0,[56,27]],59,57,60]]],35],[[[61,[[0,[56,27]],59,57,60]],66,53]],[[[61,[[0,[56,27]],59,57,60]],66]],[[[61,[[0,[56,27]],59,57,60]],29],32],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[0,[56]]],32],[[[0,[56]]],32],[[51,[0,[56]]],32],[[52,[0,[56]]],32],[[53,[0,[56]]],32],[[54,[0,[56]]],32],[[[58,[[0,[56,27]],57]],67],[[32,[35]]]],[[[61,[[0,[56,27]],59,57,60]],40],32],[[[0,[56]],7],32],[[[0,[56]],7],32],[[[0,[56]],7],32],[[[0,[56]]],32],[[[0,[56]]],32],[[[0,[56]]],32],[[[63,[[0,[56,27]],57]],29,29,40],32],[[[63,[[0,[56,27]],57]],29,29,60,40],32],[[[0,[56]],35],32],[[[0,[56]],35],32],[[[0,[56]],35],32],[[[61,[[0,[56,27]],59,57,60]],40],32],[[[58,[[0,[56,27]],57]],33,67],32],[[[61,[[0,[56,27]],59,57,60]],53]],[[[61,[[0,[56,27]],59,57,60]],53]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,68],[69,69],[70,70],[71,71],[65,65],[[]],[[]],[[]],[[]],[[]],[[69,69],72],[[],73],[[],68],[[],69],[[],70],[[],71],[[],65],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[69,69],9],[[70,70],9],[[71,71],9],[[65,65],9],[[],9],[[],9],[[],9],[[],9],[[68,10],13],[[69,10],13],[[70,10],13],[[71,10],13],[[65,10],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],73],[68,73],[70,73],[71,73],[65,73],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[69,69],[[3,[72]]]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[69,68],[[56,[40,[39]]],[[12,[35,17]]]],[[73,56,[40,[39]]],[[12,[35,17]]]],[[68,56,[40,[39]]],[[12,[35,17]]]],[[70,56,[40,[39]]],[[12,[35,17]]]],[[71,56,[40,[39]]],[[12,[35,17]]]],[[65,56,[40,[39]]],[[12,[35,17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,33],[50,50],[74,74],[75,75],[76,76],[77,77],[66,66],[78,78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[33,33],9],[[50,50],9],[[74,74],9],[[75,75],9],[[76,76],9],[[77,77],9],[[66,66],9],[[78,78],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[33,10],13],[[50,10],13],[[74,10],13],[[75,10],13],[[76,10],13],[[77,10],13],[[66,10],13],[[78,10],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,[[3,[33]]]],[43,[[3,[50]]]],[43,[[3,[74]]]],[43,[[3,[75]]]],[43,[[3,[76]]]],[43,[[3,[77]]]],[43,[[3,[66]]]],[43,[[3,[78]]]],[43,33],[43,74],[43,78],[[33,21]],[[50,21]],[[74,21]],[[75,21]],[[76,21]],[[77,21]],[[66,21]],[[78,21]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,43],[50,43],[74,43],[75,43],[76,43],[77,43],[66,43],[78,43],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23]],"c":[],"p":[[4,"TiffError"],[8,"Error"],[4,"Option"],[4,"TiffFormatError"],[4,"TiffUnsupportedError"],[4,"ColorType"],[15,"usize"],[15,"str"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[4,"UsageError"],[3,"TryFromIntError"],[4,"LzwError"],[3,"Error"],[3,"FromUtf8Error"],[4,"Error"],[3,"Utf8Error"],[8,"Hasher"],[3,"String"],[3,"TypeId"],[4,"DecodingResult"],[4,"DecodingBuffer"],[8,"Read"],[8,"Seek"],[3,"Decoder"],[15,"u32"],[4,"ChunkType"],[3,"Limits"],[6,"TiffResult"],[4,"Tag"],[4,"Value"],[15,"u64"],[8,"TryFrom"],[3,"Vec"],[8,"Debug"],[15,"u8"],[15,"slice"],[15,"f32"],[15,"f64"],[15,"u16"],[6,"Result"],[15,"array"],[15,"i32"],[15,"i64"],[15,"i16"],[3,"Entry"],[4,"Type"],[3,"Ifd"],[3,"Ifd8"],[3,"Rational"],[3,"SRational"],[4,"Cow"],[8,"Write"],[8,"TiffKind"],[3,"DirectoryEncoder"],[8,"ColorType"],[8,"Compression"],[3,"ImageEncoder"],[3,"TiffKindStandard"],[3,"TiffEncoder"],[3,"TiffKindBig"],[3,"Uncompressed"],[4,"ResolutionUnit"],[8,"TiffValue"],[3,"Deflate"],[4,"DeflateLevel"],[3,"Lzw"],[3,"Packbits"],[4,"Ordering"],[4,"Compressor"],[4,"CompressionMethod"],[4,"PhotometricInterpretation"],[4,"PlanarConfiguration"],[4,"Predictor"],[4,"SampleFormat"],[13,"UnexpectedCompressedData"],[13,"InconsistentStripSamples"],[3,"Gray8"],[3,"GrayI8"],[3,"Gray16"],[3,"GrayI16"],[3,"Gray32"],[3,"GrayI32"],[3,"Gray32Float"],[3,"Gray64"],[3,"GrayI64"],[3,"Gray64Float"],[3,"RGB8"],[3,"RGB16"],[3,"RGB32"],[3,"RGB32Float"],[3,"RGB64"],[3,"RGB64Float"],[3,"RGBA8"],[3,"RGBA16"],[3,"RGBA32"],[3,"RGBA32Float"],[3,"RGBA64"],[3,"RGBA64Float"],[3,"CMYK8"],[3,"CMYK16"],[3,"CMYK32"],[3,"CMYK32Float"],[3,"CMYK64"],[3,"CMYK64Float"],[3,"YCbCr8"],[8,"CompressionAlgorithm"]]},\
"ttf_parser":{"doc":"A high-level, safe, zero-allocation TrueType font parser.","t":"NNNNNENNNNNNNNDNEDDIDNNNNNNNNDDDDNDNNNNNNNNNNNNNNDNNINEDEDDNDSDNNNEDNNNNNNDDEENNAMMALLAMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMAMAMMAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKAMMLLLLKMMLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLAMMAMMLLLLAMMLLLLLLLLLLLAMMAMMAMMLLLAMMLLMAMMMAMMAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMAMMLLLLKAMMAMMMAMMKAMMAMMAMLLLLLLAAMMLKLLLLLMMAMMKLAMMLLLLLLAMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLAMMMMAMMMMLLLMMLMMMMMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDDGDDLLLLLLLLLLALLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMLLLLALLLLLLLLLLLLLLLLLLLLLLRRRRDDDDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMLLLLLLLLLLLLLLLDLLLLLLLLLLLLLDLLLLLLLLLLLLDLLLLLLLLLLLLLLDLLLLLLLLLLLLLLNENENNNNNDDDDDDDDDDDDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLMMMLLLMMLLLLLLLLLLLLLLLLLLLDDMLLLLLLLLMLLLLLMLLMMMLLMLLLLLLLLNNENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLDDNDNNDDENNNNNDDDNDNDNDNEDDENEDDNDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMMMLMMMMMMMMMMMMNDGDNNNNDNGGDNDNDDGNEEMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDLLLLLLLLLLLLLENNDLLLLLLLLLLLLLMMLLLLLLLLLLLMDMLLLLMLLLMMLLLLLDDLMMLLLLLLLLLLLLLLMMLLLMLLLLLLLLDLLLLLLLLLLLLLLENNNNDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDENNNNNDDDDDDDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMNNELLLLLLLLLLLLLLDLLLLLLLMLLLLLDDDNDDDDNDDNDNNDEDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLNNNDDDEDNNLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLMAMMLLLMLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRREDGGGEEEDGGDNNNNNNNNNNGDGDDDGGIDDDDIDDGGDDGGGMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMMMLMLLKKLLLLLLMLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNDNNNEDNNNEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMDDLLLLLLLLLLLLLLLLMMLMLLLLLLLLLMDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLMLLLLMLLLLLLLLLLLLLLLMMMDMLLLLLMLLLMMLLLLLDDLLLLLLLLMLLLLMLLLMLLLLLLLLLLM","n":["ArgumentsStackLimitReached","BboxOverflow","Black","BlendRegionsLimitReached","Bold","CFFError","Condensed","Custom","DataAfterEndChar","Expanded","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","Face","FaceIndexOutOfBounds","FaceParsingError","FaceTables","Fixed","FromData","GlyphId","InvalidArgumentsStackLength","InvalidItemVariationDataIndex","InvalidNumberOfBlendOperands","InvalidOperator","InvalidSeacCode","InvalidSubroutineIndex","Iso","Italic","LazyArray16","LazyArray32","LazyArrayIter16","LazyArrayIter32","Light","LineMetrics","Macintosh","MalformedFont","Medium","MissingEndChar","MissingMoveTo","NestingLimitReached","NoGlyph","NoHeadTable","NoHheaTable","NoLocalSubroutines","NoMaxpTable","Normal","Normal","Normal","NormalizedCoordinate","Oblique","Other","OutlineBuilder","PNG","PlatformId","RasterGlyphImage","RasterImageFormat","RawFace","RawFaceTables","ReadOutOfBounds","Rect","SIZE","ScriptMetrics","SemiBold","SemiCondensed","SemiExpanded","Style","Tag","Thin","UltraCondensed","UltraExpanded","Unicode","UnknownMagic","UnsupportedOperator","Variation","VariationAxis","Weight","Width","Windows","ZeroBBox","ankr","ankr","ankr","apple_layout","as_u32","ascender","avar","avar","avar","axis","binary_search","binary_search","binary_search_by","binary_search_by","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capital_height","cbdt","cbdt","cbdt","cblc","cblc","cff","cff","cff","cff2","cff2","cff2","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmap","cmap","cmap","cmp","cmp","count","count","curve_to","data","def_value","default","default","default","default","default","default","descender","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","feat","feat","feat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fonts_in_collection","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes_lossy","from_raw_tables","from_slice","from_slice","fvar","fvar","fvar","gdef","gdef","gdef","get","get","get","global_bounding_box","glyf","glyf","glyf","glyph_bounding_box","glyph_hor_advance","glyph_hor_side_bearing","glyph_index","glyph_name","glyph_raster_image","glyph_svg_image","glyph_variation_index","glyph_ver_advance","glyph_ver_side_bearing","glyph_y_origin","gpos","gpos","gpos","gsub","gsub","gsub","gvar","gvar","gvar","has_non_default_variation_coordinates","hash","hash","head","head","head","height","height","height","hhea","hhea","hhea","hidden","hmtx","hmtx","hmtx","hvar","hvar","hvar","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_bold","is_empty","is_italic","is_monospaced","is_null","is_oblique","is_regular","is_variable","italic_angle","kern","kern","kern","kerx","kerx","kerx","last","len","len","line_gap","line_to","loca","loca","max_value","maxp","maxp","maxp","min_value","morx","morx","morx","move_to","mvar","mvar","mvar","name","name","name","name_id","name_id","names","new","new","next","next","number_of_glyphs","opentype_layout","os2","os2","os2","outline_glyph","parse","parse","parse","parse","partial_cmp","partial_cmp","pixels_per_em","position","post","post","post","quad_to","range","sbix","sbix","sbix","set_variation","slice","strikeout_metrics","style","subscript_metrics","superscript_metrics","svg","svg","svg","table","table_data","tables","tag","thickness","to_bytes","to_chars","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","trak","trak","trak","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typographic_ascender","typographic_descender","typographic_line_gap","underline_metrics","units_per_em","value","variation_axes","variation_coordinates","vertical_ascender","vertical_descender","vertical_height","vertical_line_gap","vhea","vhea","vhea","vmtx","vmtx","vorg","vorg","vorg","vvar","vvar","weight","width","width","width","x","x_height","x_max","x_min","x_offset","x_size","y","y_max","y_min","y_offset","y_size","Point","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","fmt","fmt","from","from","into","into","parse","parse","points","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y","ExtendedStateTable","GenericStateEntry","Lookup","StateEntry","StateTable","ValueOffset","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class","class","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","entry","entry","extra","flags","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","has_advance","has_mark","has_offset","has_push","has_reset","into","into","into","into","into","kerning","new_state","new_state","next","parse","parse","parse","state","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","value_offset","DELETED_GLYPH","END_OF_TEXT","OUT_OF_BOUNDS","START_OF_TEXT","AxisValueMap","SegmentMaps","SegmentMapsIter","Table","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from_coordinate","into","into","into","into","into_iter","into_iter","len","map_coordinates","next","parse","parse","segment_maps","to_coordinate","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","get","into","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","glyph_name","into","outline","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","ByteEncodingTable","Format","Found","GlyphVariationResult","HighByteMappingThroughTable","ManyToOneRangeMappings","MixedCoverage","SegmentMappingToDeltaValues","SegmentedCoverage","Subtable","Subtable0","Subtable10","Subtable12","Subtable13","Subtable14","Subtable2","Subtable4","Subtable6","Subtables","SubtablesIter","Table","TrimmedArray","TrimmedTableMapping","UnicodeVariationSequences","UseDefault","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","codepoints","default","encoding_id","eq","first_code_point","first_code_point","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","glyph_ids","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_index","glyph_variation_index","glyphs","glyphs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_unicode","len","next","parse","parse","parse","parse","parse","parse","parse","parse","parse","platform_id","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","FeatureName","FeatureNames","FeatureNamesIter","SettingName","Table","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default_setting_index","exclusive","feature","find","fmt","fmt","fmt","fmt","from","from","from","from","from","get","into","into","into","into","into","into_iter","into_iter","len","name_index","name_index","names","next","parse","parse","setting","setting_names","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Table","VariationAxis","axes","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","def_value","eq","fmt","fmt","from","from","hidden","into","into","max_value","min_value","name_id","parse","parse","tag","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Base","Component","GlyphClass","Ligature","Mark","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","eq","equivalent","fmt","from","from","glyph_class","glyph_mark_attachment_class","glyph_variation_delta","has_glyph_classes","hash","into","into","is_mark_glyph","parse","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","Anchor","AnchorMatrix","ChainContext","ClassMatrix","Context","Cursive","CursiveAdjustment","CursiveAnchorSet","Device","Format1","Format1","Format2","Format2","Hinting","HintingDevice","LigatureArray","MarkArray","MarkToBase","MarkToBaseAdjustment","MarkToLigature","MarkToLigatureAdjustment","MarkToMark","MarkToMarkAdjustment","Pair","PairAdjustment","PairSet","PairSets","PositioningSubtable","Single","SingleAdjustment","ValueRecord","ValueRecordsArray","Variation","VariationDevice","anchors","base_coverage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cols","coverage","coverage","coverage","coverage","default","entry","exit","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","get","get","get","inner_index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","len","len","len","len","len","ligature_array","ligature_coverage","mark1_coverage","mark2_coverage","mark2_matrix","mark_coverage","mark_coverage","marks","marks","marks","outer_index","parse","rows","sets","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","x","x_advance","x_advance_device","x_delta","x_device","x_placement","x_placement_device","y","y_advance","y_advance_device","y_delta","y_device","y_placement","y_placement_device","classes","coverage","coverage","matrix","sets","coverage","coverage","value","values","Alternate","AlternateSet","AlternateSets","AlternateSubstitution","ChainContext","Context","Format1","Format2","Ligature","Ligature","LigatureSet","LigatureSets","LigatureSubstitution","Multiple","MultipleSubstitution","ReverseChainSingle","ReverseChainSingleSubstitution","Sequence","SequenceList","Single","SingleSubstitution","SubstitutionSubtable","alternate_sets","alternates","backtrack_coverages","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components","coverage","coverage","coverage","coverage","coverage","coverage","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","glyph","into","into","into","into","into","into","into","into","into","is_reverse","ligature_sets","lookahead_coverages","parse","sequences","substitutes","substitutes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","coverage","coverage","delta","substitutes","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","outline","parse","to_owned","try_from","try_into","type_id","IndexToLocationFormat","Long","Short","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","from","from","global_bbox","index_to_location_format","into","into","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","units_per_em","Table","ascender","borrow","borrow_mut","clone","clone_into","descender","fmt","from","into","line_gap","number_of_metrics","parse","to_owned","try_from","try_into","type_id","Metrics","Table","advance","advance","bearings","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","metrics","number_of_metrics","parse","parse","side_bearing","side_bearing","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Table","advance_offset","borrow","borrow_mut","clone","clone_into","fmt","from","into","parse","side_bearing_offset","to_owned","try_from","try_into","type_id","Format","Format0","Format1","Format2","Format3","KerningPair","Subtable","Subtable0","Subtable2","Subtable3","Subtables","SubtablesIter","Table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","has_cross_stream","has_state_machine","horizontal","into","into","into","into","into","into","into","into","into","into_iter","into_iter","left","len","next","pair","pairs","parse","parse","parse","parse","parse","right","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","variable","AnchorPoints","EntryData","Format","Format0","Format1","Format2","Format4","Format6","Subtable","Subtable0","Subtable1","Subtable2","Subtable4","Subtable6","Subtables","SubtablesIter","Table","action_index","anchor_points","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","get","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","glyphs_kerning","has_cross_stream","has_state_machine","horizontal","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","next","pairs","parse","parse","state_table","state_table","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple_count","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variable","Long","Short","Table","borrow","borrow_mut","clone","clone_into","fmt","from","glyph_range","into","len","parse","to_owned","try_from","try_into","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","number_of_glyphs","parse","to_owned","try_from","try_into","type_id","Chain","Chains","ChainsIter","Contextual","ContextualEntryData","ContextualSubtable","Coverage","Feature","Insertion","InsertionEntryData","InsertionSubtable","Ligature","LigatureSubtable","NonContextual","Rearrangement","Subtable","SubtableKind","Subtables","SubtablesIter","Table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chains","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","components","coverage","current_index","current_insert_index","default_flags","disable_flags","enable_flags","feature_flags","features","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","glyphs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_all_directions","is_backwards","is_logical","is_vertical","kind","kind","ligature_actions","ligatures","lookup","mark_index","marked_insert_index","next","next","parse","parse","parse","parse","setting","state","state","state","subtables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Table","borrow","borrow_mut","clone","clone_into","fmt","from","into","metric_offset","parse","to_owned","try_from","try_into","type_id","Custom","Iso","Macintosh","Name","Names","NamesIter","PlatformId","Table","Unicode","Windows","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","count","default","default","encoding_id","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","get","into","into","into","into","into","into_iter","into_iter","is_unicode","language_id","len","name","name_id","name_id","names","next","parse","parse","platform_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","COMPATIBLE_FULL","COPYRIGHT_NOTICE","DARK_BACKGROUND_PALETTE","DESCRIPTION","DESIGNER","DESIGNER_URL","FAMILY","FULL_NAME","LICENSE","LICENSE_URL","LIGHT_BACKGROUND_PALETTE","MANUFACTURER","POST_SCRIPT_CID","POST_SCRIPT_NAME","SAMPLE_TEXT","SUBFAMILY","TRADEMARK","TYPOGRAPHIC_FAMILY","TYPOGRAPHIC_SUBFAMILY","UNIQUE_ID","VARIATIONS_POST_SCRIPT_NAME_PREFIX","VENDOR_URL","VERSION","WWS_FAMILY","WWS_SUBFAMILY","COMPATIBLE_FULL","COPYRIGHT_NOTICE","DARK_BACKGROUND_PALETTE","DESCRIPTION","DESIGNER","DESIGNER_URL","FAMILY","FULL_NAME","LICENSE","LICENSE_URL","LIGHT_BACKGROUND_PALETTE","MANUFACTURER","POST_SCRIPT_CID","POST_SCRIPT_NAME","SAMPLE_TEXT","SUBFAMILY","TRADEMARK","TYPOGRAPHIC_FAMILY","TYPOGRAPHIC_SUBFAMILY","UNIQUE_ID","VARIATIONS_POST_SCRIPT_NAME_PREFIX","VENDOR_URL","VERSION","WWS_FAMILY","WWS_SUBFAMILY","ChainedContextLookup","ChainedSequenceRule","ChainedSequenceRuleSet","ChainedSequenceRuleSets","Class","ClassDefinition","ContextLookup","Coverage","Feature","FeatureIndex","FeatureList","FeatureVariations","Format1","Format1","Format1","Format1","Format2","Format2","Format2","Format2","Format3","Format3","LanguageIndex","LanguageSystem","LanguageSystemList","LayoutTable","Lookup","LookupFlags","LookupIndex","LookupList","LookupSubtable","LookupSubtables","LookupSubtablesIter","RangeRecord","RecordList","RecordListItem","RecordListIter","Script","ScriptIndex","ScriptList","SequenceLookupRecord","SequenceRule","SequenceRuleSet","SequenceRuleSets","VariationIndex","backtrack","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","coverage","coverage","default_language","end","feature_indices","features","find","find_index","find_substitute","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","ignore_base_glyphs","ignore_flags","ignore_ligatures","ignore_marks","index","input","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","languages","len","len","lookahead","lookup_indices","lookup_list_index","lookups","lookups","lookups","mark_attachment_type","mark_filtering_set","next","next","parse","parse","parse","parse","parse","parse","parse","parse","required_feature","right_to_left","scripts","sequence_index","start","subtables","tag","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_mark_filtering_set","value","variations","backtrack_classes","backtrack_coverages","coverage","coverage","coverage","input_classes","input_coverages","lookahead_classes","lookahead_coverages","lookups","sets","sets","classes","records","start","classes","coverage","coverage","coverage","coverages","lookups","sets","sets","glyphs","records","Black","Bold","Condensed","Expanded","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","Italic","Light","Medium","Normal","Normal","Normal","Oblique","Other","ScriptMetrics","SemiBold","SemiCondensed","SemiExpanded","Style","Table","Thin","UltraCondensed","UltraExpanded","Weight","Width","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capital_height","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","into","into","into","into","into","is_bold","parse","partial_cmp","strikeout_metrics","style","subscript_metrics","superscript_metrics","to_number","to_number","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","typographic_ascender","typographic_descender","typographic_line_gap","use_typographic_metrics","version","weight","width","windows_ascender","windows_descender","x_height","x_offset","x_size","y_offset","y_size","Names","Table","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","get","into","into","is_monospaced","italic_angle","len","names","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","underline_metrics","Strike","Strikes","StrikesIter","Table","best_strike","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","get","get","into","into","into","into","into_iter","into_iter","len","len","next","parse","pixels_per_em","ppi","strikes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","SvgDocumentsList","SvgDocumentsListIter","Table","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","documents","find","fmt","fmt","from","from","from","get","into","into","into","into_iter","into_iter","len","next","parse","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Table","Track","TrackData","Tracks","TracksIter","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from","get","horizontal","into","into","into","into","into","into_iter","into_iter","len","name_index","next","parse","sizes","to_owned","to_owned","to_owned","to_owned","tracks","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","values","vertical","Table","ascender","borrow","borrow_mut","clone","clone_into","default","descender","fmt","from","into","line_gap","number_of_metrics","parse","to_owned","try_from","try_into","type_id","Table","VerticalOriginMetrics","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default_y","fmt","fmt","from","from","glyph_id","glyph_y_origin","into","into","metrics","parse","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","y"],"q":[[0,"ttf_parser"],[535,"ttf_parser::ankr"],[566,"ttf_parser::apple_layout"],[649,"ttf_parser::apple_layout::class"],[652,"ttf_parser::apple_layout::state"],[653,"ttf_parser::avar"],[707,"ttf_parser::cbdt"],[721,"ttf_parser::cblc"],[734,"ttf_parser::cff"],[749,"ttf_parser::cff2"],[764,"ttf_parser::cmap"],[983,"ttf_parser::feat"],[1055,"ttf_parser::fvar"],[1089,"ttf_parser::gdef"],[1128,"ttf_parser::glyf"],[1142,"ttf_parser::gpos"],[1447,"ttf_parser::gpos::PairAdjustment"],[1452,"ttf_parser::gpos::SingleAdjustment"],[1456,"ttf_parser::gsub"],[1595,"ttf_parser::gsub::SingleSubstitution"],[1599,"ttf_parser::gvar"],[1613,"ttf_parser::head"],[1644,"ttf_parser::hhea"],[1661,"ttf_parser::hmtx"],[1694,"ttf_parser::hvar"],[1709,"ttf_parser::kern"],[1845,"ttf_parser::kerx"],[2018,"ttf_parser::loca"],[2035,"ttf_parser::maxp"],[2049,"ttf_parser::morx"],[2269,"ttf_parser::mvar"],[2283,"ttf_parser::name"],[2367,"ttf_parser::name::name_id"],[2392,"ttf_parser::name_id"],[2417,"ttf_parser::opentype_layout"],[2724,"ttf_parser::opentype_layout::ChainedContextLookup"],[2736,"ttf_parser::opentype_layout::ClassDefinition"],[2739,"ttf_parser::opentype_layout::ContextLookup"],[2747,"ttf_parser::opentype_layout::Coverage"],[2749,"ttf_parser::os2"],[2872,"ttf_parser::post"],[2904,"ttf_parser::sbix"],[2960,"ttf_parser::svg"],[3004,"ttf_parser::trak"],[3075,"ttf_parser::vhea"],[3093,"ttf_parser::vorg"]],"d":["","","","","","A list of errors that can occur during a CFF glyph …","","","","","","","","","A font face.","The face index is larger than the number of faces in the …","A list of font face parsing errors.","Parsed face tables.","A 32-bit signed fixed-point number (16.16).","A trait for parsing raw binary data of fixed size.","A type-safe wrapper for glyph ID.","","","","","","","","A form that is generally cursive in nature.","A slice-like container that converts internal binary data …","A slice-like container that converts internal binary data …","An iterator over <code>LazyArray16</code>.","An iterator over <code>LazyArray32</code>.","","A line metrics.","","An attempt to read out of bounds detected.","","","","","","The <code>head</code> table is missing or malformed.","The <code>hhea</code> table is missing or malformed.","","The <code>maxp</code> table is missing or malformed.","","","A face that is neither italic not obliqued.","A variation coordinate in a normalized coordinate system.","A typically-sloped version of the regular face.","","A trait for glyph outline construction.","","A platform ID.","A glyph’s raster image.","A glyph raster image format.","A raw font face.","A list of all supported tables as raw data.","","A rectangle.","Object’s raw data size.","A script metrics used by subscript and superscript.","","","","A face style.","A 4-byte tag.","","","","","Face data must start with <code>0x00010000</code>, <code>0x74727565</code>, …","","A font variation value.","A variation axis.","A face weight.","A face width.","","","An Anchor Point Table implementation.","","","This module contains Apple Advanced Typography Layout …","Returns tag value as <code>u32</code> number.","Returns a horizontal face ascender.","An Axis Variations Table implementation.","","","An axis tag name.","Performs a binary search by specified <code>key</code>.","Performs a binary search by specified <code>key</code>.","Performs a binary search using specified closure.","Performs a binary search using specified closure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns face’s capital height.","A Color Bitmap Data Table implementation.","","","A Color Bitmap Location Table implementation.","","A Compact Font Format Table implementation.","","","A Compact Font Format 2 Table implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends a ClosePath segment.","A Character to Glyph Index Mapping Table implementation.","","","","","","","Appends a CurveTo segment.","A raw image data. It’s up to the caller to decode it.","","","","","","","","Returns a horizontal face descender.","","","","","","","","","","","","","A Feature Name Table implementation.","","","","","","","","","","","","","","","","","","","","Returns the number of fonts stored in a TrueType font …","An image format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new coordinate.","Creates a new coordinate.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>Tag</code> from bytes.","Creates a <code>Tag</code> from bytes.","Creates a new <code>Face</code> from provided <code>RawFaceTables</code>.","Creates a new <code>RawFace</code> from a raw data.","Creates a new <code>Face</code> from a raw data.","A Font Variations Table implementation.","","","A Glyph Definition Table implementation.","","","Returns a value at <code>index</code>.","Returns a value at <code>index</code>.","Returns the coordinate value as f2.14.","Returns a bounding box that large enough to enclose any …","A Glyph Data Table implementation.","","","Returns a tight glyph bounding box.","Returns glyph’s horizontal advance.","Returns glyph’s horizontal side bearing.","Resolves a Glyph ID for a code point.","Returns glyph’s name.","Returns a reference to a glyph’s raster image.","Returns a reference to a glyph’s SVG image.","Resolves a variation of a Glyph ID from two code points.","Returns glyph’s vertical advance.","Returns glyph’s vertical side bearing.","Returns glyph’s vertical origin according to Vertical …","A Glyph Positioning Table implementation.","","","A Glyph Substitution Table implementation.","","","A Glyph Variations Table implementation.","","","Checks that face has non-default variation coordinates.","","","A Font Header Table implementation.","","","Returns rect’s height.","Returns face’s height.","Image height.","A Horizontal Header Table implementation.","","","","A Horizontal/Vertical Metrics Table implementation.","","","A Horizontal/Vertical Metrics Variations Table …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Checks that face is marked as <em>Bold</em>.","Checks if array is empty.","Checks that face is marked as <em>Italic</em>.","Checks that face is marked as <em>Monospaced</em>.","Checks if tag is null / <code>[0, 0, 0, 0]</code>.","Checks that face is marked as <em>Oblique</em>.","Checks that face is marked as <em>Regular</em>.","Checks that face is variable.","Returns face’s italic angle.","A Kerning Table implementation.","","","An Extended Kerning Table implementation.","","","Returns the last value.","Returns array’s length.","Returns array’s length.","Returns a horizontal face line gap.","Appends a LineTo segment.","An Index to Location Table implementation.","","","A Maximum Profile Table implementation.","","","","An Extended Glyph Metamorphosis Table implementation.","","","Appends a MoveTo segment.","A Metrics Variations Table implementation.","","","A Naming Table implementation.","","","A list of name ID’s.","An axis name in the <code>name</code> table.","Returns a list of names.","Creates a new <code>LazyArray</code>.","Creates a new <code>LazyArray</code>.","","","Returns a total number of glyphs in the face.","This module contains OpenType Layout supplementary tables …","A OS/2 and Windows Metrics Table implementation.","","","Outlines a glyph and returns its tight bounding box.","Parses an object from a raw data.","","","","","","A pixels per em of the selected strike.","Line position.","A PostScript Table implementation.","","","Appends a QuadTo segment.","Returns a <code>RangeRecord</code> for a glyph.","A Standard Bitmap Graphics Table implementation.","","","Sets a variation axis coordinate.","Returns sub-array.","Returns face’s strikeout metrics.","Returns face style.","Returns face’s subscript metrics.","Returns face’s superscript metrics.","An SVG Table implementation.","","","Returns the raw data of a selected table.","Returns the raw data of a selected table.","Returns low-level face tables.","","Line thickness.","Returns tag as 4-element byte array.","Returns tag as 4-element byte array.","","","","","","","","","","","","","","","","","","","","","","A Tracking Table implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a horizontal typographic face ascender.","Returns a horizontal typographic face descender.","Returns a horizontal typographic face line gap.","Returns face’s underline metrics.","Returns face’s units per EM.","An axis value.","Returns an iterator over variation axes.","Returns the current normalized variation coordinates.","Returns a vertical face ascender.","Returns a vertical face descender.","Returns a vertical face height.","Returns a vertical face line gap.","A Vertical Header Table implementation.","","","","","A Vertical Origin Table implementation.","","","","","Returns face’s weight.","Returns rect’s width.","Returns face’s width.","Image width.","Horizontal offset.","Returns face’s x height.","","","X offset.","Horizontal face size.","Vertical offset.","","","Y offset.","Vertical face size.","An anchor point.","An Anchor Point Table.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Parses a table from raw data.","Returns a list of anchor points for the specified glyph.","","","","","","","","","","","An Extended State Table.","A State Table entry.","A lookup table.","A legacy state entry used by StateTable.","A State Table.","A type-safe wrapper for a kerning value offset.","","","","","","","","","","","Predefined classes.","Returns a glyph class.","Returns a glyph class.","","","","","","","","","","","Returns a class entry.","Returns a class entry.","Additional data.","Entry flags.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If set, advance to the next glyph before going to the new …","If set, remember this glyph as the marked glyph.","Checks that entry has an offset.","If set, push this glyph on the kerning stack.","If set, reset the kerning data (clear the stack).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns kerning at offset.","Produces a new state.","A new state.","Returns the next offset.","","Parses an Extended State Table from a stream.","Parses a lookup table from raw data.","Predefined states.","","","","","","","","","","","","","","","","","","","","","Returns a value associated with the specified glyph.","Returns a value offset.","","","","","An axis value map.","A list of segment maps.","An iterator over maps.","An Axis Variations Table.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A normalized coordinate value obtained using default …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of segments.","Maps coordinates.","","","Parses a table from raw data.","The segment maps array — one segment map for each axis …","The modified, normalized coordinate value.","","","","","","","","","","","","","","","","A Color Bitmap Data Table.","","","","","","Returns the argument unchanged.","Returns a raster image for the glyph.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","A Color Bitmap Location Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","A Compact Font Format Table.","","","","","","Returns the argument unchanged.","Returns a glyph name.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","A Compact Font Format 2 Table.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","","A character encoding subtable variant.","Glyph was found in the variation encoding table.","A result of a variation glyph mapping.","","","","","","A character encoding subtable.","A format 0 subtable.","A format 10 subtable.","A format 12 subtable.","A format 13 subtable.","A format 14 subtable.","A format 2 subtable.","A format 4 subtable.","A format 6 subtable.","A list of subtables.","An iterator over <code>Subtables</code>.","A Character to Glyph Index Mapping Table.","","","","Glyph should be looked in other, non-variation tables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for each codepoint defined in this table.","Calls <code>f</code> for all codepoints contained in this subtable.","","Subtable encoding.","","First character code of subrange.","First character code covered.","","","","","","","","","","","","","","A subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a subtable at an index.","Just a list of 256 8bit glyph IDs.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Returns a glyph index for a code point.","Maps a character to a glyph ID.","Resolves a variation of a glyph ID from two code points.","Array of glyph indexes for character codes in the range.","Array of glyph indices for the character codes covered.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks that the current encoding is Unicode compatible.","Returns the number","","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a table from raw data.","Subtable platform.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A feature names.","A list fo feature names.","An iterator over <code>FeatureNames</code>.","A setting name.","A Feature Name Table.","","","","","","","","","","","","","","","","","","","The index of the default setting in the <code>setting_names</code>.","The feature’s exclusive settings. If set, the feature …","The feature’s ID.","Finds a feature name by ID.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a feature name at an index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of feature names.","The <code>name</code> table index for the feature’s name in a …","The <code>name</code> table index for the feature’s name in a …","A list of feature names. Sorted by <code>FeatureName.feature</code>.","","","Parses a table from raw data.","The setting.","The feature’s setting names.","","","","","","","","","","","","","","","","","","","","A Font Variations Table.","A variation axis.","A list of variation axes.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","An axis name in the <code>name</code> table.","","Parses a table from raw data.","","","","","","","","","","","","A glyph class.","","","A Glyph Definition Table.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns glyph’s class according to Glyph Class …","Returns glyph’s mark attachment class according to Mark …","Returns glyph’s variation delta at a specified index …","Checks that face has Glyph Class Definition Table.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks that glyph is a mark according to Mark Glyph Sets …","Parses a table from raw data.","","","","","","","","","","A Glyph Data Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","An Anchor Table.","An <code>Anchor</code> parsing helper.","","A <code>ValueRecord</code> pairs matrix used by <code>PairAdjustment</code>.","","","A Cursive Attachment Positioning Subtable.","A list of entry and exit <code>Anchor</code> pairs.","A Device Table.","","","","","","A Device Table hinting values.","An array or ligature anchor matrices.","A Mark Array.","","A Mark-to-Base Attachment Positioning Subtable.","","A Mark-to-Ligature Attachment Positioning Subtable.","","A Mark-to-Mark Attachment Positioning Subtable.","","A Pair Adjustment Positioning Subtable.","A <code>ValueRecord</code> pairs set used by <code>PairAdjustment</code>.","A list of <code>PairSet</code>s.","A glyph positioning lookup subtable enumeration.","","A Single Adjustment Positioning Subtable.","A Value Record.","An array of Value Records.","","A Device Table indexes into Item Variation Store.","An anchors matrix.","A base coverage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of columns in the matrix.","Returns the subtable coverage.","Returns the subtable coverage.","Returns the subtable coverage.","","","Returns an entry <code>Anchor</code> at index.","Returns an exit <code>Anchor</code> at index.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>ValueRecord</code> at index.","Returns a <code>ValueRecord</code> pair using the second glyph.","Returns a value at <code>index</code>.","Returns a <code>ValueRecord</code> pair using specified classes.","Returns an <code>AnchorMatrix</code> at index.","Returns contained data at index.","Returns an <code>Anchor</code> at position.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns array’s length.","Returns array’s length.","Returns the number of items.","Returns the array length.","Returns the array length.","","","","","","A mark coverage.","","A list of mark anchors.","","","","","Number of rows in the matrix.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Horizontal value, in design units.","Horizontal adjustment for advance, in design units — …","A <code>Device</code> table with horizontal adjustment for advance.","Returns X-axis delta.","A <code>Device</code> table with horizontal value.","Horizontal adjustment for placement, in design units.","A <code>Device</code> table with horizontal adjustment for placement.","Vertical value, in design units.","Vertical adjustment for advance, in design units — only …","A <code>Device</code> table with vertical adjustment for advance.","Returns Y-axis delta.","A <code>Device</code> table with vertical value.","Vertical adjustment for placement, in design units.","A <code>Device</code> table with vertical adjustment for placement.","","","","","","","","","","","A list of glyphs for Alternate Substitution Subtable.","A set of <code>AlternateSet</code>.","A Alternate Substitution Subtable.","","","","","Glyph components for one ligature.","","A <code>Ligature</code> set.","A list of <code>Ligature</code> sets.","A Ligature Substitution Subtable.","","A Multiple Substitution Subtable.","","A Reverse Chaining Contextual Single Substitution Subtable.","A sequence of glyphs for Multiple Substitution Subtable.","A list of <code>Sequence</code> tables.","","A Single Substitution Subtable.","A glyph substitution lookup subtable enumeration.","","Array of alternate glyph IDs, in arbitrary order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Glyph components for one ligature.","Returns the subtable coverage.","Returns the subtable coverage.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Ligature to substitute.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks that the current subtable is <em>Reverse Chaining </em>…","","","","","A list of substitute glyphs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Glyph Variations Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Outlines a glyph.","Parses a table from raw data.","","","","","An index format used by the Index to Location Table.","","","A Font Header Table.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","A bounding box that large enough to enclose any glyph from …","An index format used by the Index to Location Table.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","","","","","","","","","Units per EM.","A Horizontal Header Table.","Face ascender.","","","","","Face descender.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Face line gap.","Number of metrics in the <code>hmtx</code> table.","Parses a table from raw data.","","","","","Horizontal/Vertical Metrics.","A Horizontal/Vertical Metrics Table.","Returns advance for a glyph.","Width/Height advance for <code>hmtx</code>/<code>vmtx</code>.","Side bearings for glyph IDs greater than or equal to the …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A list of metrics indexed by glyph ID.","Sum of long metrics + bearings.","","Parses a table from raw data.","Returns side bearing for a glyph.","Left/Top side bearing for <code>hmtx</code>/<code>vmtx</code>.","","","","","","","","","A Horizontal/Vertical Metrics Variations Table.","Returns advance offset for a glyph.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parses a table from raw data.","Returns side bearing offset for a glyph.","","","","","A kerning subtable format.","","","","","A kerning pair.","A kerning subtable.","A format 0 subtable.","A format 2 subtable.","A format 3 subtable.","A list of subtables.","An iterator over kerning subtables.","A Kerning Table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Indicates that subtable has a cross-stream values.","Indicates that subtable uses a state machine.","Indicates that subtable is for horizontal text.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns left glyph ID.","Returns the number of subtables.","","Glyphs pair.","A list of kerning pairs.","","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a subtable from raw data.","Parses a table from raw data.","Returns right glyph ID.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kerning value.","Indicates that subtable is variable.","A container of Anchor Points used by <code>Subtable4</code>.","A state machine entry.","An extended kerning subtable format.","","","","","","A kerning subtable.","A format 0 subtable.","A format 1 subtable.","A format 2 subtable.","A format 4 subtable.","A format 6 subtable.","A list of extended kerning subtables.","An iterator over extended kerning subtables.","An Extended Kerning Table.","An action index.","Anchor points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtable format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mark and current anchor points at action index.","Returns kerning for a pair of glyphs.","Returns kerning at action index.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Returns kerning for a pair of glyphs.","Indicates that subtable has a cross-stream values.","Indicates that subtable uses a state machine.","Indicates that subtable is for horizontal text.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","A list of kerning pairs.","","Parses a table from raw data.","A state table.","A state table.","A list of subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tuple count.","","","","","","","","","","","","","Indicates that subtable is variable.","Long offsets.","Short offsets.","An Index to Location Table.","","","","","","Returns the argument unchanged.","Returns glyph’s range in the <code>glyf</code> table.","Calls <code>U::from(self)</code>.","Returns offsets length.","Parses a table from raw data.","","","","","A Maximum Profile Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The total number of glyphs in the face.","Parses a table from raw data.","","","","","A metamorphosis chain.","A list of metamorphosis chains.","An iterator over metamorphosis chains.","","A contextual subtable state table trailing data.","A contextual subtable.","A subtable coverage.","The feature table is used to compute the sub-feature flags …","","A contextual subtable state table trailing data.","An insertion subtable.","","A ligature subtable.","","","A subtable in a metamorphosis chain.","A subtable kind.","A list of subtables in a metamorphosis chain.","An iterator over a metamorphosis chain subtables.","An Extended Glyph Metamorphosis Table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of metamorphosis chains.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ligature components.","A subtable coverage.","A current index.","A current insert index.","Default chain features.","Complement of flags for the settings that this feature and …","Flags for the settings that this feature and setting …","Subtable feature flags.","A list of chain features.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Insertion glyphs.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","If true, this subtable will be applied to both horizontal …","If true, this subtable will process glyphs in descending …","If true, this subtable will process glyphs in logical order","If true, this subtable will only be applied to vertical …","The type of feature.","A subtable kind.","Ligature actions.","Ligatures.","Returns a Lookup at index.","A mark index.","A marked insert index.","","","","","","Parses a table from raw data.","The feature’s setting (aka selector).","The contextual glyph substitution state table.","A state table.","A state table.","A list of chain subtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Metrics Variations Table.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a metric offset by tag.","Parses a table from raw data.","","","","","","","","A Name Record.","A list of face names.","An iterator over face names.","A platform ID.","A Naming Table.","","","","","","","","","","","","","","","","","","","","","","","","","","A platform-specific encoding ID.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a name at index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks that the current Name data has a Unicode encoding.","A language ID.","Returns a number of name records.","A raw name data.","A list of name ID’s.","A Name ID.","A list of names.","","","Parses a table from raw data.","A platform ID.","","","","","","Returns the Name’s data as a UTF-8 string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Chained Contextual Lookup Subtable.","A Chained Sequence Rule.","A set of <code>ChainedSequenceRule</code>.","A list of <code>ChainedSequenceRule</code> sets.","A value of Class Definition Table.","A Class Definition Table.","A Contextual Lookup Subtable.","A Coverage Table.","A Feature.","An index in <code>FeatureList</code>.","A list of <code>Feature</code> records.","A Feature Variations Table.","Simple glyph contexts.","Simple glyph contexts.","","","Class-based glyph contexts.","Class-based glyph contexts.","","","Coverage-based glyph contexts.","Coverage-based glyph contexts.","An index in <code>LanguageSystemList</code>.","A Language System Table.","A list of <code>LanguageSystem</code> records.","A Layout Table.","A Lookup Table.","Lookup table flags.","An index in <code>LookupList</code>.","A list of <code>Lookup</code> values.","A trait for parsing Lookup subtables.","A list of lookup subtables.","An iterator over lookup subtables.","A record that describes a range of glyph IDs.","A data storage used by <code>ScriptList</code>, <code>LanguageSystemList</code> and …","A trait to parse item in <code>RecordList</code>.","An iterator over <code>RecordList</code> values.","A Script Table.","An index in <code>ScriptList</code>.","A list of <code>Script</code> records.","A sequence rule record.","A sequence rule.","A set of <code>SequenceRule</code>s.","A list of <code>SequenceRuleSet</code>s.","An index in <code>FeatureVariations</code>.","Contains either glyph IDs or glyph Classes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that glyph is present.","Returns the subtable coverage.","Returns the subtable coverage.","Default language.","Last glyph ID in the range","Array of indices into the FeatureList, in arbitrary order.","A list of all supported features.","Returns RecordList value by <code>Tag</code>.","Returns a <code>VariationIndex</code> for variation coordinates.","Returns a <code>Feature</code> at specified indices.","Lookup qualifiers.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Parses a subtable at index.","Returns RecordList value by index.","Returns the coverage index of the glyph or <code>None</code> if it is …","Returns the glyph class of the glyph (zero if it is not …","","","","","Returns RecordList value index by <code>Tag</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates an iterator over subtables.","","Checks that RecordList is empty.","List of supported languages, excluding the default one. …","Returns a number of items in the LookupSubtables.","Returns a number of items in the RecordList.","Contains either glyph IDs or glyph Classes.","","","","","A list of all lookups.","","Index into GDEF mark glyph sets structure.","","","Parses raw data.","Parses raw data.","","","","","","","Index of a feature required for this language system.","","A list of all supported scripts.","","First glyph ID in the range","Available subtables.","Script tag.","Language tag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Coverage Index of first glyph ID in range.","Used to substitute an alternate set of lookup tables to …","","","","","","","","","","","","","","","","","","","","","","","","Array of glyph IDs. Sorted.","Array of glyph ranges. Ordered by <code>RangeRecord.start</code>.","","","","","","","","","A form that is generally cursive in nature.","","","","","A face that is neither italic not obliqued.","A typically-sloped version of the regular face.","","A script metrics used by subscript and superscript.","","","","A face style.","A OS/2 and Windows Metrics Table.","","","","A face weight.","A face width.","","","","","","","","","","","Returns capital height.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if face is bold.","Parses a table from raw data.","","Returns strikeout metrics.","Returns style.","Returns subscript metrics.","Returns superscript metrics.","Returns a numeric representation of a weight.","Returns a numeric representation of a width.","","","","","","","","","","","","","","","","","","","","","Returns typographic ascender.","Returns typographic descender.","Returns typographic line gap.","Checks if typographic metrics should be used.","Table version.","Returns weight class.","Returns face width.","Returns Windows ascender.","Returns Windows descender.","Returns x height.","X offset.","Horizontal face size.","Y offset.","Vertical face size.","A list of glyph names.","A PostScript Table.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a glyph name by ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Flag that indicates that the font is monospaced.","Italic angle in counter-clockwise degrees from the …","Returns names count.","A list of glyph names.","Parses a table from raw data.","","","","","","","","","Underline metrics.","A strike of glyphs.","A list of <code>Strike</code>s.","An iterator over <code>Strikes</code>.","A Standard Bitmap Graphics Table.","Selects the best matching <code>Strike</code> based on <code>pixels_per_em</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a glyph data.","Returns a strike at the index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of glyphs in this strike.","Returns the number of strikes.","","Parses a table from raw data.","The pixels per EM size for which this strike was designed.","The device pixel density (in PPI) for which this strike …","A list of <code>Strike</code>s.","","","","","","","","","","","","","","","","A list of SVG documents.","An iterator over <code>SvgDocumentsList</code> values.","An SVG Table.","","","","","","","","","","","","","","A list of SVG documents.","Returns a SVG document data by glyph ID.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns SVG document data at index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of SVG documents in the list.","","Parses a table from raw data.","","","","","","","","","","","","","A Tracking Table.","A single track.","A track data.","A list of tracks.","An iterator over <code>Tracks</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a track at index.","Horizontal track data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of tracks.","The <code>name</code> table index for the track’s name.","","Parses a table from raw data.","A list of sizes.","","","","","A list of tracks.","","","","","","","","","","","","","","","","A track value.","A list of tracking values for each size.","Vertical track data.","A Vertical Header Table.","Face ascender.","","","","","","Face descender.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Face line gap.","Number of metrics in the <code>vmtx</code> table.","Parses a table from raw data.","","","","","A Vertical Origin Table.","Vertical origin metrics for the Vertical Origin Table.","","","","","","","","","Default origin.","","","Returns the argument unchanged.","Returns the argument unchanged.","Glyph ID.","Returns glyph’s Y origin.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A list of metrics for each glyph.","","Parses a table from raw data.","","","","","","","","","Y coordinate, in the font’s design coordinate system, of …"],"i":[15,15,52,15,52,0,53,172,15,53,52,53,53,52,0,23,0,0,0,0,0,15,15,15,15,15,15,172,47,0,0,0,0,52,0,172,23,52,15,15,15,15,23,23,15,23,52,53,47,0,47,52,0,21,0,0,0,0,0,15,0,6,0,52,53,53,0,0,52,53,53,172,23,15,0,0,0,0,172,15,0,25,26,0,1,3,0,25,26,18,7,9,7,9,11,7,13,9,14,15,16,17,18,1,19,20,21,22,23,24,25,26,3,11,7,13,9,14,15,16,17,18,1,19,20,21,22,23,24,25,26,3,3,0,25,26,0,25,0,25,26,0,25,26,11,7,13,9,14,15,16,17,18,1,19,20,21,22,23,24,25,26,3,11,7,13,9,14,15,16,17,18,1,19,20,21,22,23,24,25,26,3,44,0,25,26,16,1,13,14,44,22,51,7,13,9,16,17,25,3,15,16,17,18,1,19,20,21,22,23,16,1,0,25,26,11,7,9,15,16,17,18,1,1,19,20,21,22,23,23,24,3,0,22,11,7,13,9,14,15,16,17,17,17,18,1,19,20,21,22,23,24,25,26,3,1,1,3,24,3,0,25,26,0,25,26,7,9,17,3,0,25,26,3,3,3,3,3,3,3,3,3,3,3,0,25,26,0,25,26,0,25,26,3,16,1,0,25,26,20,3,22,0,25,26,51,0,25,26,0,25,26,11,7,13,9,14,15,16,17,18,1,19,20,21,22,23,24,25,26,3,7,13,9,14,3,7,3,3,1,3,3,3,3,0,25,26,0,25,26,7,7,9,3,44,0,25,51,0,25,26,51,0,25,26,44,0,25,26,0,25,26,0,51,3,7,9,13,14,3,0,0,25,26,3,6,11,16,1,16,1,22,19,0,25,26,44,7,0,25,26,3,7,3,3,3,3,0,25,26,24,3,3,51,19,1,1,11,7,13,9,14,15,16,17,18,1,19,20,21,22,23,24,25,26,3,1,23,0,25,26,11,7,13,9,14,15,16,17,18,1,19,20,21,22,23,24,25,26,3,11,7,13,9,14,15,16,17,18,1,19,20,21,22,23,24,25,26,3,11,7,13,9,14,15,16,17,18,1,19,20,21,22,23,24,25,26,3,3,3,3,3,3,18,3,3,3,3,3,3,0,25,26,25,26,0,25,26,25,26,3,20,3,22,22,3,20,20,48,48,22,20,20,48,48,0,0,54,55,54,55,54,55,54,55,54,54,54,55,54,55,54,55,54,55,55,54,55,54,55,54,55,54,55,54,54,0,0,0,0,0,0,59,60,57,58,61,59,60,57,58,61,0,57,58,59,60,57,58,61,59,60,57,58,61,57,58,59,59,59,60,57,58,61,59,60,57,58,61,59,59,59,59,59,59,60,57,58,61,57,57,59,60,59,58,61,0,59,60,57,58,61,59,60,57,58,61,59,60,57,58,61,59,60,57,58,61,61,59,0,0,0,0,0,0,0,0,66,63,64,65,66,63,64,65,63,64,65,63,64,65,63,64,65,66,63,64,65,63,66,63,64,65,66,64,64,65,66,63,65,65,63,63,64,65,66,63,64,65,66,63,64,65,66,63,64,65,0,67,67,67,67,67,67,67,67,67,67,67,67,67,0,68,68,68,68,68,68,68,68,68,68,68,68,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,80,0,78,0,80,80,80,80,80,0,0,0,0,0,0,0,0,0,0,0,0,80,80,80,78,84,71,72,73,74,75,76,77,78,79,80,81,82,83,84,71,72,73,74,75,76,77,78,79,80,81,82,83,71,72,73,74,75,76,77,78,79,80,81,82,83,71,72,73,74,75,76,77,78,79,80,81,82,83,71,72,73,74,75,76,77,81,82,81,78,74,75,71,72,73,74,75,76,77,78,79,80,81,82,83,81,84,71,72,73,74,75,76,77,78,79,80,81,82,83,82,71,71,72,73,74,75,76,77,79,81,81,74,75,84,71,72,73,74,75,76,77,78,79,80,81,82,83,84,82,81,82,84,71,72,73,74,75,76,77,79,83,81,83,71,72,73,74,75,76,77,78,79,80,81,82,83,84,71,72,73,74,75,76,77,78,79,80,81,82,83,84,71,72,73,74,75,76,77,78,79,80,81,82,83,84,71,72,73,74,75,76,77,78,79,80,81,82,83,0,0,0,0,0,89,85,86,87,88,89,85,86,87,88,85,86,87,88,85,86,87,88,86,86,86,87,85,86,87,88,89,85,86,87,88,87,89,85,86,87,88,89,87,87,85,86,88,89,85,88,85,86,85,86,87,88,89,85,86,87,88,89,85,86,87,88,89,85,86,87,88,0,0,90,51,90,51,90,51,90,51,90,51,51,51,90,51,90,51,51,90,51,51,51,51,90,51,51,90,51,90,51,90,51,90,91,91,0,91,91,0,91,92,91,92,91,92,91,92,91,92,91,91,91,91,92,92,92,92,92,91,91,92,92,92,91,91,92,91,92,91,92,91,92,0,94,94,94,94,94,94,94,94,94,94,94,94,94,0,0,115,0,115,115,0,0,0,101,105,101,105,98,0,0,0,115,0,115,0,115,0,115,0,0,0,0,115,0,0,0,98,0,108,108,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,113,101,105,115,107,99,106,106,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,100,102,103,104,110,111,113,97,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,100,103,106,110,111,109,109,114,114,114,108,109,108,109,114,97,115,113,107,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,112,99,99,96,112,99,99,112,99,99,96,112,99,99,215,216,215,215,216,217,218,217,218,126,0,0,0,126,126,118,118,0,126,0,0,0,126,0,126,0,0,0,126,0,0,122,121,125,118,119,120,121,122,123,124,125,126,118,119,120,121,122,123,124,125,126,118,119,120,121,122,123,124,125,126,118,119,120,121,122,123,124,125,126,123,118,126,120,122,124,125,118,119,120,121,122,123,124,125,126,118,119,120,121,122,123,124,125,126,123,118,119,120,121,122,123,124,125,126,126,124,125,126,120,119,125,118,119,120,121,122,123,124,125,126,118,119,120,121,122,123,124,125,126,118,119,120,121,122,123,124,125,126,118,119,120,121,122,123,124,125,126,219,220,219,220,0,127,127,127,127,127,127,127,127,127,127,127,127,127,0,128,128,0,128,129,128,129,128,129,128,129,128,128,129,128,129,129,129,128,129,129,128,129,128,129,128,129,128,129,129,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,131,132,131,132,131,132,131,132,131,132,131,132,131,132,131,132,131,131,131,132,131,131,132,132,131,132,131,132,131,132,131,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,0,135,135,135,135,0,0,0,0,0,0,0,0,134,135,136,137,138,139,140,141,142,134,135,136,137,138,139,140,141,142,134,135,136,137,138,139,140,141,142,134,135,136,137,138,139,140,141,142,138,134,135,136,137,139,140,141,142,136,134,135,136,137,138,139,140,141,142,136,139,140,141,136,136,136,134,135,136,137,138,139,140,141,142,137,138,134,137,138,134,139,134,139,140,141,142,134,142,134,135,136,137,138,139,140,141,142,134,135,136,137,138,139,140,141,142,134,135,136,137,138,139,140,141,142,134,135,136,137,138,139,140,141,142,134,136,0,0,0,150,150,150,150,150,0,0,0,0,0,0,0,0,0,144,148,143,144,145,146,147,148,149,150,151,152,153,154,143,144,145,146,147,148,149,150,151,152,153,154,143,144,145,146,147,148,149,150,151,152,153,154,143,144,145,146,147,148,149,150,151,152,153,154,145,148,143,144,145,146,147,148,149,150,151,152,154,151,143,144,145,146,147,148,149,150,151,152,153,154,147,143,145,146,149,151,151,151,151,143,144,145,146,147,148,149,150,151,152,153,154,152,153,153,143,144,154,145,148,154,143,144,145,146,147,148,149,150,151,152,153,154,143,144,145,146,147,148,149,150,151,152,153,154,143,144,145,146,147,148,149,150,151,152,153,154,151,143,144,145,146,147,148,149,150,151,152,153,154,151,95,95,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,155,155,155,155,155,155,155,155,155,155,155,155,155,0,0,0,162,0,0,0,0,162,0,0,162,0,162,162,0,0,0,0,0,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,170,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,159,164,157,160,167,156,156,164,167,156,157,158,159,160,161,162,163,164,165,167,168,170,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,161,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,165,166,168,169,163,163,163,163,156,164,159,159,158,157,160,166,169,156,157,160,170,156,158,159,161,167,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,0,171,171,171,171,171,171,171,171,171,171,171,171,171,172,172,172,0,0,0,0,0,172,172,172,173,43,174,175,172,173,43,174,175,172,173,43,174,175,172,173,43,174,175,174,43,175,173,172,172,173,43,175,172,173,43,174,175,43,172,173,43,174,175,43,174,173,173,43,173,0,173,175,174,172,175,173,172,173,43,174,175,173,172,173,43,174,175,172,173,43,174,175,172,173,43,174,175,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,179,116,191,176,179,116,191,176,179,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,180,195,196,176,177,178,179,180,181,182,183,184,186,187,188,189,190,45,116,191,195,196,176,177,178,179,180,181,182,183,184,186,187,188,189,190,45,116,191,176,177,178,179,180,181,182,183,184,186,187,188,189,190,45,116,191,176,177,178,179,180,181,182,183,184,186,187,188,189,190,45,116,191,116,176,179,187,45,188,184,186,190,190,181,176,177,178,179,180,181,182,183,184,186,187,188,189,190,45,116,191,195,196,176,177,178,179,180,181,182,183,184,186,187,188,189,190,45,116,191,182,186,116,191,183,183,183,183,186,177,180,195,196,176,177,178,179,180,181,182,183,184,186,187,188,189,190,45,116,191,195,196,182,186,186,187,182,186,180,189,178,177,180,184,183,181,195,196,194,185,178,183,187,188,189,45,188,183,184,178,45,181,187,188,189,176,177,178,179,180,181,182,183,184,186,187,188,189,190,45,116,191,195,196,176,177,178,179,180,181,182,183,184,186,187,188,189,190,45,116,191,195,196,176,177,178,179,180,181,182,183,184,186,187,188,189,190,45,116,191,195,196,176,177,178,179,180,181,182,183,184,186,187,188,189,190,45,116,191,183,45,184,221,222,223,221,222,221,222,221,222,222,223,221,224,225,224,226,227,226,228,228,228,227,226,229,230,52,52,53,53,52,53,53,52,47,52,52,52,53,47,47,52,0,52,53,53,0,0,52,53,53,0,0,52,53,47,48,197,52,53,47,48,197,197,52,53,47,48,197,52,53,47,48,197,53,52,53,47,52,53,47,48,52,53,47,48,52,53,47,48,197,52,52,53,47,48,197,52,53,47,48,52,53,47,48,197,197,197,53,197,197,197,197,52,53,52,53,47,48,197,52,53,47,48,197,52,53,47,48,197,52,53,47,48,197,197,197,197,197,197,197,197,197,197,197,48,48,48,48,0,0,198,199,198,199,198,199,198,199,198,198,199,198,199,198,198,199,199,199,198,199,199,198,199,198,199,198,199,198,199,199,0,0,0,0,200,203,201,202,200,203,201,202,200,201,202,200,201,202,200,201,202,200,203,201,202,200,201,202,203,201,202,200,203,202,201,202,203,200,201,201,200,201,202,200,203,201,202,200,203,201,202,200,203,201,202,200,0,0,0,204,205,206,204,205,206,204,205,206,204,205,206,205,206,204,204,206,204,205,206,204,204,205,206,204,205,204,205,206,204,205,206,204,205,206,204,205,206,204,205,206,0,0,0,0,0,211,207,208,209,210,211,207,208,209,210,207,208,209,210,207,208,209,210,208,209,207,208,209,210,211,207,208,209,210,208,210,211,207,208,209,210,211,208,208,207,211,210,209,207,208,209,210,209,211,207,208,209,210,211,207,208,209,210,211,207,208,209,210,207,207,210,0,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,0,0,213,214,213,214,213,214,213,214,214,213,214,213,214,213,214,213,214,214,213,214,213,214,213,214,213,214,213,214,213],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],0,0,0,0,[[[7,[5,6]],5,6],8],[[[9,[5,6]],5,6],8],[[[7,[6]],10],8],[[[9,[6]],10],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,[[8,[4]]]],0,0,0,0,0,0,0,0,0,0,0,[11,11],[[[7,[12]]],[[7,[12]]]],[[[13,[12]]],[[13,[12]]]],[[[9,[12]]],[[9,[12]]]],[[[14,[12]]],[[14,[12]]]],[15,15],[16,16],[17,17],[18,18],[1,1],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[16,16],27],[[1,1],27],[[[13,[6]]],28],[[[14,[6]]],28],[[29,29,29,29,29,29]],0,0,[[],7],[[],[[13,[6]]]],[[],9],[[],16],[[],17],[[],25],[3,4],[[15,15],30],[[16,16],30],[[17,17],30],[[18,18],30],[[1,1],30],[[19,19],30],[[20,20],30],[[21,21],30],[[22,22],30],[[23,23],30],[[],30],[[],30],0,0,0,[[11,31],32],[[[7,[[0,[6,33,34]]]],31],32],[[[9,[[0,[6,33,34]]]],31],32],[[15,31],32],[[16,31],32],[[17,31],32],[[18,31],32],[[1,31],32],[[1,31],32],[[19,31],32],[[20,31],32],[[21,31],32],[[22,31],32],[[23,31],32],[[23,31],32],[[24,31],32],[[3,31],32],[[[36,[35]]],[[8,[2]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,17],[29,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[35]]],1],[[[36,[35]]],1],[25,[[38,[3,23]]]],[[[36,[35]],2],[[38,[24,23]]]],[[[36,[35]],2],[[38,[3,23]]]],0,0,0,0,0,0,[[[7,[6]],39],[[8,[6]]]],[[[9,[6]],2],[[8,[6]]]],[17,4],[3,20],0,0,0,[[3,16],[[8,[20]]]],[[3,16],[[8,[39]]]],[[3,16],[[8,[4]]]],[[3,40],[[8,[16]]]],[[3,16],[[8,[41]]]],[[3,16,39],[[8,[22]]]],[[3,16],[[8,[[36,[35]]]]]],[[3,40,40],[[8,[16]]]],[[3,16],[[8,[39]]]],[[3,16],[[8,[4]]]],[[3,16],[[8,[4]]]],0,0,0,0,0,0,0,0,0,[3,30],[[16,42]],[[1,42]],0,0,0,[20,4],[3,4],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]]],[[]],[[[9,[6]]]],[[]],[3,30],[[[7,[6]]],30],[3,30],[3,30],[1,30],[3,30],[3,30],[3,30],[3,[[8,[29]]]],0,0,0,0,0,0,[[[7,[6]]],[[8,[6]]]],[[[7,[6]]],39],[[[9,[6]]],2],[3,4],[[29,29]],0,0,0,0,0,0,0,0,0,0,[[29,29]],0,0,0,0,0,0,0,0,[3,43],[[[36,[35]]],[[7,[6]]]],[[[36,[35]]],[[9,[6]]]],[[[13,[6]]],8],[[[14,[6]]],8],[3,39],0,0,0,0,[[3,16,44],[[8,[20]]]],[[[36,[35]]],8],[[[36,[35]]],[[8,[11]]]],[[[36,[35]]],[[8,[16]]]],[[[36,[35]]],[[8,[1]]]],[[16,16],[[8,[27]]]],[[1,1],[[8,[27]]]],0,0,0,0,0,[[29,29,29,29]],[[[7,[45]],16],[[8,[45]]]],0,0,0,[[3,1,29],8],[[[7,[6]],[46,[39]]],[[8,[[7,[6]]]]]],[3,[[8,[19]]]],[3,47],[3,[[8,[48]]]],[3,[[8,[48]]]],0,0,0,[[24,1],[[8,[[36,[35]]]]]],[[3,1],[[8,[[36,[35]]]]]],[3,26],0,0,[1,[[37,[35]]]],[1,[[37,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[],49],0,0,0,[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[3,[[8,[4]]]],[3,[[8,[4]]]],[3,[[8,[4]]]],[3,[[8,[19]]]],[3,39],0,[3,[[7,[51]]]],[3,[[36,[17]]]],[3,[[8,[4]]]],[3,[[8,[4]]]],[3,[[8,[4]]]],[3,[[8,[4]]]],0,0,0,0,0,0,0,0,0,0,[3,52],[20,4],[3,53],0,0,[3,[[8,[4]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[54,54],[55,55],[[]],[[]],[[],54],[[54,54],30],[[54,31],32],[[55,31],32],[[]],[[]],[[]],[[]],[[[36,[35]]],[[8,[54]]]],[[56,[36,[35]]],[[8,[55]]]],[[55,16],[[8,[[9,[54]]]]]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[57,16],[[8,[35]]]],[[[58,[6]],16],[[8,[39]]]],[[[59,[[0,[12,6]]]]],[[59,[[0,[12,6]]]]]],[60,60],[57,57],[[[58,[12]]],[[58,[12]]]],[61,61],[[]],[[]],[[]],[[]],[[]],[[57,39,35],[[8,[62]]]],[[[58,[6]],39,39],[[8,[[59,[6]]]]]],0,0,[[[59,[[0,[33,6]]]],31],32],[[60,31],32],[[57,31],32],[[58,31],32],[[61,31],32],[[]],[[]],[[]],[[]],[[]],[[[59,[6]]],30],[[[59,[6]]],30],[[[59,[6]]],30],[[[59,[6]]],30],[[[59,[6]]],30],[[]],[[]],[[]],[[]],[[]],[[57,60],[[8,[4]]]],[[57,39],39],0,[60,60],[[[36,[35]]],[[8,[[59,[6]]]]]],0,[[56,[36,[35]]],[[8,[61]]]],0,[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],[[],50],[[61,16],[[8,[39]]]],[[[59,[6]]],60],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,63],[64,64],[65,65],[[]],[[]],[[]],[[63,31],32],[[64,31],32],[[65,31],32],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[64],[64,39],[[65,[36,[17]]],8],[66,8],[[[36,[35]]],[[8,[63]]]],[[[36,[35]]],[[8,[65]]]],0,0,[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],0,[[]],[[]],[67,67],[[]],[[67,31],32],[[]],[[67,16,39],[[8,[22]]]],[[]],[[68,[36,[35]]],[[8,[67]]]],[[]],[[],38],[[],38],[[],50],0,[[]],[[]],[68,68],[[]],[[68,31],32],[[]],[[]],[[[36,[35]]],[[8,[68]]]],[[]],[[],38],[[],38],[[],50],0,[[]],[[]],[69,69],[[]],[[69,31],32],[[]],[[69,16],[[8,[41]]]],[[]],[[69,16,44],[[38,[20,15]]]],[[[36,[35]]],[[8,[69]]]],[[]],[[],38],[[],38],[[],50],0,[[]],[[]],[70,70],[[]],[[],70],[[70,31],32],[[]],[[]],[[70,[36,[17]],16,44],[[38,[20,15]]]],[[[36,[35]]],[[8,[70]]]],[[]],[[],38],[[],38],[[],50],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[71,10]],[[72,10]],[[73,10]],[[74,10]],[[75,10]],[[76,10]],[[77,10]],[[81,10]],[[],82],0,[[78,78],30],0,0,[[71,31],32],[[72,31],32],[[73,31],32],[[74,31],32],[[75,31],32],[[76,31],32],[[77,31],32],[[78,31],32],[[79,31],32],[[80,31],32],[[81,31],32],[[82,31],32],[[83,31],32],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[82,39],[[8,[81]]]],0,[[71,2],[[8,[16]]]],[[72,2],[[8,[16]]]],[[73,2],[[8,[16]]]],[[74,2],[[8,[16]]]],[[75,2],[[8,[16]]]],[[76,2],[[8,[16]]]],[[77,2],[[8,[16]]]],[[79,2,2],[[8,[78]]]],[[81,2],[[8,[16]]]],[[81,2,2],[[8,[78]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82],[81,30],[82,39],[84,8],[[[36,[35]]],[[8,[71]]]],[[[36,[35]]],[[8,[72]]]],[[[36,[35]]],[[8,[73]]]],[[[36,[35]]],[[8,[74]]]],[[[36,[35]]],[[8,[75]]]],[[[36,[35]]],[[8,[76]]]],[[[36,[35]]],[[8,[77]]]],[[[36,[35]]],[[8,[79]]]],[[[36,[35]]],[[8,[83]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85,85],[86,86],[87,87],[88,88],[[]],[[]],[[]],[[]],0,0,0,[[87,39],[[8,[86]]]],[[85,31],32],[[86,31],32],[[87,31],32],[[88,31],32],[[]],[[]],[[]],[[]],[[]],[[87,39],[[8,[86]]]],[[]],[[]],[[]],[[]],[[]],[[]],[87],[87,39],0,0,0,[89,8],[[[36,[35]]],[[8,[85]]]],[[[36,[35]]],[[8,[88]]]],0,0,[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],[[],50],0,0,0,[[]],[[]],[[]],[[]],[51,51],[90,90],[[]],[[]],0,[[51,51],30],[[51,31],32],[[90,31],32],[[]],[[]],0,[[]],[[]],0,0,0,[[[36,[35]]],[[8,[51]]]],[[[36,[35]]],[[8,[90]]]],0,[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[91,91],[92,92],[[]],[[]],[[91,91],27],[[],92],[[91,91],30],[[],30],[[91,31],32],[[]],[[]],[[92,16],[[8,[91]]]],[[92,16],93],[[92,39,39,[36,[17]]],[[8,[29]]]],[92,30],[[91,42]],[[]],[[]],[[92,16,[8,[39]]],30],[[[36,[35]]],[[8,[92]]]],[[91,91],[[8,[27]]]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],0,[[]],[[]],[94,94],[[]],[[94,31],32],[[]],[[]],[[94,16,44],[[8,[20]]]],[[95,[36,[35]]],[[8,[94]]]],[[]],[[],38],[[],38],[[],50],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[101,116],[105,116],[115,116],0,[[],99],[[106,39],[[8,[112]]]],[[106,39],[[8,[112]]]],[[96,31],32],[[97,31],32],[[98,31],32],[[99,31],32],[[100,31],32],[[101,31],32],[[102,31],32],[[103,31],32],[[104,31],32],[[105,31],32],[[106,31],32],[[107,31],32],[[108,31],32],[[109,31],32],[[110,31],32],[[111,31],32],[[112,31],32],[[113,31],32],[[114,31],32],[[115,31],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[100,39],[[8,[99]]]],[[102,16],8],[[103,39],[[8,[102]]]],[104,8],[[110,39],[[8,[113]]]],[[111,39],8],[[113,39,39],[[8,[112]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[100,39],[103,39],[106,39],[110,39],[111,39],0,0,0,0,0,0,0,0,0,0,0,[[[36,[35]],39],[[8,[115]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,0,0,[[96,39,8],[[8,[117]]]],0,0,0,0,0,0,[[96,39,8],[[8,[117]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[118,116],[126,116],0,0,0,0,[[118,31],32],[[119,31],32],[[120,31],32],[[121,31],32],[[122,31],32],[[123,31],32],[[124,31],32],[[125,31],32],[[126,31],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[126,30],0,0,[[[36,[35]],39],[[8,[126]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,0,0,0,0,[[]],[[]],[127,127],[[]],[[127,31],32],[[]],[[]],[[127,94,[36,[17]],16,44],[[8,[20]]]],[[[36,[35]]],[[8,[127]]]],[[]],[[],38],[[],38],[[],50],0,0,0,0,[[]],[[]],[[]],[[]],[128,128],[129,129],[[]],[[]],[[128,128],30],[[128,31],32],[[129,31],32],[[]],[[]],0,0,[[]],[[]],[[[36,[35]]],[[8,[129]]]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],0,0,0,[[]],[[]],[130,130],[[]],0,[[130,31],32],[[]],[[]],0,0,[[[36,[35]]],[[8,[130]]]],[[]],[[],38],[[],38],[[],50],0,0,[[131,16],[[8,[39]]]],0,0,[[]],[[]],[[]],[[]],[132,132],[131,131],[[]],[[]],[[132,31],32],[[131,31],32],[[]],[[]],[[]],[[]],0,0,[[[36,[35]]],[[8,[132]]]],[[39,56,[36,[35]]],[[8,[131]]]],[[131,16],[[8,[4]]]],0,[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],0,[[133,16,[36,[17]]],[[8,[29]]]],[[]],[[]],[133,133],[[]],[[133,31],32],[[]],[[]],[[[36,[35]]],[[8,[133]]]],[[133,16,[36,[17]]],[[8,[29]]]],[[]],[[],38],[[],38],[[],50],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],138],[[134,31],32],[[135,31],32],[[136,31],32],[[137,31],32],[[139,31],32],[[140,31],32],[[141,31],32],[[142,31],32],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[136,16,16],[[8,[4]]]],[[139,16,16],[[8,[4]]]],[[140,16,16],[[8,[4]]]],[[141,16,16],[[8,[4]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[137],[[]],[134,16],[137,2],[138,8],0,0,[[[36,[35]]],[[8,[134]]]],[[[36,[35]]],[[8,[139]]]],[[35,[36,[35]]],[[8,[140]]]],[[[36,[35]]],[[8,[141]]]],[[[36,[35]]],[[8,[142]]]],[134,16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[145],[148],[[143,31],32],[[144,31],32],[[145,31],32],[[146,31],32],[[147,31],32],[[148,31],32],[[149,31],32],[[150,31],32],[[151,31],32],[[152,31],32],[[154,31],32],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[147,39],8],[[143,16,16],[[8,[4]]]],[[145,39],[[8,[4]]]],[[146,16,16],[[8,[4]]]],[[149,16,16],[[8,[4]]]],[[151,16,16],[[8,[4]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[152],[[]],[153,8],0,[[[36,[35]]],[[8,[144]]]],[[56,[36,[35]]],[[8,[154]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,0,0,0,[[]],[[]],[95,95],[[]],[[95,31],32],[[]],[[95,16],[[8,[[46,[28]]]]]],[[]],[95,39],[[56,128,[36,[35]]],[[8,[95]]]],[[]],[[],38],[[],38],[[],50],0,[[]],[[]],[155,155],[[]],[[155,31],32],[[]],[[]],0,[[[36,[35]]],[[8,[155]]]],[[]],[[],38],[[],38],[[],50],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[156,31],32],[[157,31],32],[[158,31],32],[[159,31],32],[[160,31],32],[[161,31],32],[[162,31],32],[[163,31],32],[[164,31],32],[[165,31],32],[[167,31],32],[[168,31],32],[[170,31],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[165],[[]],[168],[[]],[163,30],[163,30],[163,30],[163,30],0,0,0,0,[[158,2],[[8,[61]]]],0,0,[166,8],[169,8],[[[36,[35]]],[[8,[156]]]],[[[36,[35]]],[[8,[157]]]],[[[36,[35]]],[[8,[160]]]],[[56,[36,[35]]],[[8,[170]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,[[]],[[]],[171,171],[[]],[[171,31],32],[[]],[[]],[[171,1,[36,[17]]],[[8,[29]]]],[[[36,[35]]],[[8,[171]]]],[[]],[[],38],[[],38],[[],50],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[172,172],[173,173],[43,43],[174,174],[175,175],[[]],[[]],[[]],[[]],[[]],[174,28],[[],43],[[],175],0,[[172,172],30],[[172,31],32],[[173,31],32],[[43,31],32],[[175,31],32],[[]],[[]],[[]],[[]],[[]],[[43,39],[[8,[173]]]],[[]],[[]],[[]],[[]],[[]],[43],[[]],[173,30],0,[43,39],0,0,0,0,[174,8],[[[36,[35]]],[[8,[172]]]],[[[36,[35]]],[[8,[175]]]],0,[[]],[[]],[[]],[[]],[[]],[173,[[8,[49]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],[[],50],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[[[186,[[0,[12,185]]]]],[[186,[[0,[12,185]]]]]],[187,187],[188,188],[189,189],[190,190],[45,45],[116,116],[191,191],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[116,16],30],[176,116],[179,116],0,0,0,0,[[[186,[185]],1],[[8,[185]]]],[[190,[36,[17]]],[[8,[192]]]],[[190,193,192],[[8,[189]]]],0,[[176,31],32],[[177,31],32],[[178,31],32],[[179,31],32],[[180,31],32],[[181,31],32],[[182,31],32],[[183,31],32],[[184,31],32],[[[186,[[0,[33,185]]]],31],32],[[187,31],32],[[188,31],32],[[189,31],32],[[190,31],32],[[45,31],32],[[116,31],32],[[191,31],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[182,39],[[8,[194]]]],[[[186,[185]],39],[[8,[185]]]],[[116,16],[[8,[39]]]],[[191,16],93],[183,30],[183,30],[183,30],[183,30],[[[186,[185]],1],[[8,[39]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[182,[[195,[194]]]],[[[186,[185]]]],[[[186,[185]]],30],0,[182,39],[[[186,[185]]],39],0,0,0,0,0,0,[183,35],0,[[[195,[194]]],8],[[[196,[185]]],8],[[[36,[35]],39],8],[[1,[36,[35]]],8],[[[36,[35]]],[[8,[178]]]],[[[36,[35]]],[[8,[183]]]],[[1,[36,[35]]],[[8,[187]]]],[[1,[36,[35]]],[[8,[188]]]],[[1,[36,[35]]],[[8,[189]]]],[[[36,[35]]],[[8,[45]]]],0,[183,30],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[183,30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[197,[[8,[4]]]],[52,52],[53,53],[47,47],[48,48],[197,197],[[]],[[]],[[]],[[]],[[]],[[53,53],27],[[],52],[[],53],[[],47],[[52,52],30],[[53,53],30],[[47,47],30],[[48,48],30],[[],30],[[],30],[[],30],[[],30],[[52,31],32],[[53,31],32],[[47,31],32],[[48,31],32],[[197,31],32],[39,52],[[]],[[]],[[]],[[]],[[]],[[52,42]],[[53,42]],[[47,42]],[[48,42]],[[]],[[]],[[]],[[]],[[]],[197,30],[[[36,[35]]],[[8,[197]]]],[[53,53],[[8,[27]]]],[197,19],[197,47],[197,48],[197,48],[52,39],[53,39],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],[[],50],[197,4],[197,4],[197,4],[197,30],0,[197,52],[197,53],[197,4],[197,4],[197,[[8,[4]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[198,198],[199,199],[[]],[[]],[[],198],[[198,31],32],[[199,31],32],[[]],[[]],[[198,16],[[8,[41]]]],[[]],[[]],0,0,[198,39],0,[[[36,[35]]],[[8,[199]]]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],0,0,0,0,0,[[200,39],[[8,[201]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[201,201],[202,202],[200,200],[[]],[[]],[[]],[[201,31],32],[[202,31],32],[[200,31],32],[[]],[[]],[[]],[[]],[[201,16],[[8,[22]]]],[[202,2],[[8,[201]]]],[[]],[[]],[[]],[[]],[[]],[202],[201,39],[202,2],[203,8],[[56,[36,[35]]],[[8,[200]]]],0,0,0,[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[204,204],[205,205],[206,206],[[]],[[]],[[]],[205,28],0,[[204,16],[[8,[[36,[35]]]]]],[[204,31],32],[[206,31],32],[[]],[[]],[[]],[[204,39],[[8,[[36,[35]]]]]],[[]],[[]],[[]],[204],[[]],[204,39],[205,8],[[[36,[35]]],[[8,[206]]]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[207,207],[208,208],[209,209],[210,210],[[]],[[]],[[]],[[]],[[],208],[[],209],[[207,31],32],[[208,31],32],[[209,31],32],[[210,31],32],[[]],[[]],[[]],[[]],[[]],[[208,39],[[8,[207]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[208],[208,39],0,[211,8],[[[36,[35]]],[[8,[210]]]],0,[[]],[[]],[[]],[[]],0,[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],[[],50],[[],50],[[],50],0,0,0,0,0,[[]],[[]],[212,212],[[]],[[],212],0,[[212,31],32],[[]],[[]],0,0,[[[36,[35]]],[[8,[212]]]],[[]],[[],38],[[],38],[[],50],0,0,[[]],[[]],[[]],[[]],[213,213],[214,214],[[]],[[]],0,[[213,31],32],[[214,31],32],[[]],[[]],0,[[214,16],4],[[]],[[]],0,[[[36,[35]]],[[8,[213]]]],[[[36,[35]]],[[8,[214]]]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],50],[[],50],0],"c":[],"p":[[3,"Tag"],[15,"u32"],[3,"Face"],[15,"i16"],[8,"Ord"],[8,"FromData"],[3,"LazyArray16"],[4,"Option"],[3,"LazyArray32"],[8,"FnMut"],[3,"Fixed"],[8,"Clone"],[3,"LazyArrayIter16"],[3,"LazyArrayIter32"],[4,"CFFError"],[3,"GlyphId"],[3,"NormalizedCoordinate"],[3,"Variation"],[3,"LineMetrics"],[3,"Rect"],[4,"RasterImageFormat"],[3,"RasterGlyphImage"],[4,"FaceParsingError"],[3,"RawFace"],[3,"RawFaceTables"],[3,"FaceTables"],[4,"Ordering"],[15,"usize"],[15,"f32"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"Copy"],[15,"u8"],[15,"slice"],[15,"array"],[4,"Result"],[15,"u16"],[15,"char"],[15,"str"],[8,"Hasher"],[3,"Names"],[8,"OutlineBuilder"],[3,"RangeRecord"],[3,"Range"],[4,"Style"],[3,"ScriptMetrics"],[3,"String"],[3,"TypeId"],[3,"VariationAxis"],[4,"Weight"],[4,"Width"],[3,"Point"],[3,"Table"],[3,"NonZeroU16"],[3,"StateTable"],[3,"ExtendedStateTable"],[3,"GenericStateEntry"],[3,"ValueOffset"],[3,"Lookup"],[6,"StateEntry"],[3,"AxisValueMap"],[3,"SegmentMaps"],[3,"Table"],[3,"SegmentMapsIter"],[3,"Table"],[3,"Table"],[3,"Table"],[3,"Table"],[3,"Subtable0"],[3,"Subtable2"],[3,"Subtable4"],[3,"Subtable6"],[3,"Subtable10"],[3,"Subtable12"],[3,"Subtable13"],[4,"GlyphVariationResult"],[3,"Subtable14"],[4,"Format"],[3,"Subtable"],[3,"Subtables"],[3,"Table"],[3,"SubtablesIter"],[3,"SettingName"],[3,"FeatureName"],[3,"FeatureNames"],[3,"Table"],[3,"FeatureNamesIter"],[3,"Table"],[4,"GlyphClass"],[3,"Table"],[6,"Class"],[3,"Table"],[4,"Table"],[3,"HintingDevice"],[3,"VariationDevice"],[4,"Device"],[3,"ValueRecord"],[3,"ValueRecordsArray"],[4,"SingleAdjustment"],[3,"PairSet"],[3,"PairSets"],[3,"ClassMatrix"],[4,"PairAdjustment"],[3,"CursiveAnchorSet"],[3,"CursiveAdjustment"],[3,"MarkToBaseAdjustment"],[3,"MarkToLigatureAdjustment"],[3,"LigatureArray"],[3,"MarkArray"],[3,"Anchor"],[3,"AnchorMatrix"],[3,"MarkToMarkAdjustment"],[4,"PositioningSubtable"],[4,"Coverage"],[15,"i32"],[4,"SingleSubstitution"],[3,"Sequence"],[3,"MultipleSubstitution"],[3,"AlternateSet"],[3,"AlternateSubstitution"],[3,"Ligature"],[3,"LigatureSubstitution"],[3,"ReverseChainSingleSubstitution"],[4,"SubstitutionSubtable"],[3,"Table"],[4,"IndexToLocationFormat"],[3,"Table"],[3,"Table"],[3,"Table"],[3,"Metrics"],[3,"Table"],[3,"KerningPair"],[4,"Format"],[3,"Subtable"],[3,"Subtables"],[3,"SubtablesIter"],[3,"Subtable0"],[3,"Subtable2"],[3,"Subtable3"],[3,"Table"],[3,"Subtable0"],[3,"EntryData"],[3,"Subtable1"],[3,"Subtable2"],[3,"AnchorPoints"],[3,"Subtable4"],[3,"Subtable6"],[4,"Format"],[3,"Subtable"],[3,"Subtables"],[3,"SubtablesIter"],[3,"Table"],[3,"Table"],[3,"Feature"],[3,"ContextualEntryData"],[3,"ContextualSubtable"],[3,"LigatureSubtable"],[3,"InsertionEntryData"],[3,"InsertionSubtable"],[4,"SubtableKind"],[3,"Coverage"],[3,"Subtable"],[3,"Subtables"],[3,"SubtablesIter"],[3,"Chain"],[3,"Chains"],[3,"ChainsIter"],[3,"Table"],[3,"Table"],[4,"PlatformId"],[3,"Name"],[3,"NamesIter"],[3,"Table"],[4,"ContextLookup"],[3,"SequenceRule"],[3,"SequenceLookupRecord"],[4,"ChainedContextLookup"],[3,"ChainedSequenceRule"],[3,"Lookup"],[3,"LookupSubtables"],[3,"LookupFlags"],[3,"LayoutTable"],[8,"RecordListItem"],[3,"RecordList"],[3,"Script"],[3,"LanguageSystem"],[3,"Feature"],[3,"FeatureVariations"],[4,"ClassDefinition"],[6,"VariationIndex"],[6,"FeatureIndex"],[8,"LookupSubtable"],[3,"LookupSubtablesIter"],[3,"RecordListIter"],[3,"Table"],[3,"Names"],[3,"Table"],[3,"Table"],[3,"Strike"],[3,"Strikes"],[3,"StrikesIter"],[3,"SvgDocumentsList"],[3,"SvgDocumentsListIter"],[3,"Table"],[3,"Track"],[3,"Tracks"],[3,"TrackData"],[3,"Table"],[3,"TracksIter"],[3,"Table"],[3,"VerticalOriginMetrics"],[3,"Table"],[13,"Format2"],[13,"Format1"],[13,"Format1"],[13,"Format2"],[13,"Format1"],[13,"Format2"],[13,"Format2"],[13,"Format3"],[13,"Format1"],[13,"Format1"],[13,"Format2"],[13,"Format2"],[13,"Format1"],[13,"Format3"],[13,"Format1"],[13,"Format2"]]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":"FF","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"c":[],"p":[[15,"char"],[15,"bool"]]},\
"unreachable":{"doc":"unreachable","t":"IIKKKKF","n":["UncheckedOptionExt","UncheckedResultExt","unchecked_unwrap","unchecked_unwrap_err","unchecked_unwrap_none","unchecked_unwrap_ok","unreachable"],"q":[[0,"unreachable"]],"d":["An extension trait for <code>Option&lt;T&gt;</code> providing unchecked …","An extension trait for <code>Result&lt;T, E&gt;</code> providing unchecked …","Get the value out of this Option without checking for None.","Get the error out of this Result without checking for Ok.","Assert that this Option is a None to the optimizer.","Get the value out of this Result without checking for Err.","Hint to the optimizer that any code path which calls this …"],"i":[0,0,2,3,2,3,0],"f":[0,0,[[]],[[]],[[]],[[]],[[],1]],"c":[],"p":[[15,"never"],[8,"UncheckedOptionExt"],[8,"UncheckedResultExt"]]},\
"vecmath":{"doc":"A simple and generic library for vector math.","t":"GGGGGGGGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFIIIIIIIIIIIIKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK","n":["Matrix2x3","Matrix3","Matrix3x2","Matrix3x4","Matrix4","Matrix4x3","Vector2","Vector3","Vector4","col_mat2x3_row","col_mat3_mul","col_mat3_mul_col","col_mat3_row","col_mat3_transform","col_mat3_transform_pos2","col_mat3_transform_vec2","col_mat3x2_mul","col_mat3x2_mul_col","col_mat3x2_row","col_mat3x2_transform_pos2","col_mat3x2_transform_vec2","col_mat3x4_row","col_mat4_mul","col_mat4_mul_col","col_mat4_row","col_mat4_transform","col_mat4x3_mul","col_mat4x3_mul_col","col_mat4x3_row","col_mat4x3_transform_pos3","col_mat4x3_transform_vec3","mat2x3_add","mat2x3_cast","mat2x3_det","mat2x3_id","mat2x3_inv","mat2x3_inv_det","mat2x3_sub","mat2x3_transposed","mat3_add","mat3_cast","mat3_det","mat3_id","mat3_inv","mat3_inv_det","mat3_sub","mat3_transposed","mat3x2_add","mat3x2_cast","mat3x2_det","mat3x2_id","mat3x2_inv","mat3x2_inv_det","mat3x2_sub","mat3x2_transposed","mat3x4_add","mat3x4_cast","mat3x4_det","mat3x4_id","mat3x4_inv","mat3x4_inv_det","mat3x4_sub","mat3x4_transposed","mat4_add","mat4_cast","mat4_det","mat4_id","mat4_inv","mat4_inv_det","mat4_sub","mat4_transposed","mat4x3_add","mat4x3_cast","mat4x3_det","mat4x3_id","mat4x3_inv","mat4x3_inv_det","mat4x3_sub","mat4x3_transposed","row_mat2x3_col","row_mat2x3_mul","row_mat2x3_mul_row","row_mat2x3_transform_pos2","row_mat2x3_transform_vec2","row_mat3_col","row_mat3_mul","row_mat3_mul_row","row_mat3_transform","row_mat3_transform_pos2","row_mat3_transform_vec2","row_mat3x2_col","row_mat3x4_col","row_mat3x4_mul","row_mat3x4_mul_row","row_mat3x4_transform_pos3","row_mat3x4_transform_vec3","row_mat4_col","row_mat4_mul","row_mat4_mul_row","row_mat4_transform","row_mat4x3_col","traits","vec2_add","vec2_cast","vec2_cross","vec2_dot","vec2_inv_len","vec2_len","vec2_mul","vec2_neg","vec2_normalized","vec2_normalized_sub","vec2_scale","vec2_square_len","vec2_sub","vec3_add","vec3_cast","vec3_cross","vec3_dot","vec3_dot_pos2","vec3_dot_vec2","vec3_inv_len","vec3_len","vec3_mul","vec3_neg","vec3_normalized","vec3_normalized_sub","vec3_scale","vec3_square_len","vec3_sub","vec4_add","vec4_cast","vec4_dot","vec4_dot_pos3","vec4_dot_vec3","vec4_inv_len","vec4_len","vec4_mul","vec4_neg","vec4_normalized","vec4_normalized_sub","vec4_scale","vec4_square_len","vec4_sub","Cast","Float","FromPrimitive","Max","Min","One","Powf","Radians","Signum","Sqrt","Trig","Zero","_180","_360","_90","acos","acosh","asin","asinh","atan","atan2","atanh","cast","cos","cosh","deg_to_rad","from_f32","from_f64","from_i32","from_isize","from_u32","max","min","one","powf","rad_to_deg","signum","sin","sinh","sqrt","tan","tanh","zero"],"q":[[0,"vecmath"],[144,"vecmath::traits"]],"d":["A 2x3 matrix.","A 3x3 matrix.","A 3x2 matrix.","A 3x4 matrix.","A 4x4 matrix.","A 4x3 matrix.","A 2D vector.","A 3D vector.","A 4D vector.","Returns a row vector of a column matrix.","Multiplies two matrices.","Computes column vector in column matrix product.","Returns a row vector of a column matrix.","Transforms a 3D vector through a matrix.","Transforms a 2D position through column matrix.","Transforms a 2D vector through column matrix.","Multiplies two matrices.","Computes column vector in column matrix product.","Returns a row vector of a column matrix.","Transforms a 2D position through matrix.","Transforms a 2D vector through matrix.","Returns a row vector of a column matrix.","Multiplies two matrices.","Computes column vector in column matrix product.","Returns a row vector of a column matrix.","Transforms a 4D vector through a matrix.","Multiplies two matrices.","Computes column vector in column matrix product.","Returns a column vector of a row matrix.","Transforms a 3D position through matrix.","Transforms a 3D vector through matrix.","Adds two matrices.","Converts to another matrix type.","Computes the determinant of a matrix.","Constructs identity matrix.","Computes the inverse of a 2x3 matrix.","Computes inverse determinant of a 2x3 matrix.","Subtracts ‘b’ from ‘a’.","Constructs the transpose of a matrix.","Adds two matrices.","Converts to another matrix type.","Computes the determinant of a matrix.","Constructs identity matrix.","Computes the inverse of a 3x3 matrix.","Computes inverse determinant of a 3x3 matrix.","Subtracts ‘b’ from ‘a’.","Constructs the transpose of a matrix.","Adds two matrices.","Converts to another matrix type.","Computes the determinant of a matrix.","Constructs identity matrix.","Computes the inverse of a 3x2 matrix.","Computes inverse determinant of a 3x2 matrix.","Subtracts ‘b’ from ‘a’.","Constructs the transpose of a matrix.","Adds two matrices.","Converts to another matrix type.","Computes the determinant of a matrix.","Constructs identity matrix.","Computes the inverse of a 3x4 matrix.","Computes inverse determinant of a 3x4 matrix.","Subtracts ‘b’ from ‘a’.","Constructs the transpose of a matrix.","Adds two matrices.","Converts to another matrix type.","Computes the determinant of a 4x4 matrix.","Constructs identity matrix.","Computes the inverse of a 4x4 matrix.","Computes the inverse determinant of a 4x4 matrix.","Subtracts ‘b’ from ‘a’.","Constructs the transpose of a matrix.","Adds two matrices.","Converts to another matrix type.","Computes the determinant of a matrix.","Constructs identity matrix.","Computes the inverse of a 4x3 matrix.","Computes inverse determinant of a 4x3 matrix.","Subtracts ‘b’ from ‘a’.","Constructs the transpose of a matrix.","Returns a column vector of a row matrix.","Multiplies two matrices.","Computes row vector in row matrix product.","Transforms a 2D position through matrix.","Transforms a 2D vector through matrix.","Returns a column vector of a row matrix.","Multiplies two matrices.","Computes row vector in row matrix product.","Transforms a 3D vector through a matrix.","Transforms a 2D position through row matrix.","Transforms a 2D vector through row matrix.","Returns a column vector of a row matrix.","Returns a column vector of a row matrix.","Multiplies two matrices.","Computes row vector in row matrix product.","Transforms a 3D position through matrix.","Transforms a 3D vector through matrix.","Returns a column vector of a row matrix.","Multiplies two matrices.","Computes row vector in row matrix product.","Transforms a 4D vector through a matrix.","Returns a column vector of a row matrix.","Various useful traits","Adds two vectors.","Converts to another vector type.","Computes the cross product.","Computes the dot product.","Computes the inverse length of a vector.","Computes the length of vector.","Multiplies two vectors component wise.","Negates the vector.","Computes the normalized.","Computes the normalized difference between two vectors.","Multiplies the vector with a scalar.","Computes the square length of a vector.","Subtracts ‘b’ from ‘a’.","Adds two vectors.","Converts to another vector type.","Computes the cross product.","Computes the dot product.","Computes transformed position component.","Computes transformed vector component.","Computes the inverse length of a vector.","Computes the length of vector.","Multiplies two vectors component wise.","Negates the vector.","Computes the normalized.","Computes the normalized difference between two vectors.","Multiplies the vector with a scalar.","Computes the square length of a vector.","Subtracts ‘b’ from ‘a’.","Adds two vectors.","Converts to another vector type.","Computes the dot product.","Computes transformed position component.","Computes transformed vector component.","Computes the inverse length of a vector.","Computes the length of vector.","Multiplies two vectors component wise.","Negates the vector.","Computes the normalized.","Computes the normalized difference between two vectors.","Multiplies the vector with a scalar.","Computes the square length of a vector.","Subtracts ‘b’ from ‘a’.","Casts into another type.","Convenience trait for floats.","Trait for converting from different numeric types","Maximum value.","Minimum value.","Number 1.","Floating number power.","Useful constants for radians.","The sign of the number.","Square root.","Basic trigonometry functions","Number 0.","Returns radians corresponding to 180 degrees.","Returns radians corresponding to 360 degrees.","Returns radians corresponding to 90 degrees.","Returns inverse cosine of self.","Returns inverse hyperbolic cosine of self.","Returns inverse sine of self.","Returns inverse hyperbolic sine of self.","Returns inverse tangent of self.","Returns the four quadrant arctangent of self (y) and other …","Returns inverse hyperbolic tangent of self.","Casts into other type.","Returns cosine of self.","Returns hyperbolic cosine of self.","Convert a value to radians from degrees. Equivalent to …","from a f32","from a f64","from a i32","from a isze","from a u32","Returns the maximum value of self or other.","Returns the minimum value of self or other.","Returns 1.","Returns floating power of the number.","Convert a value to degrees from radians. Equivalent to …","Returns number representing the sign of self","Returns sine of self.","Returns hyperbolic sine of self.","Returns square root.","Returns tangent of self.","Returns hyperbolic tangent of self.","Returns 0."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,27,27,27,27,27,27,27,14,27,27,26,28,28,28,28,28,29,30,16,31,26,32,27,27,20,27,27,17],"fc":[],"p":[[8,"Copy"],[6,"Matrix2x3"],[15,"usize"],[6,"Vector2"],[8,"Add"],[8,"Mul"],[6,"Matrix3"],[6,"Vector3"],[6,"Matrix3x2"],[6,"Matrix3x4"],[6,"Matrix4"],[6,"Vector4"],[6,"Matrix4x3"],[8,"Cast"],[8,"Sub"],[8,"One"],[8,"Zero"],[8,"Div"],[8,"Neg"],[8,"Sqrt"],[15,"f32"],[15,"f64"],[15,"i32"],[15,"isize"],[15,"u32"],[8,"Radians"],[8,"Trig"],[8,"FromPrimitive"],[8,"Max"],[8,"Min"],[8,"Powf"],[8,"Signum"]]},\
"viewport":{"doc":"A library for storing viewport information","t":"DLLLLLMLLLLMLLLLM","n":["Viewport","abs_transform","borrow","borrow_mut","clone","clone_into","draw_size","eq","fmt","from","into","rect","to_owned","try_from","try_into","type_id","window_size"],"q":[[0,"viewport"]],"d":["Stores viewport information.","Computes absolute transform for 2D graphics, which uses a …","","","","","The size of frame buffer in pixels.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Viewport in pixels. <code>[x, y, width, height]</code> where <code>(x, y)</code> is …","","","","","The size of window in points."],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[1,[[3,[[3,[2]]]]]],[[]],[[]],[1,1],[[]],0,[[1,1],4],[[1,5],6],[[]],[[]],0,[[]],[[],7],[[],7],[[],8],0],"c":[],"p":[[3,"Viewport"],[8,"Float"],[15,"array"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"void":{"doc":"Void","t":"IIELLLLLLLLLLLLFKK","n":["ResultVoidErrExt","ResultVoidExt","Void","borrow","borrow_mut","clone","eq","fmt","fmt","from","into","partial_cmp","try_from","try_into","type_id","unreachable","void_unwrap","void_unwrap_err"],"q":[[0,"void"]],"d":["Extensions to <code>Result&lt;Void, E&gt;</code>","Extensions to <code>Result&lt;T, Void&gt;</code>","The empty type for cases which can’t occur.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","A safe version of <code>intrinsincs::unreachable</code>.","Get the value out of a wrapper.","Get the error out of a wrapper."],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,10,11],"f":[0,0,0,[[]],[[]],[1,1],[1,2],[[1,3],4],[[1,3],4],[[]],[[]],[1,[[6,[5]]]],[[],7],[[],7],[[],8],[1,9],[[]],[[]]],"c":[],"p":[[4,"Void"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Ordering"],[4,"Option"],[4,"Result"],[3,"TypeId"],[15,"never"],[8,"ResultVoidExt"],[8,"ResultVoidErrExt"]]},\
"weezl":{"doc":"LZW decoder and encoder","t":"EDNNNEENNNDLLLLLLLLLLMMLLLLLLMMAALLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BitOrder","BufferResult","Done","InvalidCode","Lsb","LzwError","LzwStatus","Msb","NoProgress","Ok","StreamResult","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_read","bytes_written","clone","clone","clone","clone_into","clone_into","clone_into","consumed_in","consumed_out","decode","encode","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","status","status","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Decoder","IntoStream","IntoVec","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decode","decode","decode","decode_all","decode_all","decode_bytes","from","from","from","has_ended","into","into","into","into_stream","into_vec","new","reset","set_buffer","set_buffer_size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_tiff_size_switch","Encoder","IntoStream","IntoVec","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","encode","encode","encode","encode_all","encode_all","encode_bytes","finish","from","from","from","into","into","into","into_stream","into_vec","new","reset","set_buffer","set_buffer_size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_tiff_size_switch"],"q":[[0,"weezl"],[70,"weezl::decode"],[108,"weezl::encode"]],"d":["The order of bits in bytes.","The result of a coding operation on a pair of buffer.","No more data will be produced because an end marker was …","The input contained an invalid code.","The least significant bit is processed first.","The error kind after unsuccessful coding of an LZW stream.","The status after successful coding of an LZW stream.","The most significant bit is processed first.","No bytes were read or written and no internal state …","Everything went well.","The result of coding into an output stream.","","","","","","","","","","","The total number of bytes consumed from the reader.","The total number of bytes written into the writer.","","","","","","","The number of bytes consumed from the input buffer.","The number of bytes written into the output buffer.","A module for all decoding needs.","A module for all encoding needs.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The status after returning from the write call.","The possible error that occurred.","","","","","","","","","","","","","","","","","","","","The state for decoding data with an LZW algorithm.","A decoding stream sink.","A decoding sink into a vector.","","","","","","","Decode a single chunk of lzw encoded data.","Decode data from a reader.","Decode data from a slice.","Decode data from a reader, requiring an end marker.","Decode data from a slice, requiring an end marker.","Decode some bytes from <code>inp</code> and write result to <code>out</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Check if the decoding has finished.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a decoder into a writer.","Construct a decoder into a vector.","Create a new decoder with the specified bit order and …","Reset all internal state.","Use a particular buffer as an intermediate decode buffer.","Set the size of the intermediate decode buffer.","","","","","","","","","","Create a TIFF compatible decoder with the specified bit …","The state for encoding data with an LZW algorithm.","A encoding stream sink.","A encoding sink into a vector.","","","","","","","Encode a single chunk of data.","Encode data from a reader.","Encode data from a slice.","Encode data from a reader and an end marker.","Decode data from a reader, adding an end marker.","Encode some bytes from <code>inp</code> into <code>out</code>.","Mark the encoding as in the process of finishing.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a encoder into a writer.","Construct an encoder into a vector.","Create a new encoder with the specified bit order and …","Reset all internal state.","Use a particular buffer as an intermediate encode buffer.","Set the size of the intermediate encode buffer.","","","","","","","","","","Create a TIFF compatible encoder with the specified bit …"],"i":[0,0,2,3,1,0,0,1,2,2,0,1,6,7,2,3,1,6,7,2,3,7,7,1,2,3,1,2,3,6,6,0,0,1,6,7,2,3,3,1,6,7,2,3,1,6,7,2,3,6,7,1,2,3,3,1,6,7,2,3,1,6,7,2,3,1,6,7,2,3,0,0,0,11,16,18,11,16,18,11,16,18,16,18,11,11,16,18,11,11,16,18,11,11,11,11,16,16,11,16,18,11,16,18,11,16,18,11,0,0,0,21,22,23,21,22,23,21,22,23,22,23,21,21,21,22,23,21,22,23,21,21,21,21,22,22,21,22,23,21,22,23,21,22,23,21],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,1],[2,2],[3,3],[[]],[[]],[[]],0,0,0,0,[[1,4],5],[[6,4],5],[[7,4],5],[[2,4],5],[[3,4],5],[[3,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[11,[13,[12]]],[[9,[[14,[12]],3]]]],[[[16,[15]],17],7],0,[[[16,[15]],17],7],0,[[11,[13,[12]],[13,[12]]],6],[[]],[[]],[[]],[11,19],[[]],[[]],[[]],[[11,15],[[16,[15]]]],[[11,[14,[12]]],18],[[1,12],11],[11],[[[16,[15]],[13,[12]]]],[[[16,[15]],20]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[1,12],11],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[21,[13,[12]]],[[9,[[14,[12]],3]]]],[[[22,[15]],17],7],0,[[[22,[15]],17],7],0,[[21,[13,[12]],[13,[12]]],6],[21],[[]],[[]],[[]],[[]],[[]],[[]],[[21,15],[[22,[15]]]],[[21,[14,[12]]],23],[[1,12],21],[21],[[[22,[15]],[13,[12]]]],[[[22,[15]],20]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[1,12],21]],"c":[],"p":[[4,"BitOrder"],[4,"LzwStatus"],[4,"LzwError"],[3,"Formatter"],[6,"Result"],[3,"BufferResult"],[3,"StreamResult"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Decoder"],[15,"u8"],[15,"slice"],[3,"Vec"],[8,"Write"],[3,"IntoStream"],[8,"BufRead"],[3,"IntoVec"],[15,"bool"],[15,"usize"],[3,"Encoder"],[3,"IntoStream"],[3,"IntoVec"]]},\
"winapi":{"doc":"","t":"IOOOOIOOAAAAAKKAAGGGGGGGGLLGGGGGGGGGGGGGELLLLLGAAAAAGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGMMMMGDGRCCFCGGGGGGGGGLLLLLLLLMMRRGRMRRRMMMMDDDRRRRMGMGGGGGGGGGGGGGGGGMMRRRRGMMRRRRRRRRRRRDDGDDDDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRMMMMMMMMGMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGGGRGDGGGGFGEFGEGEGGEGEGGEGEGEGEGEGEGFGFGGGGGGGGGGGGFFRGGGGGGGGGGGGGGGGRGGGGGGELLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRGGGRMMMGRRMMMMMMMMGGGGGGDLLRRRGGMRRRRRGRRRRGDGGMMMDMMGGMMMMMMGFGGFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDDDGDDDRRRRRRRRRRRRRGGGGGGGGGGGGGGGGDMMMMMMMMMMFFMMMMMMFFFRRRRRRRRRRRRRRRRMRMMMMMRGGFFGFFRRGMMRRRRRMDDDDRRRRRRRRRRRRGMMMGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGFGDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGMRRDLLLLDFRDDGGMMMMMMGGGDDFFRRRRRRRRRRRRRRRRRRDDDFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRMMMMMMRRRRRRGGRRGGRDDDGGRDGGRRRGGGMMRRRRRRRRRRRRRRRRRRGGGRDRRRRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLAAAAFFFFFFFGGFFFFFFFFFFGRFGGGGGGFFFFFFFFFFFFFRRRFFFFFFFRRRRRRRRRRRRRRFFFFFFFFGFFFDRDRDRRDRDRDRDRDRRRRGRRRRRRRRRRRRGDRRRGRRDRRDGRRRRRRDDRRRGRRRGRRRRRGDDDDGRRRRDDRRRRRRRRRRRDRRRDDDRRGDRGDRRGMMMMRRRRRRRRRRRRRRRRRRMMMMMMMMMMRMRMMMRRRMMMMMMMRMMLLLLMMMMMMMMMRMMLLLMLMMMMLLMMMMMMMLLLLLLLLMMMMMMMMMMMLLMMRRMMMMMMMRRLLLLLLLLMMMMRRRRDGFMMMMMLLMMMMMMMMMLLMMMMMMMMMMMMMRMMMMMMMMMMMMMMMMMMMMMMLLLLMMMMMMRMMMMLLLMMMLLLMMMMLLLLLDRDGRDRRGMMDDRRRRRDRRDDDRRRRRRRRRDDRRDRRRRRRRRRRRRRRRRGDRRRRRRRRRDRRRRRRRRRRRRRDDRRRRRRRRRRRRRRRRGLMMRMMRRRLLRRMRRLLMMMMMMMMMLMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMLMRMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLMLMRMMMRMMMMMMMMMMMMRMMMMMRRRRRRRRRRRRRFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMLMMMMMMMLLRMMMMMMLMMMMMMMMLLLRLLLLMMMRMMMMMLLMMMMMMMMMMMMRMMMMMMMMMMMMMMMMDDRRRDDRRRGRRRRRMMRRRRRRRRRDRRRRRRRRRRRRRRRDRRRRRRRRDRDDDDRRRRRGMMMMMMMMMMMMMMMLMLLLLLLLLLLLMMMMMMMMMMMMMMLMLMMRRRRMMMRMMLLLLMMMMMMMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMRMMMMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRRRRRRDRRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRGDGRRRRRRRDRRRRGMMMMMMMMMMLLLLLLMMMMMMMRRMMRMLMRRRRRMMMMMLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMMMMLLLLMMLLLLLMMMLMLLLMMLLLLLRRDRRDDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRMMMMMMRRMMMMMMMMLLMLMMMMMMMMMMMMMRLMMMMMMMMMMMMMMMMMMMMMMMMMMMLLGDGRRRRRRRRRGFRRRDRRRRRDGRRRRGLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLRRRRRRRRRRRMMMMMMMMMMMLMLMMMMMMDDDDRRRRDRRRDDDDDDDDDDDDDDDDDDDGRDDDDDRRRRRRRDDRRRRDDDRRRRRRRRRRRRRRRRRRDDRRRRRRRRRRRRRRRRRRRRRRRRRRDRGDDDDRRDGDDRRRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDDDRRRRRRRRRRRRRRRRRDRRRRRRRRRRRDRDRRRGDDDDDDGDDGDDRRRRRGDDFFFRRRDRRDDDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRDDDDDDRDRDGDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDDRDRRRRRRRFFFRRRRRRRRRRRRRRRDDDDDDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGDDDDGDDDRRRRRRRRDDRRRGRRGFRRRRGRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFFFFFRRRRRRRRRRRRRRRRFFRLMMLMMMMRMMMMMMMRMMMMMMMMMMMMMMMMMLMMMMMMMMMMMLLMMMMMMMMMMMMMMMMMMMMMMMMFFFFMMMMGDDDDDDDDDDDRRGRDDDGDDDDDDDDDDDDDDGGDRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRDMLLLLMMMMLLMMMLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRMMMRRRRRRRRRRRRRDDDDDGDRRRRRGLLRGFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRCGGDDDDDDDRRRRRRRRRRRRRRGGGGGGGGGGGGGGGGGGGGRRRRCDGMMMMMMMMMMRRRMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMMMMMMMLLMMMMMMMMMMMRMMMLLLLLMMMMMMMMMDRRFFFGFRRRRRRRRRRRRRRRRRRRRRRDDDRRRRRRRRRRRRRRRRRRRRRRRRRRRRDDDRRRRRRGRRRLMMMMMMMMMMMMMMMMMMMMMMMMMMMRRRRRRRMMMMMMMMMMMMMMMMMMMMMMMMMRMMMMMMMRMMMRMMMRMMMMMMMMMRMMMMMMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLMMMMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRMMMMMRRRDRDRDRRGDDDDDDDRDGRRRRRRLLLMMMMMMMMMMLLMMLLLLLMMMMMMMMMLMLLLLMMMMRRRMLLMLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDRDDDDDGRRRRMMMMMMMMMMMMMMMMMMMMMMLMMMMMMMMLMMMLLLLLLMLLMMMMMMMMMMMMMMMMMGGGGGGGGGGGGDGGGGGGGGGRRRRRRRRRRRRRRRRRGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGRRRRRRRRRGGGMMMMMMMMGGGGDRRRRRRRGGGGGGGGGGGGGGGGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGRGGGGGGGGGGGGGGGGGGRGGGGGRRRRRRRRRRGRRRRRRRDRRRRRRRRRRRRDGRRRDGGDGRRRRRRRRRGDDDDRRRRDGRRRRRGGRRRRRRRRRRRRRRRRRRRRRRDDDRRRRRRRDDDRRRRRRRRRDDDRRDDDDDDDDGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGFDRGRRRRRRRRRRRRRRRRRRRRRRGRRDRRRDDRDRRRRRRDRDDDRRRRRRRRRRRRRRRRDDRRRRDRRRRRRRRRRDDDDDDDDDDGDDDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGMMMMGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGMMMMMMMLMMMMRMMMMMMMMMMMMMMLLLMRRRRRRRRRRRRRRRRRRRRMMMMMMMMMMMMMMMMMMMRRRRRRRRRMMMRRRRRRRRRRRRMRRRRRRRRRRRRRRRRRRRRRRLLLMMMMLMMMMMMMMMMMLRMMRRRRRMMMRMMRRRRLMRLLRRRRRRRMMMRRRRRRRRRMLMMMMLMMLMMMMMMMMMMMDDRRRRRRLMMMMMMMMMMMMMMMMDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDDRDRDRRRRRGRRRRDDDRRDRDRRRRRRRGGGGGDRRRRDRGGRGRMLMLLMMLMLLMLLLMLMMMMMMMMMMMMMMMLRMMMLLLMMMMMRRRRRRRMMLLMMMMMGMMMMMMMMMMLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLMLLLLMMRRMMMMMMMMMMMMMMLMMMMMMMMMMMMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMRLMMMMRRRGDDDDDRRRDRRRRDDRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRDGRDRRRRRRGGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRMMMMRRDRRRGRRRRRRRRRRRRGRRRGGRRRRRRRRRRRRRRDDDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRDRRRGRRRRRRRRRRRRRRRRRRRRRDRRRRRRRRDGRRRRRRRRRRRRRRRRRRRRRRRRDDDRRRMMDGDDGDGRDRGRRDDRDDDDRFFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRDRRRDRDRDRDRDRDRDRDRDRDRRDRRDDDDDDRDRRRRRDGDDGDDRRRDRDRMMMMMMMMMMMRRRRRRRRRRRMMMMMMMMMMRMMMRMRRMMMMMMMMMMMMMMMMMLMMMRRMRRRRRRRRGRRRRMGRRMMLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMRRRRRRRRRRRLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLMMMMMMMMLMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMMMMMMMMMRMMMMMMMMLMMLLLMRRRRRRRRRRRRRRRRRRRMMMMMRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRDDDRRRRRRDRRRRRRRRRDDDRRRRRRRRRRDDRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRRRDRDDDDDRDGRDDRGDDDRRRRDDDDRRRDDRDRGDDRGDDDDGRRRRRDDDDDGDGDRDRRRRRGDDDRRDRRRDDRRDDRRRGDDGRDRRRRRGDRMMMMMMMMRRRRRRRRRRRRRRMMMMMMMMMMMMRRLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMRMRRRRRMMRRRRRRRRRRRMMRRRRMRRRRRRRRRRRRRRRRRRRRMRRMMRRLRRLRRRRRRRRMMMMMMLMLMMMMMMMRRRRRRRMMMRRRRRRRRRRRRRRMMLLLMMMMMMMMMMMMMMMMMMMMMMGRMCGDRRRRRRRRRDDRRRRRRMGGMMMRRRRRRRRRRRMMMMLMMLLLLLRMLMMMLRMRRMMRLFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGRRRRMMMMMMMMMMMMMMFRRRRLLLMMMMMMMMMMMMLLLMMMMMMLLMMMLLMMMLLMMMMMMGGGGGDDRRRRRRRRRRRRRRRDDDDDDRRRRRRRRRRRRRRRRRFRMMRMMLLRRMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRMRRRRRRRRRRRRRRRRRRRRRRRRRRMMMMMGDDDRRRRRRRRDDRRRDRRRRRRRRRRRRRRRRRRMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDGMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLMLLLLLLLLLLLLLLLLMLLLLLMMMMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMMMMMMMMMAARRGRRRRRGGG","n":["Class","DEFINE_DEVPROPKEY","DEFINE_GUID","DEFINE_PROPERTYKEY","ENUM","Interface","RIDL","STRUCT","ctypes","km","shared","ucrt","um","uuidof","uuidof","vc","winrt","__int16","__int32","__int64","__int8","__uint16","__uint32","__uint64","__uint8","borrow","borrow_mut","c_char","c_double","c_float","c_int","c_long","c_longlong","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","from","into","try_from","try_into","type_id","wchar_t","basetsd","guiddef","ktmtypes","minwindef","ntdef","DWORD32","DWORD64","DWORD_PTR","HALF_PTR","HANDLE_PTR","INT16","INT32","INT64","INT8","INT_PTR","KAFFINITY","LONG32","LONG64","LONG_PTR","PDWORD32","PDWORD64","PDWORD_PTR","PHALF_PTR","PINT16","PINT32","PINT64","PINT8","PINT_PTR","PKAFFINITY","PLONG32","PLONG64","PLONG_PTR","POINTER_64_INT","PSIZE_T","PSSIZE_T","PUHALF_PTR","PUINT16","PUINT32","PUINT64","PUINT8","PUINT_PTR","PULONG32","PULONG64","PULONG_PTR","SHANDLE_PTR","SIZE_T","SSIZE_T","UHALF_PTR","UINT16","UINT32","UINT64","UINT8","UINT_PTR","ULONG32","ULONG64","ULONG_PTR","CLSID","Data1","Data2","Data3","Data4","FMTID","GUID","IID","IID_NULL","IsEqualCLSID","IsEqualFMTID","IsEqualGUID","IsEqualIID","LPCGUID","LPCLSID","LPFMTID","LPGUID","LPIID","REFCLSID","REFFMTID","REFGUID","REFIID","borrow","borrow_mut","clone","from","into","try_from","try_into","type_id","ArgumentLength","BufferLength","CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO","CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY","CRM_PROTOCOL_ID","CRM_PROTOCOL_MAXIMUM_OPTION","Description","ENLISTMENT_MAXIMUM_OPTION","ENLISTMENT_OBJECT_PATH","ENLISTMENT_SUPERIOR","EnlistmentId","Flags","IsolationFlags","IsolationLevel","KCRM_MARSHAL_HEADER","KCRM_PROTOCOL_BLOB","KCRM_TRANSACTION_BLOB","KTM_MARSHAL_BLOB_VERSION_MAJOR","KTM_MARSHAL_BLOB_VERSION_MINOR","MAX_RESOURCEMANAGER_DESCRIPTION_LENGTH","MAX_TRANSACTION_DESCRIPTION_LENGTH","MarshalCookie","NOTIFICATION_MASK","NumProtocols","PCRM_PROTOCOL_ID","PKCRM_MARSHAL_HEADER","PKCRM_PROTOCOL_BLOB","PKCRM_TRANSACTION_BLOB","PRKCRM_MARSHAL_HEADER","PRKCRM_PROTOCOL_BLOB","PRKCRM_TRANSACTION_BLOB","PSAVEPOINT_ID","PTRANSACTION_NOTIFICATION","PTRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT","PTRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT","PTRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT","PTRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT","PTRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT","PTRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT","PUOW","PropagationCookie","ProtocolId","RESOURCE_MANAGER_COMMUNICATION","RESOURCE_MANAGER_MAXIMUM_OPTION","RESOURCE_MANAGER_OBJECT_PATH","RESOURCE_MANAGER_VOLATILE","SAVEPOINT_ID","SavepointId","StaticInfoLength","TRANSACTIONMANAGER_OBJECT_PATH","TRANSACTION_DO_NOT_PROMOTE","TRANSACTION_MANAGER_COMMIT_DEFAULT","TRANSACTION_MANAGER_COMMIT_LOWEST","TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES","TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME","TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS","TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY","TRANSACTION_MANAGER_MAXIMUM_OPTION","TRANSACTION_MANAGER_VOLATILE","TRANSACTION_MAXIMUM_OPTION","TRANSACTION_NOTIFICATION","TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT","TRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT","TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT","TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT","TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT","TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT","TRANSACTION_NOTIFICATION_TM_ONLINE_FLAG_IS_CLUSTERED","TRANSACTION_NOTIFY_COMMIT","TRANSACTION_NOTIFY_COMMIT_COMPLETE","TRANSACTION_NOTIFY_COMMIT_FINALIZE","TRANSACTION_NOTIFY_COMMIT_REQUEST","TRANSACTION_NOTIFY_DELEGATE_COMMIT","TRANSACTION_NOTIFY_ENLIST_MASK","TRANSACTION_NOTIFY_ENLIST_PREPREPARE","TRANSACTION_NOTIFY_INDOUBT","TRANSACTION_NOTIFY_LAST_RECOVER","TRANSACTION_NOTIFY_MARSHAL","TRANSACTION_NOTIFY_MASK","TRANSACTION_NOTIFY_PREPARE","TRANSACTION_NOTIFY_PREPARE_COMPLETE","TRANSACTION_NOTIFY_PREPREPARE","TRANSACTION_NOTIFY_PREPREPARE_COMPLETE","TRANSACTION_NOTIFY_PROMOTE","TRANSACTION_NOTIFY_PROMOTE_NEW","TRANSACTION_NOTIFY_PROPAGATE_PULL","TRANSACTION_NOTIFY_PROPAGATE_PUSH","TRANSACTION_NOTIFY_RECOVER","TRANSACTION_NOTIFY_RECOVER_QUERY","TRANSACTION_NOTIFY_REQUEST_OUTCOME","TRANSACTION_NOTIFY_RM_DISCONNECTED","TRANSACTION_NOTIFY_ROLLBACK","TRANSACTION_NOTIFY_ROLLBACK_COMPLETE","TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT","TRANSACTION_NOTIFY_TM_ONLINE","TRANSACTION_OBJECT_PATH","Timeout","TmIdentity","TmIdentity","TmIdentity","TmVirtualClock","TransactionIdInfoLength","TransactionKey","TransactionNotification","UOW","UOW","UOW","UOW","UOW","Unused","Unused1","Unused2","VersionMajor","VersionMinor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ATOM","BOOL","BYTE","DWORD","FALSE","FARPROC","FILETIME","FLOAT","GLOBALHANDLE","HFILE","HGLOBAL","HIBYTE","HINSTANCE","HINSTANCE__","HIWORD","HKEY","HKEY__","HKL","HKL__","HLOCAL","HLSURF","HLSURF__","HMETAFILE","HMETAFILE__","HMODULE","HRGN","HRGN__","HRSRC","HRSRC__","HSPRITE","HSPRITE__","HSTR","HSTR__","HTASK","HTASK__","HWINSTA","HWINSTA__","INT","LOBYTE","LOCALHANDLE","LOWORD","LPARAM","LPBOOL","LPBYTE","LPCVOID","LPDWORD","LPFILETIME","LPHANDLE","LPINT","LPLONG","LPVOID","LPWORD","LRESULT","MAKELONG","MAKEWORD","MAX_PATH","NEARPROC","PBOOL","PBYTE","PDWORD","PFILETIME","PFLOAT","PHKEY","PINT","PROC","PSZ","PUCHAR","PUINT","PULONG","PUSHORT","PWORD","SPHANDLE","TRUE","UCHAR","UINT","ULONG","USHORT","WORD","WPARAM","__some_function","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","dwHighDateTime","dwLowDateTime","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ALL_PROCESSOR_GROUPS","ANSI_NULL","ANSI_STRING","ANSI_STRING32","ANSI_STRING64","APPLICATION_ERROR_MASK","Attributes","Attributes","Attributes","BOOLEAN","BackOffice","Blade","Blink","Blink","Blink","Buffer","Buffer","Buffer","Buffer","Buffer","CANSI_STRING","CCHAR","CHAR","CLONG","COMPARTMENT_ID","CSHORT","CSTRING","Children","Children_mut","CommunicationServer","ComputeServer","DEFAULT_COMPARTMENT_ID","DOUBLE","DWORDLONG","Data","DataCenter","ERROR_SEVERITY_ERROR","ERROR_SEVERITY_INFORMATIONAL","ERROR_SEVERITY_SUCCESS","ERROR_SEVERITY_WARNING","EVENT_TYPE","EmbeddedNT","EmbeddedRestricted","Enterprise","FALSE","FCHAR","FLOAT128","FLONG","FSHORT","Flink","Flink","Flink","GROUP_AFFINITY","Group","Group","HANDLE","HRESULT","HighPart","HighPart","HighPart","HighPart","HighPart","HighPart","INT","InitializeObjectAttributes","KIRQL","LANGID","LANGIDFROMLCID","LANG_AFRIKAANS","LANG_ALBANIAN","LANG_ALSATIAN","LANG_AMHARIC","LANG_ARABIC","LANG_ARMENIAN","LANG_ASSAMESE","LANG_AZERBAIJANI","LANG_AZERI","LANG_BANGLA","LANG_BASHKIR","LANG_BASQUE","LANG_BELARUSIAN","LANG_BENGALI","LANG_BOSNIAN","LANG_BOSNIAN_NEUTRAL","LANG_BRETON","LANG_BULGARIAN","LANG_CATALAN","LANG_CENTRAL_KURDISH","LANG_CHEROKEE","LANG_CHINESE","LANG_CHINESE_SIMPLIFIED","LANG_CHINESE_TRADITIONAL","LANG_CORSICAN","LANG_CROATIAN","LANG_CZECH","LANG_DANISH","LANG_DARI","LANG_DIVEHI","LANG_DUTCH","LANG_ENGLISH","LANG_ESTONIAN","LANG_FAEROESE","LANG_FARSI","LANG_FILIPINO","LANG_FINNISH","LANG_FRENCH","LANG_FRISIAN","LANG_FULAH","LANG_GALICIAN","LANG_GEORGIAN","LANG_GERMAN","LANG_GREEK","LANG_GREENLANDIC","LANG_GUJARATI","LANG_HAUSA","LANG_HAWAIIAN","LANG_HEBREW","LANG_HINDI","LANG_HUNGARIAN","LANG_ICELANDIC","LANG_IGBO","LANG_INDONESIAN","LANG_INUKTITUT","LANG_INVARIANT","LANG_IRISH","LANG_ITALIAN","LANG_JAPANESE","LANG_KANNADA","LANG_KASHMIRI","LANG_KAZAK","LANG_KHMER","LANG_KICHE","LANG_KINYARWANDA","LANG_KONKANI","LANG_KOREAN","LANG_KYRGYZ","LANG_LAO","LANG_LATVIAN","LANG_LITHUANIAN","LANG_LOWER_SORBIAN","LANG_LUXEMBOURGISH","LANG_MACEDONIAN","LANG_MALAY","LANG_MALAYALAM","LANG_MALTESE","LANG_MANIPURI","LANG_MAORI","LANG_MAPUDUNGUN","LANG_MARATHI","LANG_MOHAWK","LANG_MONGOLIAN","LANG_NEPALI","LANG_NEUTRAL","LANG_NORWEGIAN","LANG_OCCITAN","LANG_ODIA","LANG_ORIYA","LANG_PASHTO","LANG_PERSIAN","LANG_POLISH","LANG_PORTUGUESE","LANG_PULAR","LANG_PUNJABI","LANG_QUECHUA","LANG_ROMANIAN","LANG_ROMANSH","LANG_RUSSIAN","LANG_SAKHA","LANG_SAMI","LANG_SANSKRIT","LANG_SCOTTISH_GAELIC","LANG_SERBIAN","LANG_SERBIAN_NEUTRAL","LANG_SINDHI","LANG_SINHALESE","LANG_SLOVAK","LANG_SLOVENIAN","LANG_SOTHO","LANG_SPANISH","LANG_SWAHILI","LANG_SWEDISH","LANG_SYRIAC","LANG_SYSTEM_DEFAULT","LANG_TAJIK","LANG_TAMAZIGHT","LANG_TAMIL","LANG_TATAR","LANG_TELUGU","LANG_THAI","LANG_TIBETAN","LANG_TIGRIGNA","LANG_TIGRINYA","LANG_TSWANA","LANG_TURKISH","LANG_TURKMEN","LANG_UIGHUR","LANG_UKRAINIAN","LANG_UPPER_SORBIAN","LANG_URDU","LANG_USER_DEFAULT","LANG_UZBEK","LANG_VALENCIAN","LANG_VIETNAMESE","LANG_WELSH","LANG_WOLOF","LANG_XHOSA","LANG_YAKUT","LANG_YI","LANG_YORUBA","LANG_ZULU","LARGE_INTEGER","LARGE_INTEGER_s","LARGE_INTEGER_u","LCID","LIST_ENTRY","LIST_ENTRY32","LIST_ENTRY64","LOCALE_CUSTOM_DEFAULT","LOCALE_CUSTOM_UI_DEFAULT","LOCALE_CUSTOM_UNSPECIFIED","LOCALE_INVARIANT","LOCALE_NAME_MAX_LENGTH","LOCALE_NEUTRAL","LOCALE_SYSTEM_DEFAULT","LOCALE_TRANSIENT_KEYBOARD1","LOCALE_TRANSIENT_KEYBOARD2","LOCALE_TRANSIENT_KEYBOARD3","LOCALE_TRANSIENT_KEYBOARD4","LOCALE_UNASSIGNED_LCID","LOCALE_USER_DEFAULT","LOGICAL","LONG","LONGLONG","LPCCH","LPCH","LPCSTR","LPCUWCHAR","LPCUWSTR","LPCWCH","LPCWCHAR","LPCWSTR","LPSTR","LPTSTR","LPUWSTR","LPWCH","LPWSTR","LUID","Left","Length","Length","Length","Length","Length","Length","Length","Length","Lineage","ListEntry32To64","ListEntry64To32","LowPart","LowPart","LowPart","LowPart","LowPart","LowPart","MAKELANGID","MAKELCID","MAKESORTLCID","MAXCHAR","MAXIMUM_PROCESSORS","MAXIMUM_PROC_PER_GROUP","MAXLONG","MAXLONGLONG","MAXSHORT","MAXUCHAR","MAXULONG","MAXUSHORT","MAX_NATURAL_ALIGNMENT","MAX_UCSCHAR","MEMORY_ALLOCATION_ALIGNMENT","MINCHAR","MINLONG","MINSHORT","MIN_UCSCHAR","Mask","MaxSuiteType","MaximumLength","MaximumLength","MaximumLength","MaximumLength","MaximumLength","NLS_VALID_LOCALE_MASK","NPSTR","NTSTATUS","NT_ERROR","NT_INFORMATION","NT_PRODUCT_TYPE","NT_SUCCESS","NT_WARNING","NULL","NULL64","NWPSTR","Next","Next","NotificationEvent","NotificationTimer","NtProductLanManNt","NtProductServer","NtProductWinNt","Number","OBJECTID","OBJECT_ATTRIBUTES","OBJECT_ATTRIBUTES32","OBJECT_ATTRIBUTES64","OBJ_CASE_INSENSITIVE","OBJ_DONT_REPARSE","OBJ_EXCLUSIVE","OBJ_FORCE_ACCESS_CHECK","OBJ_HANDLE_TAGBITS","OBJ_IGNORE_IMPERSONATED_DEVICEMAP","OBJ_INHERIT","OBJ_KERNEL_HANDLE","OBJ_OPENIF","OBJ_OPENLINK","OBJ_PERMANENT","OBJ_VALID_ATTRIBUTES","OEM_STRING","ObjectName","ObjectName","ObjectName","PANSI_STRING","PANSI_STRING32","PANSI_STRING64","PBOOLEAN","PCANSI_STRING","PCCH","PCCHAR","PCH","PCHAR","PCLONG","PCNTSTATUS","PCNZCH","PCNZWCH","PCOBJECT_ATTRIBUTES","PCOBJECT_ATTRIBUTES32","PCOBJECT_ATTRIBUTES64","PCOEM_STRING","PCOMPARTMENT_ID","PCSCHAR","PCSHORT","PCSTR","PCSTRING","PCSZ","PCUCHAR","PCUCSCHAR","PCUCSSTR","PCULONG","PCUNICODE_STRING","PCUNZWCH","PCUQUAD","PCUSHORT","PCUUCSCHAR","PCUUCSSTR","PCUWCHAR","PCUWSTR","PCUZZWSTR","PCWCH","PCWCHAR","PCWNF_STATE_NAME","PCWSTR","PCZPCSTR","PCZPCWSTR","PCZPSTR","PCZPWSTR","PCZZSTR","PCZZWSTR","PDWORDLONG","PFLOAT128","PGROUP_AFFINITY","PHANDLE","PHYSICAL_ADDRESS","PKIRQL","PLARGE_INTEGER","PLCID","PLIST_ENTRY","PLIST_ENTRY32","PLIST_ENTRY64","PLOGICAL","PLONG","PLONGLONG","PLUID","PNTSTATUS","PNT_PRODUCT_TYPE","PNZCH","PNZWCH","POBJECT_ATTRIBUTES","POBJECT_ATTRIBUTES32","POBJECT_ATTRIBUTES64","POEM_STRING","PPHYSICAL_ADDRESS","PPROCESSOR_NUMBER","PQUAD","PRIMARYLANGID","PRLIST_ENTRY","PROCESSOR_NUMBER","PRODUCT_ARM64_SERVER","PRODUCT_AZURE_NANO_SERVER","PRODUCT_AZURE_SERVER_CORE","PRODUCT_BUSINESS","PRODUCT_BUSINESS_N","PRODUCT_CLOUD_HOST_INFRASTRUCTURE_SERVER","PRODUCT_CLOUD_STORAGE_SERVER","PRODUCT_CLUSTER_SERVER","PRODUCT_CLUSTER_SERVER_V","PRODUCT_CONNECTED_CAR","PRODUCT_CORE","PRODUCT_CORE_ARM","PRODUCT_CORE_CONNECTED","PRODUCT_CORE_CONNECTED_COUNTRYSPECIFIC","PRODUCT_CORE_CONNECTED_N","PRODUCT_CORE_CONNECTED_SINGLELANGUAGE","PRODUCT_CORE_COUNTRYSPECIFIC","PRODUCT_CORE_N","PRODUCT_CORE_SINGLELANGUAGE","PRODUCT_DATACENTER_A_SERVER_CORE","PRODUCT_DATACENTER_EVALUATION_SERVER","PRODUCT_DATACENTER_EVALUATION_SERVER_CORE","PRODUCT_DATACENTER_NANO_SERVER","PRODUCT_DATACENTER_SERVER","PRODUCT_DATACENTER_SERVER_CORE","PRODUCT_DATACENTER_SERVER_CORE_V","PRODUCT_DATACENTER_SERVER_V","PRODUCT_DATACENTER_WS_SERVER_CORE","PRODUCT_EDUCATION","PRODUCT_EDUCATION_N","PRODUCT_EMBEDDED","PRODUCT_EMBEDDED_A","PRODUCT_EMBEDDED_AUTOMOTIVE","PRODUCT_EMBEDDED_E","PRODUCT_EMBEDDED_EVAL","PRODUCT_EMBEDDED_E_EVAL","PRODUCT_EMBEDDED_INDUSTRY","PRODUCT_EMBEDDED_INDUSTRY_A","PRODUCT_EMBEDDED_INDUSTRY_A_E","PRODUCT_EMBEDDED_INDUSTRY_E","PRODUCT_EMBEDDED_INDUSTRY_EVAL","PRODUCT_EMBEDDED_INDUSTRY_E_EVAL","PRODUCT_ENTERPRISE","PRODUCT_ENTERPRISE_E","PRODUCT_ENTERPRISE_EVALUATION","PRODUCT_ENTERPRISE_N","PRODUCT_ENTERPRISE_N_EVALUATION","PRODUCT_ENTERPRISE_S","PRODUCT_ENTERPRISE_SERVER","PRODUCT_ENTERPRISE_SERVER_CORE","PRODUCT_ENTERPRISE_SERVER_CORE_V","PRODUCT_ENTERPRISE_SERVER_IA64","PRODUCT_ENTERPRISE_SERVER_V","PRODUCT_ENTERPRISE_SUBSCRIPTION","PRODUCT_ENTERPRISE_SUBSCRIPTION_N","PRODUCT_ENTERPRISE_S_EVALUATION","PRODUCT_ENTERPRISE_S_N","PRODUCT_ENTERPRISE_S_N_EVALUATION","PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL","PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC","PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT","PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC","PRODUCT_HOLOGRAPHIC","PRODUCT_HOME_BASIC","PRODUCT_HOME_BASIC_E","PRODUCT_HOME_BASIC_N","PRODUCT_HOME_PREMIUM","PRODUCT_HOME_PREMIUM_E","PRODUCT_HOME_PREMIUM_N","PRODUCT_HOME_PREMIUM_SERVER","PRODUCT_HOME_SERVER","PRODUCT_HYPERV","PRODUCT_INDUSTRY_HANDHELD","PRODUCT_IOTUAP","PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT","PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING","PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY","PRODUCT_MOBILE_CORE","PRODUCT_MULTIPOINT_PREMIUM_SERVER","PRODUCT_MULTIPOINT_STANDARD_SERVER","PRODUCT_NANO_SERVER","PRODUCT_PPI_PRO","PRODUCT_PROFESSIONAL","PRODUCT_PROFESSIONAL_E","PRODUCT_PROFESSIONAL_EMBEDDED","PRODUCT_PROFESSIONAL_N","PRODUCT_PROFESSIONAL_S","PRODUCT_PROFESSIONAL_STUDENT","PRODUCT_PROFESSIONAL_STUDENT_N","PRODUCT_PROFESSIONAL_S_N","PRODUCT_PROFESSIONAL_WMC","PRODUCT_PRO_CHINA","PRODUCT_PRO_FOR_EDUCATION","PRODUCT_PRO_FOR_EDUCATION_N","PRODUCT_PRO_SINGLE_LANGUAGE","PRODUCT_PRO_WORKSTATION","PRODUCT_PRO_WORKSTATION_N","PRODUCT_SB_SOLUTION_SERVER","PRODUCT_SB_SOLUTION_SERVER_EM","PRODUCT_SERVER_FOR_SB_SOLUTIONS","PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM","PRODUCT_SERVER_FOR_SMALLBUSINESS","PRODUCT_SERVER_FOR_SMALLBUSINESS_V","PRODUCT_SERVER_FOUNDATION","PRODUCT_SMALLBUSINESS_SERVER","PRODUCT_SMALLBUSINESS_SERVER_PREMIUM","PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE","PRODUCT_SOLUTION_EMBEDDEDSERVER","PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE","PRODUCT_STANDARD_A_SERVER_CORE","PRODUCT_STANDARD_EVALUATION_SERVER","PRODUCT_STANDARD_EVALUATION_SERVER_CORE","PRODUCT_STANDARD_NANO_SERVER","PRODUCT_STANDARD_SERVER","PRODUCT_STANDARD_SERVER_CORE","PRODUCT_STANDARD_SERVER_CORE_V","PRODUCT_STANDARD_SERVER_SOLUTIONS","PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE","PRODUCT_STANDARD_SERVER_V","PRODUCT_STANDARD_WS_SERVER_CORE","PRODUCT_STARTER","PRODUCT_STARTER_E","PRODUCT_STARTER_N","PRODUCT_STORAGE_ENTERPRISE_SERVER","PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE","PRODUCT_STORAGE_EXPRESS_SERVER","PRODUCT_STORAGE_EXPRESS_SERVER_CORE","PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER","PRODUCT_STORAGE_STANDARD_SERVER","PRODUCT_STORAGE_STANDARD_SERVER_CORE","PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER","PRODUCT_STORAGE_WORKGROUP_SERVER","PRODUCT_STORAGE_WORKGROUP_SERVER_CORE","PRODUCT_THINPC","PRODUCT_ULTIMATE","PRODUCT_ULTIMATE_E","PRODUCT_ULTIMATE_N","PRODUCT_UNDEFINED","PRODUCT_UNLICENSED","PRODUCT_UTILITY_VM","PRODUCT_WEB_SERVER","PRODUCT_WEB_SERVER_CORE","PRTL_BALANCED_NODE","PRTL_REFERENCE_COUNT","PSCHAR","PSHORT","PSINGLE_LIST_ENTRY","PSINGLE_LIST_ENTRY32","PSTR","PSTRING","PSTRING32","PSTRING64","PSZ","PTIME","PUCHAR","PUCSCHAR","PUCSSTR","PULARGE_INTEGER","PULONG","PULONGLONG","PUNICODE_STRING","PUNICODE_STRING32","PUNICODE_STRING64","PUNZWCH","PUQUAD","PUSHORT","PUUCSCHAR","PUUCSSTR","PUWSTR","PUZZWSTR","PVOID","PVOID64","PWCH","PWCHAR","PWNF_STATE_NAME","PWSTR","PZPCSTR","PZPCWSTR","PZPSTR","PZPWSTR","PZZSTR","PZZWSTR","ParentValue","Personal","PhoneNT","QUAD","QuadPart","QuadPart","QuadPart_mut","QuadPart_mut","RTL_BALANCED_NODE","RTL_BALANCED_NODE_GET_PARENT_POINTER","RTL_BALANCED_NODE_RESERVED_PARENT_MASK","RTL_BALANCED_NODE_s","RTL_BALANCED_NODE_u","RTL_REFERENCE_COUNT","RTL_STRING_LENGTH_TYPE","Reserved","Reserved","Right","RootDirectory","RootDirectory","RootDirectory","SCHAR","SECURITY_STATUS","SHORT","SINGLE_LIST_ENTRY","SINGLE_LIST_ENTRY32","SORTIDFROMLCID","SORTVERSIONFROMLCID","SORT_CHINESE_BIG5","SORT_CHINESE_BOPOMOFO","SORT_CHINESE_PRC","SORT_CHINESE_PRCP","SORT_CHINESE_RADICALSTROKE","SORT_CHINESE_UNICODE","SORT_DEFAULT","SORT_GEORGIAN_MODERN","SORT_GEORGIAN_TRADITIONAL","SORT_GERMAN_PHONE_BOOK","SORT_HUNGARIAN_DEFAULT","SORT_HUNGARIAN_TECHNICAL","SORT_INVARIANT_MATH","SORT_JAPANESE_RADICALSTROKE","SORT_JAPANESE_UNICODE","SORT_JAPANESE_XJIS","SORT_KOREAN_KSC","SORT_KOREAN_UNICODE","STRING","STRING32","STRING64","SUBLANGID","SUBLANG_AFRIKAANS_SOUTH_AFRICA","SUBLANG_ALBANIAN_ALBANIA","SUBLANG_ALSATIAN_FRANCE","SUBLANG_AMHARIC_ETHIOPIA","SUBLANG_ARABIC_ALGERIA","SUBLANG_ARABIC_BAHRAIN","SUBLANG_ARABIC_EGYPT","SUBLANG_ARABIC_IRAQ","SUBLANG_ARABIC_JORDAN","SUBLANG_ARABIC_KUWAIT","SUBLANG_ARABIC_LEBANON","SUBLANG_ARABIC_LIBYA","SUBLANG_ARABIC_MOROCCO","SUBLANG_ARABIC_OMAN","SUBLANG_ARABIC_QATAR","SUBLANG_ARABIC_SAUDI_ARABIA","SUBLANG_ARABIC_SYRIA","SUBLANG_ARABIC_TUNISIA","SUBLANG_ARABIC_UAE","SUBLANG_ARABIC_YEMEN","SUBLANG_ARMENIAN_ARMENIA","SUBLANG_ASSAMESE_INDIA","SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC","SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN","SUBLANG_AZERI_CYRILLIC","SUBLANG_AZERI_LATIN","SUBLANG_BANGLA_BANGLADESH","SUBLANG_BANGLA_INDIA","SUBLANG_BASHKIR_RUSSIA","SUBLANG_BASQUE_BASQUE","SUBLANG_BELARUSIAN_BELARUS","SUBLANG_BENGALI_BANGLADESH","SUBLANG_BENGALI_INDIA","SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC","SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN","SUBLANG_BRETON_FRANCE","SUBLANG_BULGARIAN_BULGARIA","SUBLANG_CATALAN_CATALAN","SUBLANG_CENTRAL_KURDISH_IRAQ","SUBLANG_CHEROKEE_CHEROKEE","SUBLANG_CHINESE_HONGKONG","SUBLANG_CHINESE_MACAU","SUBLANG_CHINESE_SIMPLIFIED","SUBLANG_CHINESE_SINGAPORE","SUBLANG_CHINESE_TRADITIONAL","SUBLANG_CORSICAN_FRANCE","SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN","SUBLANG_CROATIAN_CROATIA","SUBLANG_CUSTOM_DEFAULT","SUBLANG_CUSTOM_UNSPECIFIED","SUBLANG_CZECH_CZECH_REPUBLIC","SUBLANG_DANISH_DENMARK","SUBLANG_DARI_AFGHANISTAN","SUBLANG_DEFAULT","SUBLANG_DIVEHI_MALDIVES","SUBLANG_DUTCH","SUBLANG_DUTCH_BELGIAN","SUBLANG_ENGLISH_AUS","SUBLANG_ENGLISH_BELIZE","SUBLANG_ENGLISH_CAN","SUBLANG_ENGLISH_CARIBBEAN","SUBLANG_ENGLISH_EIRE","SUBLANG_ENGLISH_INDIA","SUBLANG_ENGLISH_JAMAICA","SUBLANG_ENGLISH_MALAYSIA","SUBLANG_ENGLISH_NZ","SUBLANG_ENGLISH_PHILIPPINES","SUBLANG_ENGLISH_SINGAPORE","SUBLANG_ENGLISH_SOUTH_AFRICA","SUBLANG_ENGLISH_TRINIDAD","SUBLANG_ENGLISH_UK","SUBLANG_ENGLISH_US","SUBLANG_ENGLISH_ZIMBABWE","SUBLANG_ESTONIAN_ESTONIA","SUBLANG_FAEROESE_FAROE_ISLANDS","SUBLANG_FILIPINO_PHILIPPINES","SUBLANG_FINNISH_FINLAND","SUBLANG_FRENCH","SUBLANG_FRENCH_BELGIAN","SUBLANG_FRENCH_CANADIAN","SUBLANG_FRENCH_LUXEMBOURG","SUBLANG_FRENCH_MONACO","SUBLANG_FRENCH_SWISS","SUBLANG_FRISIAN_NETHERLANDS","SUBLANG_FULAH_SENEGAL","SUBLANG_GALICIAN_GALICIAN","SUBLANG_GEORGIAN_GEORGIA","SUBLANG_GERMAN","SUBLANG_GERMAN_AUSTRIAN","SUBLANG_GERMAN_LIECHTENSTEIN","SUBLANG_GERMAN_LUXEMBOURG","SUBLANG_GERMAN_SWISS","SUBLANG_GREEK_GREECE","SUBLANG_GREENLANDIC_GREENLAND","SUBLANG_GUJARATI_INDIA","SUBLANG_HAUSA_NIGERIA_LATIN","SUBLANG_HAWAIIAN_US","SUBLANG_HEBREW_ISRAEL","SUBLANG_HINDI_INDIA","SUBLANG_HUNGARIAN_HUNGARY","SUBLANG_ICELANDIC_ICELAND","SUBLANG_IGBO_NIGERIA","SUBLANG_INDONESIAN_INDONESIA","SUBLANG_INUKTITUT_CANADA","SUBLANG_INUKTITUT_CANADA_LATIN","SUBLANG_IRISH_IRELAND","SUBLANG_ITALIAN","SUBLANG_ITALIAN_SWISS","SUBLANG_JAPANESE_JAPAN","SUBLANG_KANNADA_INDIA","SUBLANG_KASHMIRI_INDIA","SUBLANG_KASHMIRI_SASIA","SUBLANG_KAZAK_KAZAKHSTAN","SUBLANG_KHMER_CAMBODIA","SUBLANG_KICHE_GUATEMALA","SUBLANG_KINYARWANDA_RWANDA","SUBLANG_KONKANI_INDIA","SUBLANG_KOREAN","SUBLANG_KYRGYZ_KYRGYZSTAN","SUBLANG_LAO_LAO","SUBLANG_LATVIAN_LATVIA","SUBLANG_LITHUANIAN","SUBLANG_LOWER_SORBIAN_GERMANY","SUBLANG_LUXEMBOURGISH_LUXEMBOURG","SUBLANG_MACEDONIAN_MACEDONIA","SUBLANG_MALAYALAM_INDIA","SUBLANG_MALAY_BRUNEI_DARUSSALAM","SUBLANG_MALAY_MALAYSIA","SUBLANG_MALTESE_MALTA","SUBLANG_MAORI_NEW_ZEALAND","SUBLANG_MAPUDUNGUN_CHILE","SUBLANG_MARATHI_INDIA","SUBLANG_MOHAWK_MOHAWK","SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA","SUBLANG_MONGOLIAN_PRC","SUBLANG_NEPALI_INDIA","SUBLANG_NEPALI_NEPAL","SUBLANG_NEUTRAL","SUBLANG_NORWEGIAN_BOKMAL","SUBLANG_NORWEGIAN_NYNORSK","SUBLANG_OCCITAN_FRANCE","SUBLANG_ODIA_INDIA","SUBLANG_ORIYA_INDIA","SUBLANG_PASHTO_AFGHANISTAN","SUBLANG_PERSIAN_IRAN","SUBLANG_POLISH_POLAND","SUBLANG_PORTUGUESE","SUBLANG_PORTUGUESE_BRAZILIAN","SUBLANG_PULAR_SENEGAL","SUBLANG_PUNJABI_INDIA","SUBLANG_PUNJABI_PAKISTAN","SUBLANG_QUECHUA_BOLIVIA","SUBLANG_QUECHUA_ECUADOR","SUBLANG_QUECHUA_PERU","SUBLANG_ROMANIAN_ROMANIA","SUBLANG_ROMANSH_SWITZERLAND","SUBLANG_RUSSIAN_RUSSIA","SUBLANG_SAKHA_RUSSIA","SUBLANG_SAMI_INARI_FINLAND","SUBLANG_SAMI_LULE_NORWAY","SUBLANG_SAMI_LULE_SWEDEN","SUBLANG_SAMI_NORTHERN_FINLAND","SUBLANG_SAMI_NORTHERN_NORWAY","SUBLANG_SAMI_NORTHERN_SWEDEN","SUBLANG_SAMI_SKOLT_FINLAND","SUBLANG_SAMI_SOUTHERN_NORWAY","SUBLANG_SAMI_SOUTHERN_SWEDEN","SUBLANG_SANSKRIT_INDIA","SUBLANG_SCOTTISH_GAELIC","SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC","SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN","SUBLANG_SERBIAN_CROATIA","SUBLANG_SERBIAN_CYRILLIC","SUBLANG_SERBIAN_LATIN","SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC","SUBLANG_SERBIAN_MONTENEGRO_LATIN","SUBLANG_SERBIAN_SERBIA_CYRILLIC","SUBLANG_SERBIAN_SERBIA_LATIN","SUBLANG_SINDHI_AFGHANISTAN","SUBLANG_SINDHI_INDIA","SUBLANG_SINDHI_PAKISTAN","SUBLANG_SINHALESE_SRI_LANKA","SUBLANG_SLOVAK_SLOVAKIA","SUBLANG_SLOVENIAN_SLOVENIA","SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA","SUBLANG_SPANISH","SUBLANG_SPANISH_ARGENTINA","SUBLANG_SPANISH_BOLIVIA","SUBLANG_SPANISH_CHILE","SUBLANG_SPANISH_COLOMBIA","SUBLANG_SPANISH_COSTA_RICA","SUBLANG_SPANISH_DOMINICAN_REPUBLIC","SUBLANG_SPANISH_ECUADOR","SUBLANG_SPANISH_EL_SALVADOR","SUBLANG_SPANISH_GUATEMALA","SUBLANG_SPANISH_HONDURAS","SUBLANG_SPANISH_MEXICAN","SUBLANG_SPANISH_MODERN","SUBLANG_SPANISH_NICARAGUA","SUBLANG_SPANISH_PANAMA","SUBLANG_SPANISH_PARAGUAY","SUBLANG_SPANISH_PERU","SUBLANG_SPANISH_PUERTO_RICO","SUBLANG_SPANISH_URUGUAY","SUBLANG_SPANISH_US","SUBLANG_SPANISH_VENEZUELA","SUBLANG_SWAHILI_KENYA","SUBLANG_SWEDISH","SUBLANG_SWEDISH_FINLAND","SUBLANG_SYRIAC_SYRIA","SUBLANG_SYS_DEFAULT","SUBLANG_TAJIK_TAJIKISTAN","SUBLANG_TAMAZIGHT_ALGERIA_LATIN","SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH","SUBLANG_TAMIL_INDIA","SUBLANG_TAMIL_SRI_LANKA","SUBLANG_TATAR_RUSSIA","SUBLANG_TELUGU_INDIA","SUBLANG_THAI_THAILAND","SUBLANG_TIBETAN_PRC","SUBLANG_TIGRIGNA_ERITREA","SUBLANG_TIGRINYA_ERITREA","SUBLANG_TIGRINYA_ETHIOPIA","SUBLANG_TSWANA_BOTSWANA","SUBLANG_TSWANA_SOUTH_AFRICA","SUBLANG_TURKISH_TURKEY","SUBLANG_TURKMEN_TURKMENISTAN","SUBLANG_UIGHUR_PRC","SUBLANG_UI_CUSTOM_DEFAULT","SUBLANG_UKRAINIAN_UKRAINE","SUBLANG_UPPER_SORBIAN_GERMANY","SUBLANG_URDU_INDIA","SUBLANG_URDU_PAKISTAN","SUBLANG_UZBEK_CYRILLIC","SUBLANG_UZBEK_LATIN","SUBLANG_VALENCIAN_VALENCIA","SUBLANG_VIETNAMESE_VIETNAM","SUBLANG_WELSH_UNITED_KINGDOM","SUBLANG_WOLOF_SENEGAL","SUBLANG_XHOSA_SOUTH_AFRICA","SUBLANG_YAKUT_RUSSIA","SUBLANG_YI_PRC","SUBLANG_YORUBA_NIGERIA","SUBLANG_ZULU_SOUTH_AFRICA","SUITE_TYPE","SYSTEM_CACHE_ALIGNMENT_SIZE","SecurityAppliance","SecurityDescriptor","SecurityDescriptor","SecurityDescriptor","SecurityQualityOfService","SecurityQualityOfService","SecurityQualityOfService","SingleUserTS","SmallBusiness","SmallBusinessRestricted","StorageServer","SynchronizationEvent","SynchronizationTimer","TIME","TIMER_TYPE","TRUE","TerminalServer","UCHAR","UCSCHAR","UCSCHAR_INVALID_CHARACTER","ULARGE_INTEGER","ULARGE_INTEGER_s","ULARGE_INTEGER_u","ULONG","ULONGLONG","UNICODE_NULL","UNICODE_STRING","UNICODE_STRING32","UNICODE_STRING64","UNICODE_STRING_MAX_BYTES","UNICODE_STRING_MAX_CHARS","UNSPECIFIED_COMPARTMENT_ID","UQUAD","USHORT","USN","Uniquifier","UseThisFieldToCopy","VER_SERVER_NT","VER_SUITE_BACKOFFICE","VER_SUITE_BLADE","VER_SUITE_COMMUNICATIONS","VER_SUITE_COMPUTE_SERVER","VER_SUITE_DATACENTER","VER_SUITE_EMBEDDEDNT","VER_SUITE_EMBEDDED_RESTRICTED","VER_SUITE_ENTERPRISE","VER_SUITE_PERSONAL","VER_SUITE_SECURITY_APPLIANCE","VER_SUITE_SINGLEUSERTS","VER_SUITE_SMALLBUSINESS","VER_SUITE_SMALLBUSINESS_RESTRICTED","VER_SUITE_STORAGE_SERVER","VER_SUITE_TERMINAL","VER_SUITE_WH_SERVER","VER_WORKSTATION_NT","VOID","WAIT_TYPE","WCHAR","WHServer","WNF_STATE_NAME","WaitAll","WaitAny","WaitDequeue","WaitNotification","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","s","s","s","s_mut","s_mut","s_mut","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","u","u_mut","u_mut","errhandlingapi","gl","libloaderapi","winnt","AddVectoredContinueHandler","AddVectoredExceptionHandler","FatalAppExitA","FatalAppExitW","GetErrorMode","GetLastError","GetThreadErrorMode","LPTOP_LEVEL_EXCEPTION_FILTER","PTOP_LEVEL_EXCEPTION_FILTER","RaiseException","RaiseFailFastException","RemoveVectoredContinueHandler","RemoveVectoredExceptionHandler","SetErrorMode","SetLastError","SetThreadErrorMode","SetUnhandledExceptionFilter","UnhandledExceptionFilter","AddDllDirectory","DLL_DIRECTORY_COOKIE","DONT_RESOLVE_DLL_REFERENCES","DisableThreadLibraryCalls","ENUMRESLANGPROCA","ENUMRESLANGPROCW","ENUMRESNAMEPROCA","ENUMRESNAMEPROCW","ENUMRESTYPEPROCA","ENUMRESTYPEPROCW","EnumResourceLanguagesExA","EnumResourceLanguagesExW","EnumResourceNamesExA","EnumResourceNamesExW","EnumResourceNamesW","EnumResourceTypesExA","EnumResourceTypesExW","FindResourceExW","FindResourceW","FindStringOrdinal","FreeLibrary","FreeLibraryAndExitThread","FreeResource","GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS","GET_MODULE_HANDLE_EX_FLAG_PIN","GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT","GetModuleFileNameA","GetModuleFileNameW","GetModuleHandleA","GetModuleHandleExA","GetModuleHandleExW","GetModuleHandleW","GetProcAddress","LOAD_IGNORE_CODE_AUTHZ_LEVEL","LOAD_LIBRARY_AS_DATAFILE","LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE","LOAD_LIBRARY_AS_IMAGE_RESOURCE","LOAD_LIBRARY_OS_INTEGRITY_CONTINUITY","LOAD_LIBRARY_REQUIRE_SIGNED_TARGET","LOAD_LIBRARY_SAFE_CURRENT_DIRS","LOAD_LIBRARY_SEARCH_APPLICATION_DIR","LOAD_LIBRARY_SEARCH_DEFAULT_DIRS","LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR","LOAD_LIBRARY_SEARCH_SYSTEM32","LOAD_LIBRARY_SEARCH_SYSTEM32_NO_FORWARDER","LOAD_LIBRARY_SEARCH_USER_DIRS","LOAD_WITH_ALTERED_SEARCH_PATH","LoadLibraryA","LoadLibraryExA","LoadLibraryExW","LoadLibraryW","LoadResource","LoadStringA","LoadStringW","LockResource","PDLL_DIRECTORY_COOKIE","RemoveDllDirectory","SetDefaultDllDirectories","SizeofResource","ACCESS_ALLOWED_ACE","ACCESS_ALLOWED_ACE_TYPE","ACCESS_ALLOWED_CALLBACK_ACE","ACCESS_ALLOWED_CALLBACK_ACE_TYPE","ACCESS_ALLOWED_CALLBACK_OBJECT_ACE","ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE","ACCESS_ALLOWED_COMPOUND_ACE_TYPE","ACCESS_ALLOWED_OBJECT_ACE","ACCESS_ALLOWED_OBJECT_ACE_TYPE","ACCESS_DENIED_ACE","ACCESS_DENIED_ACE_TYPE","ACCESS_DENIED_CALLBACK_ACE","ACCESS_DENIED_CALLBACK_ACE_TYPE","ACCESS_DENIED_CALLBACK_OBJECT_ACE","ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE","ACCESS_DENIED_OBJECT_ACE","ACCESS_DENIED_OBJECT_ACE_TYPE","ACCESS_DS_OBJECT_TYPE_NAME","ACCESS_DS_SOURCE","ACCESS_FILTER_SECURITY_INFORMATION","ACCESS_MASK","ACCESS_MAX_LEVEL","ACCESS_MAX_MS_ACE_TYPE","ACCESS_MAX_MS_OBJECT_ACE_TYPE","ACCESS_MAX_MS_V2_ACE_TYPE","ACCESS_MAX_MS_V3_ACE_TYPE","ACCESS_MAX_MS_V4_ACE_TYPE","ACCESS_MAX_MS_V5_ACE_TYPE","ACCESS_MIN_MS_ACE_TYPE","ACCESS_MIN_MS_OBJECT_ACE_TYPE","ACCESS_OBJECT_GUID","ACCESS_PROPERTY_GUID","ACCESS_PROPERTY_SET_GUID","ACCESS_REASON","ACCESS_REASONS","ACCESS_REASON_DATA_MASK","ACCESS_REASON_EXDATA_MASK","ACCESS_REASON_STAGING_MASK","ACCESS_REASON_TYPE","ACCESS_REASON_TYPE_MASK","ACCESS_SYSTEM_SECURITY","ACE_HEADER","ACE_INHERITED_OBJECT_TYPE_PRESENT","ACE_OBJECT_TYPE_PRESENT","ACL","ACL_INFORMATION_CLASS","ACL_REVISION","ACL_REVISION1","ACL_REVISION2","ACL_REVISION3","ACL_REVISION4","ACL_REVISION_DS","ACL_REVISION_INFORMATION","ACL_SIZE_INFORMATION","ACPI_PPM_HARDWARE_ALL","ACPI_PPM_SOFTWARE_ALL","ACPI_PPM_SOFTWARE_ANY","ACTCTX_COMPATIBILITY_ELEMENT_TYPE","ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION","ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS","ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN","ACTCTX_REQUESTED_RUN_LEVEL","ACTCTX_RUN_LEVEL_AS_INVOKER","ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE","ACTCTX_RUN_LEVEL_NUMBERS","ACTCTX_RUN_LEVEL_REQUIRE_ADMIN","ACTCTX_RUN_LEVEL_UNSPECIFIED","ACTIVATIONCONTEXTINFOCLASS","ACTIVATION_CONTEXT","ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION","ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION","ACTIVATION_CONTEXT_DETAILED_INFORMATION","ACTIVATION_CONTEXT_INFO_CLASS","ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF","ACTIVATION_CONTEXT_PATH_TYPE_NONE","ACTIVATION_CONTEXT_PATH_TYPE_URL","ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE","ACTIVATION_CONTEXT_QUERY_INDEX","ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION","ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS","ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION","ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES","ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO","ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION","ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION","ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION","ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION","ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION","ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE","ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION","ADMINISTRATOR_POWER_POLICY","ALL_POWERSCHEMES_GUID","ALL_PROCESSOR_GROUPS","ANONYMOUS_LOGON_LUID","ANON_OBJECT_HEADER","ANON_OBJECT_HEADER_BIGOBJ","ANON_OBJECT_HEADER_V2","ANSI_NULL","ANYSIZE_ARRAY","APC_CALLBACK_FUNCTION","APPLICATIONLAUNCH_SETTING_VALUE","APPLICATION_ERROR_MASK","ASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION","ASSEMBLY_FILE_DETAILED_INFORMATION","ATTRIBUTE_SECURITY_INFORMATION","AUDIT_ALLOW_NO_PRIVILEGE","AUDIT_EVENT_TYPE","AbortCount","AcOnLine","AcOnLineWake","AccessReason","AccessReasonAllowedAce","AccessReasonAllowedParentAce","AccessReasonDeniedAce","AccessReasonDeniedParentAce","AccessReasonEmptyDacl","AccessReasonFilterAce","AccessReasonFromPrivilege","AccessReasonIntegrityLevel","AccessReasonMissingPrivilege","AccessReasonNoGrant","AccessReasonNoSD","AccessReasonNone","AccessReasonNotGrantedByCape","AccessReasonNotGrantedByParentCape","AccessReasonNotGrantedToAppContainer","AccessReasonNullDacl","AccessReasonOwnership","AccessReasonTrustLabel","AccessStatus","AceCount","AceCount","AceFlags","AceSize","AceType","AclBytesFree","AclBytesInUse","AclRevision","AclRevision","AclRevisionInformation","AclSize","AclSizeInformation","Action","Action","ActivationContext","ActivationContextBasicInformation","ActivationContextDetailedInformation","ActivationContextManifestResourceName","ActivationTime","Active","ActiveGroupCount","ActiveProcessLimit","ActiveProcesses","ActiveProcessorCount","ActiveProcessorMask","AdapterType","AddressOfCallBacks","AddressOfCallBacks","AddressOfData","AddressOfData","AddressOfData_mut","AddressOfData_mut","AddressOfEntryPoint","AddressOfEntryPoint","AddressOfEntryPoint","AddressOfFunctions","AddressOfIndex","AddressOfIndex","AddressOfNameOrdinals","AddressOfNames","AddressOfRawData","AdministratorPowerPolicy","Affinity","AlignedFeatures","Alignment","Alignment","Alignment","Alignment","Alignment_mut","AllAttributes","AllFeatureSize","AllFeatures","AllFlags","Allocated","AllocatedToTargetProcess","AllocationBase","AllocationBase","AllocationBase","AllocationProtect","AllocationProtect","AllocationProtect","AllocationTag","AllowDemotion","AllowPromotion","AllowRemoteDowngrade","AllowScaling","AllowSecureProcessCreation","AllowThreadOptOut","AmaskShift","AmaskValue","AoAc","AoAc","AoAcConnectivitySupported","ApmPresent","AppContainerNumber","AppContainerSid","AppInstanceID","ArbitraryUserPointer","ArbitraryUserPointer","ArbitraryUserPointer","Area","Array","Array_mut","AsBYTE","AsWORD","AssemblyDetailedInformationInActivationContext","AssemblyDetailedInformationInActivationContxt","Associativity","Associativity","Attribute","AttributeCount","Attributes","Attributes","Attributes","AuditEventDirectoryServiceAccess","AuditEventObjectAccess","AuditExportAddressFilter","AuditExportAddressFilterPlus","AuditImportAddressFilter","AuditNoChildProcessCreation","AuditNonSystemFontLoading","AuditRopCallerCheck","AuditRopSimExec","AuditRopStackPivot","AuthenticationId","AuthenticationId","AuthenticationId","AuthenticationId","AutoLoad","BACKUP_SECURITY_INFORMATION","BATTERY_DISCHARGE_FLAGS_ENABLE","BATTERY_DISCHARGE_FLAGS_EVENTCODE_MASK","BATTERY_REPORTING_SCALE","BOOLEAN","BTYPE","Base","BaseAddress","BaseAddress","BaseAddress","BaseAddress","BaseHi","BaseHi","BaseHi","BaseHi","BaseImageCount","BaseImageList","BaseIoSize","BaseIoSize","BaseIoSize","BaseLow","BaseLow","BaseMid","BaseMid","BaseMid","BaseMid","BaseOfBss","BaseOfCode","BaseOfCode","BaseOfCode","BaseOfData","BaseOfData","BaseRelocSize","BaseRelocSize","BasicInfo","BasicLimitInformation","BatteriesAreShortTerm","BatteryDeviceState","BatteryLevel","BatteryPresent","BatteryScale","BeginAddress","BeginAddress","BeginAddress","BeginAddress","BeginAddress","BeginAddress","BeginAddress","BitFields","BitFields","BitFields","BitFields","BitFields","BitFields","BitFields","BitFields","BitFields","BitFields1","BitFields2","Bitfield","Bits","Bits","Bits_mut","Bits_mut","Blink","Blink","Blink","BlockSize","BlockSize","Blocks","BootLoad","BoundImportAddressTableRVA","BranchDescriptorCount","BranchDescriptorElementSize","BroadcastCapacityResolution","Buffer","Buffer","Buffer","Buffer","BufferOffset","BufferOffset","Buffer_mut","Buffer_mut","Buffer_mut","BusyAdjThreshold","BusyAdjThreshold","BusyAdjThreshold","ButtonInstanceID","Bytes","Bytes","Bytes_mut","Bytes_mut","C","CACHE_DESCRIPTOR","CACHE_FULLY_ASSOCIATIVE","CACHE_RELATIONSHIP","CCHAR","CFG_CALL_TARGET_CONVERT_EXPORT_SUPPRESSED_TO_VALID","CFG_CALL_TARGET_INFO","CFG_CALL_TARGET_PROCESSED","CFG_CALL_TARGET_VALID","CHAR","CHPEMetadataPointer","CHPEMetadataPointer","CLAIM_SECURITY_ATTRIBUTES_INFORMATION","CLAIM_SECURITY_ATTRIBUTES_INFORMATION_Attribute","CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION","CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1","CLAIM_SECURITY_ATTRIBUTE_CUSTOM_FLAGS","CLAIM_SECURITY_ATTRIBUTE_DISABLED","CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT","CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE","CLAIM_SECURITY_ATTRIBUTE_MANDATORY","CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE","CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE","CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1","CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1_Values","CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN","CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN","CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64","CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID","CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING","CLAIM_SECURITY_ATTRIBUTE_TYPE_SID","CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING","CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64","CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY","CLAIM_SECURITY_ATTRIBUTE_V1","CLAIM_SECURITY_ATTRIBUTE_V1_Values","CLAIM_SECURITY_ATTRIBUTE_VALID_FLAGS","CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE","CM_POWER_DATA","CM_SERVICE_MEASURED_BOOT_LOAD","CM_SERVICE_NETWORK_BOOT_LOAD","CM_SERVICE_SD_DISK_BOOT_LOAD","CM_SERVICE_USB3_DISK_BOOT_LOAD","CM_SERVICE_USB_DISK_BOOT_LOAD","CM_SERVICE_VALID_PROMOTION_MASK","CM_SERVICE_VERIFIER_BOOT_LOAD","CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD","CM_SERVICE_WINPE_BOOT_LOAD","COMIMAGE_FLAGS_32BITPREFERRED","COMIMAGE_FLAGS_32BITREQUIRED","COMIMAGE_FLAGS_ILONLY","COMIMAGE_FLAGS_IL_LIBRARY","COMIMAGE_FLAGS_NATIVE_ENTRYPOINT","COMIMAGE_FLAGS_STRONGNAMESIGNED","COMIMAGE_FLAGS_TRACKDEBUGDATA","COMPARTMENT_ID","COMPATIBILITY_CONTEXT_ELEMENT","COMPRESSION_ENGINE_HIBER","COMPRESSION_ENGINE_MAXIMUM","COMPRESSION_ENGINE_STANDARD","COMPRESSION_FORMAT_DEFAULT","COMPRESSION_FORMAT_LZNT1","COMPRESSION_FORMAT_NONE","COMPRESSION_FORMAT_XPRESS","COMPRESSION_FORMAT_XPRESS_HUFF","CONTAINER_INHERIT_ACE","CONTEXT","CONTEXT_ALL","CONTEXT_AMD64","CONTEXT_CONTROL","CONTEXT_DEBUG_REGISTERS","CONTEXT_EXCEPTION_ACTIVE","CONTEXT_EXCEPTION_REPORTING","CONTEXT_EXCEPTION_REQUEST","CONTEXT_FLOATING_POINT","CONTEXT_FULL","CONTEXT_INTEGER","CONTEXT_SEGMENTS","CONTEXT_SERVICE_ACTIVE","CONTEXT_XSTATE","CONTEXT_u","CONTEXT_u_s","CORE_PARKING_POLICY_CHANGE_IDEAL","CORE_PARKING_POLICY_CHANGE_MAX","CORE_PARKING_POLICY_CHANGE_MULTISTEP","CORE_PARKING_POLICY_CHANGE_ROCKET","CORE_PARKING_POLICY_CHANGE_SINGLE","COR_DELETED_NAME_LENGTH","COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE","COR_VERSION_MAJOR","COR_VERSION_MAJOR_V2","COR_VERSION_MINOR","COR_VTABLEGAP_NAME_LENGTH","COR_VTABLE_32BIT","COR_VTABLE_64BIT","COR_VTABLE_CALL_MOST_DERIVED","COR_VTABLE_FROM_UNMANAGED","COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN","CPU_SET_INFORMATION_TYPE","CR","CRC","CRC","CREATE_BOUNDARY_DESCRIPTOR_ADD_APPCONTAINER_SID","CSDVersion","CSDVersion","CTMF_INCLUDE_APPCONTAINER","CTMF_INCLUDE_LPAC","CTMF_VALID_FLAGS","Cache","Cache","CacheData","CacheInstruction","CacheSize","CacheTrace","CacheUnified","Cache_mut","Cache_mut","CallbackPriority","CancelledTransitions","Capabilities","CapabilitiesHash","CapabilityCount","Capacity","Capacity","Catalog","CatalogOffset","Characteristics","Characteristics","Characteristics","Characteristics","Characteristics","Characteristics","Characteristics","Characteristics","Characteristics","Characteristics","Characteristics_mut","Charging","CheckSum","CheckSum","CheckSum","CheckSum","CheckSum","CheckSum","ClassID","ClassID","ClassID","CleanupGroup","CleanupGroupCancelCallback","ClosingRecordNumber","CoalescingTimeout","CodeIntegrity","CodeIntegrity","CodeIntegrityInfo","CodeIntegritySize","CodeManagerTable","CodePage","CompactionEnabled","CompactionMask","CompatibilityInformationInActivationContext","CompletionKey","CompletionKey","CompletionPort","Compression","Compression","Connected","Console","Console","Console","ConstraintMask","ContentionCount","Context","ContextFlags","ContextFlags","ContextRecord","ContextRecord","ContextSwitchCount","ContextTrackingMode","Control","Control","Control","Control","ControlFlags","ControlFlags","ControlFlags","ControlFlags","ControlFlags","ControlFlags","ControlFlags","ControlPc","ControlWord","ControlWord","CopyOnOpen","CoreIndex","Count","Count","Count","Count","Count","Count","Count","Count","Count","Count","CprMask","CpuRate","CpuRateControlTolerance","CpuRateControlTolerance","CpuRateControlToleranceInterval","CpuRateControlToleranceInterval_mut","CpuRateControlToleranceLimit","CpuRateControlToleranceLimit_mut","CpuRateControlTolerance_mut","CpuRateControlTolerance_mut","CpuRateLimit","CpuRate_mut","CpuSet","CpuSetInformation","Cr0NpxState","CreatorBackTraceIndex","CreatorBackTraceIndexHigh","CriticalError","CriticalReservationBandwidth","CriticalReservationBandwidth","CriticalReservationIops","CriticalReservationIops","CriticalReservationTimePercent","CriticalReservationTimePercent","CriticalSection","CriticalSectionDefaultTimeout","CriticalSectionDefaultTimeout","CrmEnlistmentId","CrmResourceManagerId","CrmTransactionManagerId","CsDeviceNotification","CsvFlags","CurrentState","CurrentState","CycleTime","CycleTime","DACL_SECURITY_INFORMATION","DBG_COMMAND_EXCEPTION","DBG_CONTINUE","DBG_CONTROL_BREAK","DBG_CONTROL_C","DBG_EXCEPTION_HANDLED","DBG_EXCEPTION_NOT_HANDLED","DBG_PRINTEXCEPTION_C","DBG_PRINTEXCEPTION_WIDE_C","DBG_REPLY_LATER","DBG_RIPEXCEPTION","DBG_TERMINATE_PROCESS","DBG_TERMINATE_THREAD","DECREF","DEFAULT_COMPARTMENT_ID","DEFAULT_IMPERSONATION_LEVEL","DELETE","DEVICEFAMILYDEVICEFORM_ALLINONE","DEVICEFAMILYDEVICEFORM_BANKING","DEVICEFAMILYDEVICEFORM_BUILDING_AUTOMATION","DEVICEFAMILYDEVICEFORM_CONVERTIBLE","DEVICEFAMILYDEVICEFORM_DESKTOP","DEVICEFAMILYDEVICEFORM_DETACHABLE","DEVICEFAMILYDEVICEFORM_DIGITAL_SIGNAGE","DEVICEFAMILYDEVICEFORM_GAMING","DEVICEFAMILYDEVICEFORM_HMD","DEVICEFAMILYDEVICEFORM_HOME_AUTOMATION","DEVICEFAMILYDEVICEFORM_INDUSTRIAL_AUTOMATION","DEVICEFAMILYDEVICEFORM_INDUSTRY_HANDHELD","DEVICEFAMILYDEVICEFORM_INDUSTRY_OTHER","DEVICEFAMILYDEVICEFORM_INDUSTRY_TABLET","DEVICEFAMILYDEVICEFORM_KEY","DEVICEFAMILYDEVICEFORM_KIOSK","DEVICEFAMILYDEVICEFORM_LARGESCREEN","DEVICEFAMILYDEVICEFORM_MAKER_BOARD","DEVICEFAMILYDEVICEFORM_MAX","DEVICEFAMILYDEVICEFORM_MEDICAL","DEVICEFAMILYDEVICEFORM_NETWORKING","DEVICEFAMILYDEVICEFORM_NOTEBOOK","DEVICEFAMILYDEVICEFORM_PHONE","DEVICEFAMILYDEVICEFORM_POINT_OF_SERVICE","DEVICEFAMILYDEVICEFORM_PRINTING","DEVICEFAMILYDEVICEFORM_PUCK","DEVICEFAMILYDEVICEFORM_STICKPC","DEVICEFAMILYDEVICEFORM_TABLET","DEVICEFAMILYDEVICEFORM_THIN_CLIENT","DEVICEFAMILYDEVICEFORM_TOY","DEVICEFAMILYDEVICEFORM_UNKNOWN","DEVICEFAMILYDEVICEFORM_VALUE","DEVICEFAMILYDEVICEFORM_VENDING","DEVICEFAMILYINFOENUM_DESKTOP","DEVICEFAMILYINFOENUM_HOLOGRAPHIC","DEVICEFAMILYINFOENUM_IOT","DEVICEFAMILYINFOENUM_IOT_HEADLESS","DEVICEFAMILYINFOENUM_MAX","DEVICEFAMILYINFOENUM_MOBILE","DEVICEFAMILYINFOENUM_SERVER","DEVICEFAMILYINFOENUM_SERVER_NANO","DEVICEFAMILYINFOENUM_TEAM","DEVICEFAMILYINFOENUM_UAP","DEVICEFAMILYINFOENUM_WINDOWS_8X","DEVICEFAMILYINFOENUM_WINDOWS_PHONE_8X","DEVICEFAMILYINFOENUM_XBOX","DEVICEFAMILYINFOENUM_XBOXERA","DEVICEFAMILYINFOENUM_XBOXSRA","DEVICE_POWER_STATE","DIAGNOSTIC_REASON_DETAILED_STRING","DIAGNOSTIC_REASON_INVALID_FLAGS","DIAGNOSTIC_REASON_NOT_SPECIFIED","DIAGNOSTIC_REASON_SIMPLE_STRING","DIAGNOSTIC_REASON_VERSION","DISABLE_MAX_PRIVILEGE","DISCHARGE_POLICY_CRITICAL","DISCHARGE_POLICY_LOW","DISPATCHER_CONTEXT","DLL_PROCESS_ATTACH","DLL_PROCESS_DETACH","DLL_THREAD_ATTACH","DLL_THREAD_DETACH","DOMAIN_ALIAS_RID_ACCESS_CONTROL_ASSISTANCE_OPS","DOMAIN_ALIAS_RID_ACCOUNT_OPS","DOMAIN_ALIAS_RID_ADMINS","DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS","DOMAIN_ALIAS_RID_BACKUP_OPS","DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP","DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP","DOMAIN_ALIAS_RID_CRYPTO_OPERATORS","DOMAIN_ALIAS_RID_DCOM_USERS","DOMAIN_ALIAS_RID_DEFAULT_ACCOUNT","DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP","DOMAIN_ALIAS_RID_GUESTS","DOMAIN_ALIAS_RID_HYPER_V_ADMINS","DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS","DOMAIN_ALIAS_RID_IUSERS","DOMAIN_ALIAS_RID_LOGGING_USERS","DOMAIN_ALIAS_RID_MONITORING_USERS","DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS","DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP","DOMAIN_ALIAS_RID_POWER_USERS","DOMAIN_ALIAS_RID_PREW2KCOMPACCESS","DOMAIN_ALIAS_RID_PRINT_OPS","DOMAIN_ALIAS_RID_RAS_SERVERS","DOMAIN_ALIAS_RID_RDS_ENDPOINT_SERVERS","DOMAIN_ALIAS_RID_RDS_MANAGEMENT_SERVERS","DOMAIN_ALIAS_RID_RDS_REMOTE_ACCESS_SERVERS","DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS","DOMAIN_ALIAS_RID_REMOTE_MANAGEMENT_USERS","DOMAIN_ALIAS_RID_REPLICATOR","DOMAIN_ALIAS_RID_STORAGE_REPLICA_ADMINS","DOMAIN_ALIAS_RID_SYSTEM_OPS","DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS","DOMAIN_ALIAS_RID_USERS","DOMAIN_GROUP_RID_ADMINS","DOMAIN_GROUP_RID_AUTHORIZATION_DATA_CONTAINS_CLAIMS","DOMAIN_GROUP_RID_AUTHORIZATION_DATA_IS_COMPOUNDED","DOMAIN_GROUP_RID_CDC_RESERVED","DOMAIN_GROUP_RID_CERT_ADMINS","DOMAIN_GROUP_RID_CLONEABLE_CONTROLLERS","DOMAIN_GROUP_RID_COMPUTERS","DOMAIN_GROUP_RID_CONTROLLERS","DOMAIN_GROUP_RID_ENTERPRISE_ADMINS","DOMAIN_GROUP_RID_ENTERPRISE_KEY_ADMINS","DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS","DOMAIN_GROUP_RID_GUESTS","DOMAIN_GROUP_RID_KEY_ADMINS","DOMAIN_GROUP_RID_POLICY_ADMINS","DOMAIN_GROUP_RID_PROTECTED_USERS","DOMAIN_GROUP_RID_READONLY_CONTROLLERS","DOMAIN_GROUP_RID_SCHEMA_ADMINS","DOMAIN_GROUP_RID_USERS","DOMAIN_USER_RID_ADMIN","DOMAIN_USER_RID_DEFAULT_ACCOUNT","DOMAIN_USER_RID_GUEST","DOMAIN_USER_RID_KRBTGT","DOMAIN_USER_RID_MAX","DUPLICATE_CLOSE_SOURCE","DUPLICATE_SAME_ACCESS","DWORDLONG","Dacl","Dacl","Data","Data","Data","DataBuffer","DataBuffer","DataBufferSize","DataDirectory","DataDirectory","DataIsDirectory","DataLength","DataLength","DataOffset","DataOffset","DataOffset","DataPadding","DataPadding","DataSelector","DataSelector","DataType","Date","DeCommitFreeBlockThreshold","DeCommitFreeBlockThreshold","DeCommitTotalFreeThreshold","DeCommitTotalFreeThreshold","DebugControl","DebugDirectorySize","DebugInfo","DecreaseLevel","DecreasePercent","DecreasePolicy","DecreaseTime","DecreaseTime","DefaultAlert1","DefaultAlert2","DefaultBlockSize","DefaultDacl","DefaultLowLatencyWake","Default_Big","Default_Big","DemandLoad","DemoteLimit","DemotePercent","DemotePercent","DemotePercent","DependentLoadFlags","DependentLoadFlags","Depth","Description","Description","DescriptionLength","DescriptionLength","Descriptor","DesiredAccess","DeviceClaims","Dimension","DisableAtlThunkEmulation","DisableCStates","DisableExtensionPoints","DisableLoad","DisableNonSystemFonts","Disabled","DisallowStrippedImages","DisallowWin32kSystemCalls","DischargePolicy","Discharging","DiskSpinDown","DisplayBurst","DisplayTimeout","DllCharacteristics","DllCharacteristics","DllNameRVA","DozeS4Timeout","Dpl","Dpl","Dr0","Dr0","Dr1","Dr1","Dr2","Dr2","Dr3","Dr3","Dr6","Dr6","Dr7","Dr7","DriverType","DscpTag","DynamicAvailable","DynamicCharged","DynamicThrottle","DynamicThrottle","DynamicValueRelocTable","DynamicValueRelocTable","DynamicValueRelocTableOffset","DynamicValueRelocTableOffset","DynamicValueRelocTableSection","DynamicValueRelocTableSection","ECC","ECC","EFlags","EFlags","EInitToken","ENCLAVE_CREATE_INFO_SGX","ENCLAVE_INIT_INFO_SGX","ENCLAVE_TYPE_SGX","ENCLAVE_TYPE_SGX2","ENLISTMENT_ALL_ACCESS","ENLISTMENT_BASIC_INFORMATION","ENLISTMENT_CRM_INFORMATION","ENLISTMENT_GENERIC_EXECUTE","ENLISTMENT_GENERIC_READ","ENLISTMENT_GENERIC_WRITE","ENLISTMENT_INFORMATION_CLASS","ENLISTMENT_QUERY_INFORMATION","ENLISTMENT_RECOVER","ENLISTMENT_SET_INFORMATION","ENLISTMENT_SUBORDINATE_RIGHTS","ENLISTMENT_SUPERIOR_RIGHTS","EOTWarningZoneSize","EOTWarningZoneSize","ERROR_SEVERITY_ERROR","ERROR_SEVERITY_INFORMATIONAL","ERROR_SEVERITY_SUCCESS","ERROR_SEVERITY_WARNING","ES_AWAYMODE_REQUIRED","ES_CONTINUOUS","ES_DISPLAY_REQUIRED","ES_SYSTEM_REQUIRED","ES_USER_PRESENT","EVENTLOGRECORD","EVENTLOG_AUDIT_FAILURE","EVENTLOG_AUDIT_SUCCESS","EVENTLOG_BACKWARDS_READ","EVENTLOG_END_ALL_PAIRED_EVENTS","EVENTLOG_END_PAIRED_EVENT","EVENTLOG_ERROR_TYPE","EVENTLOG_FORWARDS_READ","EVENTLOG_INFORMATION_TYPE","EVENTLOG_PAIRED_EVENT_ACTIVE","EVENTLOG_PAIRED_EVENT_INACTIVE","EVENTLOG_SEEK_READ","EVENTLOG_SEQUENTIAL_READ","EVENTLOG_START_PAIRED_EVENT","EVENTLOG_SUCCESS","EVENTLOG_WARNING_TYPE","EVENTSFORLOGFILE","EVENT_ALL_ACCESS","EVENT_MODIFY_STATE","EXCEPTION_COLLIDED_UNWIND","EXCEPTION_EXECUTE_FAULT","EXCEPTION_EXIT_UNWIND","EXCEPTION_MAXIMUM_PARAMETERS","EXCEPTION_NESTED_CALL","EXCEPTION_NONCONTINUABLE","EXCEPTION_POINTERS","EXCEPTION_READ_FAULT","EXCEPTION_RECORD","EXCEPTION_RECORD32","EXCEPTION_RECORD64","EXCEPTION_REGISTRATION_RECORD","EXCEPTION_STACK_INVALID","EXCEPTION_TARGET_UNWIND","EXCEPTION_UNWIND","EXCEPTION_UNWINDING","EXCEPTION_WRITE_FAULT","EXECUTION_STATE","Eax","Ebp","Ebx","Ecx","Edi","EditList","EditList","Edx","EffectiveOnly","EffectiveOnly","EfficiencyClass","EfficiencyClass","Eip","ElementCount","Elements","Enable","Enable","EnableBottomUpRandomization","EnableControlFlowGuard","EnableExportAddressFilter","EnableExportAddressFilterPlus","EnableExportSuppression","EnableForceRelocateImages","EnableHighEntropy","EnableImportAddressFilter","EnableRopCallerCheck","EnableRopSimExec","EnableRopStackPivot","EnabledFeatures","EnabledSupervisorFeatures","EnabledVolatileFeatures","EnclaveConfigurationPointer","EnclaveConfigurationPointer","EndAddress","EndAddress","EndAddress","EndAddress","EndAddress","EndAddressOfRawData","EndAddressOfRawData","EndHeader","EndOfJobTimeAction","EndOfPrologue","EndOfPrologue","EndOfPrologue_mut","EndingAddress","EndingAddress","EnergyTrackerCreate","EnergyTrackerQuery","EnlistmentBasicInformation","EnlistmentCrmInformation","EnlistmentId","EnlistmentId","EnlistmentPair","EnlistmentRecoveryInformation","Entry","EntryCount","EntryPointRVA","EntryPointRVA_mut","EntryPointToken","EntryPointToken_mut","EpilogueByteCount","EpilogueCount","ErrorFileOffset","ErrorLength","ErrorOffset","ErrorOffset","ErrorOpcode","ErrorSelector","ErrorSelector","Esi","Esp","EstablisherFrame","EstimatedTime","EventCategory","EventCode","EventID","EventType","ExceptionAddress","ExceptionAddress","ExceptionAddress","ExceptionCode","ExceptionCode","ExceptionCode","ExceptionFlag","ExceptionFlags","ExceptionFlags","ExceptionFlags","ExceptionHandler","ExceptionHandler","ExceptionInformation","ExceptionInformation","ExceptionInformation","ExceptionList","ExceptionList","ExceptionList","ExceptionRecord","ExceptionRecord","ExceptionRecord","ExceptionRecord","ExitLatencySamplingPercentage","ExitStatus","ExpirationTime","ExportAddressTableJumps","ExportedNamesSize","ExtendedRegisters","FAILED_ACCESS_ACE_FLAG","FAST_FAIL_APCS_DISABLED","FAST_FAIL_CERTIFICATION_FAILURE","FAST_FAIL_CORRUPT_LIST_ENTRY","FAST_FAIL_CRYPTO_LIBRARY","FAST_FAIL_DEPRECATED_SERVICE_INVOKED","FAST_FAIL_DLOAD_PROTECTION_FAILURE","FAST_FAIL_FATAL_APP_EXIT","FAST_FAIL_GS_COOKIE_INIT","FAST_FAIL_GUARD_EXPORT_SUPPRESSION_FAILURE","FAST_FAIL_GUARD_ICALL_CHECK_FAILURE","FAST_FAIL_GUARD_ICALL_CHECK_SUPPRESSED","FAST_FAIL_GUARD_JUMPTABLE","FAST_FAIL_GUARD_SS_FAILURE","FAST_FAIL_GUARD_WRITE_CHECK_FAILURE","FAST_FAIL_INCORRECT_STACK","FAST_FAIL_INVALID_ARG","FAST_FAIL_INVALID_BALANCED_TREE","FAST_FAIL_INVALID_BUFFER_ACCESS","FAST_FAIL_INVALID_CALL_IN_DLL_CALLOUT","FAST_FAIL_INVALID_CONTROL_STACK","FAST_FAIL_INVALID_DISPATCH_CONTEXT","FAST_FAIL_INVALID_EXCEPTION_CHAIN","FAST_FAIL_INVALID_FAST_FAIL_CODE","FAST_FAIL_INVALID_FIBER_SWITCH","FAST_FAIL_INVALID_FILE_OPERATION","FAST_FAIL_INVALID_IDLE_STATE","FAST_FAIL_INVALID_IMAGE_BASE","FAST_FAIL_INVALID_JUMP_BUFFER","FAST_FAIL_INVALID_LOCK_STATE","FAST_FAIL_INVALID_LONGJUMP_TARGET","FAST_FAIL_INVALID_NEXT_THREAD","FAST_FAIL_INVALID_REFERENCE_COUNT","FAST_FAIL_INVALID_SET_OF_CONTEXT","FAST_FAIL_INVALID_SYSCALL_NUMBER","FAST_FAIL_INVALID_THREAD","FAST_FAIL_LEGACY_GS_VIOLATION","FAST_FAIL_LOADER_CONTINUITY_FAILURE","FAST_FAIL_LPAC_ACCESS_DENIED","FAST_FAIL_MRDATA_MODIFIED","FAST_FAIL_MRDATA_PROTECTION_FAILURE","FAST_FAIL_RANGE_CHECK_FAILURE","FAST_FAIL_SET_CONTEXT_DENIED","FAST_FAIL_STACK_COOKIE_CHECK_FAILURE","FAST_FAIL_UNEXPECTED_HEAP_EXCEPTION","FAST_FAIL_UNSAFE_EXTENSION_CALL","FAST_FAIL_UNSAFE_REGISTRY_ACCESS","FAST_FAIL_VTGUARD_CHECK_FAILURE","FCHAR","FILE_ACTION_ADDED","FILE_ACTION_MODIFIED","FILE_ACTION_REMOVED","FILE_ACTION_RENAMED_NEW_NAME","FILE_ACTION_RENAMED_OLD_NAME","FILE_ADD_FILE","FILE_ADD_SUBDIRECTORY","FILE_ALL_ACCESS","FILE_APPEND_DATA","FILE_ATTRIBUTE_ARCHIVE","FILE_ATTRIBUTE_COMPRESSED","FILE_ATTRIBUTE_DEVICE","FILE_ATTRIBUTE_DIRECTORY","FILE_ATTRIBUTE_EA","FILE_ATTRIBUTE_ENCRYPTED","FILE_ATTRIBUTE_HIDDEN","FILE_ATTRIBUTE_INTEGRITY_STREAM","FILE_ATTRIBUTE_NORMAL","FILE_ATTRIBUTE_NOT_CONTENT_INDEXED","FILE_ATTRIBUTE_NO_SCRUB_DATA","FILE_ATTRIBUTE_OFFLINE","FILE_ATTRIBUTE_PINNED","FILE_ATTRIBUTE_READONLY","FILE_ATTRIBUTE_RECALL_ON_DATA_ACCESS","FILE_ATTRIBUTE_RECALL_ON_OPEN","FILE_ATTRIBUTE_REPARSE_POINT","FILE_ATTRIBUTE_SPARSE_FILE","FILE_ATTRIBUTE_SYSTEM","FILE_ATTRIBUTE_TEMPORARY","FILE_ATTRIBUTE_UNPINNED","FILE_ATTRIBUTE_VIRTUAL","FILE_CASE_PRESERVED_NAMES","FILE_CASE_SENSITIVE_SEARCH","FILE_CREATE_PIPE_INSTANCE","FILE_DAX_VOLUME","FILE_DELETE_CHILD","FILE_EXECUTE","FILE_FILE_COMPRESSION","FILE_GENERIC_EXECUTE","FILE_GENERIC_READ","FILE_GENERIC_WRITE","FILE_ID_128","FILE_INVALID_FILE_ID","FILE_LIST_DIRECTORY","FILE_NAMED_STREAMS","FILE_NOTIFY_CHANGE_ATTRIBUTES","FILE_NOTIFY_CHANGE_CREATION","FILE_NOTIFY_CHANGE_DIR_NAME","FILE_NOTIFY_CHANGE_FILE_NAME","FILE_NOTIFY_CHANGE_LAST_ACCESS","FILE_NOTIFY_CHANGE_LAST_WRITE","FILE_NOTIFY_CHANGE_SECURITY","FILE_NOTIFY_CHANGE_SIZE","FILE_NOTIFY_INFORMATION","FILE_PERSISTENT_ACLS","FILE_READ_ATTRIBUTES","FILE_READ_DATA","FILE_READ_EA","FILE_READ_ONLY_VOLUME","FILE_RETURNS_CLEANUP_RESULT_INFO","FILE_SEGMENT_ELEMENT","FILE_SEQUENTIAL_WRITE_ONCE","FILE_SHARE_DELETE","FILE_SHARE_READ","FILE_SHARE_WRITE","FILE_SUPPORTS_BLOCK_REFCOUNTING","FILE_SUPPORTS_ENCRYPTION","FILE_SUPPORTS_EXTENDED_ATTRIBUTES","FILE_SUPPORTS_GHOSTING","FILE_SUPPORTS_HARD_LINKS","FILE_SUPPORTS_INTEGRITY_STREAMS","FILE_SUPPORTS_OBJECT_IDS","FILE_SUPPORTS_OPEN_BY_FILE_ID","FILE_SUPPORTS_REMOTE_STORAGE","FILE_SUPPORTS_REPARSE_POINTS","FILE_SUPPORTS_SPARSE_FILES","FILE_SUPPORTS_SPARSE_VDL","FILE_SUPPORTS_TRANSACTIONS","FILE_SUPPORTS_USN_JOURNAL","FILE_TRAVERSE","FILE_UNICODE_ON_DISK","FILE_VOLUME_IS_COMPRESSED","FILE_VOLUME_QUOTAS","FILE_WRITE_ATTRIBUTES","FILE_WRITE_DATA","FILE_WRITE_EA","FIRMWARE_TYPE","FLOAT128","FLONG","FLS_MAXIMUM_AVAILABLE","FLUSH_FLAGS_FILE_DATA_ONLY","FLUSH_FLAGS_FILE_DATA_SYNC_ONLY","FLUSH_FLAGS_NO_SYNC","FLUSH_NV_MEMORY_DEFAULT_TOKEN","FLUSH_NV_MEMORY_IN_FLAG_NO_DRAIN","FOREST_USER_RID_MAX","FPO_DATA","FRAME_FPO","FRAME_NONFPO","FRAME_TRAP","FRAME_TSS","FSHORT","FailedTransitions","FailedTransitions","FanThrottleTolerance","FastSystemS4","FcnAry","Features","FeaturesHigh","FeaturesLow","FeedbackHandler","FeedbackHandler","FiberData","FiberData","FiberData","FiberData_mut","FiberData_mut","FiberData_mut","File","File","FileAlignment","FileAlignment","FileHeader","FileHeader","FileHeader","FileInformationInAssemblyOfAssemblyInActivationContext","FileInformationInAssemblyOfAssemblyInActivationContxt","FileName","FileNameLength","FileSystemType","Fill0","FilterId","FinalizationCallback","FirmwareTableInformationRegistered","FirmwareTypeBios","FirmwareTypeMax","FirmwareTypeUefi","FirmwareTypeUnknown","FirstEntryRVA","FirstThunk","FixupInfoSize","FixupInfoSize","FixupInstRVA","Flag","Flag","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags","Flags1","Flags1","Flags2","Flags2","Flags_mut","Flags_mut","Flink","Flink","Flink","FloatRegisters","FloatSave","FloatingContext","FloatingContext_mut","FltSave","FltSave_mut","ForcedThrottle","ForwarderChain","ForwarderString","ForwarderString","ForwarderString_mut","ForwarderString_mut","FrameSize","Frequency","Frequency","FullWake","FuncLen","FuncStart","Function","Function","Function","FunctionEntry","FunctionEntry","FunctionLength","FunctionLength","Function_mut","Function_mut","Function_mut","GENERIC_ALL","GENERIC_EXECUTE","GENERIC_MAPPING","GENERIC_READ","GENERIC_WRITE","GROUP_AFFINITY","GROUP_RELATIONSHIP","GROUP_SECURITY_INFORMATION","GUID_ACDC_POWER_SOURCE","GUID_ACTIVE_POWERSCHEME","GUID_ADAPTIVE_INPUT_CONTROLLER_STATE","GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP","GUID_ALLOW_AWAYMODE","GUID_ALLOW_DISPLAY_REQUIRED","GUID_ALLOW_RTC_WAKE","GUID_ALLOW_STANDBY_STATES","GUID_ALLOW_SYSTEM_REQUIRED","GUID_APPLAUNCH_BUTTON","GUID_BACKGROUND_TASK_NOTIFICATION","GUID_BATTERY_COUNT","GUID_BATTERY_DISCHARGE_ACTION_0","GUID_BATTERY_DISCHARGE_ACTION_1","GUID_BATTERY_DISCHARGE_ACTION_2","GUID_BATTERY_DISCHARGE_ACTION_3","GUID_BATTERY_DISCHARGE_FLAGS_0","GUID_BATTERY_DISCHARGE_FLAGS_1","GUID_BATTERY_DISCHARGE_FLAGS_2","GUID_BATTERY_DISCHARGE_FLAGS_3","GUID_BATTERY_DISCHARGE_LEVEL_0","GUID_BATTERY_DISCHARGE_LEVEL_1","GUID_BATTERY_DISCHARGE_LEVEL_2","GUID_BATTERY_DISCHARGE_LEVEL_3","GUID_BATTERY_PERCENTAGE_REMAINING","GUID_BATTERY_SUBGROUP","GUID_CONNECTIVITY_IN_STANDBY","GUID_CONSOLE_DISPLAY_STATE","GUID_CRITICAL_POWER_TRANSITION","GUID_DEEP_SLEEP_ENABLED","GUID_DEEP_SLEEP_PLATFORM_STATE","GUID_DEVICE_IDLE_POLICY","GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS","GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS","GUID_DISCONNECTED_STANDBY_MODE","GUID_DISK_ADAPTIVE_POWERDOWN","GUID_DISK_BURST_IGNORE_THRESHOLD","GUID_DISK_COALESCING_POWERDOWN_TIMEOUT","GUID_DISK_IDLE_TIMEOUT","GUID_DISK_MAX_POWER","GUID_DISK_POWERDOWN_TIMEOUT","GUID_DISK_SUBGROUP","GUID_ENABLE_SWITCH_FORCED_SHUTDOWN","GUID_ENERGY_SAVER_BATTERY_THRESHOLD","GUID_ENERGY_SAVER_BRIGHTNESS","GUID_ENERGY_SAVER_POLICY","GUID_ENERGY_SAVER_SUBGROUP","GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT","GUID_GLOBAL_USER_PRESENCE","GUID_HIBERNATE_FASTS4_POLICY","GUID_HIBERNATE_TIMEOUT","GUID_IDLE_BACKGROUND_TASK","GUID_IDLE_RESILIENCY_PERIOD","GUID_IDLE_RESILIENCY_SUBGROUP","GUID_INTSTEER_LOAD_PER_PROC_TRIGGER","GUID_INTSTEER_MODE","GUID_INTSTEER_SUBGROUP","GUID_INTSTEER_TIME_UNPARK_TRIGGER","GUID_LIDCLOSE_ACTION","GUID_LIDOPEN_POWERSTATE","GUID_LIDSWITCH_STATE_CHANGE","GUID_LOCK_CONSOLE_ON_WAKE","GUID_MAX_POWER_SAVINGS","GUID_MIN_POWER_SAVINGS","GUID_MONITOR_POWER_ON","GUID_NON_ADAPTIVE_INPUT_TIMEOUT","GUID_PCIEXPRESS_ASPM_POLICY","GUID_PCIEXPRESS_SETTINGS_SUBGROUP","GUID_POWERBUTTON_ACTION","GUID_POWERSCHEME_PERSONALITY","GUID_POWER_SAVING_STATUS","GUID_PROCESSOR_ALLOW_THROTTLING","GUID_PROCESSOR_CLASS0_FLOOR_PERF","GUID_PROCESSOR_CLASS1_INITIAL_PERF","GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR","GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD","GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING","GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY","GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD","GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME","GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY","GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD","GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME","GUID_PROCESSOR_CORE_PARKING_MAX_CORES","GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1","GUID_PROCESSOR_CORE_PARKING_MIN_CORES","GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1","GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR","GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD","GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD","GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING","GUID_PROCESSOR_DISTRIBUTE_UTILITY","GUID_PROCESSOR_DUTY_CYCLING","GUID_PROCESSOR_FREQUENCY_LIMIT","GUID_PROCESSOR_FREQUENCY_LIMIT_1","GUID_PROCESSOR_HETEROGENEOUS_POLICY","GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD","GUID_PROCESSOR_HETERO_DECREASE_TIME","GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD","GUID_PROCESSOR_HETERO_INCREASE_TIME","GUID_PROCESSOR_IDLESTATE_POLICY","GUID_PROCESSOR_IDLE_ALLOW_SCALING","GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD","GUID_PROCESSOR_IDLE_DISABLE","GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD","GUID_PROCESSOR_IDLE_STATE_MAXIMUM","GUID_PROCESSOR_IDLE_TIME_CHECK","GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK","GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1","GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD","GUID_PROCESSOR_PARKING_CORE_OVERRIDE","GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD","GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD","GUID_PROCESSOR_PARKING_PERF_STATE","GUID_PROCESSOR_PARKING_PERF_STATE_1","GUID_PROCESSOR_PERFSTATE_POLICY","GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW","GUID_PROCESSOR_PERF_AUTONOMOUS_MODE","GUID_PROCESSOR_PERF_BOOST_MODE","GUID_PROCESSOR_PERF_BOOST_POLICY","GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY","GUID_PROCESSOR_PERF_DECREASE_HISTORY","GUID_PROCESSOR_PERF_DECREASE_POLICY","GUID_PROCESSOR_PERF_DECREASE_POLICY_1","GUID_PROCESSOR_PERF_DECREASE_THRESHOLD","GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1","GUID_PROCESSOR_PERF_DECREASE_TIME","GUID_PROCESSOR_PERF_DECREASE_TIME_1","GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE","GUID_PROCESSOR_PERF_HISTORY","GUID_PROCESSOR_PERF_HISTORY_1","GUID_PROCESSOR_PERF_INCREASE_HISTORY","GUID_PROCESSOR_PERF_INCREASE_POLICY","GUID_PROCESSOR_PERF_INCREASE_POLICY_1","GUID_PROCESSOR_PERF_INCREASE_THRESHOLD","GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1","GUID_PROCESSOR_PERF_INCREASE_TIME","GUID_PROCESSOR_PERF_INCREASE_TIME_1","GUID_PROCESSOR_PERF_LATENCY_HINT","GUID_PROCESSOR_PERF_LATENCY_HINT_PERF","GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1","GUID_PROCESSOR_PERF_TIME_CHECK","GUID_PROCESSOR_SETTINGS_SUBGROUP","GUID_PROCESSOR_THROTTLE_MAXIMUM","GUID_PROCESSOR_THROTTLE_MAXIMUM_1","GUID_PROCESSOR_THROTTLE_MINIMUM","GUID_PROCESSOR_THROTTLE_MINIMUM_1","GUID_PROCESSOR_THROTTLE_POLICY","GUID_SESSION_DISPLAY_STATUS","GUID_SESSION_USER_PRESENCE","GUID_SLEEPBUTTON_ACTION","GUID_SLEEP_IDLE_THRESHOLD","GUID_SLEEP_SUBGROUP","GUID_STANDBY_BUDGET_GRACE_PERIOD","GUID_STANDBY_BUDGET_PERCENT","GUID_STANDBY_RESERVE_GRACE_PERIOD","GUID_STANDBY_RESERVE_TIME","GUID_STANDBY_RESET_PERCENT","GUID_STANDBY_TIMEOUT","GUID_SYSTEM_AWAYMODE","GUID_SYSTEM_BUTTON_SUBGROUP","GUID_SYSTEM_COOLING_POLICY","GUID_TYPICAL_POWER_SAVINGS","GUID_UNATTEND_SLEEP_TIMEOUT","GUID_USERINTERFACEBUTTON_ACTION","GUID_USER_PRESENCE_PREDICTION","GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS","GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE","GUID_VIDEO_ADAPTIVE_POWERDOWN","GUID_VIDEO_ANNOYANCE_TIMEOUT","GUID_VIDEO_CONSOLE_LOCK_TIMEOUT","GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS","GUID_VIDEO_DIM_TIMEOUT","GUID_VIDEO_POWERDOWN_TIMEOUT","GUID_VIDEO_SUBGROUP","GenericAll","GenericExecute","GenericMapping","GenericRead","GenericReparseBuffer","GenericWrite","GetPowerRequestList","GetPowerSettingValue","GlobalFlagsClear","GlobalFlagsClear","GlobalFlagsSet","GlobalFlagsSet","GlobalHint","GpValue","GprMask","GrantedAccess","Granularity","Granularity","Granularity","Group","Group","Group","Group","Group","Group","GroupCount","GroupCount","GroupCount","GroupID","GroupInfo","GroupMask","GroupMask","GroupMask","GroupPark","Group_mut","Groups","GuardAddressTakenIatEntryCount","GuardAddressTakenIatEntryCount","GuardAddressTakenIatEntryTable","GuardAddressTakenIatEntryTable","GuardCFCheckFunctionPointer","GuardCFCheckFunctionPointer","GuardCFDispatchFunctionPointer","GuardCFDispatchFunctionPointer","GuardCFFunctionCount","GuardCFFunctionCount","GuardCFFunctionTable","GuardCFFunctionTable","GuardFlags","GuardFlags","GuardLongJumpTargetCount","GuardLongJumpTargetCount","GuardLongJumpTargetTable","GuardLongJumpTargetTable","GuardRFFailureRoutine","GuardRFFailureRoutine","GuardRFFailureRoutineFunctionPointer","GuardRFFailureRoutineFunctionPointer","GuardRFVerifyStackPointerFunctionPointer","GuardRFVerifyStackPointerFunctionPointer","Guid","Guid","H","H","HANDLE","HARDWARE_COUNTER_DATA","HARDWARE_COUNTER_TYPE","HEAP_CREATE_ALIGN_16","HEAP_CREATE_ENABLE_EXECUTE","HEAP_CREATE_ENABLE_TRACING","HEAP_CREATE_HARDENED","HEAP_CREATE_SEGMENT_HEAP","HEAP_DISABLE_COALESCE_ON_FREE","HEAP_FREE_CHECKING_ENABLED","HEAP_GENERATE_EXCEPTIONS","HEAP_GROWABLE","HEAP_INFORMATION_CLASS","HEAP_MAKE_TAG_FLAGS","HEAP_MAXIMUM_TAG","HEAP_NO_SERIALIZE","HEAP_OPTIMIZE_RESOURCES_CURRENT_VERSION","HEAP_OPTIMIZE_RESOURCES_INFORMATION","HEAP_PSEUDO_TAG_FLAG","HEAP_REALLOC_IN_PLACE_ONLY","HEAP_TAG_SHIFT","HEAP_TAIL_CHECKING_ENABLED","HEAP_ZERO_MEMORY","HIBERFILE_BUCKET","HIBERFILE_BUCKET_SIZE","HIBERFILE_TYPE_FULL","HIBERFILE_TYPE_MAX","HIBERFILE_TYPE_NONE","HIBERFILE_TYPE_REDUCED","HRESULT","HandleExceptionsPermanentlyEnabled","HandleState","Handler","HandlerAddress","HandlerAddress","HandlerData","HandlerData","HandlerData","Hash","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","Header","HeaderSize","HeaderSize","HeaderX64","HeaderX64_mut","HeapCompatibilityInformation","HeapEnableTerminationOnCorruption","HeapOptimizeResources","HiberFileBucket16GB","HiberFileBucket1GB","HiberFileBucket2GB","HiberFileBucket32GB","HiberFileBucket4GB","HiberFileBucket8GB","HiberFileBucketMax","HiberFileBucketUnlimited","HiberFilePresent","HiberFileType","Hiberboot","High","HighAddress","HighId","HighNumber","HighNumber","HighPart","HighWord","HighWord","Hint","Hint","Hint_mut","HistoryTable","HitCount","HotPatchTableOffset","HotPatchTableOffset","HwCounters","HwCountersCount","IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY","IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY","IMAGE_ARCHITECTURE_ENTRY","IMAGE_ARCHITECTURE_HEADER","IMAGE_ARCHIVE_END","IMAGE_ARCHIVE_HYBRIDMAP_MEMBER","IMAGE_ARCHIVE_LINKER_MEMBER","IMAGE_ARCHIVE_LONGNAMES_MEMBER","IMAGE_ARCHIVE_MEMBER_HEADER","IMAGE_ARCHIVE_PAD","IMAGE_ARCHIVE_START","IMAGE_ARCHIVE_START_SIZE","IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY","IMAGE_ARM_RUNTIME_FUNCTION_ENTRY","IMAGE_AUX_SYMBOL","IMAGE_AUX_SYMBOL_CRC","IMAGE_AUX_SYMBOL_EX","IMAGE_AUX_SYMBOL_EX_CRC","IMAGE_AUX_SYMBOL_EX_File","IMAGE_AUX_SYMBOL_EX_Section","IMAGE_AUX_SYMBOL_EX_Sym","IMAGE_AUX_SYMBOL_EX_s","IMAGE_AUX_SYMBOL_File","IMAGE_AUX_SYMBOL_Section","IMAGE_AUX_SYMBOL_Sym","IMAGE_AUX_SYMBOL_Sym_FcnAry","IMAGE_AUX_SYMBOL_Sym_FcnAry_Array","IMAGE_AUX_SYMBOL_Sym_FcnAry_Function","IMAGE_AUX_SYMBOL_Sym_Misc","IMAGE_AUX_SYMBOL_Sym_Misc_LnSz","IMAGE_AUX_SYMBOL_TOKEN_DEF","IMAGE_AUX_SYMBOL_TYPE","IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF","IMAGE_BASE_RELOCATION","IMAGE_BOUND_FORWARDER_REF","IMAGE_BOUND_IMPORT_DESCRIPTOR","IMAGE_CE_RUNTIME_FUNCTION_ENTRY","IMAGE_COFF_SYMBOLS_HEADER","IMAGE_COMDAT_SELECT_ANY","IMAGE_COMDAT_SELECT_ASSOCIATIVE","IMAGE_COMDAT_SELECT_EXACT_MATCH","IMAGE_COMDAT_SELECT_LARGEST","IMAGE_COMDAT_SELECT_NEWEST","IMAGE_COMDAT_SELECT_NODUPLICATES","IMAGE_COMDAT_SELECT_SAME_SIZE","IMAGE_COR20_HEADER","IMAGE_COR20_HEADER_u","IMAGE_COR_EATJ_THUNK_SIZE","IMAGE_COR_MIH_BASICBLOCK","IMAGE_COR_MIH_EHRVA","IMAGE_COR_MIH_METHODRVA","IMAGE_DATA_DIRECTORY","IMAGE_DEBUG_DIRECTORY","IMAGE_DEBUG_MISC","IMAGE_DEBUG_MISC_EXENAME","IMAGE_DEBUG_TYPE_BORLAND","IMAGE_DEBUG_TYPE_CLSID","IMAGE_DEBUG_TYPE_CODEVIEW","IMAGE_DEBUG_TYPE_COFF","IMAGE_DEBUG_TYPE_EXCEPTION","IMAGE_DEBUG_TYPE_FIXUP","IMAGE_DEBUG_TYPE_FPO","IMAGE_DEBUG_TYPE_ILTCG","IMAGE_DEBUG_TYPE_MISC","IMAGE_DEBUG_TYPE_MPX","IMAGE_DEBUG_TYPE_OMAP_FROM_SRC","IMAGE_DEBUG_TYPE_OMAP_TO_SRC","IMAGE_DEBUG_TYPE_POGO","IMAGE_DEBUG_TYPE_REPRO","IMAGE_DEBUG_TYPE_RESERVED10","IMAGE_DEBUG_TYPE_UNKNOWN","IMAGE_DEBUG_TYPE_VC_FEATURE","IMAGE_DELAYLOAD_DESCRIPTOR","IMAGE_DELAYLOAD_DESCRIPTOR_Attributes","IMAGE_DIRECTORY_ENTRY_ARCHITECTURE","IMAGE_DIRECTORY_ENTRY_BASERELOC","IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT","IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","IMAGE_DIRECTORY_ENTRY_DEBUG","IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT","IMAGE_DIRECTORY_ENTRY_EXCEPTION","IMAGE_DIRECTORY_ENTRY_EXPORT","IMAGE_DIRECTORY_ENTRY_GLOBALPTR","IMAGE_DIRECTORY_ENTRY_IAT","IMAGE_DIRECTORY_ENTRY_IMPORT","IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG","IMAGE_DIRECTORY_ENTRY_RESOURCE","IMAGE_DIRECTORY_ENTRY_SECURITY","IMAGE_DIRECTORY_ENTRY_TLS","IMAGE_DLLCHARACTERISTICS_APPCONTAINER","IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE","IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY","IMAGE_DLLCHARACTERISTICS_GUARD_CF","IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA","IMAGE_DLLCHARACTERISTICS_NO_BIND","IMAGE_DLLCHARACTERISTICS_NO_ISOLATION","IMAGE_DLLCHARACTERISTICS_NO_SEH","IMAGE_DLLCHARACTERISTICS_NX_COMPAT","IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE","IMAGE_DLLCHARACTERISTICS_WDM_DRIVER","IMAGE_DOS_HEADER","IMAGE_DOS_SIGNATURE","IMAGE_DYNAMIC_RELOCATION","IMAGE_DYNAMIC_RELOCATION32","IMAGE_DYNAMIC_RELOCATION32_V2","IMAGE_DYNAMIC_RELOCATION64","IMAGE_DYNAMIC_RELOCATION64_V2","IMAGE_DYNAMIC_RELOCATION_GUARD_RF_EPILOGUE","IMAGE_DYNAMIC_RELOCATION_GUARD_RF_PROLOGUE","IMAGE_DYNAMIC_RELOCATION_TABLE","IMAGE_DYNAMIC_RELOCATION_V2","IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER","IMAGE_EXPORT_DIRECTORY","IMAGE_FILE_32BIT_MACHINE","IMAGE_FILE_AGGRESIVE_WS_TRIM","IMAGE_FILE_BYTES_REVERSED_HI","IMAGE_FILE_BYTES_REVERSED_LO","IMAGE_FILE_DEBUG_STRIPPED","IMAGE_FILE_DLL","IMAGE_FILE_EXECUTABLE_IMAGE","IMAGE_FILE_HEADER","IMAGE_FILE_LARGE_ADDRESS_AWARE","IMAGE_FILE_LINE_NUMS_STRIPPED","IMAGE_FILE_LOCAL_SYMS_STRIPPED","IMAGE_FILE_MACHINE_ALPHA","IMAGE_FILE_MACHINE_ALPHA64","IMAGE_FILE_MACHINE_AM33","IMAGE_FILE_MACHINE_AMD64","IMAGE_FILE_MACHINE_ARM","IMAGE_FILE_MACHINE_ARM64","IMAGE_FILE_MACHINE_ARMNT","IMAGE_FILE_MACHINE_AXP64","IMAGE_FILE_MACHINE_CEE","IMAGE_FILE_MACHINE_CEF","IMAGE_FILE_MACHINE_EBC","IMAGE_FILE_MACHINE_I386","IMAGE_FILE_MACHINE_IA64","IMAGE_FILE_MACHINE_M32R","IMAGE_FILE_MACHINE_MIPS16","IMAGE_FILE_MACHINE_MIPSFPU","IMAGE_FILE_MACHINE_MIPSFPU16","IMAGE_FILE_MACHINE_POWERPC","IMAGE_FILE_MACHINE_POWERPCFP","IMAGE_FILE_MACHINE_R10000","IMAGE_FILE_MACHINE_R3000","IMAGE_FILE_MACHINE_R4000","IMAGE_FILE_MACHINE_SH3","IMAGE_FILE_MACHINE_SH3DSP","IMAGE_FILE_MACHINE_SH3E","IMAGE_FILE_MACHINE_SH4","IMAGE_FILE_MACHINE_SH5","IMAGE_FILE_MACHINE_TARGET_HOST","IMAGE_FILE_MACHINE_THUMB","IMAGE_FILE_MACHINE_TRICORE","IMAGE_FILE_MACHINE_UNKNOWN","IMAGE_FILE_MACHINE_WCEMIPSV2","IMAGE_FILE_NET_RUN_FROM_SWAP","IMAGE_FILE_RELOCS_STRIPPED","IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP","IMAGE_FILE_SYSTEM","IMAGE_FILE_UP_SYSTEM_ONLY","IMAGE_FUNCTION_ENTRY","IMAGE_FUNCTION_ENTRY64","IMAGE_FUNCTION_ENTRY64_u","IMAGE_GUARD_CFW_INSTRUMENTED","IMAGE_GUARD_CF_ENABLE_EXPORT_SUPPRESSION","IMAGE_GUARD_CF_EXPORT_SUPPRESSION_INFO_PRESENT","IMAGE_GUARD_CF_FUNCTION_TABLE_PRESENT","IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK","IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_SHIFT","IMAGE_GUARD_CF_INSTRUMENTED","IMAGE_GUARD_CF_LONGJUMP_TABLE_PRESENT","IMAGE_GUARD_DELAYLOAD_IAT_IN_ITS_OWN_SECTION","IMAGE_GUARD_FLAG_EXPORT_SUPPRESSED","IMAGE_GUARD_FLAG_FID_SUPPRESSED","IMAGE_GUARD_PROTECT_DELAYLOAD_IAT","IMAGE_GUARD_RF_ENABLE","IMAGE_GUARD_RF_INSTRUMENTED","IMAGE_GUARD_RF_STRICT","IMAGE_GUARD_SECURITY_COOKIE_UNUSED","IMAGE_HOT_PATCH_ABSOLUTE","IMAGE_HOT_PATCH_BASE","IMAGE_HOT_PATCH_BASE_OBLIGATORY","IMAGE_HOT_PATCH_CALL_TARGET","IMAGE_HOT_PATCH_CHUNK_INVERSE","IMAGE_HOT_PATCH_CHUNK_OBLIGATORY","IMAGE_HOT_PATCH_CHUNK_RESERVED","IMAGE_HOT_PATCH_CHUNK_SIZE","IMAGE_HOT_PATCH_CHUNK_SOURCE_RVA","IMAGE_HOT_PATCH_CHUNK_TARGET_RVA","IMAGE_HOT_PATCH_CHUNK_TYPE","IMAGE_HOT_PATCH_DYNAMIC_VALUE","IMAGE_HOT_PATCH_FUNCTION","IMAGE_HOT_PATCH_HASHES","IMAGE_HOT_PATCH_INDIRECT","IMAGE_HOT_PATCH_INFO","IMAGE_HOT_PATCH_NONE","IMAGE_HOT_PATCH_NO_CALL_TARGET","IMAGE_HOT_PATCH_REL32","IMAGE_IA64_RUNTIME_FUNCTION_ENTRY","IMAGE_IMPORT_BY_NAME","IMAGE_IMPORT_DESCRIPTOR","IMAGE_IMPORT_DESCRIPTOR_u","IMAGE_LINENUMBER","IMAGE_LINENUMBER_Type","IMAGE_LOAD_CONFIG_CODE_INTEGRITY","IMAGE_LOAD_CONFIG_DIRECTORY","IMAGE_LOAD_CONFIG_DIRECTORY32","IMAGE_LOAD_CONFIG_DIRECTORY64","IMAGE_NT_HEADERS","IMAGE_NT_HEADERS32","IMAGE_NT_HEADERS64","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_OPTIONAL_HDR64_MAGIC","IMAGE_NT_OPTIONAL_HDR_MAGIC","IMAGE_NT_SIGNATURE","IMAGE_NUMBEROF_DIRECTORY_ENTRIES","IMAGE_OPTIONAL_HEADER","IMAGE_OPTIONAL_HEADER32","IMAGE_OPTIONAL_HEADER64","IMAGE_ORDINAL","IMAGE_ORDINAL32","IMAGE_ORDINAL64","IMAGE_ORDINAL_FLAG","IMAGE_ORDINAL_FLAG32","IMAGE_ORDINAL_FLAG64","IMAGE_OS2_HEADER","IMAGE_OS2_SIGNATURE","IMAGE_OS2_SIGNATURE_LE","IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER","IMAGE_RELOCATION","IMAGE_RELOCATION_u","IMAGE_REL_ALPHA_ABSOLUTE","IMAGE_REL_ALPHA_BRADDR","IMAGE_REL_ALPHA_GPDISP","IMAGE_REL_ALPHA_GPREL32","IMAGE_REL_ALPHA_GPRELHI","IMAGE_REL_ALPHA_GPRELLO","IMAGE_REL_ALPHA_HINT","IMAGE_REL_ALPHA_INLINE_REFLONG","IMAGE_REL_ALPHA_LITERAL","IMAGE_REL_ALPHA_LITUSE","IMAGE_REL_ALPHA_MATCH","IMAGE_REL_ALPHA_PAIR","IMAGE_REL_ALPHA_REFHI","IMAGE_REL_ALPHA_REFLO","IMAGE_REL_ALPHA_REFLONG","IMAGE_REL_ALPHA_REFLONGNB","IMAGE_REL_ALPHA_REFQ1","IMAGE_REL_ALPHA_REFQ2","IMAGE_REL_ALPHA_REFQ3","IMAGE_REL_ALPHA_REFQUAD","IMAGE_REL_ALPHA_SECREL","IMAGE_REL_ALPHA_SECRELHI","IMAGE_REL_ALPHA_SECRELLO","IMAGE_REL_ALPHA_SECTION","IMAGE_REL_AMD64_ABSOLUTE","IMAGE_REL_AMD64_ADDR32","IMAGE_REL_AMD64_ADDR32NB","IMAGE_REL_AMD64_ADDR64","IMAGE_REL_AMD64_PAIR","IMAGE_REL_AMD64_REL32","IMAGE_REL_AMD64_REL32_1","IMAGE_REL_AMD64_REL32_2","IMAGE_REL_AMD64_REL32_3","IMAGE_REL_AMD64_REL32_4","IMAGE_REL_AMD64_REL32_5","IMAGE_REL_AMD64_SECREL","IMAGE_REL_AMD64_SECREL7","IMAGE_REL_AMD64_SECTION","IMAGE_REL_AMD64_SREL32","IMAGE_REL_AMD64_SSPAN32","IMAGE_REL_AMD64_TOKEN","IMAGE_REL_AM_ABSOLUTE","IMAGE_REL_AM_ADDR32","IMAGE_REL_AM_ADDR32NB","IMAGE_REL_AM_CALL32","IMAGE_REL_AM_FUNCINFO","IMAGE_REL_AM_REL32_1","IMAGE_REL_AM_REL32_2","IMAGE_REL_AM_SECREL","IMAGE_REL_AM_SECTION","IMAGE_REL_AM_TOKEN","IMAGE_REL_ARM64_ABSOLUTE","IMAGE_REL_ARM64_ADDR32","IMAGE_REL_ARM64_ADDR32NB","IMAGE_REL_ARM64_ADDR64","IMAGE_REL_ARM64_BRANCH19","IMAGE_REL_ARM64_BRANCH26","IMAGE_REL_ARM64_PAGEBASE_REL21","IMAGE_REL_ARM64_PAGEOFFSET_12A","IMAGE_REL_ARM64_PAGEOFFSET_12L","IMAGE_REL_ARM64_REL21","IMAGE_REL_ARM64_SECREL","IMAGE_REL_ARM64_SECREL_HIGH12A","IMAGE_REL_ARM64_SECREL_LOW12A","IMAGE_REL_ARM64_SECREL_LOW12L","IMAGE_REL_ARM64_SECTION","IMAGE_REL_ARM64_TOKEN","IMAGE_REL_ARM_ABSOLUTE","IMAGE_REL_ARM_ADDR32","IMAGE_REL_ARM_ADDR32NB","IMAGE_REL_ARM_BLX11","IMAGE_REL_ARM_BLX23T","IMAGE_REL_ARM_BLX24","IMAGE_REL_ARM_BRANCH11","IMAGE_REL_ARM_BRANCH20T","IMAGE_REL_ARM_BRANCH24","IMAGE_REL_ARM_BRANCH24T","IMAGE_REL_ARM_GPREL12","IMAGE_REL_ARM_GPREL7","IMAGE_REL_ARM_MOV32","IMAGE_REL_ARM_MOV32A","IMAGE_REL_ARM_MOV32T","IMAGE_REL_ARM_SECREL","IMAGE_REL_ARM_SECTION","IMAGE_REL_ARM_TOKEN","IMAGE_REL_BASED_ABSOLUTE","IMAGE_REL_BASED_ARM_MOV32","IMAGE_REL_BASED_DIR64","IMAGE_REL_BASED_HIGH","IMAGE_REL_BASED_HIGHADJ","IMAGE_REL_BASED_HIGHLOW","IMAGE_REL_BASED_IA64_IMM64","IMAGE_REL_BASED_LOW","IMAGE_REL_BASED_MACHINE_SPECIFIC_5","IMAGE_REL_BASED_MACHINE_SPECIFIC_7","IMAGE_REL_BASED_MACHINE_SPECIFIC_8","IMAGE_REL_BASED_MACHINE_SPECIFIC_9","IMAGE_REL_BASED_MIPS_JMPADDR","IMAGE_REL_BASED_MIPS_JMPADDR16","IMAGE_REL_BASED_RESERVED","IMAGE_REL_BASED_THUMB_MOV32","IMAGE_REL_CEE_ABSOLUTE","IMAGE_REL_CEE_ADDR32","IMAGE_REL_CEE_ADDR32NB","IMAGE_REL_CEE_ADDR64","IMAGE_REL_CEE_SECREL","IMAGE_REL_CEE_SECTION","IMAGE_REL_CEE_TOKEN","IMAGE_REL_CEF_ABSOLUTE","IMAGE_REL_CEF_ADDR32","IMAGE_REL_CEF_ADDR32NB","IMAGE_REL_CEF_ADDR64","IMAGE_REL_CEF_SECREL","IMAGE_REL_CEF_SECTION","IMAGE_REL_CEF_TOKEN","IMAGE_REL_EBC_ABSOLUTE","IMAGE_REL_EBC_ADDR32NB","IMAGE_REL_EBC_REL32","IMAGE_REL_EBC_SECREL","IMAGE_REL_EBC_SECTION","IMAGE_REL_I386_ABSOLUTE","IMAGE_REL_I386_DIR16","IMAGE_REL_I386_DIR32","IMAGE_REL_I386_DIR32NB","IMAGE_REL_I386_REL16","IMAGE_REL_I386_REL32","IMAGE_REL_I386_SECREL","IMAGE_REL_I386_SECREL7","IMAGE_REL_I386_SECTION","IMAGE_REL_I386_SEG12","IMAGE_REL_I386_TOKEN","IMAGE_REL_IA64_ABSOLUTE","IMAGE_REL_IA64_ADDEND","IMAGE_REL_IA64_DIR32","IMAGE_REL_IA64_DIR32NB","IMAGE_REL_IA64_DIR64","IMAGE_REL_IA64_GPREL22","IMAGE_REL_IA64_GPREL32","IMAGE_REL_IA64_IMM14","IMAGE_REL_IA64_IMM22","IMAGE_REL_IA64_IMM64","IMAGE_REL_IA64_IMMGPREL64","IMAGE_REL_IA64_LTOFF22","IMAGE_REL_IA64_PCREL21B","IMAGE_REL_IA64_PCREL21F","IMAGE_REL_IA64_PCREL21M","IMAGE_REL_IA64_PCREL60B","IMAGE_REL_IA64_PCREL60F","IMAGE_REL_IA64_PCREL60I","IMAGE_REL_IA64_PCREL60M","IMAGE_REL_IA64_PCREL60X","IMAGE_REL_IA64_SECREL22","IMAGE_REL_IA64_SECREL32","IMAGE_REL_IA64_SECREL64I","IMAGE_REL_IA64_SECTION","IMAGE_REL_IA64_SREL14","IMAGE_REL_IA64_SREL22","IMAGE_REL_IA64_SREL32","IMAGE_REL_IA64_TOKEN","IMAGE_REL_IA64_UREL32","IMAGE_REL_M32R_ABSOLUTE","IMAGE_REL_M32R_ADDR24","IMAGE_REL_M32R_ADDR32","IMAGE_REL_M32R_ADDR32NB","IMAGE_REL_M32R_GPREL16","IMAGE_REL_M32R_PAIR","IMAGE_REL_M32R_PCREL16","IMAGE_REL_M32R_PCREL24","IMAGE_REL_M32R_PCREL8","IMAGE_REL_M32R_REFHALF","IMAGE_REL_M32R_REFHI","IMAGE_REL_M32R_REFLO","IMAGE_REL_M32R_SECREL32","IMAGE_REL_M32R_SECTION","IMAGE_REL_M32R_TOKEN","IMAGE_REL_MIPS_ABSOLUTE","IMAGE_REL_MIPS_GPREL","IMAGE_REL_MIPS_JMPADDR","IMAGE_REL_MIPS_JMPADDR16","IMAGE_REL_MIPS_LITERAL","IMAGE_REL_MIPS_PAIR","IMAGE_REL_MIPS_REFHALF","IMAGE_REL_MIPS_REFHI","IMAGE_REL_MIPS_REFLO","IMAGE_REL_MIPS_REFWORD","IMAGE_REL_MIPS_REFWORDNB","IMAGE_REL_MIPS_SECREL","IMAGE_REL_MIPS_SECRELHI","IMAGE_REL_MIPS_SECRELLO","IMAGE_REL_MIPS_SECTION","IMAGE_REL_MIPS_TOKEN","IMAGE_REL_PPC_ABSOLUTE","IMAGE_REL_PPC_ADDR14","IMAGE_REL_PPC_ADDR16","IMAGE_REL_PPC_ADDR24","IMAGE_REL_PPC_ADDR32","IMAGE_REL_PPC_ADDR32NB","IMAGE_REL_PPC_ADDR64","IMAGE_REL_PPC_BRNTAKEN","IMAGE_REL_PPC_BRTAKEN","IMAGE_REL_PPC_GPREL","IMAGE_REL_PPC_IFGLUE","IMAGE_REL_PPC_IMGLUE","IMAGE_REL_PPC_NEG","IMAGE_REL_PPC_PAIR","IMAGE_REL_PPC_REFHI","IMAGE_REL_PPC_REFLO","IMAGE_REL_PPC_REL14","IMAGE_REL_PPC_REL24","IMAGE_REL_PPC_SECREL","IMAGE_REL_PPC_SECREL16","IMAGE_REL_PPC_SECRELHI","IMAGE_REL_PPC_SECRELLO","IMAGE_REL_PPC_SECTION","IMAGE_REL_PPC_TOCDEFN","IMAGE_REL_PPC_TOCREL14","IMAGE_REL_PPC_TOCREL16","IMAGE_REL_PPC_TOKEN","IMAGE_REL_PPC_TYPEMASK","IMAGE_REL_SH3_ABSOLUTE","IMAGE_REL_SH3_DIRECT16","IMAGE_REL_SH3_DIRECT32","IMAGE_REL_SH3_DIRECT32_NB","IMAGE_REL_SH3_DIRECT4","IMAGE_REL_SH3_DIRECT4_LONG","IMAGE_REL_SH3_DIRECT4_WORD","IMAGE_REL_SH3_DIRECT8","IMAGE_REL_SH3_DIRECT8_LONG","IMAGE_REL_SH3_DIRECT8_WORD","IMAGE_REL_SH3_GPREL4_LONG","IMAGE_REL_SH3_PCREL12_WORD","IMAGE_REL_SH3_PCREL8_LONG","IMAGE_REL_SH3_PCREL8_WORD","IMAGE_REL_SH3_SECREL","IMAGE_REL_SH3_SECTION","IMAGE_REL_SH3_SIZEOF_SECTION","IMAGE_REL_SH3_STARTOF_SECTION","IMAGE_REL_SH3_TOKEN","IMAGE_REL_SHM_PAIR","IMAGE_REL_SHM_PCRELPT","IMAGE_REL_SHM_REFHALF","IMAGE_REL_SHM_REFLO","IMAGE_REL_SHM_RELHALF","IMAGE_REL_SHM_RELLO","IMAGE_REL_SH_NOMODE","IMAGE_REL_THUMB_BLX23","IMAGE_REL_THUMB_BRANCH20","IMAGE_REL_THUMB_BRANCH24","IMAGE_REL_THUMB_MOV32","IMAGE_RESOURCE_DATA_ENTRY","IMAGE_RESOURCE_DATA_IS_DIRECTORY","IMAGE_RESOURCE_DIRECTORY","IMAGE_RESOURCE_DIRECTORY_ENTRY","IMAGE_RESOURCE_DIRECTORY_ENTRY_u","IMAGE_RESOURCE_DIRECTORY_ENTRY_u_s","IMAGE_RESOURCE_DIRECTORY_STRING","IMAGE_RESOURCE_DIR_STRING_U","IMAGE_RESOURCE_NAME_IS_STRING","IMAGE_ROM_HEADERS","IMAGE_ROM_OPTIONAL_HDR_MAGIC","IMAGE_ROM_OPTIONAL_HEADER","IMAGE_RUNTIME_FUNCTION_ENTRY","IMAGE_RUNTIME_FUNCTION_ENTRY_u","IMAGE_SCN_ALIGN_1024BYTES","IMAGE_SCN_ALIGN_128BYTES","IMAGE_SCN_ALIGN_16BYTES","IMAGE_SCN_ALIGN_1BYTES","IMAGE_SCN_ALIGN_2048BYTES","IMAGE_SCN_ALIGN_256BYTES","IMAGE_SCN_ALIGN_2BYTES","IMAGE_SCN_ALIGN_32BYTES","IMAGE_SCN_ALIGN_4096BYTES","IMAGE_SCN_ALIGN_4BYTES","IMAGE_SCN_ALIGN_512BYTES","IMAGE_SCN_ALIGN_64BYTES","IMAGE_SCN_ALIGN_8192BYTES","IMAGE_SCN_ALIGN_8BYTES","IMAGE_SCN_ALIGN_MASK","IMAGE_SCN_CNT_CODE","IMAGE_SCN_CNT_INITIALIZED_DATA","IMAGE_SCN_CNT_UNINITIALIZED_DATA","IMAGE_SCN_GPREL","IMAGE_SCN_LNK_COMDAT","IMAGE_SCN_LNK_INFO","IMAGE_SCN_LNK_NRELOC_OVFL","IMAGE_SCN_LNK_OTHER","IMAGE_SCN_LNK_REMOVE","IMAGE_SCN_MEM_16BIT","IMAGE_SCN_MEM_DISCARDABLE","IMAGE_SCN_MEM_EXECUTE","IMAGE_SCN_MEM_FARDATA","IMAGE_SCN_MEM_LOCKED","IMAGE_SCN_MEM_NOT_CACHED","IMAGE_SCN_MEM_NOT_PAGED","IMAGE_SCN_MEM_PRELOAD","IMAGE_SCN_MEM_PURGEABLE","IMAGE_SCN_MEM_READ","IMAGE_SCN_MEM_SHARED","IMAGE_SCN_MEM_WRITE","IMAGE_SCN_NO_DEFER_SPEC_EXC","IMAGE_SCN_SCALE_INDEX","IMAGE_SCN_TYPE_NO_PAD","IMAGE_SECTION_HEADER","IMAGE_SECTION_HEADER_Misc","IMAGE_SEPARATE_DEBUG_FLAGS_MASK","IMAGE_SEPARATE_DEBUG_HEADER","IMAGE_SEPARATE_DEBUG_MISMATCH","IMAGE_SEPARATE_DEBUG_SIGNATURE","IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR","IMAGE_SIZEOF_FILE_HEADER","IMAGE_SIZEOF_SECTION_HEADER","IMAGE_SIZEOF_SHORT_NAME","IMAGE_SIZEOF_SYMBOL","IMAGE_SNAP_BY_ORDINAL","IMAGE_SNAP_BY_ORDINAL32","IMAGE_SNAP_BY_ORDINAL64","IMAGE_SUBSYSTEM_EFI_APPLICATION","IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER","IMAGE_SUBSYSTEM_EFI_ROM","IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER","IMAGE_SUBSYSTEM_NATIVE","IMAGE_SUBSYSTEM_NATIVE_WINDOWS","IMAGE_SUBSYSTEM_OS2_CUI","IMAGE_SUBSYSTEM_POSIX_CUI","IMAGE_SUBSYSTEM_UNKNOWN","IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION","IMAGE_SUBSYSTEM_WINDOWS_CE_GUI","IMAGE_SUBSYSTEM_WINDOWS_CUI","IMAGE_SUBSYSTEM_WINDOWS_GUI","IMAGE_SUBSYSTEM_XBOX","IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG","IMAGE_SYMBOL","IMAGE_SYMBOL_EX","IMAGE_SYMBOL_EX_N","IMAGE_SYMBOL_EX_N_Name","IMAGE_SYMBOL_N","IMAGE_SYMBOL_N_Name","IMAGE_SYM_ABSOLUTE","IMAGE_SYM_CLASS_ARGUMENT","IMAGE_SYM_CLASS_AUTOMATIC","IMAGE_SYM_CLASS_BIT_FIELD","IMAGE_SYM_CLASS_BLOCK","IMAGE_SYM_CLASS_CLR_TOKEN","IMAGE_SYM_CLASS_END_OF_FUNCTION","IMAGE_SYM_CLASS_END_OF_STRUCT","IMAGE_SYM_CLASS_ENUM_TAG","IMAGE_SYM_CLASS_EXTERNAL","IMAGE_SYM_CLASS_EXTERNAL_DEF","IMAGE_SYM_CLASS_FAR_EXTERNAL","IMAGE_SYM_CLASS_FILE","IMAGE_SYM_CLASS_FUNCTION","IMAGE_SYM_CLASS_LABEL","IMAGE_SYM_CLASS_MEMBER_OF_ENUM","IMAGE_SYM_CLASS_MEMBER_OF_STRUCT","IMAGE_SYM_CLASS_MEMBER_OF_UNION","IMAGE_SYM_CLASS_NULL","IMAGE_SYM_CLASS_REGISTER","IMAGE_SYM_CLASS_REGISTER_PARAM","IMAGE_SYM_CLASS_SECTION","IMAGE_SYM_CLASS_STATIC","IMAGE_SYM_CLASS_STRUCT_TAG","IMAGE_SYM_CLASS_TYPE_DEFINITION","IMAGE_SYM_CLASS_UNDEFINED_LABEL","IMAGE_SYM_CLASS_UNDEFINED_STATIC","IMAGE_SYM_CLASS_UNION_TAG","IMAGE_SYM_CLASS_WEAK_EXTERNAL","IMAGE_SYM_DEBUG","IMAGE_SYM_DTYPE_ARRAY","IMAGE_SYM_DTYPE_FUNCTION","IMAGE_SYM_DTYPE_NULL","IMAGE_SYM_DTYPE_POINTER","IMAGE_SYM_SECTION_MAX","IMAGE_SYM_SECTION_MAX_EX","IMAGE_SYM_TYPE_BYTE","IMAGE_SYM_TYPE_CHAR","IMAGE_SYM_TYPE_DOUBLE","IMAGE_SYM_TYPE_DWORD","IMAGE_SYM_TYPE_ENUM","IMAGE_SYM_TYPE_FLOAT","IMAGE_SYM_TYPE_INT","IMAGE_SYM_TYPE_LONG","IMAGE_SYM_TYPE_MOE","IMAGE_SYM_TYPE_NULL","IMAGE_SYM_TYPE_PCODE","IMAGE_SYM_TYPE_SHORT","IMAGE_SYM_TYPE_STRUCT","IMAGE_SYM_TYPE_UINT","IMAGE_SYM_TYPE_UNION","IMAGE_SYM_TYPE_VOID","IMAGE_SYM_TYPE_WORD","IMAGE_SYM_UNDEFINED","IMAGE_THUNK_DATA","IMAGE_THUNK_DATA32","IMAGE_THUNK_DATA32_u1","IMAGE_THUNK_DATA64","IMAGE_THUNK_DATA64_u1","IMAGE_TLS_DIRECTORY","IMAGE_TLS_DIRECTORY32","IMAGE_TLS_DIRECTORY64","IMAGE_VXD_HEADER","IMAGE_VXD_SIGNATURE","IMAGE_WEAK_EXTERN_SEARCH_ALIAS","IMAGE_WEAK_EXTERN_SEARCH_LIBRARY","IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY","IMPORT_OBJECT_CODE","IMPORT_OBJECT_CONST","IMPORT_OBJECT_DATA","IMPORT_OBJECT_HDR_SIG2","IMPORT_OBJECT_HEADER","IMPORT_OBJECT_HEADER_u","IMPORT_OBJECT_NAME","IMPORT_OBJECT_NAME_EXPORTAS","IMPORT_OBJECT_NAME_NO_PREFIX","IMPORT_OBJECT_NAME_TYPE","IMPORT_OBJECT_NAME_UNDECORATE","IMPORT_OBJECT_ORDINAL","IMPORT_OBJECT_TYPE","INCREF","INHERITED_ACE","INHERIT_ONLY_ACE","INITIAL_FPCSR","INITIAL_MXCSR","INT","IO_COMPLETION_ALL_ACCESS","IO_COMPLETION_MODIFY_STATE","IO_COUNTERS","IO_QOS_MAX_RESERVATION","IO_REPARSE_TAG_APPEXECLINK","IO_REPARSE_TAG_CLOUD","IO_REPARSE_TAG_CLOUD_ON_DEMAND","IO_REPARSE_TAG_CLOUD_ROOT","IO_REPARSE_TAG_CLOUD_ROOT_ON_DEMAND","IO_REPARSE_TAG_CSV","IO_REPARSE_TAG_DEDUP","IO_REPARSE_TAG_DFS","IO_REPARSE_TAG_DFSR","IO_REPARSE_TAG_FILE_PLACEHOLDER","IO_REPARSE_TAG_GLOBAL_REPARSE","IO_REPARSE_TAG_GVFS","IO_REPARSE_TAG_GVFS_TOMBSTONE","IO_REPARSE_TAG_HSM","IO_REPARSE_TAG_HSM2","IO_REPARSE_TAG_MOUNT_POINT","IO_REPARSE_TAG_NFS","IO_REPARSE_TAG_ONEDRIVE","IO_REPARSE_TAG_RESERVED_ONE","IO_REPARSE_TAG_RESERVED_RANGE","IO_REPARSE_TAG_RESERVED_TWO","IO_REPARSE_TAG_RESERVED_ZERO","IO_REPARSE_TAG_SIS","IO_REPARSE_TAG_SYMLINK","IO_REPARSE_TAG_UNHANDLED","IO_REPARSE_TAG_WCI","IO_REPARSE_TAG_WCI_TOMBSTONE","IO_REPARSE_TAG_WIM","IO_REPARSE_TAG_WOF","ISARY","ISFCN","ISPTR","ISTAG","IS_DISPATCHING","IS_TARGET_UNWIND","IS_TEXT_UNICODE_ASCII16","IS_TEXT_UNICODE_CONTROLS","IS_TEXT_UNICODE_DBCS_LEADBYTE","IS_TEXT_UNICODE_ILLEGAL_CHARS","IS_TEXT_UNICODE_NOT_ASCII_MASK","IS_TEXT_UNICODE_NOT_UNICODE_MASK","IS_TEXT_UNICODE_NULL_BYTES","IS_TEXT_UNICODE_ODD_LENGTH","IS_TEXT_UNICODE_REVERSE_ASCII16","IS_TEXT_UNICODE_REVERSE_CONTROLS","IS_TEXT_UNICODE_REVERSE_MASK","IS_TEXT_UNICODE_REVERSE_SIGNATURE","IS_TEXT_UNICODE_REVERSE_STATISTICS","IS_TEXT_UNICODE_SIGNATURE","IS_TEXT_UNICODE_STATISTICS","IS_TEXT_UNICODE_UNICODE_MASK","IS_UNWINDING","IS_VALIDATION_ENABLED","IUSER_LUID","Id","Id","Id","Id_mut","Identifier","IdentifierAuthority","Idle","IdleHandler","IdleResiliency","IdleResiliencyPeriod","IdleSensitivity","IdleTimeBuckets","IdleTimeBuckets","IdleTimeout","IdleTransitions","IdleTransitions","IgnoreError","ImageBase","ImageBase","ImageBase","ImageBase","ImageBase","ImageBase","Immediate","Immediate","Immediate","Immediate","ImpersonationLevel","ImpersonationLevel","ImpersonationLevel","ImportAddressTableRVA","ImportNameTableRVA","IncreaseLevel","IncreasePercent","IncreasePolicy","IncreaseTime","IncreaseTime","InheritedObjectType","InheritedObjectType","InheritedObjectType","InheritedObjectType","InheritedObjectType","InheritedObjectType","InheritedObjectType","InheritedObjectType","InputTimeout","IntegerContext","IntegerContext_mut","InternalFileReference","InvalidBucketIndex","InvalidBucketIndex","IoCompletionPortHandle","IoCount","IoInfo","IoInfo","IoRateControlTolerance","IoRateControlTolerance","IoRateControlToleranceInterval","IoRateControlToleranceLimit","IoReadBytes","IoReadBytes","IoReadBytesLimit","IoReadBytesLimit","IoReadBytesLimit","IoReadBytesLimit","IoWriteBytes","IoWriteBytes","IoWriteBytesLimit","IoWriteBytesLimit","IoWriteBytesLimit","IoWriteBytesLimit","IsInServerSilo","IsReparseTagDirectory","IsReparseTagMicrosoft","IsReparseTagNameSurrogate","IsVirtualDiskFileShared","IsolationEnabled","IsolationFlags","IsolationLevel","IsolationPrefix","JOBOBJECTINFOCLASS","JOBOBJECT_ASSOCIATE_COMPLETION_PORT","JOBOBJECT_BASIC_ACCOUNTING_INFORMATION","JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION","JOBOBJECT_BASIC_LIMIT_INFORMATION","JOBOBJECT_BASIC_PROCESS_ID_LIST","JOBOBJECT_BASIC_UI_RESTRICTIONS","JOBOBJECT_CPU_RATE_CONTROL_INFORMATION","JOBOBJECT_CPU_RATE_CONTROL_INFORMATION_u","JOBOBJECT_CPU_RATE_CONTROL_INFORMATION_u_s","JOBOBJECT_END_OF_JOB_TIME_INFORMATION","JOBOBJECT_EXTENDED_LIMIT_INFORMATION","JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE","JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE","JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS","JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS","JOBOBJECT_IO_ATTRIBUTION_INFORMATION","JOBOBJECT_IO_ATTRIBUTION_STATS","JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE","JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V1","JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2","JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3","JOBOBJECT_JOBSET_INFORMATION","JOBOBJECT_LIMIT_VIOLATION_INFORMATION","JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2","JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2_u1","JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2_u2","JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2_u3","JOBOBJECT_NET_RATE_CONTROL_INFORMATION","JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION","JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2","JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2_u1","JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2_u2","JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2_u3","JOBOBJECT_RATE_CONTROL_TOLERANCE","JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL","JOBOBJECT_SECURITY_LIMIT_INFORMATION","JOB_OBJECT_ALL_ACCESS","JOB_OBJECT_ASSIGN_PROCESS","JOB_OBJECT_BASIC_LIMIT_VALID_FLAGS","JOB_OBJECT_CPU_RATE_CONTROL_ENABLE","JOB_OBJECT_CPU_RATE_CONTROL_HARD_CAP","JOB_OBJECT_CPU_RATE_CONTROL_MIN_MAX_RATE","JOB_OBJECT_CPU_RATE_CONTROL_NOTIFY","JOB_OBJECT_CPU_RATE_CONTROL_VALID_FLAGS","JOB_OBJECT_CPU_RATE_CONTROL_WEIGHT_BASED","JOB_OBJECT_EXTENDED_LIMIT_VALID_FLAGS","JOB_OBJECT_IMPERSONATE","JOB_OBJECT_IO_RATE_CONTROL_ENABLE","JOB_OBJECT_IO_RATE_CONTROL_FLAGS","JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME","JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS","JOB_OBJECT_LIMIT_ACTIVE_PROCESS","JOB_OBJECT_LIMIT_AFFINITY","JOB_OBJECT_LIMIT_BREAKAWAY_OK","JOB_OBJECT_LIMIT_CPU_RATE_CONTROL","JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION","JOB_OBJECT_LIMIT_IO_RATE_CONTROL","JOB_OBJECT_LIMIT_JOB_MEMORY","JOB_OBJECT_LIMIT_JOB_MEMORY_HIGH","JOB_OBJECT_LIMIT_JOB_MEMORY_LOW","JOB_OBJECT_LIMIT_JOB_READ_BYTES","JOB_OBJECT_LIMIT_JOB_TIME","JOB_OBJECT_LIMIT_JOB_WRITE_BYTES","JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE","JOB_OBJECT_LIMIT_NET_RATE_CONTROL","JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME","JOB_OBJECT_LIMIT_PRIORITY_CLASS","JOB_OBJECT_LIMIT_PROCESS_MEMORY","JOB_OBJECT_LIMIT_PROCESS_TIME","JOB_OBJECT_LIMIT_RATE_CONTROL","JOB_OBJECT_LIMIT_SCHEDULING_CLASS","JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK","JOB_OBJECT_LIMIT_SUBSET_AFFINITY","JOB_OBJECT_LIMIT_VALID_FLAGS","JOB_OBJECT_LIMIT_WORKINGSET","JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS","JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT","JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO","JOB_OBJECT_MSG_END_OF_JOB_TIME","JOB_OBJECT_MSG_END_OF_PROCESS_TIME","JOB_OBJECT_MSG_EXIT_PROCESS","JOB_OBJECT_MSG_JOB_CYCLE_TIME_LIMIT","JOB_OBJECT_MSG_JOB_MEMORY_LIMIT","JOB_OBJECT_MSG_MAXIMUM","JOB_OBJECT_MSG_MINIMUM","JOB_OBJECT_MSG_NEW_PROCESS","JOB_OBJECT_MSG_NOTIFICATION_LIMIT","JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT","JOB_OBJECT_MSG_SILO_TERMINATED","JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG","JOB_OBJECT_NET_RATE_CONTROL_ENABLE","JOB_OBJECT_NET_RATE_CONTROL_FLAGS","JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH","JOB_OBJECT_NET_RATE_CONTROL_MAX_DSCP_TAG","JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS","JOB_OBJECT_NOTIFICATION_LIMIT_VALID_FLAGS","JOB_OBJECT_POST_AT_END_OF_JOB","JOB_OBJECT_QUERY","JOB_OBJECT_SECURITY_FILTER_TOKENS","JOB_OBJECT_SECURITY_NO_ADMIN","JOB_OBJECT_SECURITY_ONLY_TOKEN","JOB_OBJECT_SECURITY_RESTRICTED_TOKEN","JOB_OBJECT_SECURITY_VALID_FLAGS","JOB_OBJECT_SET_ATTRIBUTES","JOB_OBJECT_SET_SECURITY_ATTRIBUTES","JOB_OBJECT_TERMINATE","JOB_OBJECT_TERMINATE_AT_END_OF_JOB","JOB_OBJECT_UILIMIT_ALL","JOB_OBJECT_UILIMIT_DESKTOP","JOB_OBJECT_UILIMIT_DISPLAYSETTINGS","JOB_OBJECT_UILIMIT_EXITWINDOWS","JOB_OBJECT_UILIMIT_GLOBALATOMS","JOB_OBJECT_UILIMIT_HANDLES","JOB_OBJECT_UILIMIT_NONE","JOB_OBJECT_UILIMIT_READCLIPBOARD","JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS","JOB_OBJECT_UILIMIT_WRITECLIPBOARD","JOB_OBJECT_UI_VALID_FLAGS","JOB_OBJECT_VALID_COMPLETION_FILTER","JOB_SET_ARRAY","JobHandle","JobHighMemoryLimit","JobHighMemoryLimit","JobHighMemoryLimit_mut","JobHighMemoryLimit_mut","JobLowMemoryLimit","JobLowMemoryLimit","JobMemory","JobMemory","JobMemoryLimit","JobMemoryLimit","JobMemoryLimit","JobMemoryLimit","JobMemoryLimit","JobMemoryLimit_mut","JobMemoryLimit_mut","JobObjectAssociateCompletionPortInformation","JobObjectBasicAccountingInformation","JobObjectBasicAndIoAccountingInformation","JobObjectBasicLimitInformation","JobObjectBasicProcessIdList","JobObjectBasicUIRestrictions","JobObjectCompletionCounter","JobObjectCompletionFilter","JobObjectCpuRateControlInformation","JobObjectCreateSilo","JobObjectEndOfJobTimeInformation","JobObjectExtendedLimitInformation","JobObjectGroupInformation","JobObjectGroupInformationEx","JobObjectJobSetInformation","JobObjectLimitViolationInformation","JobObjectLimitViolationInformation2","JobObjectNetRateControlInformation","JobObjectNotificationLimitInformation","JobObjectNotificationLimitInformation2","JobObjectReserved10Information","JobObjectReserved11Information","JobObjectReserved12Information","JobObjectReserved13Information","JobObjectReserved14Information","JobObjectReserved15Information","JobObjectReserved16Information","JobObjectReserved17Information","JobObjectReserved18Information","JobObjectReserved19Information","JobObjectReserved1Information","JobObjectReserved20Information","JobObjectReserved21Information","JobObjectReserved22Information","JobObjectReserved23Information","JobObjectReserved24Information","JobObjectReserved25Information","JobObjectReserved2Information","JobObjectReserved3Information","JobObjectReserved4Information","JobObjectReserved5Information","JobObjectReserved6Information","JobObjectReserved7Information","JobObjectReserved8Information","JobObjectReserved9Information","JobObjectSecurityLimitInformation","JobObjectSiloBasicInformation","JobToken","JumpTarget","JumpTarget","KEY_ALL_ACCESS","KEY_CREATE_LINK","KEY_CREATE_SUB_KEY","KEY_ENUMERATE_SUB_KEYS","KEY_EXECUTE","KEY_NOTIFY","KEY_QUERY_VALUE","KEY_READ","KEY_SET_VALUE","KEY_WOW64_32KEY","KEY_WOW64_64KEY","KEY_WOW64_RES","KEY_WRITE","KNONVOLATILE_CONTEXT_POINTERS","KNONVOLATILE_CONTEXT_POINTERS_u1","KNONVOLATILE_CONTEXT_POINTERS_u1_s","KNONVOLATILE_CONTEXT_POINTERS_u2","KNONVOLATILE_CONTEXT_POINTERS_u2_s","KSPIN_LOCK","KTMOBJECT_CURSOR","KTMOBJECT_ENLISTMENT","KTMOBJECT_INVALID","KTMOBJECT_RESOURCE_MANAGER","KTMOBJECT_TRANSACTION","KTMOBJECT_TRANSACTION_MANAGER","KTMOBJECT_TYPE","KernelMode","L","LABEL_SECURITY_INFORMATION","LANGID","LANGIDFROMLCID","LANG_AFRIKAANS","LANG_ALBANIAN","LANG_ALSATIAN","LANG_AMHARIC","LANG_ARABIC","LANG_ARMENIAN","LANG_ASSAMESE","LANG_AZERBAIJANI","LANG_AZERI","LANG_BANGLA","LANG_BASHKIR","LANG_BASQUE","LANG_BELARUSIAN","LANG_BENGALI","LANG_BOSNIAN","LANG_BOSNIAN_NEUTRAL","LANG_BRETON","LANG_BULGARIAN","LANG_CATALAN","LANG_CENTRAL_KURDISH","LANG_CHEROKEE","LANG_CHINESE","LANG_CHINESE_SIMPLIFIED","LANG_CHINESE_TRADITIONAL","LANG_CORSICAN","LANG_CROATIAN","LANG_CZECH","LANG_DANISH","LANG_DARI","LANG_DIVEHI","LANG_DUTCH","LANG_ENGLISH","LANG_ESTONIAN","LANG_FAEROESE","LANG_FARSI","LANG_FILIPINO","LANG_FINNISH","LANG_FRENCH","LANG_FRISIAN","LANG_FULAH","LANG_GALICIAN","LANG_GEORGIAN","LANG_GERMAN","LANG_GREEK","LANG_GREENLANDIC","LANG_GUJARATI","LANG_HAUSA","LANG_HAWAIIAN","LANG_HEBREW","LANG_HINDI","LANG_HUNGARIAN","LANG_ICELANDIC","LANG_IGBO","LANG_INDONESIAN","LANG_INUKTITUT","LANG_INVARIANT","LANG_IRISH","LANG_ITALIAN","LANG_JAPANESE","LANG_KANNADA","LANG_KASHMIRI","LANG_KAZAK","LANG_KHMER","LANG_KICHE","LANG_KINYARWANDA","LANG_KONKANI","LANG_KOREAN","LANG_KYRGYZ","LANG_LAO","LANG_LATVIAN","LANG_LITHUANIAN","LANG_LOWER_SORBIAN","LANG_LUXEMBOURGISH","LANG_MACEDONIAN","LANG_MALAY","LANG_MALAYALAM","LANG_MALTESE","LANG_MANIPURI","LANG_MAORI","LANG_MAPUDUNGUN","LANG_MARATHI","LANG_MOHAWK","LANG_MONGOLIAN","LANG_NEPALI","LANG_NEUTRAL","LANG_NORWEGIAN","LANG_OCCITAN","LANG_ODIA","LANG_ORIYA","LANG_PASHTO","LANG_PERSIAN","LANG_POLISH","LANG_PORTUGUESE","LANG_PULAR","LANG_PUNJABI","LANG_QUECHUA","LANG_ROMANIAN","LANG_ROMANSH","LANG_RUSSIAN","LANG_SAKHA","LANG_SAMI","LANG_SANSKRIT","LANG_SCOTTISH_GAELIC","LANG_SERBIAN","LANG_SERBIAN_NEUTRAL","LANG_SINDHI","LANG_SINHALESE","LANG_SLOVAK","LANG_SLOVENIAN","LANG_SOTHO","LANG_SPANISH","LANG_SWAHILI","LANG_SWEDISH","LANG_SYRIAC","LANG_SYSTEM_DEFAULT","LANG_TAJIK","LANG_TAMAZIGHT","LANG_TAMIL","LANG_TATAR","LANG_TELUGU","LANG_THAI","LANG_TIBETAN","LANG_TIGRIGNA","LANG_TIGRINYA","LANG_TSWANA","LANG_TURKISH","LANG_TURKMEN","LANG_UIGHUR","LANG_UKRAINIAN","LANG_UPPER_SORBIAN","LANG_URDU","LANG_USER_DEFAULT","LANG_UZBEK","LANG_VALENCIAN","LANG_VIETNAMESE","LANG_WELSH","LANG_WOLOF","LANG_XHOSA","LANG_YAKUT","LANG_YI","LANG_YORUBA","LANG_ZULU","LARGE_INTEGER","LATENCY_TIME","LCID","LDT_ENTRY","LDT_ENTRY_Bits","LDT_ENTRY_Bytes","LDT_ENTRY_HighWord","LIST_ENTRY","LIST_ENTRY32","LIST_ENTRY64","LOCALE_CUSTOM_DEFAULT","LOCALE_CUSTOM_UI_DEFAULT","LOCALE_CUSTOM_UNSPECIFIED","LOCALE_INVARIANT","LOCALE_NAME_MAX_LENGTH","LOCALE_NEUTRAL","LOCALE_SYSTEM_DEFAULT","LOCALE_TRANSIENT_KEYBOARD1","LOCALE_TRANSIENT_KEYBOARD2","LOCALE_TRANSIENT_KEYBOARD3","LOCALE_TRANSIENT_KEYBOARD4","LOCALE_UNASSIGNED_LCID","LOCALE_USER_DEFAULT","LOCALSERVICE_LUID","LOGICAL_PROCESSOR_RELATIONSHIP","LONG","LONGLONG","LPCCH","LPCH","LPCSTR","LPCUWCHAR","LPCUWSTR","LPCWCH","LPCWCHAR","LPCWSTR","LPOSVERSIONINFOA","LPOSVERSIONINFOEXA","LPOSVERSIONINFOEXW","LPOSVERSIONINFOW","LPSECURITY_CAPABILITIES","LPSTR","LPUWSTR","LPWCH","LPWSTR","LTP_PC_SMT","LT_DONT_CARE","LT_LOWEST_LATENCY","LUA_TOKEN","LUID","LUID_AND_ATTRIBUTES","LUID_AND_ATTRIBUTES_ARRAY","Label","LanguageHandler","LastBranchFromRip","LastBranchToRip","LastExceptionFromRip","LastExceptionToRip","LastInputTime","LastLevelCacheIndex","LastQuery","LastRecoveredLsn","LastResumePerformance","LastSleepTime","LastWakeTime","Latency","Latency","Latency","Legacy","LegacyState","Length","Length","Length","Length","Length","Length","Length","Length","Length","Length","Length","Level","Level","Level","Level","LidClose","LidOpenWake","LidPresent","LimitExcessNotifyBandwidth","LimitExcessNotifyIops","LimitExcessNotifyTimePercent","LimitFlags","LimitFlags","LimitFlags","LimitFlags","LimitFlags","LimitHi","LimitHi","LimitLow","LimitLow","LineSize","LineSize","Lineage","Linenumber","Linenumber","LinkedToken","LnSz","LnSz_mut","LoaderFlags","LoaderFlags","LocalHint","LockCount","LockPrefixTable","LockPrefixTable","LockSemaphore","Locked","LogIdentity","LogPath","LogPathLength","LogicalProcessorIdling","LogicalProcessorIndex","Long","Long","LongFunction","LongName","LongName","LongName_mut","LongName_mut","Low","LowAddress","LowId","LowPart","LowestPerfState","LowestPerfState","Luid","LvaToFirstLinenumber","LvaToFirstSymbol","M128A","MAILSLOT_NO_MESSAGE","MAILSLOT_WAIT_FOREVER","MAKELANGID","MAKELCID","MAKESORTLCID","MANDATORY_LEVEL","MANDATORY_LEVEL_TO_MANDATORY_RID","MAXBYTE","MAXCHAR","MAXDWORD","MAXIMUM_ALLOWED","MAXIMUM_PROCESSORS","MAXIMUM_PROC_PER_GROUP","MAXIMUM_REPARSE_DATA_BUFFER_SIZE","MAXIMUM_SUSPEND_COUNT","MAXIMUM_WAIT_OBJECTS","MAXIMUM_XSTATE_FEATURES","MAXLOGICALLOGNAMESIZE","MAXLONG","MAXLONGLONG","MAXSHORT","MAXWORD","MAX_ACL_REVISION","MAX_CLASS_NAME","MAX_HW_COUNTERS","MAX_NATURAL_ALIGNMENT","MAX_PACKAGE_NAME","MAX_UCSCHAR","MEMORY_ALLOCATION_ALIGNMENT","MEMORY_BASIC_INFORMATION","MEMORY_BASIC_INFORMATION32","MEMORY_BASIC_INFORMATION64","MEMORY_PARTITION_ALL_ACCESS","MEMORY_PARTITION_MODIFY_ACCESS","MEMORY_PARTITION_QUERY_ACCESS","MEMORY_PRIORITY_BELOW_NORMAL","MEMORY_PRIORITY_LOW","MEMORY_PRIORITY_LOWEST","MEMORY_PRIORITY_MEDIUM","MEMORY_PRIORITY_NORMAL","MEMORY_PRIORITY_VERY_LOW","MEM_4MB_PAGES","MEM_64K_PAGES","MEM_COMMIT","MEM_DECOMMIT","MEM_DIFFERENT_IMAGE_BASE_OK","MEM_FREE","MEM_IMAGE","MEM_LARGE_PAGES","MEM_MAPPED","MEM_PHYSICAL","MEM_PRIVATE","MEM_RELEASE","MEM_RESERVE","MEM_RESET","MEM_RESET_UNDO","MEM_ROTATE","MEM_TOP_DOWN","MEM_UNMAP_WITH_TRANSIENT_BOOST","MEM_WRITE_WATCH","MESSAGE_RESOURCE_BLOCK","MESSAGE_RESOURCE_DATA","MESSAGE_RESOURCE_ENTRY","MESSAGE_RESOURCE_UNICODE","MINCHAR","MINLONG","MINSHORT","MIN_ACL_REVISION","MIN_UCSCHAR","MONITOR_DISPLAY_STATE","MS_PPM_SOFTWARE_ALL","MUTANT_ALL_ACCESS","MUTANT_QUERY_STATE","Machine","Machine","Machine","Machine","Machine","Machine","Machine","Machine","Magic","Magic","Magic","MajorImageVersion","MajorImageVersion","MajorLinkerVersion","MajorLinkerVersion","MajorLinkerVersion","MajorOperatingSystemVersion","MajorOperatingSystemVersion","MajorRuntimeVersion","MajorSubsystemVersion","MajorSubsystemVersion","MajorVersion","MajorVersion","MajorVersion","MajorVersion","MajorVersion","MajorVersion","ManagedNativeHeader","MandatoryLevelCount","MandatoryLevelHigh","MandatoryLevelLow","MandatoryLevelMedium","MandatoryLevelSecureProcess","MandatoryLevelSystem","MandatoryLevelUntrusted","MandatoryPolicy","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","Mask","MaxActivationContextInfoClass","MaxBandwidth","MaxBandwidth","MaxBandwidth","MaxBandwidth","MaxCapacity","MaxFrequency","MaxFrequency","MaxHardwareCounterType","MaxIops","MaxIops","MaxIops","MaxJobObjectInfoClass","MaxPerfState","MaxPerfState","MaxPhysicalMemory","MaxProcessMitigationPolicy","MaxRate","MaxSleep","MaxSleep","MaxSpindownTimeout","MaxThrottle","MaxTimePercent","MaxTimePercent","MaxTimeUs","MaxTimeUs","MaxTokenInfoClass","MaxVideoTimeout","MaximumAllocationSize","MaximumAllocationSize","MaximumBlockSize","MaximumGroupCount","MaximumIos","MaximumNumberOfParityExtents","MaximumPartitionCount","MaximumProcessorCount","MaximumWorkingSetSize","MaximumWorkingSetSize","MaximumWorkingSetSize","MemberLevel","MemberLevel","MetaData","MetaDataOffset","MetaDataOffset","MetaDataSize","MetaDataSize","Method","Method","Method","MicrosoftSignedOnly","MinDeviceWakeState","MinPerfState","MinPerfState","MinRate","MinSleep","MinSleep","MinSpindownTimeout","MinSystemState","MinThrottle","MinThrottle","MinTimeUs","MinTimeUs","MinVideoTimeout","MinimumBlockSize","MinimumWorkingSetSize","MinimumWorkingSetSize","MinimumWorkingSetSize","MinorImageVersion","MinorImageVersion","MinorLinkerVersion","MinorLinkerVersion","MinorLinkerVersion","MinorOperatingSystemVersion","MinorOperatingSystemVersion","MinorRuntimeVersion","MinorSubsystemVersion","MinorSubsystemVersion","MinorVersion","MinorVersion","MinorVersion","MinorVersion","MinorVersion","MinorVersion","Misc","Misc","MitigationOptIn","Mode","Mode","ModifiedId","ModifiedId","ModuleHandleRVA","MonitorCapabilities","MonitorInvocation","MonitorRequestReasonAcDcDisplayBurst","MonitorRequestReasonAcDcDisplayBurstSuppressed","MonitorRequestReasonBatteryCountChange","MonitorRequestReasonDP","MonitorRequestReasonFullWake","MonitorRequestReasonGracePeriod","MonitorRequestReasonIdleTimeout","MonitorRequestReasonLid","MonitorRequestReasonMax","MonitorRequestReasonNearProximity","MonitorRequestReasonPdcSignal","MonitorRequestReasonPnP","MonitorRequestReasonPoSetSystemState","MonitorRequestReasonPolicyChange","MonitorRequestReasonPowerButton","MonitorRequestReasonRemoteConnection","MonitorRequestReasonResumePdc","MonitorRequestReasonResumeS4","MonitorRequestReasonScMonitorpower","MonitorRequestReasonScreenOffRequest","MonitorRequestReasonSessionUnlock","MonitorRequestReasonSetThreadExecutionState","MonitorRequestReasonSleepButton","MonitorRequestReasonSxTransition","MonitorRequestReasonSystemIdle","MonitorRequestReasonSystemStateEntered","MonitorRequestReasonTerminal","MonitorRequestReasonThermalStandby","MonitorRequestReasonUnknown","MonitorRequestReasonUserDisplayBurst","MonitorRequestReasonUserInput","MonitorRequestReasonWinrt","MonitorRequestTypeOff","MonitorRequestTypeOnAndPresent","MonitorRequestTypeToggleOn","MxCsr","MxCsr","MxCsr_Mask","N","N","NATIVE_TYPE_MAX_CB","NETWORKSERVICE_LUID","NETWORK_APP_INSTANCE_CSV_FLAGS_VALID_ONLY_IF_CSV_COORDINATOR","NETWORK_APP_INSTANCE_EA","NLS_VALID_LOCALE_MASK","NON_PAGED_DEBUG_INFO","NON_PAGED_DEBUG_SIGNATURE","NOTIFY_USER_POWER_SETTING","NO_PROPAGATE_INHERIT_ACE","NO_SUBGROUP_GUID","NPSTR","NT_TIB","NT_TIB32","NT_TIB32_u","NT_TIB64","NT_TIB64_u","NT_TIB_u","NUMA_NODE_RELATIONSHIP","NUM_DISCHARGE_POLICIES","NV_MEMORY_RANGE","NWPSTR","N_BTMASK","N_BTSHFT","N_TMASK","N_TMASK1","N_TMASK2","N_TSHIFT","Name","Name","Name","Name","Name","Name","Name","Name","Name","Name","Name","Name","Name","NameIsString","NameOffset","NameString","NameString","NameType","Name_mut","Name_mut","Name_mut","Native","NetRateControlTolerance","NetRateControlTolerance","NetRateControlToleranceInterval","NetRateControlToleranceLimit","NewInst","NewState","Next","Next","Next","NextEntry","NextEntryOffset","NoChildProcessCreation","NoDomainAccounting","NoLowMandatoryLabelImages","NoRemoteImages","NodeNumber","NodeNumber","NonPagedPoolLimit","NonPagedPoolLimit","NormalError","NotifyUserModeLegacyPowerEvent","NotifyUserPowerSetting","NumStrings","NumaNode","NumaNode","NumaNodeIndex","NumaNode_mut","NumaNode_mut","Number","Number","Number","NumberOfAssignedProcesses","NumberOfAuxSymbols","NumberOfAuxSymbols","NumberOfBlocks","NumberOfBytesFailed","NumberOfBytesRepaired","NumberOfEnlistments","NumberOfFunctions","NumberOfIdEntries","NumberOfLinenumbers","NumberOfLinenumbers","NumberOfLinenumbers","NumberOfLinenumbers","NumberOfModuleForwarderRefs","NumberOfNamedEntries","NumberOfNames","NumberOfParityExtents","NumberOfProcessIdsInList","NumberOfProcesses","NumberOfRelocations","NumberOfRelocations","NumberOfRelocations","NumberOfRvaAndSizes","NumberOfRvaAndSizes","NumberOfSections","NumberOfSections","NumberOfSections","NumberOfSymbols","NumberOfSymbols","NumberOfSymbols","NumberOfTransactions","NumberParameters","NumberParameters","NumberParameters","OBJECTID","OBJECT_INHERIT_ACE","OBJECT_TYPE_LIST","OSVERSIONINFOA","OSVERSIONINFOEXA","OSVERSIONINFOEXW","OSVERSIONINFOW","OS_DEPLOYEMENT_STATE_VALUES","OS_DEPLOYMENT_COMPACT","OS_DEPLOYMENT_STANDARD","OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_EXPORT_NAME","OWNER_SECURITY_INFORMATION","ObjectIdCount","ObjectIds","ObjectType","ObjectType","ObjectType","ObjectType","ObjectType","ObjectType","ObjectType","ObjectType","ObjectType","ObjectTypeList","ObjectTypeListCount","Offset","Offset","Offset","Offset","Offset","OffsetModuleName","OffsetModuleName","OffsetToData","OffsetToData","OffsetToDirectory","OffsetToEntries","OldState","OldState","OldState","OldestTransactionGuid","Once","Operation","OptimizeForPower","OptimizedSave","OptionalHeader","OptionalHeader","OptionalHeader","Ordinal","Ordinal","Ordinal","Ordinal_mut","Ordinal_mut","Ordinal_mut","OriginalCheckSum","OriginalFirstThunk","OriginalFirstThunk_mut","OriginalTimeDateStamp","OriginatingLogonSession","OtherOperationCount","OtherTransferCount","Outcome","Outcome","OverThrottled","Owner","Owner","Owner","OwningThread","P1Home","P2Home","P3Home","P4Home","P5Home","P6Home","PACCESS_ALLOWED_ACE","PACCESS_ALLOWED_CALLBACK_ACE","PACCESS_ALLOWED_CALLBACK_OBJECT_ACE","PACCESS_ALLOWED_OBJECT_ACE","PACCESS_DENIED_ACE","PACCESS_DENIED_CALLBACK_ACE","PACCESS_DENIED_CALLBACK_OBJECT_ACE","PACCESS_DENIED_OBJECT_ACE","PACCESS_MASK","PACCESS_REASONS","PACCESS_TOKEN","PACE_HEADER","PACKEDEVENTINFO","PACL","PACL_REVISION_INFORMATION","PACL_SIZE_INFORMATION","PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION","PACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION","PACTIVATION_CONTEXT_DETAILED_INFORMATION","PACTIVATION_CONTEXT_QUERY_INDEX","PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION","PADMINISTRATOR_POWER_POLICY","PAGE_ENCLAVE_DECOMMIT","PAGE_ENCLAVE_THREAD_CONTROL","PAGE_ENCLAVE_UNVALIDATED","PAGE_EXECUTE","PAGE_EXECUTE_READ","PAGE_EXECUTE_READWRITE","PAGE_EXECUTE_WRITECOPY","PAGE_GUARD","PAGE_NOACCESS","PAGE_NOCACHE","PAGE_READONLY","PAGE_READWRITE","PAGE_REVERT_TO_FILE_MAP","PAGE_TARGETS_INVALID","PAGE_TARGETS_NO_UPDATE","PAGE_WRITECOMBINE","PAGE_WRITECOPY","PAPCFUNC","PAPPLICATIONLAUNCH_SETTING_VALUE","PASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION","PASSEMBLY_FILE_DETAILED_INFORMATION","PBATTERY_REPORTING_SCALE","PBOOLEAN","PCACHE_DESCRIPTOR","PCACHE_RELATIONSHIP","PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION","PCACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION","PCACTIVATION_CONTEXT_DETAILED_INFORMATION","PCACTIVATION_CONTEXT_QUERY_INDEX","PCACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION","PCASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION","PCASSEMBLY_FILE_DETAILED_INFORMATION","PCCH","PCCOMPATIBILITY_CONTEXT_ELEMENT","PCFG_CALL_TARGET_INFO","PCH","PCHAR","PCIMAGE_DELAYLOAD_DESCRIPTOR","PCLAIMS_BLOB","PCLAIM_SECURITY_ATTRIBUTES_INFORMATION","PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE","PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE","PCLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1","PCLAIM_SECURITY_ATTRIBUTE_V1","PCM_POWER_DATA","PCNZCH","PCNZWCH","PCOMPARTMENT_ID","PCOMPATIBILITY_CONTEXT_ELEMENT","PCONTEXT","PCPU_SET_INFORMATION_TYPE","PCSTR","PCUCSCHAR","PCUCSSTR","PCUNZWCH","PCUUCSCHAR","PCUUCSSTR","PCUWCHAR","PCUWSTR","PCUZZWSTR","PCWCH","PCWCHAR","PCWSTR","PCZPCSTR","PCZPCWSTR","PCZPSTR","PCZPWSTR","PCZZSTR","PCZZWSTR","PDCAP_D0_SUPPORTED","PDCAP_D1_SUPPORTED","PDCAP_D2_SUPPORTED","PDCAP_D3_SUPPORTED","PDCAP_WAKE_FROM_D0_SUPPORTED","PDCAP_WAKE_FROM_D1_SUPPORTED","PDCAP_WAKE_FROM_D2_SUPPORTED","PDCAP_WAKE_FROM_D3_SUPPORTED","PDCAP_WARM_EJECT_SUPPORTED","PDEVICE_POWER_STATE","PDISPATCHER_CONTEXT","PDWORDLONG","PD_Capabilities","PD_D1Latency","PD_D2Latency","PD_D3Latency","PD_DeepestSystemWake","PD_MostRecentPowerState","PD_PowerStateMapping","PD_Size","PENCLAVE_CREATE_INFO_SGX","PENCLAVE_INIT_INFO_SGX","PENLISTMENT_BASIC_INFORMATION","PENLISTMENT_CRM_INFORMATION","PERFORMANCE_DATA","PERFORMANCE_DATA_VERSION","PERFSTATE_POLICY_CHANGE_DECREASE_MAX","PERFSTATE_POLICY_CHANGE_IDEAL","PERFSTATE_POLICY_CHANGE_IDEAL_AGGRESSIVE","PERFSTATE_POLICY_CHANGE_INCREASE_MAX","PERFSTATE_POLICY_CHANGE_ROCKET","PERFSTATE_POLICY_CHANGE_SINGLE","PEVENTLOGRECORD","PEVENTSFORLOGFILE","PEXCEPTION_FILTER","PEXCEPTION_POINTERS","PEXCEPTION_RECORD","PEXCEPTION_RECORD32","PEXCEPTION_RECORD64","PEXCEPTION_REGISTRATION_RECORD","PEXCEPTION_ROUTINE","PEXECUTION_STATE","PFILE_ID_128","PFILE_SEGMENT_ELEMENT","PFIRMWARE_TYPE","PFLOAT128","PFLS_CALLBACK_FUNCTION","PFPO_DATA","PF_3DNOW_INSTRUCTIONS_AVAILABLE","PF_ALPHA_BYTE_INSTRUCTIONS","PF_ARM_64BIT_LOADSTORE_ATOMIC","PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE","PF_ARM_EXTERNAL_CACHE_AVAILABLE","PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE","PF_ARM_NEON_INSTRUCTIONS_AVAILABLE","PF_ARM_V8_CRC32_INSTRUCTIONS_AVAILABLE","PF_ARM_V8_CRYPTO_INSTRUCTIONS_AVAILABLE","PF_ARM_V8_INSTRUCTIONS_AVAILABLE","PF_ARM_VFP_32_REGISTERS_AVAILABLE","PF_CHANNELS_ENABLED","PF_COMPARE64_EXCHANGE128","PF_COMPARE_EXCHANGE128","PF_COMPARE_EXCHANGE_DOUBLE","PF_FASTFAIL_AVAILABLE","PF_FLOATING_POINT_EMULATED","PF_FLOATING_POINT_PRECISION_ERRATA","PF_MMX_INSTRUCTIONS_AVAILABLE","PF_NX_ENABLED","PF_PAE_ENABLED","PF_PPC_MOVEMEM_64BIT_OK","PF_RDRAND_INSTRUCTION_AVAILABLE","PF_RDTSCP_INSTRUCTION_AVAILABLE","PF_RDTSC_INSTRUCTION_AVAILABLE","PF_RDWRFSGSBASE_AVAILABLE","PF_SECOND_LEVEL_ADDRESS_TRANSLATION","PF_SSE3_INSTRUCTIONS_AVAILABLE","PF_SSE_DAZ_MODE_AVAILABLE","PF_VIRT_FIRMWARE_ENABLED","PF_XMMI64_INSTRUCTIONS_AVAILABLE","PF_XMMI_INSTRUCTIONS_AVAILABLE","PF_XSAVE_ENABLED","PGENERIC_MAPPING","PGET_RUNTIME_FUNCTION_CALLBACK","PGROUP_AFFINITY","PGROUP_RELATIONSHIP","PHANDLE","PHARDWARE_COUNTER_DATA","PHARDWARE_COUNTER_TYPE","PHEAP_OPTIMIZE_RESOURCES_INFORMATION","PHIBERFILE_BUCKET","PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY","PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY","PIMAGE_ARCHITECTURE_ENTRY","PIMAGE_ARCHITECTURE_HEADER","PIMAGE_ARCHIVE_MEMBER_HEADER","PIMAGE_ARM64_RUNTIME_FUNCTION_ENTRY","PIMAGE_ARM_RUNTIME_FUNCTION_ENTRY","PIMAGE_AUX_SYMBOL","PIMAGE_AUX_SYMBOL_EX","PIMAGE_AUX_SYMBOL_TOKEN_DEF","PIMAGE_BASE_RELOCATION","PIMAGE_BOUND_FORWARDER_REF","PIMAGE_BOUND_IMPORT_DESCRIPTOR","PIMAGE_CE_RUNTIME_FUNCTION_ENTRY","PIMAGE_COFF_SYMBOLS_HEADER","PIMAGE_COR20_HEADER","PIMAGE_DATA_DIRECTORY","PIMAGE_DEBUG_DIRECTORY","PIMAGE_DEBUG_MISC","PIMAGE_DELAYLOAD_DESCRIPTOR","PIMAGE_DOS_HEADER","PIMAGE_DYNAMIC_RELOCATION","PIMAGE_DYNAMIC_RELOCATION32","PIMAGE_DYNAMIC_RELOCATION32_V2","PIMAGE_DYNAMIC_RELOCATION64","PIMAGE_DYNAMIC_RELOCATION64_V2","PIMAGE_DYNAMIC_RELOCATION_TABLE","PIMAGE_DYNAMIC_RELOCATION_V2","PIMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER","PIMAGE_EXPORT_DIRECTORY","PIMAGE_FILE_HEADER","PIMAGE_FUNCTION_ENTRY","PIMAGE_FUNCTION_ENTRY64","PIMAGE_HOT_PATCH_BASE","PIMAGE_HOT_PATCH_HASHES","PIMAGE_HOT_PATCH_INFO","PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY","PIMAGE_IMPORT_BY_NAME","PIMAGE_IMPORT_DESCRIPTOR","PIMAGE_LINENUMBER","PIMAGE_LOAD_CONFIG_CODE_INTEGRITY","PIMAGE_LOAD_CONFIG_DIRECTORY","PIMAGE_LOAD_CONFIG_DIRECTORY32","PIMAGE_LOAD_CONFIG_DIRECTORY64","PIMAGE_NT_HEADERS","PIMAGE_NT_HEADERS32","PIMAGE_NT_HEADERS64","PIMAGE_OPTIONAL_HEADER","PIMAGE_OPTIONAL_HEADER32","PIMAGE_OPTIONAL_HEADER64","PIMAGE_OS2_HEADER","PIMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER","PIMAGE_RELOCATION","PIMAGE_RESOURCE_DATA_ENTRY","PIMAGE_RESOURCE_DIRECTORY","PIMAGE_RESOURCE_DIRECTORY_ENTRY","PIMAGE_RESOURCE_DIRECTORY_STRING","PIMAGE_RESOURCE_DIR_STRING_U","PIMAGE_ROM_HEADERS","PIMAGE_ROM_OPTIONAL_HEADER","PIMAGE_RUNTIME_FUNCTION_ENTRY","PIMAGE_SECTION_HEADER","PIMAGE_SEPARATE_DEBUG_HEADER","PIMAGE_SYMBOL","PIMAGE_SYMBOL_EX","PIMAGE_THUNK_DATA","PIMAGE_THUNK_DATA32","PIMAGE_THUNK_DATA64","PIMAGE_TLS_CALLBACK","PIMAGE_TLS_DIRECTORY","PIMAGE_TLS_DIRECTORY32","PIMAGE_TLS_DIRECTORY64","PIMAGE_VXD_HEADER","PIO_COUNTERS","PISECURITY_DESCRIPTOR","PISECURITY_DESCRIPTOR_RELATIVE","PISID","PJOBOBJECT_ASSOCIATE_COMPLETION_PORT","PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION","PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION","PJOBOBJECT_BASIC_LIMIT_INFORMATION","PJOBOBJECT_BASIC_PROCESS_ID_LIST","PJOBOBJECT_BASIC_UI_RESTRICTIONS","PJOBOBJECT_CPU_RATE_CONTROL_INFORMATION","PJOBOBJECT_END_OF_JOB_TIME_INFORMATION","PJOBOBJECT_EXTENDED_LIMIT_INFORMATION","PJOBOBJECT_IO_ATTRIBUTION_INFORMATION","PJOBOBJECT_IO_ATTRIBUTION_STATS","PJOBOBJECT_JOBSET_INFORMATION","PJOBOBJECT_LIMIT_VIOLATION_INFORMATION","PJOBOBJECT_NOTIFICATION_LIMIT_INFORMATION","PJOBOBJECT_RATE_CONTROL_TOLERANCE","PJOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL","PJOBOBJECT_SECURITY_LIMIT_INFORMATION","PJOB_SET_ARRAY","PKNONVOLATILE_CONTEXT_POINTERS","PKSPIN_LOCK","PKTMOBJECT_CURSOR","PKTMOBJECT_TYPE","PLARGE_INTEGER","PLCID","PLDT_ENTRY","PLIST_ENTRY","PLIST_ENTRY32","PLIST_ENTRY64","PLONG","PLONGLONG","PLUID","PLUID_AND_ATTRIBUTES","PLUID_AND_ATTRIBUTES_ARRAY","PM128A","PMANDATORY_LEVEL","PMCCounter","PMEMORY_BASIC_INFORMATION","PMEMORY_BASIC_INFORMATION32","PMEMORY_BASIC_INFORMATION64","PMESSAGE_RESOURCE_BLOCK","PMESSAGE_RESOURCE_DATA","PMESSAGE_RESOURCE_ENTRY","PMONITOR_DISPLAY_STATE","PNETWORK_APP_INSTANCE_EA","PNON_PAGED_DEBUG_INFO","PNOTIFY_USER_POWER_SETTING","PNT_TIB","PNT_TIB32","PNT_TIB64","PNUMA_NODE_RELATIONSHIP","PNV_MEMORY_RANGE","PNZCH","PNZWCH","POBJECT_TYPE_LIST","POLICY_AUDIT_SUBCATEGORY_COUNT","POSVERSIONINFOA","POSVERSIONINFOEXA","POSVERSIONINFOEXW","POSVERSIONINFOW","POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK","POWERBUTTON_ACTION_INDEX_HIBERNATE","POWERBUTTON_ACTION_INDEX_NOTHING","POWERBUTTON_ACTION_INDEX_SHUTDOWN","POWERBUTTON_ACTION_INDEX_SLEEP","POWERBUTTON_ACTION_INDEX_TURN_OFF_THE_DISPLAY","POWERBUTTON_ACTION_VALUE_HIBERNATE","POWERBUTTON_ACTION_VALUE_NOTHING","POWERBUTTON_ACTION_VALUE_SHUTDOWN","POWERBUTTON_ACTION_VALUE_SLEEP","POWERBUTTON_ACTION_VALUE_TURN_OFF_THE_DISPLAY","POWER_ACTION","POWER_ACTION_CRITICAL","POWER_ACTION_DISABLE_WAKES","POWER_ACTION_DOZE_TO_HIBERNATE","POWER_ACTION_HIBERBOOT","POWER_ACTION_LIGHTEST_FIRST","POWER_ACTION_LOCK_CONSOLE","POWER_ACTION_OVERRIDE_APPS","POWER_ACTION_POLICY","POWER_ACTION_PSEUDO_TRANSITION","POWER_ACTION_QUERY_ALLOWED","POWER_ACTION_UI_ALLOWED","POWER_ACTION_USER_NOTIFY","POWER_CONNECTIVITY_IN_STANDBY_DISABLED","POWER_CONNECTIVITY_IN_STANDBY_DISABLED_LID_CLOSE","POWER_CONNECTIVITY_IN_STANDBY_ENABLED","POWER_DEVICE_IDLE_POLICY_CONSERVATIVE","POWER_DEVICE_IDLE_POLICY_PERFORMANCE","POWER_DISCONNECTED_STANDBY_MODE_AGGRESSIVE","POWER_DISCONNECTED_STANDBY_MODE_NORMAL","POWER_FORCE_TRIGGER_RESET","POWER_IDLE_RESILIENCY","POWER_INFORMATION_LEVEL","POWER_LEVEL_USER_NOTIFY_EXEC","POWER_LEVEL_USER_NOTIFY_SOUND","POWER_LEVEL_USER_NOTIFY_TEXT","POWER_MONITOR_INVOCATION","POWER_MONITOR_REQUEST_REASON","POWER_MONITOR_REQUEST_TYPE","POWER_PLATFORM_INFORMATION","POWER_PLATFORM_ROLE","POWER_PLATFORM_ROLE_V1","POWER_PLATFORM_ROLE_V1_MAX","POWER_PLATFORM_ROLE_V2","POWER_PLATFORM_ROLE_V2_MAX","POWER_PLATFORM_ROLE_VERSION","POWER_PLATFORM_ROLE_VERSION_MAX","POWER_REQUEST_CONTEXT_DETAILED_STRING","POWER_REQUEST_CONTEXT_SIMPLE_STRING","POWER_REQUEST_CONTEXT_VERSION","POWER_REQUEST_TYPE","POWER_SESSION_CONNECT","POWER_SESSION_RIT_STATE","POWER_SESSION_TIMEOUTS","POWER_SESSION_WINLOGON","POWER_SYSTEM_MAXIMUM","POWER_USER_NOTIFY_BUTTON","POWER_USER_NOTIFY_FORCED_SHUTDOWN","POWER_USER_NOTIFY_SHUTDOWN","POWER_USER_PRESENCE","POWER_USER_PRESENCE_TYPE","PO_THROTTLE_ADAPTIVE","PO_THROTTLE_CONSTANT","PO_THROTTLE_DEGRADE","PO_THROTTLE_MAXIMUM","PO_THROTTLE_NONE","PPACKEDEVENTINFO","PPERFORMANCE_DATA","PPM_FIRMWARE_ACPI1C2","PPM_FIRMWARE_ACPI1C3","PPM_FIRMWARE_ACPI1TSTATES","PPM_FIRMWARE_CPC","PPM_FIRMWARE_CSD","PPM_FIRMWARE_CST","PPM_FIRMWARE_LPI","PPM_FIRMWARE_OSC","PPM_FIRMWARE_PCCH","PPM_FIRMWARE_PCCP","PPM_FIRMWARE_PCT","PPM_FIRMWARE_PDC","PPM_FIRMWARE_PPC","PPM_FIRMWARE_PSD","PPM_FIRMWARE_PSS","PPM_FIRMWARE_PTC","PPM_FIRMWARE_TPC","PPM_FIRMWARE_TSD","PPM_FIRMWARE_TSS","PPM_FIRMWARE_XPSS","PPM_IDLESTATES_DATA_GUID","PPM_IDLESTATE_CHANGE_GUID","PPM_IDLESTATE_EVENT","PPM_IDLE_ACCOUNTING","PPM_IDLE_ACCOUNTING_EX","PPM_IDLE_ACCOUNTING_EX_GUID","PPM_IDLE_ACCOUNTING_GUID","PPM_IDLE_IMPLEMENTATION_CSTATES","PPM_IDLE_IMPLEMENTATION_LPISTATES","PPM_IDLE_IMPLEMENTATION_MICROPEP","PPM_IDLE_IMPLEMENTATION_NONE","PPM_IDLE_IMPLEMENTATION_PEP","PPM_IDLE_STATE_ACCOUNTING","PPM_IDLE_STATE_ACCOUNTING_EX","PPM_IDLE_STATE_BUCKET_EX","PPM_PERFMON_PERFSTATE_GUID","PPM_PERFORMANCE_IMPLEMENTATION_CPPC","PPM_PERFORMANCE_IMPLEMENTATION_NONE","PPM_PERFORMANCE_IMPLEMENTATION_PCCV1","PPM_PERFORMANCE_IMPLEMENTATION_PEP","PPM_PERFORMANCE_IMPLEMENTATION_PSTATES","PPM_PERFSTATES_DATA_GUID","PPM_PERFSTATE_CHANGE_GUID","PPM_PERFSTATE_DOMAIN_CHANGE_GUID","PPM_PERFSTATE_DOMAIN_EVENT","PPM_PERFSTATE_EVENT","PPM_THERMALCHANGE_EVENT","PPM_THERMALCONSTRAINT_GUID","PPM_THERMAL_POLICY_CHANGE_GUID","PPM_THERMAL_POLICY_EVENT","PPM_WMI_IDLE_STATE","PPM_WMI_IDLE_STATES","PPM_WMI_IDLE_STATES_EX","PPM_WMI_LEGACY_PERFSTATE","PPM_WMI_PERF_STATE","PPM_WMI_PERF_STATES","PPM_WMI_PERF_STATES_EX","PPOWER_ACTION","PPOWER_ACTION_POLICY","PPOWER_IDLE_RESILIENCY","PPOWER_MONITOR_INVOCATION","PPOWER_PLATFORM_INFORMATION","PPOWER_PLATFORM_ROLE","PPOWER_REQUEST_TYPE","PPOWER_SESSION_CONNECT","PPOWER_SESSION_RIT_STATE","PPOWER_SESSION_TIMEOUTS","PPOWER_SESSION_WINLOGON","PPOWER_USER_PRESENCE","PPOWER_USER_PRESENCE_TYPE","PPPM_IDLESTATE_EVENT","PPPM_IDLE_ACCOUNTING","PPPM_IDLE_ACCOUNTING_EX","PPPM_IDLE_STATE_ACCOUNTING","PPPM_IDLE_STATE_ACCOUNTING_EX","PPPM_IDLE_STATE_BUCKET_EX","PPPM_PERFSTATE_DOMAIN_EVENT","PPPM_PERFSTATE_EVENT","PPPM_THERMALCHANGE_EVENT","PPPM_THERMAL_POLICY_EVENT","PPPM_WMI_IDLE_STATE","PPPM_WMI_IDLE_STATES","PPPM_WMI_IDLE_STATES_EX","PPPM_WMI_LEGACY_PERFSTATE","PPPM_WMI_PERF_STATE","PPPM_WMI_PERF_STATES","PPPM_WMI_PERF_STATES_EX","PPPROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY","PPRIVILEGE_SET","PPROCESSOR_GROUP_INFO","PPROCESSOR_IDLESTATE_INFO","PPROCESSOR_IDLESTATE_POLICY","PPROCESSOR_NUMBER","PPROCESSOR_PERFSTATE_POLICY","PPROCESSOR_POWER_POLICY","PPROCESSOR_POWER_POLICY_INFO","PPROCESSOR_RELATIONSHIP","PPROCESS_MITIGATION_ASLR_POLICY","PPROCESS_MITIGATION_BINARY_SIGNATURE_POLICY","PPROCESS_MITIGATION_CHILD_PROCESS_POLICY","PPROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY","PPROCESS_MITIGATION_DEP_POLICY","PPROCESS_MITIGATION_DYNAMIC_CODE_POLICY","PPROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY","PPROCESS_MITIGATION_FONT_DISABLE_POLICY","PPROCESS_MITIGATION_IMAGE_LOAD_POLICY","PPROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY","PPROCESS_MITIGATION_POLICY","PPROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY","PPROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY","PQUOTA_LIMITS","PQUOTA_LIMITS_EX","PRATE_QUOTA_LIMIT","PREPARSE_GUID_DATA_BUFFER","PRESOURCEMANAGER_BASIC_INFORMATION","PRESOURCEMANAGER_COMPLETION_INFORMATION","PRESUME_PERFORMANCE","PRIMARYLANGID","PRIVILEGE_SET","PRIVILEGE_SET_ALL_NECESSARY","PRLIST_ENTRY","PROCESSOR_ALPHA_21064","PROCESSOR_AMD_X8664","PROCESSOR_ARCHITECTURE_ALPHA","PROCESSOR_ARCHITECTURE_ALPHA64","PROCESSOR_ARCHITECTURE_AMD64","PROCESSOR_ARCHITECTURE_ARM","PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64","PROCESSOR_ARCHITECTURE_ARM64","PROCESSOR_ARCHITECTURE_IA32_ON_ARM64","PROCESSOR_ARCHITECTURE_IA32_ON_WIN64","PROCESSOR_ARCHITECTURE_IA64","PROCESSOR_ARCHITECTURE_INTEL","PROCESSOR_ARCHITECTURE_MIPS","PROCESSOR_ARCHITECTURE_MSIL","PROCESSOR_ARCHITECTURE_NEUTRAL","PROCESSOR_ARCHITECTURE_PPC","PROCESSOR_ARCHITECTURE_SHX","PROCESSOR_ARCHITECTURE_UNKNOWN","PROCESSOR_ARM720","PROCESSOR_ARM820","PROCESSOR_ARM920","PROCESSOR_ARM_7TDMI","PROCESSOR_CACHE_TYPE","PROCESSOR_DUTY_CYCLING_DISABLED","PROCESSOR_DUTY_CYCLING_ENABLED","PROCESSOR_GROUP_INFO","PROCESSOR_HITACHI_SH3","PROCESSOR_HITACHI_SH3E","PROCESSOR_HITACHI_SH4","PROCESSOR_IDLESTATE_INFO","PROCESSOR_IDLESTATE_POLICY","PROCESSOR_IDLESTATE_POLICY_COUNT","PROCESSOR_IDLESTATE_POLICY_Flags","PROCESSOR_INTEL_386","PROCESSOR_INTEL_486","PROCESSOR_INTEL_IA64","PROCESSOR_INTEL_PENTIUM","PROCESSOR_MIPS_R4000","PROCESSOR_MOTOROLA_821","PROCESSOR_NUMBER","PROCESSOR_OPTIL","PROCESSOR_PERFSTATE_POLICY","PROCESSOR_PERFSTATE_POLICY_u","PROCESSOR_PERFSTATE_POLICY_u_Flags","PROCESSOR_PERF_AUTONOMOUS_MODE_DISABLED","PROCESSOR_PERF_AUTONOMOUS_MODE_ENABLED","PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE","PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE_AT_GUARANTEED","PROCESSOR_PERF_BOOST_MODE_DISABLED","PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE","PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE_AT_GUARANTEED","PROCESSOR_PERF_BOOST_MODE_EFFICIENT_ENABLED","PROCESSOR_PERF_BOOST_MODE_ENABLED","PROCESSOR_PERF_BOOST_MODE_MAX","PROCESSOR_PERF_BOOST_POLICY_DISABLED","PROCESSOR_PERF_BOOST_POLICY_MAX","PROCESSOR_PERF_ENERGY_PREFERENCE","PROCESSOR_PERF_MAXIMUM_ACTIVITY_WINDOW","PROCESSOR_PERF_MINIMUM_ACTIVITY_WINDOW","PROCESSOR_PERF_PERFORMANCE_PREFERENCE","PROCESSOR_POWER_POLICY","PROCESSOR_POWER_POLICY_INFO","PROCESSOR_PPC_601","PROCESSOR_PPC_603","PROCESSOR_PPC_604","PROCESSOR_PPC_620","PROCESSOR_RELATIONSHIP","PROCESSOR_SHx_SH3","PROCESSOR_SHx_SH4","PROCESSOR_STRONGARM","PROCESSOR_THROTTLE_AUTOMATIC","PROCESSOR_THROTTLE_DISABLED","PROCESSOR_THROTTLE_ENABLED","PROCESS_ALL_ACCESS","PROCESS_CREATE_PROCESS","PROCESS_CREATE_THREAD","PROCESS_DUP_HANDLE","PROCESS_MITIGATION_ASLR_POLICY","PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY","PROCESS_MITIGATION_CHILD_PROCESS_POLICY","PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY","PROCESS_MITIGATION_DEP_POLICY","PROCESS_MITIGATION_DYNAMIC_CODE_POLICY","PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY","PROCESS_MITIGATION_FONT_DISABLE_POLICY","PROCESS_MITIGATION_IMAGE_LOAD_POLICY","PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY","PROCESS_MITIGATION_POLICY","PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY","PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY","PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY","PROCESS_QUERY_INFORMATION","PROCESS_QUERY_LIMITED_INFORMATION","PROCESS_SET_INFORMATION","PROCESS_SET_LIMITED_INFORMATION","PROCESS_SET_QUOTA","PROCESS_SET_SESSIONID","PROCESS_SUSPEND_RESUME","PROCESS_TERMINATE","PROCESS_TRUST_LABEL_SECURITY_INFORMATION","PROCESS_VM_OPERATION","PROCESS_VM_READ","PROCESS_VM_WRITE","PROC_IDLE_BUCKET_COUNT","PROC_IDLE_BUCKET_COUNT_EX","PRODUCT_ARM64_SERVER","PRODUCT_AZURE_NANO_SERVER","PRODUCT_AZURE_SERVER_CORE","PRODUCT_BUSINESS","PRODUCT_BUSINESS_N","PRODUCT_CLOUD","PRODUCT_CLOUDN","PRODUCT_CLOUD_HOST_INFRASTRUCTURE_SERVER","PRODUCT_CLOUD_STORAGE_SERVER","PRODUCT_CLUSTER_SERVER","PRODUCT_CLUSTER_SERVER_V","PRODUCT_CONNECTED_CAR","PRODUCT_CORE","PRODUCT_CORE_ARM","PRODUCT_CORE_CONNECTED","PRODUCT_CORE_CONNECTED_COUNTRYSPECIFIC","PRODUCT_CORE_CONNECTED_N","PRODUCT_CORE_CONNECTED_SINGLELANGUAGE","PRODUCT_CORE_COUNTRYSPECIFIC","PRODUCT_CORE_N","PRODUCT_CORE_SINGLELANGUAGE","PRODUCT_DATACENTER_A_SERVER_CORE","PRODUCT_DATACENTER_EVALUATION_SERVER","PRODUCT_DATACENTER_EVALUATION_SERVER_CORE","PRODUCT_DATACENTER_NANO_SERVER","PRODUCT_DATACENTER_SERVER","PRODUCT_DATACENTER_SERVER_CORE","PRODUCT_DATACENTER_SERVER_CORE_V","PRODUCT_DATACENTER_SERVER_V","PRODUCT_DATACENTER_WS_SERVER_CORE","PRODUCT_EDUCATION","PRODUCT_EDUCATION_N","PRODUCT_EMBEDDED","PRODUCT_EMBEDDED_A","PRODUCT_EMBEDDED_AUTOMOTIVE","PRODUCT_EMBEDDED_E","PRODUCT_EMBEDDED_EVAL","PRODUCT_EMBEDDED_E_EVAL","PRODUCT_EMBEDDED_INDUSTRY","PRODUCT_EMBEDDED_INDUSTRY_A","PRODUCT_EMBEDDED_INDUSTRY_A_E","PRODUCT_EMBEDDED_INDUSTRY_E","PRODUCT_EMBEDDED_INDUSTRY_EVAL","PRODUCT_EMBEDDED_INDUSTRY_E_EVAL","PRODUCT_ENTERPRISE","PRODUCT_ENTERPRISEG","PRODUCT_ENTERPRISEGN","PRODUCT_ENTERPRISE_E","PRODUCT_ENTERPRISE_EVALUATION","PRODUCT_ENTERPRISE_N","PRODUCT_ENTERPRISE_N_EVALUATION","PRODUCT_ENTERPRISE_S","PRODUCT_ENTERPRISE_SERVER","PRODUCT_ENTERPRISE_SERVER_CORE","PRODUCT_ENTERPRISE_SERVER_CORE_V","PRODUCT_ENTERPRISE_SERVER_IA64","PRODUCT_ENTERPRISE_SERVER_V","PRODUCT_ENTERPRISE_SUBSCRIPTION","PRODUCT_ENTERPRISE_SUBSCRIPTION_N","PRODUCT_ENTERPRISE_S_EVALUATION","PRODUCT_ENTERPRISE_S_N","PRODUCT_ENTERPRISE_S_N_EVALUATION","PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL","PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC","PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT","PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC","PRODUCT_HOLOGRAPHIC","PRODUCT_HOME_BASIC","PRODUCT_HOME_BASIC_E","PRODUCT_HOME_BASIC_N","PRODUCT_HOME_PREMIUM","PRODUCT_HOME_PREMIUM_E","PRODUCT_HOME_PREMIUM_N","PRODUCT_HOME_PREMIUM_SERVER","PRODUCT_HOME_SERVER","PRODUCT_HYPERV","PRODUCT_INDUSTRY_HANDHELD","PRODUCT_IOTUAP","PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT","PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING","PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY","PRODUCT_MOBILE_CORE","PRODUCT_MULTIPOINT_PREMIUM_SERVER","PRODUCT_MULTIPOINT_STANDARD_SERVER","PRODUCT_NANO_SERVER","PRODUCT_PPI_PRO","PRODUCT_PROFESSIONAL","PRODUCT_PROFESSIONAL_E","PRODUCT_PROFESSIONAL_EMBEDDED","PRODUCT_PROFESSIONAL_N","PRODUCT_PROFESSIONAL_S","PRODUCT_PROFESSIONAL_STUDENT","PRODUCT_PROFESSIONAL_STUDENT_N","PRODUCT_PROFESSIONAL_S_N","PRODUCT_PROFESSIONAL_WMC","PRODUCT_PRO_CHINA","PRODUCT_PRO_FOR_EDUCATION","PRODUCT_PRO_FOR_EDUCATION_N","PRODUCT_PRO_SINGLE_LANGUAGE","PRODUCT_PRO_WORKSTATION","PRODUCT_PRO_WORKSTATION_N","PRODUCT_SB_SOLUTION_SERVER","PRODUCT_SB_SOLUTION_SERVER_EM","PRODUCT_SERVER_FOR_SB_SOLUTIONS","PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM","PRODUCT_SERVER_FOR_SMALLBUSINESS","PRODUCT_SERVER_FOR_SMALLBUSINESS_V","PRODUCT_SERVER_FOUNDATION","PRODUCT_SMALLBUSINESS_SERVER","PRODUCT_SMALLBUSINESS_SERVER_PREMIUM","PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE","PRODUCT_SOLUTION_EMBEDDEDSERVER","PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE","PRODUCT_STANDARD_A_SERVER_CORE","PRODUCT_STANDARD_EVALUATION_SERVER","PRODUCT_STANDARD_EVALUATION_SERVER_CORE","PRODUCT_STANDARD_NANO_SERVER","PRODUCT_STANDARD_SERVER","PRODUCT_STANDARD_SERVER_CORE","PRODUCT_STANDARD_SERVER_CORE_V","PRODUCT_STANDARD_SERVER_SOLUTIONS","PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE","PRODUCT_STANDARD_SERVER_V","PRODUCT_STANDARD_WS_SERVER_CORE","PRODUCT_STARTER","PRODUCT_STARTER_E","PRODUCT_STARTER_N","PRODUCT_STORAGE_ENTERPRISE_SERVER","PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE","PRODUCT_STORAGE_EXPRESS_SERVER","PRODUCT_STORAGE_EXPRESS_SERVER_CORE","PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER","PRODUCT_STORAGE_STANDARD_SERVER","PRODUCT_STORAGE_STANDARD_SERVER_CORE","PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER","PRODUCT_STORAGE_WORKGROUP_SERVER","PRODUCT_STORAGE_WORKGROUP_SERVER_CORE","PRODUCT_THINPC","PRODUCT_ULTIMATE","PRODUCT_ULTIMATE_E","PRODUCT_ULTIMATE_N","PRODUCT_UNDEFINED","PRODUCT_UNLICENSED","PRODUCT_UTILITY_VM","PRODUCT_WEB_SERVER","PRODUCT_WEB_SERVER_CORE","PROTECTED_DACL_SECURITY_INFORMATION","PROTECTED_SACL_SECURITY_INFORMATION","PRTL_BARRIER","PRTL_CONDITION_VARIABLE","PRTL_CRITICAL_SECTION","PRTL_CRITICAL_SECTION_DEBUG","PRTL_OSVERSIONINFOEXW","PRTL_OSVERSIONINFOW","PRTL_REFERENCE_COUNT","PRTL_REFERENCE_COUNT32","PRTL_RESOURCE_DEBUG","PRTL_RUN_ONCE","PRTL_SRWLOCK","PRTL_UMS_SCHEDULER_ENTRY_POINT","PRUNTIME_FUNCTION","PSCOPE_TABLE","PSCOPE_TABLE_AMD64","PSCOPE_TABLE_ARM64","PSCRUB_DATA_INPUT","PSCRUB_DATA_OUTPUT","PSCRUB_PARITY_EXTENT","PSCRUB_PARITY_EXTENT_DATA","PSECURE_MEMORY_CACHE_CALLBACK","PSECURITY_ATTRIBUTES_OPAQUE","PSECURITY_CAPABILITIES","PSECURITY_CONTEXT_TRACKING_MODE","PSECURITY_DESCRIPTOR","PSECURITY_DESCRIPTOR_CONTROL","PSECURITY_IMPERSONATION_LEVEL","PSECURITY_INFORMATION","PSECURITY_OBJECT_AI_PARAMS","PSECURITY_QUALITY_OF_SERVICE","PSERVERSILO_BASIC_INFORMATION","PSERVERSILO_STATE","PSET_POWER_SETTING_VALUE","PSE_ACCESS_REPLY","PSE_ACCESS_REQUEST","PSE_IMAGE_SIGNATURE_TYPE","PSE_IMPERSONATION_STATE","PSE_SECURITY_DESCRIPTOR","PSE_SID","PSE_SIGNING_LEVEL","PSE_TOKEN_USER","PSHARED_VIRTUAL_DISK_SUPPORT","PSHORT","PSID","PSID_AND_ATTRIBUTES","PSID_AND_ATTRIBUTES_ARRAY","PSID_AND_ATTRIBUTES_HASH","PSID_HASH_ENTRY","PSID_IDENTIFIER_AUTHORITY","PSID_NAME_USE","PSILOOBJECT_BASIC_INFORMATION","PSINGLE_LIST_ENTRY","PSLIST_ENTRY","PSLIST_HEADER","PSTR","PSUPPORTED_OS_INFO","PSYSTEM_ACCESS_FILTER_ACE","PSYSTEM_ALARM_ACE","PSYSTEM_ALARM_CALLBACK_ACE","PSYSTEM_ALARM_CALLBACK_OBJECT_ACE","PSYSTEM_ALARM_OBJECT_ACE","PSYSTEM_AUDIT_ACE","PSYSTEM_AUDIT_CALLBACK_ACE","PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE","PSYSTEM_AUDIT_OBJECT_ACE","PSYSTEM_BATTERY_STATE","PSYSTEM_CPU_SET_INFORMATION","PSYSTEM_LOGICAL_PROCESSOR_INFORMATION","PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX","PSYSTEM_MANDATORY_LABEL_ACE","PSYSTEM_POWER_CAPABILITIES","PSYSTEM_POWER_LEVEL","PSYSTEM_POWER_POLICY","PSYSTEM_POWER_STATE","PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION","PSYSTEM_PROCESS_TRUST_LABEL_ACE","PSYSTEM_RESOURCE_ATTRIBUTE_ACE","PSYSTEM_SCOPED_POLICY_ID_ACE","PStateContext","PStateContext","PStateHandler","PStateHandler","PTAPE_CREATE_PARTITION","PTAPE_ERASE","PTAPE_GET_DRIVE_PARAMETERS","PTAPE_GET_MEDIA_PARAMETERS","PTAPE_GET_POSITION","PTAPE_PREPARE","PTAPE_SET_DRIVE_PARAMETERS","PTAPE_SET_MEDIA_PARAMETERS","PTAPE_SET_POSITION","PTAPE_WMI_OPERATIONS","PTAPE_WRITE_MARKS","PTERMINATION_HANDLER","PTOKEN_ACCESS_INFORMATION","PTOKEN_APPCONTAINER_INFORMATION","PTOKEN_AUDIT_POLICY","PTOKEN_BNO_ISOLATION_INFORMATION","PTOKEN_CONTROL","PTOKEN_DEFAULT_DACL","PTOKEN_DEVICE_CLAIMS","PTOKEN_ELEVATION","PTOKEN_ELEVATION_TYPE","PTOKEN_GROUPS","PTOKEN_GROUPS_AND_PRIVILEGES","PTOKEN_INFORMATION_CLASS","PTOKEN_LINKED_TOKEN","PTOKEN_MANDATORY_LABEL","PTOKEN_MANDATORY_POLICY","PTOKEN_ORIGIN","PTOKEN_OWNER","PTOKEN_PRIMARY_GROUP","PTOKEN_PRIVILEGES","PTOKEN_SID_INFORMATION","PTOKEN_SOURCE","PTOKEN_STATISTICS","PTOKEN_TYPE","PTOKEN_USER","PTOKEN_USER_CLAIMS","PTP_CALLBACK_ENVIRON","PTP_CALLBACK_INSTANCE","PTP_CLEANUP_GROUP","PTP_CLEANUP_GROUP_CANCEL_CALLBACK","PTP_IO","PTP_POOL","PTP_POOL_STACK_INFORMATION","PTP_SIMPLE_CALLBACK","PTP_TIMER","PTP_TIMER_CALLBACK","PTP_VERSION","PTP_WAIT","PTP_WAIT_CALLBACK","PTP_WORK","PTP_WORK_CALLBACK","PTRANSACTIONMANAGER_BASIC_INFORMATION","PTRANSACTIONMANAGER_LOGPATH_INFORMATION","PTRANSACTIONMANAGER_LOG_INFORMATION","PTRANSACTIONMANAGER_OLDEST_INFORMATION","PTRANSACTIONMANAGER_RECOVERY_INFORMATION","PTRANSACTION_BASIC_INFORMATION","PTRANSACTION_BIND_INFORMATION","PTRANSACTION_ENLISTMENTS_INFORMATION","PTRANSACTION_ENLISTMENT_PAIR","PTRANSACTION_LIST_ENTRY","PTRANSACTION_LIST_INFORMATION","PTRANSACTION_PROPERTIES_INFORMATION","PTRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION","PUCSCHAR","PUCSSTR","PULARGE_INTEGER","PULONGLONG","PUMS_CREATE_THREAD_ATTRIBUTES","PUNWIND_HISTORY_TABLE","PUNWIND_HISTORY_TABLE_ENTRY","PUNZWCH","PUSER_ACTIVITY_PRESENCE","PUUCSCHAR","PUUCSSTR","PUWSTR","PUZZWSTR","PVECTORED_EXCEPTION_HANDLER","PVOID","PVOID64","PWCH","PWCHAR","PWOW64_ARCHITECTURE_INFORMATION","PWOW64_CONTEXT","PWOW64_DESCRIPTOR_TABLE_ENTRY","PWOW64_FLOATING_SAVE_AREA","PWOW64_LDT_ENTRY","PWSTR","PXMM_SAVE_AREA32","PXSAVE_AREA","PXSAVE_AREA_HEADER","PXSAVE_FORMAT","PXSTATE_CONFIGURATION","PXSTATE_CONTEXT","PXSTATE_FEATURE","PZPCSTR","PZPCWSTR","PZPSTR","PZPWSTR","PZZSTR","PZZWSTR","PackageSid","PagedPoolLimit","PagedPoolLimit","PagefileLimit","PagefileLimit","ParityExtentDataOffset","ParityExtents","Parked","Partition","Partition","PartitionCount","PatchTable","PdcInvocation","PeakJobMemoryUsed","PeakProcessMemoryUsed","PerJobUserTime","PerJobUserTime","PerJobUserTimeLimit","PerJobUserTimeLimit","PerJobUserTimeLimit","PerJobUserTimeLimit","PerJobUserTimeLimit","PerProcessUserTimeLimit","PerUserPolicy","PercentFrequency","PercentFrequency","Permanent","Persistent","PhysicalAddress","PhysicalAddress_mut","PhysicalMemoryPercent","PhysicalPowerButtonPress","PlatformIdleStates","PlatformIdleVeto","PlatformInformation","PlatformRole","PlatformRoleAppliancePC","PlatformRoleDesktop","PlatformRoleEnterpriseServer","PlatformRoleMaximum","PlatformRoleMobile","PlatformRolePerformanceServer","PlatformRoleSOHOServer","PlatformRoleSlate","PlatformRoleUnspecified","PlatformRoleWorkstation","PlmPowerRequestCreate","PoAc","PoConditionMaximum","PoDc","PoHot","PointerToLinenumber","PointerToLinenumbers","PointerToNextFunction","PointerToRawData","PointerToRawData","PointerToRelocations","PointerToSymbolTable","PointerToSymbolTable","Policy","Policy","Policy","PolicyCount","PolicyCount","PolicyType","PolicyType","Pool","PostTimeMs","Power","Power","PowerActionDisplayOff","PowerActionHibernate","PowerActionNone","PowerActionReserved","PowerActionShutdown","PowerActionShutdownOff","PowerActionShutdownReset","PowerActionSleep","PowerActionWarmEject","PowerButton","PowerButtonPresent","PowerCondition","PowerDeviceD0","PowerDeviceD1","PowerDeviceD2","PowerDeviceD3","PowerDeviceMaximum","PowerDeviceUnspecified","PowerInformationInternal","PowerInformationLevelMaximum","PowerInformationLevelUnused0","PowerMonitorDim","PowerMonitorOff","PowerMonitorOn","PowerPolicy","PowerRequestAction","PowerRequestActionInternal","PowerRequestAwayModeRequired","PowerRequestCreate","PowerRequestDisplayRequired","PowerRequestExecutionRequired","PowerRequestSystemRequired","PowerSettingNotificationName","PowerShutdownNotification","PowerSystemHibernate","PowerSystemMaximum","PowerSystemShutdown","PowerSystemSleeping1","PowerSystemSleeping2","PowerSystemSleeping3","PowerSystemUnspecified","PowerSystemWorking","PowerUserInactive","PowerUserInvalid","PowerUserMaximum","PowerUserNotPresent","PowerUserPresent","PreferSystem32Images","Pres","Pres","PreviouslyGrantedAccess","PrimaryGroup","PrincipalSelfSid","PriorityClass","Private","Privilege","PrivilegeCount","PrivilegeCount","PrivilegeCount","PrivilegeCount","PrivilegeLength","Privileges","Privileges","Privileges","Privileges","PrivilegesToDelete","Process","ProcessASLRPolicy","ProcessAffinityMask","ProcessAffinityMask","ProcessControlFlowGuardPolicy","ProcessDEPPolicy","ProcessDynamicCodePolicy","ProcessExtensionPointDisablePolicy","ProcessFontDisablePolicy","ProcessHeapFlags","ProcessHeapFlags","ProcessIdList","ProcessImageLoadPolicy","ProcessLocksList","ProcessMemoryLimit","ProcessMitigationOptionsMask","ProcessSignaturePolicy","ProcessStrictHandleCheckPolicy","ProcessSystemCallDisablePolicy","Processor","Processor","ProcessorCap","ProcessorCore","ProcessorCore_mut","ProcessorIdleDomains","ProcessorIdleStates","ProcessorIdleStatesHv","ProcessorIdleVeto","ProcessorInformation","ProcessorInformationEx","ProcessorLoad","ProcessorMask","ProcessorMaxThrottle","ProcessorMinThrottle","ProcessorPerfCapHv","ProcessorPerfStates","ProcessorPerfStatesHv","ProcessorPowerPolicyAc","ProcessorPowerPolicyCurrent","ProcessorPowerPolicyDc","ProcessorSetIdle","ProcessorStateHandler","ProcessorStateHandler2","ProcessorThrottle","Processor_mut","Processors","Processors","Processors","Processors","ProhibitDynamicCode","PrologEndAddress","PrologEndAddress","PrologLen","PrologueByteCount","PromoteLimit","PromotePercent","PromotePercent","PromotePercent","Protect","Protect","Protect","Ptr","Ptr","Ptr","QUOTA_LIMITS","QUOTA_LIMITS_EX","QUOTA_LIMITS_HARDWS_MAX_DISABLE","QUOTA_LIMITS_HARDWS_MAX_ENABLE","QUOTA_LIMITS_HARDWS_MIN_DISABLE","QUOTA_LIMITS_HARDWS_MIN_ENABLE","QUOTA_LIMITS_USE_DEFAULT_LIMITS","QueryPotentialDripsConstraint","R","R10","R10","R11","R11","R12","R12","R13","R13","R14","R14","R15","R15","R8","R8","R9","R9","RATE_QUOTA_LIMIT","READ_CONTROL","READ_THREAD_PROFILING_FLAG_DISPATCHING","READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS","REG_APP_HIVE","REG_APP_HIVE_OPEN_READ_ONLY","REG_BINARY","REG_BOOT_HIVE","REG_CREATED_NEW_KEY","REG_DWORD","REG_DWORD_BIG_ENDIAN","REG_DWORD_LITTLE_ENDIAN","REG_EXPAND_SZ","REG_FLUSH_HIVE_FILE_GROWTH","REG_FORCE_RESTORE","REG_FORCE_UNLOAD","REG_FULL_RESOURCE_DESCRIPTOR","REG_HIVE_EXACT_FILE_GROWTH","REG_HIVE_NO_RM","REG_HIVE_SINGLE_LOG","REG_IMMUTABLE","REG_LATEST_FORMAT","REG_LEGAL_CHANGE_FILTER","REG_LEGAL_OPTION","REG_LINK","REG_LOAD_HIVE_OPEN_HANDLE","REG_MULTI_SZ","REG_NONE","REG_NOTIFY_CHANGE_ATTRIBUTES","REG_NOTIFY_CHANGE_LAST_SET","REG_NOTIFY_CHANGE_NAME","REG_NOTIFY_CHANGE_SECURITY","REG_NOTIFY_THREAD_AGNOSTIC","REG_NO_COMPRESSION","REG_NO_LAZY_FLUSH","REG_OPENED_EXISTING_KEY","REG_OPEN_LEGAL_OPTION","REG_OPEN_READ_ONLY","REG_OPTION_BACKUP_RESTORE","REG_OPTION_CREATE_LINK","REG_OPTION_DONT_VIRTUALIZE","REG_OPTION_NON_VOLATILE","REG_OPTION_OPEN_LINK","REG_OPTION_RESERVED","REG_OPTION_VOLATILE","REG_PROCESS_PRIVATE","REG_QWORD","REG_QWORD_LITTLE_ENDIAN","REG_REFRESH_HIVE","REG_RESOURCE_LIST","REG_RESOURCE_REQUIREMENTS_LIST","REG_STANDARD_FORMAT","REG_START_JOURNAL","REG_SZ","REG_UNLOAD_LEGAL_FLAGS","REG_WHOLE_HIVE_VOLATILE","REPARSE_GUID_DATA_BUFFER","REPARSE_GUID_DATA_BUFFER_GenericReparseBuffer","RESOURCEMANAGER_ALL_ACCESS","RESOURCEMANAGER_BASIC_INFORMATION","RESOURCEMANAGER_COMPLETE_PROPAGATION","RESOURCEMANAGER_COMPLETION_INFORMATION","RESOURCEMANAGER_ENLIST","RESOURCEMANAGER_GENERIC_EXECUTE","RESOURCEMANAGER_GENERIC_READ","RESOURCEMANAGER_GENERIC_WRITE","RESOURCEMANAGER_GET_NOTIFICATION","RESOURCEMANAGER_INFORMATION_CLASS","RESOURCEMANAGER_QUERY_INFORMATION","RESOURCEMANAGER_RECOVER","RESOURCEMANAGER_REGISTER_PROTOCOL","RESOURCEMANAGER_SET_INFORMATION","RESUME_PERFORMANCE","RTL_BARRIER","RTL_CONDITION_VARIABLE","RTL_CONDITION_VARIABLE_INIT","RTL_CONDITION_VARIABLE_LOCKMODE_SHARED","RTL_CRITICAL_SECTION","RTL_CRITICAL_SECTION_ALL_FLAG_BITS","RTL_CRITICAL_SECTION_DEBUG","RTL_CRITICAL_SECTION_DEBUG_FLAG_STATIC_INIT","RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN","RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO","RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO","RTL_CRITICAL_SECTION_FLAG_RESERVED","RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE","RTL_CRITICAL_SECTION_FLAG_STATIC_INIT","RTL_OSVERSIONINFOEXW","RTL_OSVERSIONINFOW","RTL_REFERENCE_COUNT","RTL_REFERENCE_COUNT32","RTL_RESOURCE_DEBUG","RTL_RUN_ONCE","RTL_RUN_ONCE_ASYNC","RTL_RUN_ONCE_CHECK_ONLY","RTL_RUN_ONCE_INIT","RTL_RUN_ONCE_INIT_FAILED","RTL_SRWLOCK","RTL_SRWLOCK_INIT","RTL_UMS_SCHEDULER_REASON","RTL_UMS_THREAD_INFO_CLASS","RTL_UMS_VERSION","RUNTIME_FUNCTION","RUNTIME_FUNCTION_INDIRECT","RaceDll","RaiseExceptionOnInvalidHandleReference","Rate","RateControlTolerance","RateControlTolerance","RateControlTolerance","RateControlTolerance","RateControlToleranceInterval","RateControlToleranceInterval","RateControlToleranceInterval_mut","RateControlToleranceLimit","RateControlToleranceLimit","RateControlToleranceLimit_mut","RateControlTolerance_mut","RateControlTolerance_mut","RateData","RatePercent","Rax","Rax","Rbp","Rbp","Rbx","Rbx","Rcx","Rcx","Rdi","Rdi","Rdx","Rdx","ReadOperationCount","ReadStats","ReadTransferCount","RealTime","RecognizerType","RecordNumber","RecursionCount","ReducedLatencySleep","Reg","RegF","RegI","Region","RegionSize","RegionSize","RegionSize","RegisterArea","RegisterSpmPowerSettings","RelationAll","RelationCache","RelationGroup","RelationNumaNode","RelationProcessorCore","RelationProcessorPackage","Relationship","Relationship","RelocCount","RelocCount_mut","Remaining","RemainingCapacity","ReparseDataLength","ReparseGuid","ReparseTag","ReplacesCorHdrNumericDefines","ReportSetmarks","ReportSetmarks","RequestReason","ReservationBandwidth","ReservationBandwidth","ReservationIops","ReservationIops","ReservationIops","ReservationTimePercent","ReservationTimePercent","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved","Reserved0","Reserved0","Reserved0","Reserved1","Reserved1","Reserved1","Reserved1","Reserved1","Reserved1","Reserved1","Reserved1","Reserved1","Reserved1","Reserved2","Reserved2","Reserved2","Reserved2","Reserved2","Reserved2","Reserved2","Reserved2","Reserved2","Reserved2","Reserved3","Reserved3","Reserved3","Reserved3","Reserved3","Reserved3","Reserved4","Reserved4","Reserved4","Reserved5","ReservedAttributes","ReservedFlags","ReservedFlags","ReservedFlags","ReservedFlags","ReservedFlags","ReservedFlags","ReservedFlags","ReservedFlags","ReservedFlags","ReservedFlags","ReservedFlags","ReservedFlags","ReservedFlags","ReservedFlags","ReservedFlags","ReservedZero0","Reserved_0","Reserved_0","Reserved_mut","ResetCount","ResetCount","ResourceManagerBasicInformation","ResourceManagerCompletionInformation","ResourceManagerId","ResourceManagerId","ResourceManagerId","Resources","RestrictedSidCount","RestrictedSidHash","RestrictedSidLength","RestrictedSids","RestrictedSids","ResultListCount","ResumeCompleteTimestamp","ResumeContext","ResumeContext","ResumeContextLength","Ret","RetryCount","Revision","Revision","Revision","Revision","Revision","Revision","Revision","Rip","Rsi","Rsi","Rsp","Rsp","RtcWake","RtlAddFunctionTable","RtlAddGrowableFunctionTable","RtlCaptureContext","RtlCaptureStackBackTrace","RtlCompareMemory","RtlConvertDeviceFamilyInfoToString","RtlCopyMemory","RtlCrc32","RtlCrc64","RtlDeleteFunctionTable","RtlDeleteGrowableFunctionTable","RtlFillMemory","RtlFirstEntrySList","RtlGetDeviceFamilyInfoEnum","RtlGetProductInfo","RtlGrowFunctionTable","RtlInitializeSListHead","RtlInstallFunctionTableCallback","RtlInterlockedFlushSList","RtlInterlockedPopEntrySList","RtlInterlockedPushEntrySList","RtlInterlockedPushListSListEx","RtlLookupFunctionEntry","RtlMoveMemory","RtlOsDeploymentState","RtlPcToFileHeader","RtlQueryDepthSList","RtlRestoreContext","RtlSwitchedVVI","RtlUnwind","RtlUnwindEx","RtlVirtualUnwind","RtlZeroMemory","RunLevel","RunlevelInformationInActivationContext","RvaBased","RvaToFirstByteOfCode","RvaToFirstByteOfData","RvaToLastByteOfCode","RvaToLastByteOfData","SACL_SECURITY_INFORMATION","SANDBOX_INERT","SCOPE_SECURITY_INFORMATION","SCOPE_TABLE","SCOPE_TABLE_AMD64","SCOPE_TABLE_AMD64_ScopeRecord","SCOPE_TABLE_ARM64","SCOPE_TABLE_ARM64_ScopeRecord","SCRUB_DATA_INPUT","SCRUB_DATA_INPUT_FLAG_RESUME","SCRUB_DATA_INPUT_FLAG_SKIP_IN_SYNC","SCRUB_DATA_INPUT_FLAG_SKIP_NON_INTEGRITY_DATA","SCRUB_DATA_OUTPUT","SCRUB_DATA_OUTPUT_FLAG_INCOMPLETE","SCRUB_DATA_OUTPUT_FLAG_NON_USER_DATA_RANGE","SCRUB_DATA_OUTPUT_FLAG_PARITY_EXTENT_DATA_RETURNED","SCRUB_DATA_OUTPUT_FLAG_RESUME_CONTEXT_LENGTH_SPECIFIED","SCRUB_PARITY_EXTENT","SCRUB_PARITY_EXTENT_DATA","SECTION_ALL_ACCESS","SECTION_EXTEND_SIZE","SECTION_MAP_EXECUTE","SECTION_MAP_EXECUTE_EXPLICIT","SECTION_MAP_READ","SECTION_MAP_WRITE","SECTION_QUERY","SECURITY_ANONYMOUS_LOGON_RID","SECURITY_APPPOOL_ID_BASE_RID","SECURITY_APPPOOL_ID_RID_COUNT","SECURITY_APP_PACKAGE_AUTHORITY","SECURITY_APP_PACKAGE_BASE_RID","SECURITY_APP_PACKAGE_RID_COUNT","SECURITY_AUTHENTICATED_USER_RID","SECURITY_AUTHENTICATION_AUTHORITY","SECURITY_AUTHENTICATION_AUTHORITY_ASSERTED_RID","SECURITY_AUTHENTICATION_AUTHORITY_RID_COUNT","SECURITY_AUTHENTICATION_FRESH_KEY_AUTH_RID","SECURITY_AUTHENTICATION_KEY_PROPERTY_ATTESTATION_RID","SECURITY_AUTHENTICATION_KEY_PROPERTY_MFA_RID","SECURITY_AUTHENTICATION_KEY_TRUST_RID","SECURITY_AUTHENTICATION_SERVICE_ASSERTED_RID","SECURITY_BATCH_RID","SECURITY_BUILTIN_APP_PACKAGE_RID_COUNT","SECURITY_BUILTIN_CAPABILITY_RID_COUNT","SECURITY_BUILTIN_DOMAIN_RID","SECURITY_BUILTIN_PACKAGE_ANY_PACKAGE","SECURITY_BUILTIN_PACKAGE_ANY_RESTRICTED_PACKAGE","SECURITY_CAPABILITIES","SECURITY_CAPABILITY_APPOINTMENTS","SECURITY_CAPABILITY_APP_RID","SECURITY_CAPABILITY_BASE_RID","SECURITY_CAPABILITY_CONTACTS","SECURITY_CAPABILITY_DOCUMENTS_LIBRARY","SECURITY_CAPABILITY_ENTERPRISE_AUTHENTICATION","SECURITY_CAPABILITY_INTERNET_CLIENT","SECURITY_CAPABILITY_INTERNET_CLIENT_SERVER","SECURITY_CAPABILITY_INTERNET_EXPLORER","SECURITY_CAPABILITY_MUSIC_LIBRARY","SECURITY_CAPABILITY_PICTURES_LIBRARY","SECURITY_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER","SECURITY_CAPABILITY_REMOVABLE_STORAGE","SECURITY_CAPABILITY_RID_COUNT","SECURITY_CAPABILITY_SHARED_USER_CERTIFICATES","SECURITY_CAPABILITY_VIDEOS_LIBRARY","SECURITY_CCG_ID_BASE_RID","SECURITY_CHILD_PACKAGE_RID_COUNT","SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID","SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT","SECURITY_COM_ID_BASE_RID","SECURITY_CONTEXT_TRACKING_MODE","SECURITY_CREATOR_GROUP_RID","SECURITY_CREATOR_GROUP_SERVER_RID","SECURITY_CREATOR_OWNER_RID","SECURITY_CREATOR_OWNER_RIGHTS_RID","SECURITY_CREATOR_OWNER_SERVER_RID","SECURITY_CREATOR_SID_AUTHORITY","SECURITY_CRED_TYPE_BASE_RID","SECURITY_CRED_TYPE_RID_COUNT","SECURITY_CRED_TYPE_THIS_ORG_CERT_RID","SECURITY_DASHOST_ID_BASE_RID","SECURITY_DASHOST_ID_RID_COUNT","SECURITY_DESCRIPTOR","SECURITY_DESCRIPTOR_CONTROL","SECURITY_DESCRIPTOR_MIN_LENGTH","SECURITY_DESCRIPTOR_RELATIVE","SECURITY_DESCRIPTOR_REVISION","SECURITY_DESCRIPTOR_REVISION1","SECURITY_DIALUP_RID","SECURITY_DYNAMIC_TRACKING","SECURITY_ENTERPRISE_CONTROLLERS_RID","SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID","SECURITY_IMPERSONATION_LEVEL","SECURITY_INFORMATION","SECURITY_INSTALLER_CAPABILITY_RID_COUNT","SECURITY_INSTALLER_GROUP_CAPABILITY_BASE","SECURITY_INSTALLER_GROUP_CAPABILITY_RID_COUNT","SECURITY_INTERACTIVE_RID","SECURITY_IUSER_RID","SECURITY_LOCAL_ACCOUNT_AND_ADMIN_RID","SECURITY_LOCAL_ACCOUNT_RID","SECURITY_LOCAL_LOGON_RID","SECURITY_LOCAL_RID","SECURITY_LOCAL_SERVICE_RID","SECURITY_LOCAL_SID_AUTHORITY","SECURITY_LOCAL_SYSTEM_RID","SECURITY_LOGON_IDS_RID","SECURITY_LOGON_IDS_RID_COUNT","SECURITY_MANDATORY_HIGH_RID","SECURITY_MANDATORY_LABEL_AUTHORITY","SECURITY_MANDATORY_LOW_RID","SECURITY_MANDATORY_MAXIMUM_USER_RID","SECURITY_MANDATORY_MEDIUM_PLUS_RID","SECURITY_MANDATORY_MEDIUM_RID","SECURITY_MANDATORY_SYSTEM_RID","SECURITY_MANDATORY_UNTRUSTED_RID","SECURITY_MAX_ALWAYS_FILTERED","SECURITY_MAX_BASE_RID","SECURITY_MAX_IMPERSONATION_LEVEL","SECURITY_MAX_SID_SIZE","SECURITY_MAX_SID_STRING_CHARACTERS","SECURITY_MIN_BASE_RID","SECURITY_MIN_IMPERSONATION_LEVEL","SECURITY_MIN_NEVER_FILTERED","SECURITY_NETWORK_RID","SECURITY_NETWORK_SERVICE_RID","SECURITY_NFS_ID_BASE_RID","SECURITY_NON_UNIQUE_AUTHORITY","SECURITY_NT_AUTHORITY","SECURITY_NT_NON_UNIQUE","SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT","SECURITY_NULL_RID","SECURITY_NULL_SID_AUTHORITY","SECURITY_OBJECT_AI_PARAMS","SECURITY_OTHER_ORGANIZATION_RID","SECURITY_PACKAGE_BASE_RID","SECURITY_PACKAGE_DIGEST_RID","SECURITY_PACKAGE_NTLM_RID","SECURITY_PACKAGE_RID_COUNT","SECURITY_PACKAGE_SCHANNEL_RID","SECURITY_PARENT_PACKAGE_RID_COUNT","SECURITY_PRINCIPAL_SELF_RID","SECURITY_PROCESS_PROTECTION_LEVEL_APP_RID","SECURITY_PROCESS_PROTECTION_LEVEL_NONE_RID","SECURITY_PROCESS_PROTECTION_LEVEL_WINDOWS_RID","SECURITY_PROCESS_PROTECTION_LEVEL_WINTCB_RID","SECURITY_PROCESS_PROTECTION_TYPE_FULL_RID","SECURITY_PROCESS_PROTECTION_TYPE_LITE_RID","SECURITY_PROCESS_PROTECTION_TYPE_NONE_RID","SECURITY_PROCESS_TRUST_AUTHORITY","SECURITY_PROCESS_TRUST_AUTHORITY_RID_COUNT","SECURITY_PROXY_RID","SECURITY_QUALITY_OF_SERVICE","SECURITY_RDV_GFX_BASE_RID","SECURITY_REMOTE_LOGON_RID","SECURITY_RESERVED_ID_BASE_RID","SECURITY_RESOURCE_MANAGER_AUTHORITY","SECURITY_RESTRICTED_CODE_RID","SECURITY_SCOPED_POLICY_ID_AUTHORITY","SECURITY_SERVER_LOGON_RID","SECURITY_SERVICE_ID_BASE_RID","SECURITY_SERVICE_ID_RID_COUNT","SECURITY_SERVICE_RID","SECURITY_STATIC_TRACKING","SECURITY_TASK_ID_BASE_RID","SECURITY_TERMINAL_SERVER_RID","SECURITY_THIS_ORGANIZATION_RID","SECURITY_TRUSTED_INSTALLER_RID1","SECURITY_TRUSTED_INSTALLER_RID2","SECURITY_TRUSTED_INSTALLER_RID3","SECURITY_TRUSTED_INSTALLER_RID4","SECURITY_TRUSTED_INSTALLER_RID5","SECURITY_UMFD_BASE_RID","SECURITY_USERMANAGER_ID_BASE_RID","SECURITY_USERMANAGER_ID_RID_COUNT","SECURITY_USERMODEDRIVERHOST_ID_BASE_RID","SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT","SECURITY_VIRTUALACCOUNT_ID_RID_COUNT","SECURITY_VIRTUALSERVER_ID_BASE_RID","SECURITY_VIRTUALSERVER_ID_RID_COUNT","SECURITY_WINDOWSMOBILE_ID_BASE_RID","SECURITY_WINDOW_MANAGER_BASE_RID","SECURITY_WINRM_ID_BASE_RID","SECURITY_WINRM_ID_RID_COUNT","SECURITY_WMIHOST_ID_BASE_RID","SECURITY_WMIHOST_ID_RID_COUNT","SECURITY_WORLD_RID","SECURITY_WORLD_SID_AUTHORITY","SECURITY_WRITE_RESTRICTED_CODE_RID","SEC_64K_PAGES","SEC_COMMIT","SEC_FILE","SEC_IMAGE","SEC_IMAGE_NO_EXECUTE","SEC_LARGE_PAGES","SEC_NOCACHE","SEC_PROTECTED_IMAGE","SEC_RESERVE","SEC_WRITECOMBINE","SEF_AI_USE_EXTRA_PARAMS","SEF_AVOID_OWNER_CHECK","SEF_AVOID_OWNER_RESTRICTION","SEF_AVOID_PRIVILEGE_CHECK","SEF_DACL_AUTO_INHERIT","SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT","SEF_DEFAULT_GROUP_FROM_PARENT","SEF_DEFAULT_OWNER_FROM_PARENT","SEF_MACL_NO_EXECUTE_UP","SEF_MACL_NO_READ_UP","SEF_MACL_NO_WRITE_UP","SEF_MACL_VALID_FLAGS","SEF_SACL_AUTO_INHERIT","SEHandlerCount","SEHandlerCount","SEHandlerTable","SEHandlerTable","SEMAPHORE_ALL_ACCESS","SEMAPHORE_MODIFY_STATE","SERVERSILO_BASIC_INFORMATION","SERVERSILO_INITING","SERVERSILO_SHUTTING_DOWN","SERVERSILO_STARTED","SERVERSILO_STATE","SERVERSILO_TERMINATED","SERVERSILO_TERMINATING","SERVICE_ADAPTER","SERVICE_AUTO_START","SERVICE_BOOT_START","SERVICE_DEMAND_START","SERVICE_DISABLED","SERVICE_DRIVER","SERVICE_ERROR_CRITICAL","SERVICE_ERROR_IGNORE","SERVICE_ERROR_NORMAL","SERVICE_ERROR_SEVERE","SERVICE_ERROR_TYPE","SERVICE_FILE_SYSTEM_DRIVER","SERVICE_INTERACTIVE_PROCESS","SERVICE_KERNEL_DRIVER","SERVICE_LOAD_TYPE","SERVICE_NODE_TYPE","SERVICE_PKG_SERVICE","SERVICE_RECOGNIZER_DRIVER","SERVICE_SYSTEM_START","SERVICE_TYPE_ALL","SERVICE_USERSERVICE_INSTANCE","SERVICE_USER_OWN_PROCESS","SERVICE_USER_SERVICE","SERVICE_USER_SHARE_PROCESS","SERVICE_WIN32","SERVICE_WIN32_OWN_PROCESS","SERVICE_WIN32_SHARE_PROCESS","SESSION_ALL_ACCESS","SESSION_MODIFY_ACCESS","SESSION_QUERY_ACCESS","SET_POWER_SETTING_VALUE","SE_ACCESS_REPLY","SE_ACCESS_REQUEST","SE_ACTIVATE_AS_USER_CAPABILITY","SE_ASSIGNPRIMARYTOKEN_NAME","SE_AUDIT_NAME","SE_BACKUP_NAME","SE_CHANGE_NOTIFY_NAME","SE_CONSTRAINED_IMPERSONATION_CAPABILITY","SE_CREATE_GLOBAL_NAME","SE_CREATE_PAGEFILE_NAME","SE_CREATE_PERMANENT_NAME","SE_CREATE_SYMBOLIC_LINK_NAME","SE_CREATE_TOKEN_NAME","SE_DACL_AUTO_INHERITED","SE_DACL_AUTO_INHERIT_REQ","SE_DACL_DEFAULTED","SE_DACL_PRESENT","SE_DACL_PROTECTED","SE_DEBUG_NAME","SE_DELEGATE_SESSION_USER_IMPERSONATE_NAME","SE_DEVELOPMENT_MODE_NETWORK_CAPABILITY","SE_ENABLE_DELEGATION_NAME","SE_GROUP_DEFAULTED","SE_GROUP_ENABLED","SE_GROUP_ENABLED_BY_DEFAULT","SE_GROUP_INTEGRITY","SE_GROUP_INTEGRITY_ENABLED","SE_GROUP_LOGON_ID","SE_GROUP_MANDATORY","SE_GROUP_OWNER","SE_GROUP_RESOURCE","SE_GROUP_USE_FOR_DENY_ONLY","SE_GROUP_VALID_ATTRIBUTES","SE_IMAGE_SIGNATURE_TYPE","SE_IMPERSONATE_NAME","SE_IMPERSONATION_STATE","SE_INCREASE_QUOTA_NAME","SE_INC_BASE_PRIORITY_NAME","SE_INC_WORKING_SET_NAME","SE_LEARNING_MODE_DATA_TYPE","SE_LOAD_DRIVER_NAME","SE_LOCK_MEMORY_NAME","SE_MACHINE_ACCOUNT_NAME","SE_MANAGE_VOLUME_NAME","SE_MUMA_CAPABILITY","SE_OWNER_DEFAULTED","SE_PRIVILEGE_ENABLED","SE_PRIVILEGE_ENABLED_BY_DEFAULT","SE_PRIVILEGE_REMOVED","SE_PRIVILEGE_USED_FOR_ACCESS","SE_PRIVILEGE_VALID_ATTRIBUTES","SE_PROF_SINGLE_PROCESS_NAME","SE_RELABEL_NAME","SE_REMOTE_SHUTDOWN_NAME","SE_RESTORE_NAME","SE_RM_CONTROL_VALID","SE_SACL_AUTO_INHERITED","SE_SACL_AUTO_INHERIT_REQ","SE_SACL_DEFAULTED","SE_SACL_PRESENT","SE_SACL_PROTECTED","SE_SECURITY_DESCRIPTOR","SE_SECURITY_DESCRIPTOR_FLAG_NO_ACCESS_FILTER_ACE","SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE","SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE","SE_SECURITY_DESCRIPTOR_VALID_FLAGS","SE_SECURITY_NAME","SE_SELF_RELATIVE","SE_SESSION_IMPERSONATION_CAPABILITY","SE_SHUTDOWN_NAME","SE_SID","SE_SIGNING_LEVEL","SE_SIGNING_LEVEL_ANTIMALWARE","SE_SIGNING_LEVEL_AUTHENTICODE","SE_SIGNING_LEVEL_CUSTOM_1","SE_SIGNING_LEVEL_CUSTOM_2","SE_SIGNING_LEVEL_CUSTOM_3","SE_SIGNING_LEVEL_CUSTOM_4","SE_SIGNING_LEVEL_CUSTOM_5","SE_SIGNING_LEVEL_CUSTOM_6","SE_SIGNING_LEVEL_CUSTOM_7","SE_SIGNING_LEVEL_DYNAMIC_CODEGEN","SE_SIGNING_LEVEL_ENTERPRISE","SE_SIGNING_LEVEL_MICROSOFT","SE_SIGNING_LEVEL_STORE","SE_SIGNING_LEVEL_UNCHECKED","SE_SIGNING_LEVEL_UNSIGNED","SE_SIGNING_LEVEL_WINDOWS","SE_SIGNING_LEVEL_WINDOWS_TCB","SE_SYNC_AGENT_NAME","SE_SYSTEMTIME_NAME","SE_SYSTEM_ENVIRONMENT_NAME","SE_SYSTEM_PROFILE_NAME","SE_TAKE_OWNERSHIP_NAME","SE_TCB_NAME","SE_TIME_ZONE_NAME","SE_TOKEN_USER","SE_TOKEN_USER_u1","SE_TOKEN_USER_u2","SE_TRUSTED_CREDMAN_ACCESS_NAME","SE_UNDOCK_NAME","SE_UNSOLICITED_INPUT_NAME","SHA1","SHA256","SHARED_VIRTUAL_DISK_SUPPORT","SHORT","SID","SID_AND_ATTRIBUTES","SID_AND_ATTRIBUTES_ARRAY","SID_AND_ATTRIBUTES_HASH","SID_HASH_ENTRY","SID_HASH_SIZE","SID_IDENTIFIER_AUTHORITY","SID_MAX_SUB_AUTHORITIES","SID_NAME_USE","SID_RECOMMENDED_SUB_AUTHORITIES","SID_REVISION","SILOOBJECT_BASIC_INFORMATION","SINGLE_LIST_ENTRY","SIZEOF_RFPO_DATA","SLIST_ENTRY","SLIST_HEADER","SLIST_HEADER_HeaderX64","SLIST_HEADER_s","SMB_CCF_APP_INSTANCE_EA_NAME","SORTIDFROMLCID","SORTVERSIONFROMLCID","SORT_CHINESE_BIG5","SORT_CHINESE_BOPOMOFO","SORT_CHINESE_PRC","SORT_CHINESE_PRCP","SORT_CHINESE_RADICALSTROKE","SORT_CHINESE_UNICODE","SORT_DEFAULT","SORT_GEORGIAN_MODERN","SORT_GEORGIAN_TRADITIONAL","SORT_GERMAN_PHONE_BOOK","SORT_HUNGARIAN_DEFAULT","SORT_HUNGARIAN_TECHNICAL","SORT_INVARIANT_MATH","SORT_JAPANESE_RADICALSTROKE","SORT_JAPANESE_UNICODE","SORT_JAPANESE_XJIS","SORT_KOREAN_KSC","SORT_KOREAN_UNICODE","SPECIFIC_RIGHTS_ALL","STANDARD_RIGHTS_ALL","STANDARD_RIGHTS_EXECUTE","STANDARD_RIGHTS_READ","STANDARD_RIGHTS_REQUIRED","STANDARD_RIGHTS_WRITE","STATUS_ABANDONED_WAIT_0","STATUS_ACCESS_VIOLATION","STATUS_ARRAY_BOUNDS_EXCEEDED","STATUS_ASSERTION_FAILURE","STATUS_BREAKPOINT","STATUS_CONTROL_C_EXIT","STATUS_DATATYPE_MISALIGNMENT","STATUS_DLL_INIT_FAILED","STATUS_DLL_NOT_FOUND","STATUS_ENTRYPOINT_NOT_FOUND","STATUS_FATAL_APP_EXIT","STATUS_FLOAT_DENORMAL_OPERAND","STATUS_FLOAT_DIVIDE_BY_ZERO","STATUS_FLOAT_INEXACT_RESULT","STATUS_FLOAT_INVALID_OPERATION","STATUS_FLOAT_MULTIPLE_FAULTS","STATUS_FLOAT_MULTIPLE_TRAPS","STATUS_FLOAT_OVERFLOW","STATUS_FLOAT_STACK_CHECK","STATUS_FLOAT_UNDERFLOW","STATUS_GUARD_PAGE_VIOLATION","STATUS_HEAP_CORRUPTION","STATUS_ILLEGAL_INSTRUCTION","STATUS_INTEGER_DIVIDE_BY_ZERO","STATUS_INTEGER_OVERFLOW","STATUS_INVALID_CRUNTIME_PARAMETER","STATUS_INVALID_DISPOSITION","STATUS_INVALID_HANDLE","STATUS_INVALID_PARAMETER","STATUS_IN_PAGE_ERROR","STATUS_LONGJUMP","STATUS_NONCONTINUABLE_EXCEPTION","STATUS_NO_MEMORY","STATUS_ORDINAL_NOT_FOUND","STATUS_PENDING","STATUS_PRIVILEGED_INSTRUCTION","STATUS_REG_NAT_CONSUMPTION","STATUS_SEGMENT_NOTIFICATION","STATUS_SINGLE_STEP","STATUS_STACK_BUFFER_OVERRUN","STATUS_STACK_OVERFLOW","STATUS_SXS_EARLY_DEACTIVATION","STATUS_SXS_INVALID_DEACTIVATION","STATUS_TIMEOUT","STATUS_UNWIND_CONSOLIDATE","STATUS_USER_APC","STATUS_WAIT_0","SUBLANGID","SUBLANG_AFRIKAANS_SOUTH_AFRICA","SUBLANG_ALBANIAN_ALBANIA","SUBLANG_ALSATIAN_FRANCE","SUBLANG_AMHARIC_ETHIOPIA","SUBLANG_ARABIC_ALGERIA","SUBLANG_ARABIC_BAHRAIN","SUBLANG_ARABIC_EGYPT","SUBLANG_ARABIC_IRAQ","SUBLANG_ARABIC_JORDAN","SUBLANG_ARABIC_KUWAIT","SUBLANG_ARABIC_LEBANON","SUBLANG_ARABIC_LIBYA","SUBLANG_ARABIC_MOROCCO","SUBLANG_ARABIC_OMAN","SUBLANG_ARABIC_QATAR","SUBLANG_ARABIC_SAUDI_ARABIA","SUBLANG_ARABIC_SYRIA","SUBLANG_ARABIC_TUNISIA","SUBLANG_ARABIC_UAE","SUBLANG_ARABIC_YEMEN","SUBLANG_ARMENIAN_ARMENIA","SUBLANG_ASSAMESE_INDIA","SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC","SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN","SUBLANG_AZERI_CYRILLIC","SUBLANG_AZERI_LATIN","SUBLANG_BANGLA_BANGLADESH","SUBLANG_BANGLA_INDIA","SUBLANG_BASHKIR_RUSSIA","SUBLANG_BASQUE_BASQUE","SUBLANG_BELARUSIAN_BELARUS","SUBLANG_BENGALI_BANGLADESH","SUBLANG_BENGALI_INDIA","SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC","SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN","SUBLANG_BRETON_FRANCE","SUBLANG_BULGARIAN_BULGARIA","SUBLANG_CATALAN_CATALAN","SUBLANG_CENTRAL_KURDISH_IRAQ","SUBLANG_CHEROKEE_CHEROKEE","SUBLANG_CHINESE_HONGKONG","SUBLANG_CHINESE_MACAU","SUBLANG_CHINESE_SIMPLIFIED","SUBLANG_CHINESE_SINGAPORE","SUBLANG_CHINESE_TRADITIONAL","SUBLANG_CORSICAN_FRANCE","SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN","SUBLANG_CROATIAN_CROATIA","SUBLANG_CUSTOM_DEFAULT","SUBLANG_CUSTOM_UNSPECIFIED","SUBLANG_CZECH_CZECH_REPUBLIC","SUBLANG_DANISH_DENMARK","SUBLANG_DARI_AFGHANISTAN","SUBLANG_DEFAULT","SUBLANG_DIVEHI_MALDIVES","SUBLANG_DUTCH","SUBLANG_DUTCH_BELGIAN","SUBLANG_ENGLISH_AUS","SUBLANG_ENGLISH_BELIZE","SUBLANG_ENGLISH_CAN","SUBLANG_ENGLISH_CARIBBEAN","SUBLANG_ENGLISH_EIRE","SUBLANG_ENGLISH_INDIA","SUBLANG_ENGLISH_JAMAICA","SUBLANG_ENGLISH_MALAYSIA","SUBLANG_ENGLISH_NZ","SUBLANG_ENGLISH_PHILIPPINES","SUBLANG_ENGLISH_SINGAPORE","SUBLANG_ENGLISH_SOUTH_AFRICA","SUBLANG_ENGLISH_TRINIDAD","SUBLANG_ENGLISH_UK","SUBLANG_ENGLISH_US","SUBLANG_ENGLISH_ZIMBABWE","SUBLANG_ESTONIAN_ESTONIA","SUBLANG_FAEROESE_FAROE_ISLANDS","SUBLANG_FILIPINO_PHILIPPINES","SUBLANG_FINNISH_FINLAND","SUBLANG_FRENCH","SUBLANG_FRENCH_BELGIAN","SUBLANG_FRENCH_CANADIAN","SUBLANG_FRENCH_LUXEMBOURG","SUBLANG_FRENCH_MONACO","SUBLANG_FRENCH_SWISS","SUBLANG_FRISIAN_NETHERLANDS","SUBLANG_FULAH_SENEGAL","SUBLANG_GALICIAN_GALICIAN","SUBLANG_GEORGIAN_GEORGIA","SUBLANG_GERMAN","SUBLANG_GERMAN_AUSTRIAN","SUBLANG_GERMAN_LIECHTENSTEIN","SUBLANG_GERMAN_LUXEMBOURG","SUBLANG_GERMAN_SWISS","SUBLANG_GREEK_GREECE","SUBLANG_GREENLANDIC_GREENLAND","SUBLANG_GUJARATI_INDIA","SUBLANG_HAUSA_NIGERIA_LATIN","SUBLANG_HAWAIIAN_US","SUBLANG_HEBREW_ISRAEL","SUBLANG_HINDI_INDIA","SUBLANG_HUNGARIAN_HUNGARY","SUBLANG_ICELANDIC_ICELAND","SUBLANG_IGBO_NIGERIA","SUBLANG_INDONESIAN_INDONESIA","SUBLANG_INUKTITUT_CANADA","SUBLANG_INUKTITUT_CANADA_LATIN","SUBLANG_IRISH_IRELAND","SUBLANG_ITALIAN","SUBLANG_ITALIAN_SWISS","SUBLANG_JAPANESE_JAPAN","SUBLANG_KANNADA_INDIA","SUBLANG_KASHMIRI_INDIA","SUBLANG_KASHMIRI_SASIA","SUBLANG_KAZAK_KAZAKHSTAN","SUBLANG_KHMER_CAMBODIA","SUBLANG_KICHE_GUATEMALA","SUBLANG_KINYARWANDA_RWANDA","SUBLANG_KONKANI_INDIA","SUBLANG_KOREAN","SUBLANG_KYRGYZ_KYRGYZSTAN","SUBLANG_LAO_LAO","SUBLANG_LATVIAN_LATVIA","SUBLANG_LITHUANIAN","SUBLANG_LOWER_SORBIAN_GERMANY","SUBLANG_LUXEMBOURGISH_LUXEMBOURG","SUBLANG_MACEDONIAN_MACEDONIA","SUBLANG_MALAYALAM_INDIA","SUBLANG_MALAY_BRUNEI_DARUSSALAM","SUBLANG_MALAY_MALAYSIA","SUBLANG_MALTESE_MALTA","SUBLANG_MAORI_NEW_ZEALAND","SUBLANG_MAPUDUNGUN_CHILE","SUBLANG_MARATHI_INDIA","SUBLANG_MOHAWK_MOHAWK","SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA","SUBLANG_MONGOLIAN_PRC","SUBLANG_NEPALI_INDIA","SUBLANG_NEPALI_NEPAL","SUBLANG_NEUTRAL","SUBLANG_NORWEGIAN_BOKMAL","SUBLANG_NORWEGIAN_NYNORSK","SUBLANG_OCCITAN_FRANCE","SUBLANG_ODIA_INDIA","SUBLANG_ORIYA_INDIA","SUBLANG_PASHTO_AFGHANISTAN","SUBLANG_PERSIAN_IRAN","SUBLANG_POLISH_POLAND","SUBLANG_PORTUGUESE","SUBLANG_PORTUGUESE_BRAZILIAN","SUBLANG_PULAR_SENEGAL","SUBLANG_PUNJABI_INDIA","SUBLANG_PUNJABI_PAKISTAN","SUBLANG_QUECHUA_BOLIVIA","SUBLANG_QUECHUA_ECUADOR","SUBLANG_QUECHUA_PERU","SUBLANG_ROMANIAN_ROMANIA","SUBLANG_ROMANSH_SWITZERLAND","SUBLANG_RUSSIAN_RUSSIA","SUBLANG_SAKHA_RUSSIA","SUBLANG_SAMI_INARI_FINLAND","SUBLANG_SAMI_LULE_NORWAY","SUBLANG_SAMI_LULE_SWEDEN","SUBLANG_SAMI_NORTHERN_FINLAND","SUBLANG_SAMI_NORTHERN_NORWAY","SUBLANG_SAMI_NORTHERN_SWEDEN","SUBLANG_SAMI_SKOLT_FINLAND","SUBLANG_SAMI_SOUTHERN_NORWAY","SUBLANG_SAMI_SOUTHERN_SWEDEN","SUBLANG_SANSKRIT_INDIA","SUBLANG_SCOTTISH_GAELIC","SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC","SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN","SUBLANG_SERBIAN_CROATIA","SUBLANG_SERBIAN_CYRILLIC","SUBLANG_SERBIAN_LATIN","SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC","SUBLANG_SERBIAN_MONTENEGRO_LATIN","SUBLANG_SERBIAN_SERBIA_CYRILLIC","SUBLANG_SERBIAN_SERBIA_LATIN","SUBLANG_SINDHI_AFGHANISTAN","SUBLANG_SINDHI_INDIA","SUBLANG_SINDHI_PAKISTAN","SUBLANG_SINHALESE_SRI_LANKA","SUBLANG_SLOVAK_SLOVAKIA","SUBLANG_SLOVENIAN_SLOVENIA","SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA","SUBLANG_SPANISH","SUBLANG_SPANISH_ARGENTINA","SUBLANG_SPANISH_BOLIVIA","SUBLANG_SPANISH_CHILE","SUBLANG_SPANISH_COLOMBIA","SUBLANG_SPANISH_COSTA_RICA","SUBLANG_SPANISH_DOMINICAN_REPUBLIC","SUBLANG_SPANISH_ECUADOR","SUBLANG_SPANISH_EL_SALVADOR","SUBLANG_SPANISH_GUATEMALA","SUBLANG_SPANISH_HONDURAS","SUBLANG_SPANISH_MEXICAN","SUBLANG_SPANISH_MODERN","SUBLANG_SPANISH_NICARAGUA","SUBLANG_SPANISH_PANAMA","SUBLANG_SPANISH_PARAGUAY","SUBLANG_SPANISH_PERU","SUBLANG_SPANISH_PUERTO_RICO","SUBLANG_SPANISH_URUGUAY","SUBLANG_SPANISH_US","SUBLANG_SPANISH_VENEZUELA","SUBLANG_SWAHILI_KENYA","SUBLANG_SWEDISH","SUBLANG_SWEDISH_FINLAND","SUBLANG_SYRIAC_SYRIA","SUBLANG_SYS_DEFAULT","SUBLANG_TAJIK_TAJIKISTAN","SUBLANG_TAMAZIGHT_ALGERIA_LATIN","SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH","SUBLANG_TAMIL_INDIA","SUBLANG_TAMIL_SRI_LANKA","SUBLANG_TATAR_RUSSIA","SUBLANG_TELUGU_INDIA","SUBLANG_THAI_THAILAND","SUBLANG_TIBETAN_PRC","SUBLANG_TIGRIGNA_ERITREA","SUBLANG_TIGRINYA_ERITREA","SUBLANG_TIGRINYA_ETHIOPIA","SUBLANG_TSWANA_BOTSWANA","SUBLANG_TSWANA_SOUTH_AFRICA","SUBLANG_TURKISH_TURKEY","SUBLANG_TURKMEN_TURKMENISTAN","SUBLANG_UIGHUR_PRC","SUBLANG_UI_CUSTOM_DEFAULT","SUBLANG_UKRAINIAN_UKRAINE","SUBLANG_UPPER_SORBIAN_GERMANY","SUBLANG_URDU_INDIA","SUBLANG_URDU_PAKISTAN","SUBLANG_UZBEK_CYRILLIC","SUBLANG_UZBEK_LATIN","SUBLANG_VALENCIAN_VALENCIA","SUBLANG_VIETNAMESE_VIETNAM","SUBLANG_WELSH_UNITED_KINGDOM","SUBLANG_WOLOF_SENEGAL","SUBLANG_XHOSA_SOUTH_AFRICA","SUBLANG_YAKUT_RUSSIA","SUBLANG_YI_PRC","SUBLANG_YORUBA_NIGERIA","SUBLANG_ZULU_SOUTH_AFRICA","SUCCESSFUL_ACCESS_ACE_FLAG","SUPPORTED_OS_INFO","SYNCHRONIZE","SYSTEM_ACCESS_FILTER_ACE","SYSTEM_ACCESS_FILTER_ACE_TYPE","SYSTEM_ACCESS_FILTER_NOCONSTRAINT_MASK","SYSTEM_ACCESS_FILTER_VALID_MASK","SYSTEM_ALARM_ACE","SYSTEM_ALARM_ACE_TYPE","SYSTEM_ALARM_CALLBACK_ACE","SYSTEM_ALARM_CALLBACK_ACE_TYPE","SYSTEM_ALARM_CALLBACK_OBJECT_ACE","SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE","SYSTEM_ALARM_OBJECT_ACE","SYSTEM_ALARM_OBJECT_ACE_TYPE","SYSTEM_AUDIT_ACE","SYSTEM_AUDIT_ACE_TYPE","SYSTEM_AUDIT_CALLBACK_ACE","SYSTEM_AUDIT_CALLBACK_ACE_TYPE","SYSTEM_AUDIT_CALLBACK_OBJECT_ACE","SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE","SYSTEM_AUDIT_OBJECT_ACE","SYSTEM_AUDIT_OBJECT_ACE_TYPE","SYSTEM_BATTERY_STATE","SYSTEM_CACHE_ALIGNMENT_SIZE","SYSTEM_CPU_SET_INFORMATION","SYSTEM_CPU_SET_INFORMATION_ALLOCATED","SYSTEM_CPU_SET_INFORMATION_ALLOCATED_TO_TARGET_PROCESS","SYSTEM_CPU_SET_INFORMATION_CpuSet","SYSTEM_CPU_SET_INFORMATION_PARKED","SYSTEM_CPU_SET_INFORMATION_REALTIME","SYSTEM_LOGICAL_PROCESSOR_INFORMATION","SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX","SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX_u","SYSTEM_LOGICAL_PROCESSOR_INFORMATION_NumaNode","SYSTEM_LOGICAL_PROCESSOR_INFORMATION_ProcessorCore","SYSTEM_LOGICAL_PROCESSOR_INFORMATION_u","SYSTEM_LUID","SYSTEM_MANDATORY_LABEL_ACE","SYSTEM_MANDATORY_LABEL_ACE_TYPE","SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP","SYSTEM_MANDATORY_LABEL_NO_READ_UP","SYSTEM_MANDATORY_LABEL_NO_WRITE_UP","SYSTEM_MANDATORY_LABEL_VALID_MASK","SYSTEM_POWER_CAPABILITIES","SYSTEM_POWER_CONDITION","SYSTEM_POWER_LEVEL","SYSTEM_POWER_POLICY","SYSTEM_POWER_STATE","SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION","SYSTEM_PROCESS_TRUST_LABEL_ACE","SYSTEM_PROCESS_TRUST_LABEL_ACE_TYPE","SYSTEM_PROCESS_TRUST_LABEL_VALID_MASK","SYSTEM_PROCESS_TRUST_NOCONSTRAINT_MASK","SYSTEM_RESOURCE_ATTRIBUTE_ACE","SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE","SYSTEM_SCOPED_POLICY_ID_ACE","SYSTEM_SCOPED_POLICY_ID_ACE_TYPE","Sacl","Sacl","Sbz","Sbz1","Sbz1","Sbz1","Sbz2","SchedulingClass","ScopeIndex","ScopeRecord","ScopeRecord","ScreenOff","SeImageSignatureCache","SeImageSignatureCatalogCached","SeImageSignatureCatalogHint","SeImageSignatureCatalogNotCached","SeImageSignatureEmbedded","SeImageSignatureNone","SeImageSignaturePackageCatalog","SeLearningModeInvalidType","SeLearningModeMax","SeLearningModeSettings","SeSecurityDescriptor","Search","Secs","Section","Section","SectionAlignment","SectionAlignment","SectionAlignment","SectionNumber","SectionNumber","SecurityAnonymous","SecurityAttributes","SecurityCookie","SecurityCookie","SecurityDelegation","SecurityDescriptor","SecurityIdentification","SecurityImpersonation","SecurityLimitFlags","SegCs","SegCs","SegDs","SegDs","SegEs","SegEs","SegFs","SegFs","SegGs","SegGs","SegSs","SegSs","Selection","Selection","Selector","Self_","Sequence","SequenceNumber","SequenceNumber","ServiceSessionId","SessionConnectNotification","SessionDisplayState","SessionId","SessionLockState","SessionPowerCleanup","SessionPowerInit","SessionRITState","SetPowerSettingValue","SetShutdownSelectedTime","SevereError","SharedVirtualDiskCDPSnapshotsSupported","SharedVirtualDiskHandleState","SharedVirtualDiskHandleStateFileShared","SharedVirtualDiskHandleStateHandleShared","SharedVirtualDiskHandleStateNone","SharedVirtualDiskSnapshotsSupported","SharedVirtualDiskSupport","SharedVirtualDiskSupportType","SharedVirtualDisksSupported","SharedVirtualDisksUnsupported","Short","Short","ShortName","ShortName","ShortName_mut","ShortName_mut","Sid","Sid","Sid","Sid","SidAttr","SidCount","SidCount","SidHash","SidLength","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidStart","SidTypeAlias","SidTypeComputer","SidTypeDeletedAccount","SidTypeDomain","SidTypeGroup","SidTypeInvalid","SidTypeLabel","SidTypeLogonSession","SidTypeUnknown","SidTypeUser","SidTypeWellKnownGroup","Sid_mut","Sid_mut","Sids","SidsToDisable","Sig1","Sig1","Sig1","Sig1","Sig2","Sig2","Sig2","Sig2","SigStruct","Signature","Signature","Signature","Signature","SiloId","SiloParentId","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","Size","SizeOfBlock","SizeOfCode","SizeOfCode","SizeOfCode","SizeOfData","SizeOfData","SizeOfData","SizeOfData","SizeOfData","SizeOfHeaders","SizeOfHeaders","SizeOfHeapCommit","SizeOfHeapCommit","SizeOfHeapReserve","SizeOfHeapReserve","SizeOfImage","SizeOfImage","SizeOfImage","SizeOfImage","SizeOfInitializedData","SizeOfInitializedData","SizeOfInitializedData","SizeOfOptionalHeader","SizeOfRawData","SizeOfStackCommit","SizeOfStackCommit","SizeOfStackReserve","SizeOfStackReserve","SizeOfUninitializedData","SizeOfUninitializedData","SizeOfUninitializedData","SizeOfZeroFill","SizeOfZeroFill","SleepButton","SleepButtonPresent","SoftLidWake","SoftMaxBandwidth","SoftMaxIops","SoftMaxTimePercent","SourceIdentifier","SourceName","Spare","Spare","Spare","Spare","Spare","Spare1","Spare2","Spare3","SpareWORD","Spare_mut","Speed","Speed","SpinCount","SpindownTimeout","StackAdjust","StackBase","StackBase","StackBase","StackCommit","StackLimit","StackLimit","StackLimit","StackReserve","StartAddressOfRawData","StartAddressOfRawData","StartTime","StartTime","StartingAddress","StartingAddress","State","State","State","State","State","State","State","State","State","State","State","State","State","StateCount","StateCount","StateFlags","StateType","Status","Status","Status","StatusWord","StatusWord","StorageClass","StorageClass","StoreSignedOnly","StrictMode","StringOffset","StrongNameSignature","SubAuthority","SubAuthorityCount","SubSystemTib","SubSystemTib","SubSystemTib","Subsystem","Subsystem","SuperiorEnlistmentPair","SuspendResumeInvocation","Sym","Sym","Symbol","Symbol","Symbol","Symbol","SymbolGroup","SymbolGroup","SymbolTableIndex","SymbolTableIndex","SymbolTableIndex","SymbolTableIndex_mut","Sys","Sys","SystemBatteriesPresent","SystemBatteryState","SystemBatteryStatePrecise","SystemExecutionState","SystemHiberFileInformation","SystemHiberFileSize","SystemHiberFileType","SystemHiberbootState","SystemLoad","SystemMonitorHiberBootPowerOff","SystemPowerCapabilities","SystemPowerInformation","SystemPowerLoggingEntry","SystemPowerPolicyAc","SystemPowerPolicyCurrent","SystemPowerPolicyDc","SystemPowerStateHandler","SystemPowerStateLogging","SystemPowerStateNotifyHandler","SystemReserveHiberFile","SystemS1","SystemS2","SystemS3","SystemS4","SystemS5","SystemVideoState","SystemWakeSource","TAPE_ABSOLUTE_BLOCK","TAPE_ABSOLUTE_POSITION","TAPE_CHECK_FOR_DRIVE_PROBLEM","TAPE_CREATE_PARTITION","TAPE_DRIVE_ABSOLUTE_BLK","TAPE_DRIVE_ABS_BLK_IMMED","TAPE_DRIVE_CLEAN_REQUESTS","TAPE_DRIVE_COMPRESSION","TAPE_DRIVE_ECC","TAPE_DRIVE_EJECT_MEDIA","TAPE_DRIVE_END_OF_DATA","TAPE_DRIVE_EOT_WZ_SIZE","TAPE_DRIVE_ERASE_BOP_ONLY","TAPE_DRIVE_ERASE_IMMEDIATE","TAPE_DRIVE_ERASE_LONG","TAPE_DRIVE_ERASE_SHORT","TAPE_DRIVE_FILEMARKS","TAPE_DRIVE_FIXED","TAPE_DRIVE_FIXED_BLOCK","TAPE_DRIVE_FORMAT","TAPE_DRIVE_FORMAT_IMMEDIATE","TAPE_DRIVE_GET_ABSOLUTE_BLK","TAPE_DRIVE_GET_LOGICAL_BLK","TAPE_DRIVE_HIGH_FEATURES","TAPE_DRIVE_INITIATOR","TAPE_DRIVE_LOAD_UNLD_IMMED","TAPE_DRIVE_LOAD_UNLOAD","TAPE_DRIVE_LOCK_UNLK_IMMED","TAPE_DRIVE_LOCK_UNLOCK","TAPE_DRIVE_LOGICAL_BLK","TAPE_DRIVE_LOG_BLK_IMMED","TAPE_DRIVE_PADDING","TAPE_DRIVE_PROBLEM_TYPE","TAPE_DRIVE_RELATIVE_BLKS","TAPE_DRIVE_REPORT_SMKS","TAPE_DRIVE_RESERVED_BIT","TAPE_DRIVE_REVERSE_POSITION","TAPE_DRIVE_REWIND_IMMEDIATE","TAPE_DRIVE_SELECT","TAPE_DRIVE_SEQUENTIAL_FMKS","TAPE_DRIVE_SEQUENTIAL_SMKS","TAPE_DRIVE_SETMARKS","TAPE_DRIVE_SET_BLOCK_SIZE","TAPE_DRIVE_SET_CMP_BOP_ONLY","TAPE_DRIVE_SET_COMPRESSION","TAPE_DRIVE_SET_ECC","TAPE_DRIVE_SET_EOT_WZ_SIZE","TAPE_DRIVE_SET_PADDING","TAPE_DRIVE_SET_REPORT_SMKS","TAPE_DRIVE_SPACE_IMMEDIATE","TAPE_DRIVE_TAPE_CAPACITY","TAPE_DRIVE_TAPE_REMAINING","TAPE_DRIVE_TENSION","TAPE_DRIVE_TENSION_IMMED","TAPE_DRIVE_VARIABLE_BLOCK","TAPE_DRIVE_WRITE_FILEMARKS","TAPE_DRIVE_WRITE_LONG_FMKS","TAPE_DRIVE_WRITE_MARK_IMMED","TAPE_DRIVE_WRITE_PROTECT","TAPE_DRIVE_WRITE_SETMARKS","TAPE_DRIVE_WRITE_SHORT_FMKS","TAPE_ERASE","TAPE_ERASE_LONG","TAPE_ERASE_SHORT","TAPE_FILEMARKS","TAPE_FIXED_PARTITIONS","TAPE_FORMAT","TAPE_GET_DRIVE_PARAMETERS","TAPE_GET_MEDIA_PARAMETERS","TAPE_GET_POSITION","TAPE_INITIATOR_PARTITIONS","TAPE_LOAD","TAPE_LOCK","TAPE_LOGICAL_BLOCK","TAPE_LOGICAL_POSITION","TAPE_LONG_FILEMARKS","TAPE_PREPARE","TAPE_PSEUDO_LOGICAL_BLOCK","TAPE_PSEUDO_LOGICAL_POSITION","TAPE_QUERY_DEVICE_ERROR_DATA","TAPE_QUERY_DRIVE_PARAMETERS","TAPE_QUERY_IO_ERROR_DATA","TAPE_QUERY_MEDIA_CAPACITY","TAPE_REWIND","TAPE_SELECT_PARTITIONS","TAPE_SETMARKS","TAPE_SET_DRIVE_PARAMETERS","TAPE_SET_MEDIA_PARAMETERS","TAPE_SET_POSITION","TAPE_SHORT_FILEMARKS","TAPE_SPACE_END_OF_DATA","TAPE_SPACE_FILEMARKS","TAPE_SPACE_RELATIVE_BLOCKS","TAPE_SPACE_SEQUENTIAL_FMKS","TAPE_SPACE_SEQUENTIAL_SMKS","TAPE_SPACE_SETMARKS","TAPE_TENSION","TAPE_UNLOAD","TAPE_UNLOCK","TAPE_WMI_OPERATIONS","TAPE_WRITE_MARKS","THREAD_ALL_ACCESS","THREAD_BASE_PRIORITY_IDLE","THREAD_BASE_PRIORITY_LOWRT","THREAD_BASE_PRIORITY_MAX","THREAD_BASE_PRIORITY_MIN","THREAD_DIRECT_IMPERSONATION","THREAD_DYNAMIC_CODE_ALLOW","THREAD_GET_CONTEXT","THREAD_IMPERSONATE","THREAD_PROFILING_FLAG_DISPATCH","THREAD_QUERY_INFORMATION","THREAD_QUERY_LIMITED_INFORMATION","THREAD_RESUME","THREAD_SET_CONTEXT","THREAD_SET_INFORMATION","THREAD_SET_LIMITED_INFORMATION","THREAD_SET_THREAD_TOKEN","THREAD_SUSPEND_RESUME","THREAD_TERMINATE","TIMER_ALL_ACCESS","TIMER_MODIFY_STATE","TIMER_QUERY_STATE","TIME_ZONE_ID_DAYLIGHT","TIME_ZONE_ID_STANDARD","TIME_ZONE_ID_UNKNOWN","TLS_MINIMUM_AVAILABLE","TOKEN_ACCESS_INFORMATION","TOKEN_ACCESS_PSEUDO_HANDLE","TOKEN_ACCESS_PSEUDO_HANDLE_WIN8","TOKEN_ADJUST_DEFAULT","TOKEN_ADJUST_GROUPS","TOKEN_ADJUST_PRIVILEGES","TOKEN_ADJUST_SESSIONID","TOKEN_ALL_ACCESS","TOKEN_ALL_ACCESS_P","TOKEN_APPCONTAINER_INFORMATION","TOKEN_ASSIGN_PRIMARY","TOKEN_AUDIT_POLICY","TOKEN_BNO_ISOLATION_INFORMATION","TOKEN_CONTROL","TOKEN_DEFAULT_DACL","TOKEN_DEVICE_CLAIMS","TOKEN_DUPLICATE","TOKEN_ELEVATION","TOKEN_ELEVATION_TYPE","TOKEN_EXECUTE","TOKEN_GROUPS","TOKEN_GROUPS_AND_PRIVILEGES","TOKEN_IMPERSONATE","TOKEN_INFORMATION_CLASS","TOKEN_LINKED_TOKEN","TOKEN_MANDATORY_LABEL","TOKEN_MANDATORY_POLICY","TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN","TOKEN_MANDATORY_POLICY_NO_WRITE_UP","TOKEN_MANDATORY_POLICY_OFF","TOKEN_MANDATORY_POLICY_VALID_MASK","TOKEN_ORIGIN","TOKEN_OWNER","TOKEN_PRIMARY_GROUP","TOKEN_PRIVILEGES","TOKEN_QUERY","TOKEN_QUERY_SOURCE","TOKEN_READ","TOKEN_SID_INFORMATION","TOKEN_SOURCE","TOKEN_SOURCE_LENGTH","TOKEN_STATISTICS","TOKEN_TRUST_CONSTRAINT_MASK","TOKEN_TYPE","TOKEN_USER","TOKEN_USER_CLAIMS","TOKEN_WRITE","TP_CALLBACK_ENVIRON","TP_CALLBACK_ENVIRON_V3","TP_CALLBACK_ENVIRON_V3_u","TP_CALLBACK_ENVIRON_V3_u_s","TP_CALLBACK_INSTANCE","TP_CALLBACK_PRIORITY","TP_CALLBACK_PRIORITY_COUNT","TP_CALLBACK_PRIORITY_HIGH","TP_CALLBACK_PRIORITY_INVALID","TP_CALLBACK_PRIORITY_LOW","TP_CALLBACK_PRIORITY_NORMAL","TP_CLEANUP_GROUP","TP_IO","TP_POOL","TP_POOL_STACK_INFORMATION","TP_TIMER","TP_VERSION","TP_WAIT","TP_WAIT_RESULT","TP_WORK","TRANSACTIONMANAGER_ALL_ACCESS","TRANSACTIONMANAGER_BASIC_INFORMATION","TRANSACTIONMANAGER_BIND_TRANSACTION","TRANSACTIONMANAGER_CREATE_RM","TRANSACTIONMANAGER_GENERIC_EXECUTE","TRANSACTIONMANAGER_GENERIC_READ","TRANSACTIONMANAGER_GENERIC_WRITE","TRANSACTIONMANAGER_INFORMATION_CLASS","TRANSACTIONMANAGER_LOGPATH_INFORMATION","TRANSACTIONMANAGER_LOG_INFORMATION","TRANSACTIONMANAGER_OLDEST_INFORMATION","TRANSACTIONMANAGER_QUERY_INFORMATION","TRANSACTIONMANAGER_RECOVER","TRANSACTIONMANAGER_RECOVERY_INFORMATION","TRANSACTIONMANAGER_RENAME","TRANSACTIONMANAGER_SET_INFORMATION","TRANSACTION_ALL_ACCESS","TRANSACTION_BASIC_INFORMATION","TRANSACTION_BIND_INFORMATION","TRANSACTION_COMMIT","TRANSACTION_ENLIST","TRANSACTION_ENLISTMENTS_INFORMATION","TRANSACTION_ENLISTMENT_PAIR","TRANSACTION_GENERIC_EXECUTE","TRANSACTION_GENERIC_READ","TRANSACTION_GENERIC_WRITE","TRANSACTION_INFORMATION_CLASS","TRANSACTION_LIST_ENTRY","TRANSACTION_LIST_INFORMATION","TRANSACTION_OUTCOME","TRANSACTION_PROPAGATE","TRANSACTION_PROPERTIES_INFORMATION","TRANSACTION_QUERY_INFORMATION","TRANSACTION_RESOURCE_MANAGER_RIGHTS","TRANSACTION_RIGHT_RESERVED1","TRANSACTION_ROLLBACK","TRANSACTION_SET_INFORMATION","TRANSACTION_STATE","TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION","TRUST_PROTECTED_FILTER_ACE_FLAG","TStateContext","TStateContext","TStateHandler","TStateHandler","Tag","TagIndex","TagWord","TagWord","TapeDriveCleanDriveNow","TapeDriveHardwareError","TapeDriveMediaLifeExpired","TapeDriveProblemNone","TapeDriveReadError","TapeDriveReadWarning","TapeDriveReadWriteError","TapeDriveReadWriteWarning","TapeDriveScsiConnectionError","TapeDriveSnappedTape","TapeDriveTimetoClean","TapeDriveUnsupportedMedia","TapeDriveWriteError","TapeDriveWriteWarning","TargetIp","TargetProcessors","TargetProcessors","TargetProcessors","TargetProcessors","TargetState","TargetState","Text","ThermalConstraint","ThermalConstraint","ThermalConstraint","ThermalControl","ThermalEvent","ThermalStandby","ThirtyTwoBit","ThisPeriodTotalKernelTime","ThisPeriodTotalUserTime","TimeCheck","TimeCheck","TimeCheck","TimeCheck","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeGenerated","TimeLimit","TimeLimit","TimeWritten","Timeout","TimerInterval","TimerInterval","TmHandle","TmIdentity","Token","TokenAccessInformation","TokenAppContainer","TokenAppContainerNumber","TokenAppContainerSid","TokenAuditPolicy","TokenBnoIsolation","TokenCapabilities","TokenDef","TokenDef","TokenDefaultDacl","TokenDeviceClaimAttributes","TokenDeviceGroups","TokenElevation","TokenElevationType","TokenElevationTypeDefault","TokenElevationTypeFull","TokenElevationTypeLimited","TokenGroups","TokenGroupsAndPrivileges","TokenHasRestrictions","TokenId","TokenId","TokenImpersonation","TokenImpersonationLevel","TokenIntegrityLevel","TokenIsAppContainer","TokenIsElevated","TokenIsRestricted","TokenLinkedToken","TokenLogonSid","TokenMandatoryPolicy","TokenOrigin","TokenOwner","TokenPrimary","TokenPrimaryGroup","TokenPrivateNameSpace","TokenPrivileges","TokenProcessTrustLevel","TokenRestrictedDeviceClaimAttributes","TokenRestrictedDeviceGroups","TokenRestrictedSids","TokenRestrictedUserClaimAttributes","TokenSandBoxInert","TokenSecurityAttributes","TokenSessionId","TokenSessionReference","TokenSingletonAttributes","TokenSource","TokenSource","TokenStatistics","TokenType","TokenType","TokenType","TokenUIAccess","TokenUser","TokenUser","TokenUserClaimAttributes","TokenUser_mut","TokenVirtualizationAllowed","TokenVirtualizationEnabled","ToleranceHigh","ToleranceIntervalLong","ToleranceIntervalMedium","ToleranceIntervalShort","ToleranceLow","ToleranceMedium","TotalKernelTime","TotalNonOverlappedQueueTime","TotalNonOverlappedServiceTime","TotalPageFaultCount","TotalProcesses","TotalResumeTimeMs","TotalSize","TotalSize","TotalSize_mut","TotalTerminatedProcesses","TotalTime","TotalTime","TotalTimeUs","TotalTransitions","TotalTransitions","TotalUserTime","TraceApplicationPowerMessage","TraceApplicationPowerMessageEnd","TraceServicePowerMessage","TransactionBasicInformation","TransactionBindInformation","TransactionDTCPrivateInformation","TransactionEnlistmentInformation","TransactionId","TransactionId","TransactionInformation","TransactionManagerBasicInformation","TransactionManagerLogInformation","TransactionManagerLogPathInformation","TransactionManagerOldestTransactionInformation","TransactionManagerOnlineProbeInformation","TransactionManagerRecoveryInformation","TransactionOutcomeAborted","TransactionOutcomeCommitted","TransactionOutcomeUndetermined","TransactionPropertiesInformation","TransactionStateCommittedNotify","TransactionStateIndoubt","TransactionStateNormal","TransactionSuperiorEnlistmentInformation","TrustLevelSid","TvIndex","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","UCSCHAR","UCSCHAR_INVALID_CHARACTER","UIRestrictionsClass","ULARGE_INTEGER","ULONGLONG","UMS_CREATE_THREAD_ATTRIBUTES","UNICODE_NULL","UNICODE_STRING_MAX_BYTES","UNICODE_STRING_MAX_CHARS","UNIFIEDBUILDREVISION_KEY","UNIFIEDBUILDREVISION_MIN","UNIFIEDBUILDREVISION_VALUE","UNPROTECTED_DACL_SECURITY_INFORMATION","UNPROTECTED_SACL_SECURITY_INFORMATION","UNSPECIFIED_COMPARTMENT_ID","UNWIND_HISTORY_TABLE","UNWIND_HISTORY_TABLE_ENTRY","UNWIND_HISTORY_TABLE_SIZE","UNW_FLAG_CHAININFO","UNW_FLAG_EHANDLER","UNW_FLAG_NHANDLER","UNW_FLAG_NO_EPILOGUE","UNW_FLAG_UHANDLER","UOW","USER_ACTIVITY_PRESENCE","USN","UiAccess","UmsCompletionList","UmsContext","UmsSchedulerStartup","UmsSchedulerThreadBlocked","UmsSchedulerThreadYield","UmsThreadAffinity","UmsThreadInvalidInfoClass","UmsThreadIsSuspended","UmsThreadIsTerminated","UmsThreadMaxInfoClass","UmsThreadPriority","UmsThreadTeb","UmsThreadUserContext","UmsVersion","Unicode","Uniquifier","UnloadInformationTableRVA","UnwindData","UnwindData","UnwindData","UnwindData_mut","UnwindInfoAddress","UnwindInfoAddress","UnwindInfoAddress_mut","UnwindInfoAddress_mut","UpdateBlackBoxRecorder","UpsPresent","User","User","UserClaims","UserID","UserMode","UserNotPresent","UserPresence","UserPresence","UserPresent","UserSidLength","UserSidOffset","UserUnknown","User_mut","VALID_IMPERSONATION_LEVEL","VALID_INHERIT_FLAGS","VER_AND","VER_BUILDNUMBER","VER_CONDITION_MASK","VER_EQUAL","VER_GREATER","VER_GREATER_EQUAL","VER_LESS","VER_LESS_EQUAL","VER_MAJORVERSION","VER_MINORVERSION","VER_NT_DOMAIN_CONTROLLER","VER_NT_SERVER","VER_NT_WORKSTATION","VER_NUM_BITS_PER_CONDITION_MASK","VER_OR","VER_PLATFORMID","VER_PLATFORM_WIN32_NT","VER_PLATFORM_WIN32_WINDOWS","VER_PLATFORM_WIN32s","VER_PRODUCT_TYPE","VER_SERVER_NT","VER_SERVICEPACKMAJOR","VER_SERVICEPACKMINOR","VER_SUITENAME","VER_SUITE_BACKOFFICE","VER_SUITE_BLADE","VER_SUITE_COMMUNICATIONS","VER_SUITE_COMPUTE_SERVER","VER_SUITE_DATACENTER","VER_SUITE_EMBEDDEDNT","VER_SUITE_EMBEDDED_RESTRICTED","VER_SUITE_ENTERPRISE","VER_SUITE_PERSONAL","VER_SUITE_SECURITY_APPLIANCE","VER_SUITE_SINGLEUSERTS","VER_SUITE_SMALLBUSINESS","VER_SUITE_SMALLBUSINESS_RESTRICTED","VER_SUITE_STORAGE_SERVER","VER_SUITE_TERMINAL","VER_SUITE_WH_SERVER","VER_WORKSTATION_NT","VOID","VRL_CLASS_CONSISTENCY","VRL_CUSTOM_CLASS_BEGIN","VRL_ENABLE_KERNEL_BREAKS","VRL_PREDEFINED_CLASS_BEGIN","VTableFixups","Value","Value","Value","Value","ValueCount","ValueCount","ValueLength","ValueType","ValueType","Values","Values","VectorControl","VectorRegister","VerSetConditionMask","VerifyProcessorPowerPolicyAc","VerifyProcessorPowerPolicyDc","VerifySystemPolicyAc","VerifySystemPolicyDc","Version","Version","Version","Version","Version","Version","Version","Version","Version","Version","Version","Version","Version","Version","Version","Version_mut","Version_mut","Version_mut","VideoDimDisplay","VideoDimPresent","VideoReserved","VideoTimeout","ViolationLimitFlags","ViolationLimitFlags","VirtualAddress","VirtualAddress","VirtualAddress","VirtualAddress","VirtualAddress","VirtualAddress_mut","VirtualAddress_mut","VirtualClock","VirtualMemoryThreshold","VirtualMemoryThreshold","VirtualSize","VirtualSize_mut","VolumeName","VolumeName","VolumeName","VolumeNameLength","VolumeNameLength","VolumeNameLength","WAITORTIMERCALLBACK","WAITORTIMERCALLBACKFUNC","WCHAR","WELL_KNOWN_SID_TYPE","WORKERCALLBACKFUNC","WOW64_ARCHITECTURE_INFORMATION","WOW64_CONTEXT","WOW64_CONTEXT_ALL","WOW64_CONTEXT_CONTROL","WOW64_CONTEXT_DEBUG_REGISTERS","WOW64_CONTEXT_EXCEPTION_ACTIVE","WOW64_CONTEXT_EXCEPTION_REPORTING","WOW64_CONTEXT_EXCEPTION_REQUEST","WOW64_CONTEXT_EXTENDED_REGISTERS","WOW64_CONTEXT_FLOATING_POINT","WOW64_CONTEXT_FULL","WOW64_CONTEXT_INTEGER","WOW64_CONTEXT_SEGMENTS","WOW64_CONTEXT_SERVICE_ACTIVE","WOW64_CONTEXT_XSTATE","WOW64_CONTEXT_i386","WOW64_CONTEXT_i486","WOW64_DESCRIPTOR_TABLE_ENTRY","WOW64_FLOATING_SAVE_AREA","WOW64_LDT_ENTRY","WOW64_LDT_ENTRY_Bits","WOW64_LDT_ENTRY_Bytes","WOW64_LDT_ENTRY_HighWord","WOW64_MAXIMUM_SUPPORTED_EXTENSION","WOW64_SIZE_OF_80387_REGISTERS","WRITE_DAC","WRITE_OWNER","WRITE_RESTRICTED","WRITE_WATCH_FLAG_RESET","WT_EXECUTEDEFAULT","WT_EXECUTEDELETEWAIT","WT_EXECUTEINIOTHREAD","WT_EXECUTEINLONGTHREAD","WT_EXECUTEINPERSISTENTIOTHREAD","WT_EXECUTEINPERSISTENTTHREAD","WT_EXECUTEINTIMERTHREAD","WT_EXECUTEINUITHREAD","WT_EXECUTEINWAITTHREAD","WT_EXECUTELONGFUNCTION","WT_EXECUTEONLYONCE","WT_SET_MAX_THREADPOOL_THREADS","WT_TRANSFER_IMPERSONATION","WaitReasonBitMap","WakeAlarmPresent","WakeTimerList","WeakDefaultSymIndex","WeakSearchType","Weight","Weight_mut","Win32ServiceOwnProcess","Win32ServiceShareProcess","Win32VersionValue","Win32VersionValue","WinAccountAdministratorSid","WinAccountCertAdminsSid","WinAccountCloneableControllersSid","WinAccountComputersSid","WinAccountControllersSid","WinAccountDefaultSystemManagedSid","WinAccountDomainAdminsSid","WinAccountDomainGuestsSid","WinAccountDomainUsersSid","WinAccountEnterpriseAdminsSid","WinAccountEnterpriseKeyAdminsSid","WinAccountGuestSid","WinAccountKeyAdminsSid","WinAccountKrbtgtSid","WinAccountPolicyAdminsSid","WinAccountProtectedUsersSid","WinAccountRasAndIasServersSid","WinAccountReadonlyControllersSid","WinAccountSchemaAdminsSid","WinAnonymousSid","WinApplicationPackageAuthoritySid","WinAuthenticatedUserSid","WinAuthenticationAuthorityAssertedSid","WinAuthenticationFreshKeyAuthSid","WinAuthenticationKeyPropertyAttestationSid","WinAuthenticationKeyPropertyMFASid","WinAuthenticationKeyTrustSid","WinAuthenticationServiceAssertedSid","WinBatchSid","WinBuiltinAccessControlAssistanceOperatorsSid","WinBuiltinAccountOperatorsSid","WinBuiltinAdministratorsSid","WinBuiltinAnyPackageSid","WinBuiltinAuthorizationAccessSid","WinBuiltinBackupOperatorsSid","WinBuiltinCertSvcDComAccessGroup","WinBuiltinCryptoOperatorsSid","WinBuiltinDCOMUsersSid","WinBuiltinDefaultSystemManagedGroupSid","WinBuiltinDomainSid","WinBuiltinEventLogReadersGroup","WinBuiltinGuestsSid","WinBuiltinHyperVAdminsSid","WinBuiltinIUsersSid","WinBuiltinIncomingForestTrustBuildersSid","WinBuiltinNetworkConfigurationOperatorsSid","WinBuiltinPerfLoggingUsersSid","WinBuiltinPerfMonitoringUsersSid","WinBuiltinPowerUsersSid","WinBuiltinPreWindows2000CompatibleAccessSid","WinBuiltinPrintOperatorsSid","WinBuiltinRDSEndpointServersSid","WinBuiltinRDSManagementServersSid","WinBuiltinRDSRemoteAccessServersSid","WinBuiltinRemoteDesktopUsersSid","WinBuiltinRemoteManagementUsersSid","WinBuiltinReplicatorSid","WinBuiltinStorageReplicaAdminsSid","WinBuiltinSystemOperatorsSid","WinBuiltinTerminalServerLicenseServersSid","WinBuiltinUsersSid","WinCacheablePrincipalsGroupSid","WinCapabilityAppointmentsSid","WinCapabilityContactsSid","WinCapabilityDocumentsLibrarySid","WinCapabilityEnterpriseAuthenticationSid","WinCapabilityInternetClientServerSid","WinCapabilityInternetClientSid","WinCapabilityMusicLibrarySid","WinCapabilityPicturesLibrarySid","WinCapabilityPrivateNetworkClientServerSid","WinCapabilityRemovableStorageSid","WinCapabilitySharedUserCertificatesSid","WinCapabilityVideosLibrarySid","WinConsoleLogonSid","WinCreatorGroupServerSid","WinCreatorGroupSid","WinCreatorOwnerRightsSid","WinCreatorOwnerServerSid","WinCreatorOwnerSid","WinDialupSid","WinDigestAuthenticationSid","WinEnterpriseControllersSid","WinEnterpriseReadonlyControllersSid","WinHighLabelSid","WinIUserSid","WinInteractiveSid","WinLocalAccountAndAdministratorSid","WinLocalAccountSid","WinLocalLogonSid","WinLocalServiceSid","WinLocalSid","WinLocalSystemSid","WinLogonFlags","WinLogonIdsSid","WinLowLabelSid","WinMediumLabelSid","WinMediumPlusLabelSid","WinNTLMAuthenticationSid","WinNetworkServiceSid","WinNetworkSid","WinNewEnterpriseReadonlyControllersSid","WinNonCacheablePrincipalsGroupSid","WinNtAuthoritySid","WinNullSid","WinOtherOrganizationSid","WinProxySid","WinRemoteLogonIdSid","WinRestrictedCodeSid","WinSChannelAuthenticationSid","WinSelfSid","WinServiceSid","WinSystemLabelSid","WinTerminalServerSid","WinThisOrganizationCertificateSid","WinThisOrganizationSid","WinUntrustedLabelSid","WinUserModeDriversSid","WinWorldSid","WinWriteRestrictedCodeSid","WorkingSetLimit","WriteOperationCount","WriteProtected","WriteStats","WriteTransferCount","XMM_SAVE_AREA32","XSAVE_AREA","XSAVE_AREA_HEADER","XSAVE_FORMAT","XSTATE_ALIGN_BIT","XSTATE_ALIGN_MASK","XSTATE_AVX","XSTATE_AVX512_KMASK","XSTATE_AVX512_ZMM","XSTATE_AVX512_ZMM_H","XSTATE_COMPACTION_ENABLE","XSTATE_COMPACTION_ENABLE_MASK","XSTATE_CONFIGURATION","XSTATE_CONTEXT","XSTATE_CONTROLFLAG_VALID_MASK","XSTATE_CONTROLFLAG_XSAVEC_MASK","XSTATE_CONTROLFLAG_XSAVEOPT_MASK","XSTATE_FEATURE","XSTATE_GSSE","XSTATE_IPT","XSTATE_LEGACY_FLOATING_POINT","XSTATE_LEGACY_SSE","XSTATE_LWP","XSTATE_MASK_ALLOWED","XSTATE_MASK_AVX","XSTATE_MASK_AVX512","XSTATE_MASK_GSSE","XSTATE_MASK_IPT","XSTATE_MASK_LEGACY","XSTATE_MASK_LEGACY_FLOATING_POINT","XSTATE_MASK_LEGACY_SSE","XSTATE_MASK_LWP","XSTATE_MASK_MPX","XSTATE_MASK_PERSISTENT","XSTATE_MPX_BNDCSR","XSTATE_MPX_BNDREGS","Xmm0","Xmm0","Xmm1","Xmm1","Xmm10","Xmm10","Xmm11","Xmm11","Xmm12","Xmm12","Xmm13","Xmm13","Xmm14","Xmm14","Xmm15","Xmm15","Xmm2","Xmm2","Xmm3","Xmm3","Xmm4","Xmm4","Xmm5","Xmm5","Xmm6","Xmm6","Xmm7","Xmm7","Xmm8","Xmm8","Xmm9","Xmm9","XmmRegisters","_IMAGE_RUNTIME_FUNCTION_ENTRY","_PIMAGE_RUNTIME_FUNCTION_ENTRY","_Self","_Self","__alignment1","__alignment2","__unusedAlignment","bAuxType","bReserved","bReserved","bReserved","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cb","cbFrame","cbProcSize","cbProlog","cbRegs","cdwLocals","cdwParams","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","crc","crc","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dummy","dwBuildNumber","dwBuildNumber","dwBuildNumber","dwBuildNumber","dwFlags","dwMajorVersion","dwMajorVersion","dwMajorVersion","dwMajorVersion","dwMinorVersion","dwMinorVersion","dwMinorVersion","dwMinorVersion","dwOSVersionInfoSize","dwOSVersionInfoSize","dwOSVersionInfoSize","dwOSVersionInfoSize","dwPlatformId","dwPlatformId","dwPlatformId","dwPlatformId","e32_autodata","e32_border","e32_cbnrestab","e32_cpu","e32_datapage","e32_ddkver","e32_debuginfo","e32_debuglen","e32_devid","e32_dircnt","e32_dirtab","e32_eip","e32_enttab","e32_esp","e32_fixupsize","e32_fixupsum","e32_fpagetab","e32_frectab","e32_heapsize","e32_impmod","e32_impmodcnt","e32_impproc","e32_instdemand","e32_instpreload","e32_itermap","e32_lastpagesize","e32_ldrsize","e32_ldrsum","e32_level","e32_magic","e32_mflags","e32_mpages","e32_nressum","e32_nrestab","e32_objcnt","e32_objmap","e32_objtab","e32_os","e32_pagesize","e32_pagesum","e32_preload","e32_res3","e32_restab","e32_rsrccnt","e32_rsrctab","e32_stackobj","e32_startobj","e32_ver","e32_winreslen","e32_winresoff","e32_worder","e_cblp","e_cp","e_cparhdr","e_crlc","e_cs","e_csum","e_ip","e_lfanew","e_lfarlc","e_magic","e_maxalloc","e_minalloc","e_oemid","e_oeminfo","e_ovno","e_res","e_res2","e_sp","e_ss","fHasSEH","fUseBP","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","liManifestLastWriteTime","liPolicyLastWriteTime","lpAppDirPath","lpAssemblyDirectoryName","lpAssemblyEncodedAssemblyIdentity","lpAssemblyManifestPath","lpAssemblyPolicyPath","lpFileName","lpFilePath","lpRootConfigurationPath","lpRootManifestPath","ne_align","ne_autodata","ne_cbenttab","ne_cbnrestab","ne_cmod","ne_cmovent","ne_crc","ne_cres","ne_cseg","ne_csip","ne_enttab","ne_exetyp","ne_expver","ne_flags","ne_flagsothers","ne_heap","ne_imptab","ne_magic","ne_modtab","ne_nrestab","ne_pretthunks","ne_psegrefbytes","ne_restab","ne_rev","ne_rsrctab","ne_segtab","ne_sssp","ne_stack","ne_swaparea","ne_ver","pAttributeV1","pAttributeV1_mut","pEventLogRecords","pFqbn","pFqbn","pFqbn_mut","pFqbn_mut","pInt64","pInt64","pInt64_mut","pInt64_mut","pOctetString","pOctetString","pOctetString_mut","pOctetString_mut","pUint64","pUint64","pUint64_mut","pUint64_mut","pValue","ppString","ppString","ppString_mut","ppString_mut","reserved","rgbReserved","rgbReserved","rgbReserved","rgbReserved","rgbReserved","rgbReserved","s","s","s","s","s","s","s","s","s_mut","s_mut","s_mut","s_mut","s_mut","s_mut","s_mut","set_Alignment","set_Alignment","set_Allocated","set_AllocatedToTargetProcess","set_AllowDemotion","set_AllowPromotion","set_AllowRemoteDowngrade","set_AllowScaling","set_AllowSecureProcessCreation","set_AllowThreadOptOut","set_AmaskShift","set_AmaskValue","set_AuditExportAddressFilter","set_AuditExportAddressFilterPlus","set_AuditImportAddressFilter","set_AuditNoChildProcessCreation","set_AuditNonSystemFontLoading","set_AuditRopCallerCheck","set_AuditRopSimExec","set_AuditRopStackPivot","set_BaseHi","set_BaseHi","set_BaseMid","set_BaseMid","set_CompactionEnabled","set_DataIsDirectory","set_DecreasePolicy","set_Default_Big","set_Default_Big","set_Depth","set_DisableAtlThunkEmulation","set_DisableCStates","set_DisableExtensionPoints","set_DisableNonSystemFonts","set_Disabled","set_DisallowStrippedImages","set_DisallowWin32kSystemCalls","set_Dpl","set_Dpl","set_Enable","set_EnableBottomUpRandomization","set_EnableControlFlowGuard","set_EnableExportAddressFilter","set_EnableExportAddressFilterPlus","set_EnableExportSuppression","set_EnableForceRelocateImages","set_EnableHighEntropy","set_EnableImportAddressFilter","set_EnableRopCallerCheck","set_EnableRopSimExec","set_EnableRopStackPivot","set_ExceptionFlag","set_FilterId","set_Flag","set_Flag","set_FrameSize","set_FuncLen","set_FunctionLength","set_FunctionLength","set_Granularity","set_Granularity","set_H","set_H","set_HandleExceptionsPermanentlyEnabled","set_IncreasePolicy","set_KernelMode","set_L","set_LimitHi","set_LimitHi","set_LongFunction","set_Machine","set_MicrosoftSignedOnly","set_MitigationOptIn","set_NameIsString","set_NameOffset","set_NameType","set_Native","set_NextEntry","set_NoChildProcessCreation","set_NoDomainAccounting","set_NoLowMandatoryLabelImages","set_NoRemoteImages","set_OffsetToDirectory","set_OptimizedSave","set_Parked","set_Persistent","set_PreferSystem32Images","set_Pres","set_Pres","set_Private","set_Process","set_ProhibitDynamicCode","set_PrologLen","set_R","set_RaiseExceptionOnInvalidHandleReference","set_RatePercent","set_RealTime","set_Reg","set_RegF","set_RegI","set_Reserved","set_Reserved","set_Reserved","set_Reserved","set_Reserved","set_Reserved","set_Reserved0","set_Reserved0","set_Reserved0","set_Reserved1","set_Reserved1","set_ReservedAttributes","set_ReservedFlags","set_ReservedFlags","set_ReservedFlags","set_ReservedFlags","set_ReservedFlags","set_ReservedFlags","set_ReservedFlags","set_ReservedFlags","set_ReservedFlags","set_ReservedFlags","set_ReservedFlags","set_ReservedFlags","set_ReservedFlags","set_ReservedFlags","set_ReservedZero0","set_Reserved_0","set_Reserved_0","set_Ret","set_RvaBased","set_Sequence","set_StackAdjust","set_StoreSignedOnly","set_StrictMode","set_Sys","set_Sys","set_ThirtyTwoBit","set_Type","set_Type","set_Type","set_UserMode","set_c","set_cR","set_cbFrame","set_cbProlog","set_cbRegs","set_fHasSEH","set_fUseBP","set_reserved","set_unused1","set_unused2","spare3","szCSDVersion","szCSDVersion","szCSDVersion","szCSDVersion","szLogicalLogFile","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","u","u","u","u","u","u","u","u","u","u","u","u","u","u","u1","u1","u1","u1","u1","u1","u2","u2","u2","u2","u3","u3","ulAppDirPathChars","ulAppDirPathType","ulAssemblyCount","ulAssemblyDirectoryNameLength","ulAssemblyIndex","ulEncodedAssemblyIdentityLength","ulFileCount","ulFileIndexInAssembly","ulFilenameLength","ulFlags","ulFlags","ulFlags","ulFormatVersion","ulManifestPathLength","ulManifestPathType","ulManifestVersionMajor","ulManifestVersionMinor","ulMetadataSatelliteRosterIndex","ulNumEventsForLogFile","ulNumRecords","ulOffStart","ulOffsets","ulPathLength","ulPolicyPathLength","ulPolicyPathType","ulPolicyVersionMajor","ulPolicyVersionMinor","ulRootConfigurationPathChars","ulRootConfigurationPathType","ulRootManifestPathChars","ulRootManifestPathType","ulSize","ulSize","unused1","unused2","wProductType","wProductType","wReserved","wReserved","wServicePackMajor","wServicePackMajor","wServicePackMinor","wServicePackMinor","wSuiteMask","wSuiteMask","excpt","vcruntime","EXCEPTION_CONTINUE_EXECUTION","EXCEPTION_CONTINUE_SEARCH","EXCEPTION_DISPOSITION","EXCEPTION_EXECUTE_HANDLER","ExceptionCollidedUnwind","ExceptionContinueExecution","ExceptionContinueSearch","ExceptionNestedException","intptr_t","ptrdiff_t","size_t"],"q":[[0,"winapi"],[17,"winapi::ctypes"],[47,"winapi::shared"],[52,"winapi::shared::basetsd"],[103,"winapi::shared::guiddef"],[133,"winapi::shared::ktmtypes"],[319,"winapi::shared::minwindef"],[493,"winapi::shared::ntdef"],[1683,"winapi::um"],[1687,"winapi::um::errhandlingapi"],[1705,"winapi::um::libloaderapi"],[1764,"winapi::um::winnt"],[12458,"winapi::vc"],[12460,"winapi::vc::excpt"],[12468,"winapi::vc::vcruntime"]],"d":["","","","","","","","","Built in primitive types provided by the C language","Headers for kernel mode","Headers shared between user mode and kernel mode","","Headers for user mode only","","","Headers that come with VC. Notably, these are not part of …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Type definitions for the basic sized types.","GUID definition","Common types for KTM exposed at both the Nt- and …","Basic Windows Type Definitions for minwin partition","Type definitions for the basic types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pointer to a function with unknown type signature.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pointer to a function with unknown type signature.","","","","","","","","Pointer to a function with unknown type signature.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ApiSet Contract for api-ms-win-core-errorhandling-l1","Headers for user mode only","ApiSet Contract for api-ms-win-core-libraryloader-l1","This module defines the 32-Bit Windows types and constants …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehe declarations of the compiler-dependent intrinsics, …","Declarations used throughout the VCRuntime library.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,518,519,0,0,0,0,0,0,0,0,0,0,161,161,0,0,0,0,0,0,0,0,0,0,0,0,0,0,161,161,161,161,161,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,5,9,0,0,0,0,12,0,0,0,6,7,12,12,0,0,0,0,0,0,0,10,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,13,0,0,0,0,0,8,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,7,9,12,5,13,5,5,0,6,9,10,12,11,13,13,11,11,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,5,6,7,8,9,10,11,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,520,521,522,523,524,525,526,527,528,529,530,531,18,520,521,522,523,524,525,526,527,528,529,530,531,18,18,18,18,520,521,522,523,524,525,526,527,528,529,530,531,18,520,521,522,523,524,525,526,527,528,529,530,531,18,520,521,522,523,524,525,526,527,528,529,530,531,18,520,521,522,523,524,525,526,527,528,529,530,531,18,520,521,522,523,524,525,526,527,528,529,530,531,18,0,0,0,0,0,0,59,60,61,0,0,0,50,53,54,47,48,49,57,58,0,0,0,0,0,0,0,19,19,0,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,53,54,0,39,40,0,0,41,42,43,44,45,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,47,48,49,57,58,59,60,61,62,0,0,41,42,43,44,45,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,47,48,49,57,58,0,0,0,0,0,0,0,0,0,0,0,51,55,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,60,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,33,35,33,35,0,0,0,0,0,0,0,39,40,52,59,60,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,60,61,59,60,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,39,40,41,33,42,43,35,44,45,46,47,48,49,50,51,20,19,52,53,54,55,56,57,58,59,60,61,62,38,39,40,41,33,42,43,35,44,45,46,47,48,49,50,51,20,19,52,53,54,55,56,57,58,59,60,61,62,38,39,40,41,33,42,43,35,44,45,46,47,48,49,50,51,20,19,52,53,54,55,56,57,58,59,60,61,62,38,39,40,41,33,42,43,35,44,45,46,47,48,49,50,51,20,19,52,53,54,55,56,57,58,59,60,61,62,38,39,40,41,33,42,43,35,44,45,46,47,48,49,50,51,20,19,52,53,54,55,56,57,58,59,60,61,62,33,35,19,33,35,19,38,39,40,41,33,42,43,35,44,45,46,47,48,49,50,51,20,19,52,53,54,55,56,57,58,59,60,61,62,38,39,40,41,33,42,43,35,44,45,46,47,48,49,50,51,20,19,52,53,54,55,56,57,58,59,60,61,62,38,39,40,41,33,42,43,35,44,45,46,47,48,49,50,51,20,19,52,53,54,55,56,57,58,59,60,61,62,33,35,20,33,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,373,372,244,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,244,211,235,212,212,212,235,235,211,234,0,211,0,324,364,507,0,0,0,344,337,129,288,287,312,312,0,67,68,63,65,63,65,379,380,381,407,67,68,407,407,435,0,288,96,66,67,68,445,66,160,96,96,69,69,69,317,318,319,317,318,319,69,70,70,71,72,73,71,74,74,345,372,372,372,258,277,332,280,281,282,183,76,76,105,72,0,0,92,94,274,274,208,169,414,0,0,78,78,78,73,79,78,78,78,253,258,261,262,0,0,0,0,0,0,0,407,317,318,319,455,80,81,87,88,429,429,304,305,306,198,201,80,81,87,88,380,379,380,381,379,380,421,422,295,289,372,0,365,373,372,187,189,89,90,432,433,434,81,139,108,150,115,172,74,151,144,106,106,80,82,83,82,83,176,178,179,481,482,450,0,414,426,426,366,84,85,66,183,429,430,84,85,66,352,353,369,344,82,83,82,83,89,0,0,0,0,0,0,0,0,0,427,428,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,396,402,0,427,428,0,0,0,91,93,0,0,94,0,0,91,93,507,357,277,258,277,346,481,419,419,95,377,388,407,67,68,415,435,440,441,95,373,379,381,394,399,440,441,385,386,387,507,507,471,339,427,428,430,430,443,418,96,184,0,294,497,294,479,480,335,335,338,340,238,456,348,191,200,194,206,470,275,236,237,240,351,302,303,304,305,306,308,96,194,182,199,276,69,186,188,193,349,350,352,353,356,476,483,380,97,98,100,101,101,103,103,98,100,285,97,314,0,199,456,456,0,305,306,305,306,305,306,456,427,428,499,499,499,0,332,352,353,315,470,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,237,241,342,437,325,484,484,379,381,104,342,471,182,199,471,479,480,182,199,437,406,427,428,427,428,191,440,457,351,369,105,351,369,373,373,479,250,372,80,81,0,70,348,367,70,427,428,106,491,496,491,496,202,243,252,77,107,108,109,0,79,72,110,111,366,373,372,0,336,379,381,414,366,80,81,191,200,191,200,191,200,191,200,191,200,191,200,0,303,261,261,366,108,427,428,427,428,427,428,479,480,191,200,322,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,479,480,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,200,200,200,200,427,428,200,275,276,156,69,200,466,466,107,365,110,112,78,78,112,110,110,78,78,78,78,96,96,96,427,428,187,189,432,433,434,67,68,406,293,113,438,113,438,439,0,0,0,0,493,498,494,0,193,456,114,114,114,114,426,426,330,330,182,199,182,182,199,200,200,194,373,471,364,471,471,203,204,205,203,204,205,115,203,204,205,432,433,203,204,205,280,281,282,203,204,205,206,0,310,261,443,440,200,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,354,357,366,372,392,96,479,479,352,353,116,118,119,116,118,119,396,402,379,381,382,383,384,0,0,324,324,0,194,121,507,0,0,0,0,0,74,411,423,424,442,89,90,122,123,222,223,224,225,230,231,232,233,242,258,270,272,278,285,110,107,130,111,109,71,112,147,79,152,121,78,73,157,156,320,327,329,330,344,347,364,368,386,387,419,423,424,430,440,441,443,448,456,460,87,88,87,88,122,123,176,178,179,182,200,124,124,126,126,366,411,63,65,63,65,90,347,351,372,115,115,76,63,65,192,194,89,90,76,63,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,207,207,243,207,326,207,0,0,427,428,427,428,193,380,380,244,80,81,346,93,173,174,236,237,69,246,261,156,406,129,156,154,94,0,93,246,427,428,427,428,427,428,427,428,427,428,427,428,427,428,427,428,427,428,427,428,427,428,427,428,342,343,89,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,331,279,187,189,194,432,433,210,185,190,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,423,424,131,131,0,0,0,0,0,0,0,0,0,0,0,372,372,372,181,193,449,394,399,175,198,201,132,408,132,194,351,427,428,470,470,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,133,69,465,133,323,164,366,348,0,339,366,354,357,366,354,357,0,192,194,379,381,440,441,474,475,476,478,258,261,275,414,414,351,369,105,351,369,222,223,224,225,230,231,232,233,336,134,134,330,354,357,497,307,289,295,298,300,298,300,299,300,297,298,299,300,299,300,297,298,299,300,309,0,0,0,0,266,491,491,266,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,278,137,138,137,138,298,300,299,300,137,138,289,297,299,137,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,187,189,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,139,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,256,194,191,191,191,191,337,69,502,489,0,0,0,348,359,360,190,185,183,275,328,394,399,416,417,437,448,455,471,239,276,92,94,366,366,372,306,306,306,288,297,298,299,300,80,81,198,201,92,94,180,143,404,254,142,142,379,381,193,457,427,428,457,338,487,488,488,0,69,148,149,144,145,146,145,146,181,193,449,175,352,353,208,436,436,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,139,377,385,386,387,440,441,151,379,380,381,379,381,379,380,381,379,381,443,379,381,407,415,427,428,435,467,443,0,0,0,0,0,0,0,258,174,183,184,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,0,303,304,305,306,373,352,353,0,304,305,306,0,352,353,371,0,301,366,370,370,369,305,306,356,357,0,370,427,428,479,129,327,329,479,312,284,285,288,278,296,443,386,387,386,387,478,483,484,147,372,352,353,301,366,370,370,365,366,369,356,357,370,479,284,285,288,379,381,379,380,381,379,381,443,379,381,407,415,427,428,435,467,388,392,147,363,406,261,262,414,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,182,191,182,389,390,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,145,146,133,267,270,272,388,393,398,406,407,408,411,150,150,416,417,151,145,146,133,139,298,300,298,300,442,361,177,279,444,106,324,73,105,152,152,153,154,284,285,0,0,0,471,91,93,69,91,93,173,394,399,290,389,390,450,330,330,494,407,415,388,394,399,436,412,415,407,329,290,309,388,394,399,379,381,377,387,440,377,387,436,501,203,204,205,0,0,0,0,0,0,0,0,0,0,0,0,502,502,222,223,224,225,230,231,232,233,239,243,243,316,320,328,477,478,412,413,104,418,104,449,349,350,361,490,193,475,366,96,382,383,384,63,65,132,63,65,132,430,95,95,430,263,286,286,485,491,366,236,237,248,457,191,191,191,191,191,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,333,333,333,333,333,333,333,333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,352,353,352,353,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,258,284,285,284,285,330,329,69,477,478,481,430,0,289,289,299,300,288,297,298,299,300,288,259,347,351,107,144,155,155,371,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,388,128,388,435,388,377,387,257,368,108,368,108,352,353,507,341,348,351,0,0,0,0,0,0,0,0,0,366,372,342,0,0,0,0,0,0,0,0,0,0,0,0,365,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,80,81,243,249,243,288,144,240,240,247,253,261,253,244,247,253,258,292,139,0,427,428,0,0,0,0,0,427,428,290,0,456,289,0,0,0,0,93,359,0,91,91,0,0,0,0,0,0,0,311,372,372,0,0,0,0,0,0,0,0,0,372,93,360,361,362,363,71,432,433,115,425,70,348,367,70,317,318,319,446,458,459,0,0,0,0,0,0,0,0,89,191,196,191,196,191,196,191,196,191,196,191,196,191,196,191,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,507,130,373,98,100,297,299,101,297,101,103,299,103,98,100,158,158,191,196,191,196,191,196,191,196,191,196,191,196,286,308,286,69,0,471,457,366,89,90,90,445,317,318,319,199,0,0,0,0,0,0,0,311,313,159,159,481,373,326,326,326,0,479,480,340,305,306,304,305,306,305,306,91,72,70,108,105,151,106,173,174,270,272,274,277,309,156,154,94,312,129,69,326,327,330,348,352,353,366,70,413,418,419,437,440,469,470,471,158,67,68,67,68,182,183,322,348,351,352,353,447,182,184,285,322,351,352,353,427,428,447,182,285,351,427,428,447,182,285,447,447,160,110,107,130,111,109,71,112,147,79,152,121,78,73,69,471,139,80,81,91,355,358,0,0,493,496,498,443,253,258,253,253,292,244,341,327,330,330,89,470,164,236,237,366,368,108,369,191,191,196,191,196,372,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,464,0,160,436,436,436,436,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,427,428,427,428,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,431,431,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,237,239,211,236,237,211,288,194,186,188,0,0,0,0,0,0,0,0,0,0,0,243,193,321,396,402,379,381,440,389,390,0,258,427,428,0,242,0,0,292,191,200,191,200,191,200,191,200,191,200,191,200,394,399,202,281,106,429,430,310,0,0,338,0,0,0,0,0,0,0,0,0,0,0,0,0,331,0,0,0,148,149,145,146,145,146,84,85,169,265,210,210,253,258,253,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,0,0,0,0,0,0,0,0,0,0,0,84,85,253,292,385,386,387,151,385,386,387,151,322,382,383,440,441,309,309,238,242,243,244,92,313,314,316,96,327,329,330,378,143,406,418,420,427,428,429,441,470,483,507,405,379,380,381,385,386,387,435,151,379,381,379,381,379,381,379,381,440,441,379,380,381,377,388,379,381,379,381,379,380,381,67,68,366,372,372,306,306,306,260,260,122,365,367,70,108,373,366,366,456,122,359,360,457,366,89,280,281,282,505,280,281,282,505,67,68,355,358,438,439,310,317,318,319,349,350,352,353,355,358,359,360,485,355,358,348,348,330,351,359,182,199,389,390,147,112,471,443,164,164,280,281,282,379,381,495,0,396,402,421,422,423,424,423,424,165,391,403,165,80,81,372,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,372,372,372,372,372,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,352,353,352,353,373,392,182,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,194,349,350,352,353,349,350,448,352,353,362,372,0,0,115,287,287,348,367,70,369,377,385,386,387,407,411,412,413,414,415,427,428,435,440,441,151,471,284,285,471,491,352,353,492,486,276,0,264,0,0,0,0,0,396,400,0,0,0,0,0,0,0,0,0,0,0,261,262,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,262,0,0,258,261,0,0,166,0,0,166,0,0,0,0,0,0,0,0,287,307,307,287,287,341,142,307,142,287,354,357,356,355,358,287,0,0,0,0,0,0,0,485,498,501,0,0,0,0,0,0,0,0,0,0,0,0,0,0,258,392,80,81,151,92,94,314,317,318,319,349,350,351,352,353,389,390,403,404,435,456,465,469,474,476,477,0,0,291,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,500,0,0,464,283,283,0,0,0,0,0,0,0,0,0,0,0,283,437,180,414,168,89,90,168,168,113,168,113,0,372,166,167,251,406,139,0,334,0,0,471,471,0,166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,443,209,389,390,469,270,272,268,270,272,270,272,191,191,0,0,0,0,0,116,118,119,267,274,342,385,386,387,420,429,151,460,470,507,116,118,119,366,372,366,366,299,300,159,165,378,388,405,159,165,486,427,428,155,155,304,305,306,304,305,306,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,470,372,0,397,397,97,97,0,0,379,381,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,366,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,285,286,481,308,286,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,190,195,190,195,190,195,190,195,190,195,190,195,190,195,190,195,190,195,190,195,190,195,190,195,190,195,190,195,190,195,190,195,182,0,0,280,282,319,319,205,391,391,394,399,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,126,191,192,193,194,195,124,196,134,197,87,80,82,198,199,200,88,81,83,201,202,203,204,205,206,207,208,209,164,84,169,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,167,166,85,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,116,280,118,281,119,282,283,139,284,158,285,286,110,107,130,111,109,71,112,147,79,152,121,78,73,287,288,289,290,291,292,293,294,295,296,297,137,98,101,298,299,138,100,103,300,301,97,302,303,304,305,306,307,308,309,310,92,157,153,91,311,156,154,94,312,129,93,313,69,314,315,316,96,317,318,319,320,321,322,323,324,66,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,72,368,70,108,105,122,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,155,388,148,145,389,149,146,390,391,143,142,128,77,76,392,393,394,395,396,397,398,399,400,401,402,159,403,165,404,405,406,407,408,63,409,65,410,67,68,95,411,412,413,160,414,415,150,133,104,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,115,89,90,432,433,168,434,435,436,172,437,438,113,439,440,441,74,442,132,151,114,443,444,445,106,131,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,144,123,507,508,509,510,511,512,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,126,191,192,193,194,195,124,196,134,197,87,80,82,198,199,200,88,81,83,201,202,203,204,205,206,207,208,209,164,84,169,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,167,166,85,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,116,280,118,281,119,282,283,139,284,158,285,286,110,107,130,111,109,71,112,147,79,152,121,78,73,287,288,289,290,291,292,293,294,295,296,297,137,98,101,298,299,138,100,103,300,301,97,302,303,304,305,306,307,308,309,310,92,157,153,91,311,156,154,94,312,129,93,313,69,314,315,316,96,317,318,319,320,321,322,323,324,66,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,72,368,70,108,105,122,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,155,388,148,145,389,149,146,390,391,143,142,128,77,76,392,393,394,395,396,397,398,399,400,401,402,159,403,165,404,405,406,407,408,63,409,65,410,67,68,95,411,412,413,160,414,415,150,133,104,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,115,89,90,432,433,168,434,435,436,172,437,438,113,439,440,441,74,442,132,151,114,443,444,445,106,131,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,144,123,507,508,509,510,511,512,443,172,172,172,172,172,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,126,191,192,193,194,195,124,196,134,197,87,80,82,198,199,200,88,81,83,201,202,203,204,205,206,207,208,209,164,84,169,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,167,166,85,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,116,280,118,281,119,282,283,139,284,158,285,286,110,107,130,111,109,71,112,147,79,152,121,78,73,287,288,289,290,291,292,293,294,295,296,297,137,98,101,298,299,138,100,103,300,301,97,302,303,304,305,306,307,308,309,310,92,157,153,91,311,156,154,94,312,129,93,313,69,314,315,316,96,317,318,319,320,321,322,323,324,66,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,72,368,70,108,105,122,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,155,388,148,145,389,149,146,390,391,143,142,128,77,76,392,393,394,395,396,397,398,399,400,401,402,159,403,165,404,405,406,407,408,63,409,65,410,67,68,95,411,412,413,160,414,415,150,133,104,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,115,89,90,432,433,168,434,435,436,172,437,438,113,439,440,441,74,442,132,151,114,443,444,445,106,131,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,144,123,507,508,509,510,511,512,395,401,503,504,506,508,509,510,511,512,451,452,453,454,468,451,452,453,454,451,452,453,454,451,452,453,454,451,452,453,454,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,172,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,126,191,192,193,194,195,124,196,134,197,87,80,82,198,199,200,88,81,83,201,202,203,204,205,206,207,208,209,164,84,169,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,167,166,85,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,116,280,118,281,119,282,283,139,284,158,285,286,110,107,130,111,109,71,112,147,79,152,121,78,73,287,288,289,290,291,292,293,294,295,296,297,137,98,101,298,299,138,100,103,300,301,97,302,303,304,305,306,307,308,309,310,92,157,153,91,311,156,154,94,312,129,93,313,69,314,315,316,96,317,318,319,320,321,322,323,324,66,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,72,368,70,108,105,122,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,155,388,148,145,389,149,146,390,391,143,142,128,77,76,392,393,394,395,396,397,398,399,400,401,402,159,403,165,404,405,406,407,408,63,409,65,410,67,68,95,411,412,413,160,414,415,150,133,104,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,115,89,90,432,433,168,434,435,436,172,437,438,113,439,440,441,74,442,132,151,114,443,444,445,106,131,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,144,123,507,508,509,510,511,512,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,126,191,192,193,194,195,124,196,134,197,87,80,82,198,199,200,88,81,83,201,202,203,204,205,206,207,208,209,164,84,169,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,167,166,85,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,116,280,118,281,119,282,283,139,284,158,285,286,110,107,130,111,109,71,112,147,79,152,121,78,73,287,288,289,290,291,292,293,294,295,296,297,137,98,101,298,299,138,100,103,300,301,97,302,303,304,305,306,307,308,309,310,92,157,153,91,311,156,154,94,312,129,93,313,69,314,315,316,96,317,318,319,320,321,322,323,324,66,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,72,368,70,108,105,122,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,155,388,148,145,389,149,146,390,391,143,142,128,77,76,392,393,394,395,396,397,398,399,400,401,402,159,403,165,404,405,406,407,408,63,409,65,410,67,68,95,411,412,413,160,414,415,150,133,104,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,115,89,90,432,433,168,434,435,436,172,437,438,113,439,440,441,74,442,132,151,114,443,444,445,106,131,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,144,123,507,508,509,510,511,512,463,463,468,463,463,463,463,462,462,468,468,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,273,273,472,269,271,269,271,269,271,269,271,269,271,269,271,269,271,269,271,268,269,271,269,271,172,391,395,397,399,400,401,126,124,134,97,133,131,123,402,126,124,134,97,133,131,123,67,68,69,69,70,70,71,72,73,71,74,74,78,78,78,73,79,78,78,78,80,81,80,81,96,104,105,80,81,106,107,108,109,79,72,110,111,80,81,107,110,112,78,78,112,110,110,78,78,78,78,115,121,89,90,90,115,89,90,80,81,89,90,130,105,139,89,80,81,144,139,147,147,150,150,151,139,106,73,105,152,152,104,96,69,144,152,80,81,144,139,71,115,89,130,158,69,89,90,90,72,70,108,105,151,106,158,67,68,67,68,160,110,107,130,111,109,71,112,147,79,152,121,78,73,69,139,80,81,89,160,106,89,147,112,80,81,115,80,81,151,139,89,90,172,172,172,172,172,172,74,74,372,451,452,453,454,472,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,126,191,192,193,194,195,124,196,134,197,87,80,82,198,199,200,88,81,83,201,202,203,204,205,206,207,208,209,164,84,169,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,167,166,85,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,116,280,118,281,119,282,283,139,284,158,285,286,110,107,130,111,109,71,112,147,79,152,121,78,73,287,288,289,290,291,292,293,294,295,296,297,137,98,101,298,299,138,100,103,300,301,97,302,303,304,305,306,307,308,309,310,92,157,153,91,311,156,154,94,312,129,93,313,69,314,315,316,96,317,318,319,320,321,322,323,324,66,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,72,368,70,108,105,122,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,155,388,148,145,389,149,146,390,391,143,142,128,77,76,392,393,394,395,396,397,398,399,400,401,402,159,403,165,404,405,406,407,408,63,409,65,410,67,68,95,411,412,413,160,414,415,150,133,104,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,115,89,90,432,433,168,434,435,436,172,437,438,113,439,440,441,74,442,132,151,114,443,444,445,106,131,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,144,123,507,508,509,510,511,512,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,126,191,192,193,194,195,124,196,134,197,87,80,82,198,199,200,88,81,83,201,202,203,204,205,206,207,208,209,164,84,169,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,167,166,85,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,116,280,118,281,119,282,283,139,284,158,285,286,110,107,130,111,109,71,112,147,79,152,121,78,73,287,288,289,290,291,292,293,294,295,296,297,137,98,101,298,299,138,100,103,300,301,97,302,303,304,305,306,307,308,309,310,92,157,153,91,311,156,154,94,312,129,93,313,69,314,315,316,96,317,318,319,320,321,322,323,324,66,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,72,368,70,108,105,122,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,155,388,148,145,389,149,146,390,391,143,142,128,77,76,392,393,394,395,396,397,398,399,400,401,402,159,403,165,404,405,406,407,408,63,409,65,410,67,68,95,411,412,413,160,414,415,150,133,104,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,115,89,90,432,433,168,434,435,436,172,437,438,113,439,440,441,74,442,132,151,114,443,444,445,106,131,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,144,123,507,508,509,510,511,512,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,126,191,192,193,194,195,124,196,134,197,87,80,82,198,199,200,88,81,83,201,202,203,204,205,206,207,208,209,164,84,169,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,167,166,85,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,116,280,118,281,119,282,283,139,284,158,285,286,110,107,130,111,109,71,112,147,79,152,121,78,73,287,288,289,290,291,292,293,294,295,296,297,137,98,101,298,299,138,100,103,300,301,97,302,303,304,305,306,307,308,309,310,92,157,153,91,311,156,154,94,312,129,93,313,69,314,315,316,96,317,318,319,320,321,322,323,324,66,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,72,368,70,108,105,122,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,155,388,148,145,389,149,146,390,391,143,142,128,77,76,392,393,394,395,396,397,398,399,400,401,402,159,403,165,404,405,406,407,408,63,409,65,410,67,68,95,411,412,413,160,414,415,150,133,104,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,115,89,90,432,433,168,434,435,436,172,437,438,113,439,440,441,74,442,132,151,114,443,444,445,106,131,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,144,123,507,508,509,510,511,512,191,280,281,282,302,311,313,369,403,411,104,434,439,151,443,507,197,245,298,300,409,410,197,245,298,300,298,300,468,468,468,463,461,463,463,461,462,462,463,464,468,463,463,463,463,463,473,472,172,473,462,463,463,463,463,468,468,468,468,472,473,74,74,453,454,453,454,453,454,453,454,453,454,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],4],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[]],[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,[14,15],0,0,[16,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14,15],0,[16,14],0,0,0,0,0,0,0,0,0,0,0,0,[[14,14],17],[[15,15],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,18],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,[[21,[20]]]],[19,[[21,[20]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[22,23,24,25,26]],0,0,[27,28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[29,30]],[[30,29]],0,0,0,0,0,0,[[31,31],28],[[28,31],27],[[28,31,31],27],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[32,4],[32,4],0,[32,4],[32,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[28,31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[33,34],[35,36],[33,34],[35,36],0,[37,37],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[27,31],[27,31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[28,31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,38],[39,39],[40,40],[41,41],[33,33],[42,42],[43,43],[35,35],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[20,20],[19,19],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,42],[35,44],[19,52],[33,42],[35,44],[19,52],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[33,43],[35,44],0,[33,43],[35,44],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[63,64],[65,16],[63,64],[65,16],0,0,0,0,0,0,0,0,0,0,0,0,[66,64],[67,16],[68,16],0,[66,64],0,0,0,0,[69,15],[69,15],0,0,0,0,0,0,0,[70,16],[70,16],[71,16],[72,14],[73,16],[71,16],[74,75],[74,75],0,0,0,0,0,0,0,0,0,0,0,[76,77],[76,77],0,0,0,0,0,0,0,0,0,0,0,0,0,[78,16],[78,16],[78,16],[73,16],[79,16],[78,16],[78,16],[78,16],0,0,0,0,0,0,0,0,0,0,[14,4],0,0,0,0,0,[80,16],[81,16],0,0,0,0,0,0,0,0,0,[80,16],[81,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[82,80],[83,81],[82,80],[83,81],0,0,0,0,0,0,0,0,0,0,0,[84,[[21,[15]]]],[85,[[21,[15]]]],[66,86],0,0,0,[84,[[21,[15]]]],[85,[[21,[15]]]],[66,86],0,0,0,0,[82,87],[83,88],[82,87],[83,88],[89,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[90,16],0,0,0,0,0,0,0,0,[91,92],[93,94],0,0,0,0,0,[91,92],[93,94],0,0,0,0,0,0,0,0,0,[95,16],0,0,0,0,0,0,0,0,0,[95,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[96,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[97,16],[98,99],[100,99],[101,102],[101,102],[103,99],[103,99],[98,99],[100,99],0,[97,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[104,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[105,15],0,0,0,0,0,0,0,[80,16],[81,16],0,0,0,0,0,0,0,[106,64],0,0,0,0,0,0,0,0,[107,16],[108,16],[109,16],0,[79,16],[72,14],[110,16],[111,16],0,0,0,0,0,0,0,0,0,[80,16],[81,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[107,16],0,[110,16],[112,16],[78,16],[78,16],[112,16],[110,16],[110,16],[78,16],[78,16],[78,16],[78,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[113,64],0,[113,64],0,0,0,0,0,0,0,0,0,0,0,0,[114,16],[114,16],[114,16],[114,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[115,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[116,117],[118,16],[119,120],[116,117],[118,16],[119,120],0,0,0,0,0,0,0,0,0,0,0,0,0,[121,16],0,0,0,0,0,0,0,0,0,0,0,[89,16],[90,16],[122,105],[123,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[122,105],[123,16],0,0,0,0,0,[124,[[21,[125]]]],[124,[[21,[125]]]],[126,127],[126,127],0,0,[63,64],[65,16],[63,64],[65,16],[90,16],0,0,0,[115,16],0,[76,128],[63,64],[65,16],0,0,[89,16],[90,16],[76,128],[63,64],[65,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[80,16],[81,16],0,[93,129],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[93,129],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[89,16],[90,16],0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,16],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[130,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[131,106],[131,106],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[132,14],0,[132,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[64,64],[16,16],[64,64],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[64,4],[16,4],[64,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14,4],[14,4],[14,4],[15,4],[16,4],[16,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,4],[[16,16],4],0,[133,14],0,0,[133,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[105,15],0,0,0,0,0,0,0,0,0,0,0,[134,[[21,[135]]]],[134,[[21,[135]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,4],[16,4],[16,4],[136,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[137,120],[138,120],[137,120],[138,120],0,0,0,0,[137,120],[138,120],0,0,0,[137,120],[138,120],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[139,16],[89,16],0,0,[140,141],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[80,16],[81,16],0,0,0,0,0,0,0,0,[142,143],[142,143],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[144,16],[145,[[21,[16]]]],[146,[[21,[16]]]],[145,[[21,[16]]]],[146,[[21,[16]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[14,14],141],[[141,14],140],[[141,14,14],140],0,[16,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[139,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[147,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[147,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[145,148],[146,149],[133,16],0,0,0,0,0,0,0,0,0,0,[150,16],[150,16],0,0,[151,14],[145,148],[146,149],[133,16],[139,16],0,0,0,0,0,0,0,0,0,[106,64],0,[73,16],[105,15],[152,16],[152,16],0,0,0,0,0,0,0,0,[91,153],[93,154],0,[91,153],[93,154],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[104,16],0,0,0,0,0,0,0,0,[96,16],0,0,0,[63,64],[65,16],[132,14],[63,64],[65,16],[132,14],0,[95,16],[95,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[141,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[69,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[144,16],[155,16],[155,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[152,16],[80,16],[81,16],0,0,0,0,[144,16],0,0,0,0,0,0,0,0,0,0,0,[139,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[93,156],0,0,[91,157],[91,157],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[93,156],0,0,0,0,[71,16],0,0,[115,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[89,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[130,16],0,[98,99],[100,99],0,0,[101,102],0,[101,102],[103,99],0,[103,99],[98,99],[100,99],0,[158,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[69,15],0,0,0,0,[89,16],[90,16],[90,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[159,16],[159,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[91,[[21,[64]]]],[72,14],[70,16],[108,16],[105,15],[151,14],[106,64],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[158,16],[67,16],[68,16],[67,16],[68,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[160,16],[110,16],[107,16],[130,16],[111,16],[109,16],[71,16],[112,16],[147,16],[79,16],[152,16],[121,16],[78,16],[73,16],[69,15],0,[139,16],[80,16],[81,16],[91,[[21,[64]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[89,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[161,161,162]],0,0,0,0,[[161,162,163]],0,0,0,0,0,0,0,0,0,0,0,[[161,161,162]],0,0,0,0,0,0,0,0,[[161,162]],0,0,[160,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[140,14],[140,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[141,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[106,64],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[145,[[21,[15]]]],[146,[[21,[15]]]],[145,[[21,[15]]]],[146,[[21,[15]]]],[84,164],[85,164],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[84,164],[85,164],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[122,15],0,0,0,0,0,0,0,0,[122,15],0,0,0,0,[89,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[147,16],[112,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[165,16],0,0,[165,16],[80,16],[81,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[115,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[166,167],0,0,[166,167],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[142,16],0,[142,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[80,16],[81,16],[151,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[168,16],0,0,[168,16],[168,16],[113,64],[168,16],[113,64],0,0,[166,169],0,0,0,[139,16],0,0,0,0,0,0,0,[166,169],[170,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[116,16],[118,16],[119,16],0,0,0,0,0,0,0,0,0,0,0,0,[116,16],[118,16],[119,16],0,0,0,0,0,0,[159,16],[165,16],0,0,0,[159,16],[165,16],0,0,0,[155,16],[155,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[171,171],171],0,0,0,0,0,0,[97,16],[97,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[172,14],0,[172,14],[172,14],0,0,[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[126,126],[191,191],[192,192],[193,193],[194,194],[195,195],[124,124],[196,196],[134,134],[197,197],[87,87],[80,80],[82,82],[198,198],[199,199],[200,200],[88,88],[81,81],[83,83],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[164,164],[84,84],[169,169],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[216,216],[217,217],[218,218],[219,219],[220,220],[221,221],[222,222],[223,223],[224,224],[225,225],[226,226],[227,227],[228,228],[229,229],[230,230],[231,231],[232,232],[233,233],[234,234],[235,235],[236,236],[237,237],[238,238],[239,239],[240,240],[241,241],[242,242],[243,243],[244,244],[167,167],[166,166],[85,85],[245,245],[246,246],[247,247],[248,248],[249,249],[250,250],[251,251],[252,252],[253,253],[254,254],[255,255],[256,256],[257,257],[258,258],[259,259],[260,260],[261,261],[262,262],[263,263],[264,264],[265,265],[266,266],[267,267],[268,268],[269,269],[270,270],[271,271],[272,272],[273,273],[274,274],[275,275],[276,276],[277,277],[278,278],[279,279],[116,116],[280,280],[118,118],[281,281],[119,119],[282,282],[283,283],[139,139],[284,284],[158,158],[285,285],[286,286],[110,110],[107,107],[130,130],[111,111],[109,109],[71,71],[112,112],[147,147],[79,79],[152,152],[121,121],[78,78],[73,73],[287,287],[288,288],[289,289],[290,290],[291,291],[292,292],[293,293],[294,294],[295,295],[296,296],[297,297],[137,137],[98,98],[101,101],[298,298],[299,299],[138,138],[100,100],[103,103],[300,300],[301,301],[97,97],[302,302],[303,303],[304,304],[305,305],[306,306],[307,307],[308,308],[309,309],[310,310],[92,92],[157,157],[153,153],[91,91],[311,311],[156,156],[154,154],[94,94],[312,312],[129,129],[93,93],[313,313],[69,69],[314,314],[315,315],[316,316],[96,96],[317,317],[318,318],[319,319],[320,320],[321,321],[322,322],[323,323],[324,324],[66,66],[325,325],[326,326],[327,327],[328,328],[329,329],[330,330],[331,331],[332,332],[333,333],[334,334],[335,335],[336,336],[337,337],[338,338],[339,339],[340,340],[341,341],[342,342],[343,343],[344,344],[345,345],[346,346],[347,347],[348,348],[349,349],[350,350],[351,351],[352,352],[353,353],[354,354],[355,355],[356,356],[357,357],[358,358],[359,359],[360,360],[361,361],[362,362],[363,363],[364,364],[365,365],[366,366],[367,367],[72,72],[368,368],[70,70],[108,108],[105,105],[122,122],[369,369],[370,370],[371,371],[372,372],[373,373],[374,374],[375,375],[376,376],[377,377],[378,378],[379,379],[380,380],[381,381],[382,382],[383,383],[384,384],[385,385],[386,386],[387,387],[155,155],[388,388],[148,148],[145,145],[389,389],[149,149],[146,146],[390,390],[391,391],[143,143],[142,142],[128,128],[77,77],[76,76],[392,392],[393,393],[394,394],[395,395],[396,396],[397,397],[398,398],[399,399],[400,400],[401,401],[402,402],[159,159],[403,403],[165,165],[404,404],[405,405],[406,406],[407,407],[408,408],[63,63],[409,409],[65,65],[410,410],[67,67],[68,68],[95,95],[411,411],[412,412],[413,413],[160,160],[414,414],[415,415],[150,150],[133,133],[104,104],[416,416],[417,417],[418,418],[419,419],[420,420],[421,421],[422,422],[423,423],[424,424],[425,425],[426,426],[427,427],[428,428],[429,429],[430,430],[431,431],[115,115],[89,89],[90,90],[432,432],[433,433],[168,168],[434,434],[435,435],[436,436],[172,172],[437,437],[438,438],[113,113],[439,439],[440,440],[441,441],[74,74],[442,442],[132,132],[151,151],[114,114],[443,443],[444,444],[445,445],[106,106],[131,131],[446,446],[447,447],[448,448],[449,449],[450,450],[451,451],[452,452],[453,453],[454,454],[455,455],[456,456],[457,457],[458,458],[459,459],[460,460],[461,461],[462,462],[463,463],[464,464],[465,465],[466,466],[467,467],[468,468],[469,469],[470,470],[471,471],[472,472],[473,473],[474,474],[475,475],[476,476],[477,477],[478,478],[479,479],[480,480],[481,481],[482,482],[483,483],[484,484],[485,485],[486,486],[487,487],[488,488],[489,489],[490,490],[491,491],[492,492],[493,493],[494,494],[495,495],[496,496],[497,497],[498,498],[499,499],[500,500],[501,501],[502,502],[503,503],[504,504],[505,505],[506,506],[144,144],[123,123],[507,507],[508,508],[509,509],[510,510],[511,511],[512,512],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[172,14],[172,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[273,513],[273,513],0,[269,514],[271,[[21,[16]]]],[269,514],[271,[[21,[16]]]],[269,515],[271,[[21,[16]]]],[269,515],[271,[[21,[16]]]],[269,516],[271,[[21,[16]]]],[269,516],[271,[[21,[16]]]],[269,135],[271,[[21,[16]]]],[269,135],[271,[[21,[16]]]],0,[269,517],[271,[[21,[16]]]],[269,517],[271,[[21,[16]]]],[172,14],0,0,0,0,0,0,[126,190],[124,195],[134,196],[97,301],[133,150],[131,445],[123,144],0,[126,190],[124,195],[134,196],[97,301],[133,150],[131,445],[123,144],[[67,16]],[[68,16]],[[69,15]],[[69,15]],[[70,16]],[[70,16]],[[71,16]],[[72,14]],[[73,16]],[[71,16]],[[74,75]],[[74,75]],[[78,16]],[[78,16]],[[78,16]],[[73,16]],[[79,16]],[[78,16]],[[78,16]],[[78,16]],[[80,16]],[[81,16]],[[80,16]],[[81,16]],[[96,16]],[[104,16]],[[105,15]],[[80,16]],[[81,16]],[[106,64]],[[107,16]],[[108,16]],[[109,16]],[[79,16]],[[72,14]],[[110,16]],[[111,16]],[[80,16]],[[81,16]],[[107,16]],[[110,16]],[[112,16]],[[78,16]],[[78,16]],[[112,16]],[[110,16]],[[110,16]],[[78,16]],[[78,16]],[[78,16]],[[78,16]],[[115,16]],[[121,16]],[[89,16]],[[90,16]],[[90,16]],[[115,16]],[[89,16]],[[90,16]],[[80,16]],[[81,16]],[[89,16]],[[90,16]],[[130,16]],[[105,15]],[[139,16]],[[89,16]],[[80,16]],[[81,16]],[[144,16]],[[139,16]],[[147,16]],[[147,16]],[[150,16]],[[150,16]],[[151,14]],[[139,16]],[[106,64]],[[73,16]],[[105,15]],[[152,16]],[[152,16]],[[104,16]],[[96,16]],[[69,15]],[[144,16]],[[152,16]],[[80,16]],[[81,16]],[[144,16]],[[139,16]],[[71,16]],[[115,16]],[[89,16]],[[130,16]],[[158,16]],[[69,15]],[[89,16]],[[90,16]],[[90,16]],[[72,14]],[[70,16]],[[108,16]],[[105,15]],[[151,14]],[[106,64]],[[158,16]],[[67,16]],[[68,16]],[[67,16]],[[68,16]],[[160,16]],[[110,16]],[[107,16]],[[130,16]],[[111,16]],[[109,16]],[[71,16]],[[112,16]],[[147,16]],[[79,16]],[[152,16]],[[121,16]],[[78,16]],[[73,16]],[[69,15]],[[139,16]],[[80,16]],[[81,16]],[[89,16]],[[160,16]],[[106,64]],[[89,16]],[[147,16]],[[112,16]],[[80,16]],[[81,16]],[[115,16]],[[80,16]],[[81,16]],[[151,14]],[[139,16]],[[89,16]],[[90,16]],[[172,14]],[[172,14]],[[172,14]],[[172,14]],[[172,14]],[[172,14]],[[74,75]],[[74,75]],0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[74,75],[74,75],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"GUID"],[4,"Result"],[3,"TypeId"],[15,"bool"],[3,"TRANSACTION_NOTIFICATION"],[3,"TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT"],[3,"TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT"],[3,"TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT"],[3,"TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT"],[3,"TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT"],[3,"KCRM_MARSHAL_HEADER"],[3,"KCRM_TRANSACTION_BLOB"],[3,"KCRM_PROTOCOL_BLOB"],[6,"WORD"],[6,"BYTE"],[6,"DWORD"],[6,"LONG"],[3,"FILETIME"],[3,"RTL_BALANCED_NODE_u"],[3,"RTL_BALANCED_NODE"],[15,"array"],[6,"POBJECT_ATTRIBUTES"],[6,"PUNICODE_STRING"],[6,"ULONG"],[6,"HANDLE"],[6,"PVOID"],[6,"LCID"],[6,"LANGID"],[6,"PLIST_ENTRY32"],[6,"PLIST_ENTRY64"],[6,"USHORT"],[6,"NTSTATUS"],[3,"LARGE_INTEGER"],[6,"LONGLONG"],[3,"ULARGE_INTEGER"],[6,"ULONGLONG"],[6,"PRTL_BALANCED_NODE"],[3,"QUAD"],[3,"PROCESSOR_NUMBER"],[3,"GROUP_AFFINITY"],[3,"FLOAT128"],[3,"LARGE_INTEGER_s"],[3,"LARGE_INTEGER_u"],[3,"ULARGE_INTEGER_s"],[3,"ULARGE_INTEGER_u"],[3,"LUID"],[3,"STRING"],[3,"CSTRING"],[3,"UNICODE_STRING"],[3,"LIST_ENTRY"],[3,"SINGLE_LIST_ENTRY"],[3,"RTL_BALANCED_NODE_s"],[3,"LIST_ENTRY32"],[3,"LIST_ENTRY64"],[3,"SINGLE_LIST_ENTRY32"],[3,"WNF_STATE_NAME"],[3,"STRING32"],[3,"STRING64"],[3,"OBJECT_ATTRIBUTES64"],[3,"OBJECT_ATTRIBUTES32"],[3,"OBJECT_ATTRIBUTES"],[3,"OBJECTID"],[3,"IMAGE_THUNK_DATA64_u1"],[6,"ULONGLONG"],[3,"IMAGE_THUNK_DATA32_u1"],[3,"FILE_SEGMENT_ELEMENT"],[3,"IMAGE_TLS_DIRECTORY64"],[3,"IMAGE_TLS_DIRECTORY32"],[3,"SYSTEM_CPU_SET_INFORMATION_CpuSet"],[3,"PROCESSOR_POWER_POLICY_INFO"],[3,"PROCESS_MITIGATION_DYNAMIC_CODE_POLICY"],[3,"PROCESSOR_IDLESTATE_POLICY_Flags"],[3,"PROCESS_MITIGATION_CHILD_PROCESS_POLICY"],[3,"IMAGE_ARCHITECTURE_HEADER"],[6,"c_uint"],[3,"IMAGE_AUX_SYMBOL_Sym_FcnAry"],[3,"IMAGE_AUX_SYMBOL_Sym_FcnAry_Array"],[3,"PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY"],[3,"PROCESS_MITIGATION_FONT_DISABLE_POLICY"],[3,"LDT_ENTRY_Bits"],[3,"WOW64_LDT_ENTRY_Bits"],[3,"LDT_ENTRY_HighWord"],[3,"WOW64_LDT_ENTRY_HighWord"],[3,"SE_SID"],[3,"SE_TOKEN_USER_u2"],[6,"PVOID64"],[3,"LDT_ENTRY_Bytes"],[3,"WOW64_LDT_ENTRY_Bytes"],[3,"IMAGE_ARM_RUNTIME_FUNCTION_ENTRY"],[3,"IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY"],[3,"SYSTEM_LOGICAL_PROCESSOR_INFORMATION_u"],[3,"CACHE_DESCRIPTOR"],[3,"SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX_u"],[3,"CACHE_RELATIONSHIP"],[3,"IMAGE_IMPORT_DESCRIPTOR_u"],[3,"XSTATE_CONFIGURATION"],[3,"JOBOBJECT_CPU_RATE_CONTROL_INFORMATION_u"],[3,"JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2_u2"],[6,"JOBOBJECT_RATE_CONTROL_TOLERANCE"],[3,"JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2_u2"],[3,"JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2_u3"],[6,"JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL"],[3,"JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2_u3"],[3,"IMAGE_RESOURCE_DIRECTORY_ENTRY"],[3,"PROCESSOR_PERFSTATE_POLICY_u_Flags"],[3,"SLIST_HEADER_HeaderX64"],[3,"PROCESS_MITIGATION_DEP_POLICY"],[3,"PROCESSOR_POWER_POLICY"],[3,"PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY"],[3,"PROCESS_MITIGATION_ASLR_POLICY"],[3,"PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY"],[3,"PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY"],[3,"IMAGE_FUNCTION_ENTRY64_u"],[3,"IMAGE_COR20_HEADER_u"],[3,"IMAGE_CE_RUNTIME_FUNCTION_ENTRY"],[3,"NT_TIB_u"],[6,"PVOID"],[3,"NT_TIB32_u"],[3,"NT_TIB64_u"],[6,"DWORD64"],[3,"PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY"],[3,"PROCESSOR_PERFSTATE_POLICY_u"],[3,"TP_CALLBACK_ENVIRON_V3_u"],[3,"KNONVOLATILE_CONTEXT_POINTERS_u1"],[6,"PM128A"],[3,"CONTEXT_u"],[6,"XMM_SAVE_AREA32"],[3,"IMAGE_AUX_SYMBOL_Sym_FcnAry_Function"],[3,"GROUP_RELATIONSHIP"],[3,"PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY"],[3,"SLIST_HEADER"],[3,"IMPORT_OBJECT_HEADER_u"],[3,"IMAGE_RESOURCE_DIRECTORY_ENTRY_u"],[3,"KNONVOLATILE_CONTEXT_POINTERS_u2"],[6,"PDWORD64"],[6,"SharedVirtualDiskHandleState"],[3,"JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2_u1"],[3,"JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2_u1"],[3,"WOW64_ARCHITECTURE_INFORMATION"],[6,"LCID"],[6,"LANGID"],[3,"IMAGE_AUX_SYMBOL_Sym_Misc"],[3,"IMAGE_AUX_SYMBOL_Sym_Misc_LnSz"],[3,"TP_CALLBACK_ENVIRON_V3_u_s"],[3,"IMAGE_SYMBOL_N"],[3,"IMAGE_SYMBOL_EX_N"],[3,"PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY"],[3,"IMAGE_SYMBOL_N_Name"],[3,"IMAGE_SYMBOL_EX_N_Name"],[3,"IMAGE_RESOURCE_DIRECTORY_ENTRY_u_s"],[3,"IMPORT_OBJECT_HEADER"],[3,"PROCESS_MITIGATION_IMAGE_LOAD_POLICY"],[3,"SYSTEM_LOGICAL_PROCESSOR_INFORMATION_NumaNode"],[3,"NUMA_NODE_RELATIONSHIP"],[3,"IMAGE_SECTION_HEADER_Misc"],[3,"PROCESSOR_RELATIONSHIP"],[3,"SYSTEM_LOGICAL_PROCESSOR_INFORMATION_ProcessorCore"],[3,"RATE_QUOTA_LIMIT"],[3,"IMAGE_RELOCATION_u"],[3,"IMAGE_DELAYLOAD_DESCRIPTOR_Attributes"],[4,"c_void"],[15,"usize"],[15,"u8"],[3,"SID"],[3,"IMAGE_LINENUMBER_Type"],[3,"SE_TOKEN_USER_u1"],[3,"TOKEN_USER"],[3,"IMAGE_RUNTIME_FUNCTION_ENTRY_u"],[3,"SID_AND_ATTRIBUTES"],[6,"SECURITY_IMPERSONATION_LEVEL"],[6,"ULONG"],[3,"FPO_DATA"],[3,"PROCESSOR_NUMBER"],[3,"GROUP_AFFINITY"],[3,"FLOAT128"],[3,"LIST_ENTRY"],[3,"SINGLE_LIST_ENTRY"],[3,"LIST_ENTRY32"],[3,"LIST_ENTRY64"],[3,"OBJECTID"],[3,"M128A"],[3,"XSAVE_FORMAT"],[3,"XSTATE_CONTEXT"],[3,"XSAVE_AREA_HEADER"],[3,"XSAVE_AREA"],[3,"SCOPE_TABLE_AMD64"],[3,"SCOPE_TABLE_AMD64_ScopeRecord"],[3,"SCOPE_TABLE_ARM64"],[3,"SCOPE_TABLE_ARM64_ScopeRecord"],[3,"CONTEXT_u_s"],[3,"CONTEXT"],[3,"UNWIND_HISTORY_TABLE_ENTRY"],[3,"UNWIND_HISTORY_TABLE"],[3,"DISPATCHER_CONTEXT"],[3,"KNONVOLATILE_CONTEXT_POINTERS_u1_s"],[3,"KNONVOLATILE_CONTEXT_POINTERS_u2_s"],[3,"KNONVOLATILE_CONTEXT_POINTERS"],[3,"LDT_ENTRY"],[3,"WOW64_FLOATING_SAVE_AREA"],[3,"WOW64_CONTEXT"],[3,"WOW64_LDT_ENTRY"],[3,"WOW64_DESCRIPTOR_TABLE_ENTRY"],[3,"EXCEPTION_RECORD"],[3,"EXCEPTION_RECORD32"],[3,"EXCEPTION_RECORD64"],[3,"EXCEPTION_POINTERS"],[3,"GENERIC_MAPPING"],[3,"LUID_AND_ATTRIBUTES"],[3,"SID_IDENTIFIER_AUTHORITY"],[3,"SID_AND_ATTRIBUTES_HASH"],[3,"ACL"],[3,"ACE_HEADER"],[3,"ACCESS_ALLOWED_ACE"],[3,"ACCESS_DENIED_ACE"],[3,"SYSTEM_AUDIT_ACE"],[3,"SYSTEM_ALARM_ACE"],[3,"SYSTEM_RESOURCE_ATTRIBUTE_ACE"],[3,"SYSTEM_SCOPED_POLICY_ID_ACE"],[3,"SYSTEM_MANDATORY_LABEL_ACE"],[3,"SYSTEM_PROCESS_TRUST_LABEL_ACE"],[3,"SYSTEM_ACCESS_FILTER_ACE"],[3,"ACCESS_ALLOWED_OBJECT_ACE"],[3,"ACCESS_DENIED_OBJECT_ACE"],[3,"SYSTEM_AUDIT_OBJECT_ACE"],[3,"SYSTEM_ALARM_OBJECT_ACE"],[3,"ACCESS_ALLOWED_CALLBACK_ACE"],[3,"ACCESS_DENIED_CALLBACK_ACE"],[3,"SYSTEM_AUDIT_CALLBACK_ACE"],[3,"SYSTEM_ALARM_CALLBACK_ACE"],[3,"ACCESS_ALLOWED_CALLBACK_OBJECT_ACE"],[3,"ACCESS_DENIED_CALLBACK_OBJECT_ACE"],[3,"SYSTEM_AUDIT_CALLBACK_OBJECT_ACE"],[3,"SYSTEM_ALARM_CALLBACK_OBJECT_ACE"],[3,"ACL_REVISION_INFORMATION"],[3,"ACL_SIZE_INFORMATION"],[3,"SECURITY_DESCRIPTOR_RELATIVE"],[3,"SECURITY_DESCRIPTOR"],[3,"SECURITY_OBJECT_AI_PARAMS"],[3,"OBJECT_TYPE_LIST"],[3,"PRIVILEGE_SET"],[3,"ACCESS_REASONS"],[3,"SE_SECURITY_DESCRIPTOR"],[3,"SE_ACCESS_REQUEST"],[3,"SE_ACCESS_REPLY"],[3,"SE_TOKEN_USER"],[3,"TOKEN_GROUPS"],[3,"TOKEN_PRIVILEGES"],[3,"TOKEN_OWNER"],[3,"TOKEN_PRIMARY_GROUP"],[3,"TOKEN_DEFAULT_DACL"],[3,"TOKEN_USER_CLAIMS"],[3,"TOKEN_DEVICE_CLAIMS"],[3,"TOKEN_GROUPS_AND_PRIVILEGES"],[3,"TOKEN_LINKED_TOKEN"],[3,"TOKEN_ELEVATION"],[3,"TOKEN_MANDATORY_LABEL"],[3,"TOKEN_MANDATORY_POLICY"],[3,"TOKEN_ACCESS_INFORMATION"],[3,"TOKEN_AUDIT_POLICY"],[3,"TOKEN_SOURCE"],[3,"TOKEN_STATISTICS"],[3,"TOKEN_CONTROL"],[3,"TOKEN_ORIGIN"],[3,"TOKEN_APPCONTAINER_INFORMATION"],[3,"TOKEN_SID_INFORMATION"],[3,"TOKEN_BNO_ISOLATION_INFORMATION"],[3,"CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE"],[3,"CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE"],[3,"CLAIM_SECURITY_ATTRIBUTE_V1_Values"],[3,"CLAIM_SECURITY_ATTRIBUTE_V1"],[3,"CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1_Values"],[3,"CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1"],[3,"CLAIM_SECURITY_ATTRIBUTES_INFORMATION_Attribute"],[3,"CLAIM_SECURITY_ATTRIBUTES_INFORMATION"],[3,"SECURITY_QUALITY_OF_SERVICE"],[3,"SE_IMPERSONATION_STATE"],[3,"SECURITY_CAPABILITIES"],[3,"JOB_SET_ARRAY"],[3,"EXCEPTION_REGISTRATION_RECORD"],[3,"NT_TIB"],[3,"NT_TIB32"],[3,"NT_TIB64"],[3,"UMS_CREATE_THREAD_ATTRIBUTES"],[3,"QUOTA_LIMITS"],[3,"QUOTA_LIMITS_EX"],[3,"IO_COUNTERS"],[3,"JOBOBJECT_BASIC_ACCOUNTING_INFORMATION"],[3,"JOBOBJECT_BASIC_LIMIT_INFORMATION"],[3,"JOBOBJECT_EXTENDED_LIMIT_INFORMATION"],[3,"JOBOBJECT_BASIC_PROCESS_ID_LIST"],[3,"JOBOBJECT_BASIC_UI_RESTRICTIONS"],[3,"JOBOBJECT_SECURITY_LIMIT_INFORMATION"],[3,"JOBOBJECT_END_OF_JOB_TIME_INFORMATION"],[3,"JOBOBJECT_ASSOCIATE_COMPLETION_PORT"],[3,"JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION"],[3,"JOBOBJECT_JOBSET_INFORMATION"],[3,"JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION"],[3,"JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2"],[3,"JOBOBJECT_LIMIT_VIOLATION_INFORMATION"],[3,"JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2"],[3,"JOBOBJECT_CPU_RATE_CONTROL_INFORMATION_u_s"],[3,"JOBOBJECT_CPU_RATE_CONTROL_INFORMATION"],[3,"JOBOBJECT_NET_RATE_CONTROL_INFORMATION"],[3,"JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE"],[3,"JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2"],[3,"JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3"],[3,"JOBOBJECT_IO_ATTRIBUTION_STATS"],[3,"JOBOBJECT_IO_ATTRIBUTION_INFORMATION"],[3,"SILOOBJECT_BASIC_INFORMATION"],[3,"SERVERSILO_BASIC_INFORMATION"],[3,"SYSTEM_LOGICAL_PROCESSOR_INFORMATION"],[3,"PROCESSOR_GROUP_INFO"],[3,"SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX"],[3,"SYSTEM_CPU_SET_INFORMATION"],[3,"SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION"],[3,"XSTATE_FEATURE"],[3,"MEMORY_BASIC_INFORMATION"],[3,"MEMORY_BASIC_INFORMATION32"],[3,"MEMORY_BASIC_INFORMATION64"],[3,"CFG_CALL_TARGET_INFO"],[3,"ENCLAVE_CREATE_INFO_SGX"],[3,"ENCLAVE_INIT_INFO_SGX"],[3,"FILE_ID_128"],[3,"FILE_NOTIFY_INFORMATION"],[3,"REPARSE_GUID_DATA_BUFFER_GenericReparseBuffer"],[3,"REPARSE_GUID_DATA_BUFFER"],[3,"SCRUB_DATA_INPUT"],[3,"SCRUB_PARITY_EXTENT"],[3,"SCRUB_PARITY_EXTENT_DATA"],[3,"SCRUB_DATA_OUTPUT"],[3,"SHARED_VIRTUAL_DISK_SUPPORT"],[3,"NETWORK_APP_INSTANCE_EA"],[3,"CM_POWER_DATA"],[3,"POWER_USER_PRESENCE"],[3,"POWER_SESSION_CONNECT"],[3,"POWER_SESSION_TIMEOUTS"],[3,"POWER_SESSION_RIT_STATE"],[3,"POWER_SESSION_WINLOGON"],[3,"POWER_IDLE_RESILIENCY"],[3,"POWER_MONITOR_INVOCATION"],[3,"RESUME_PERFORMANCE"],[3,"SET_POWER_SETTING_VALUE"],[3,"NOTIFY_USER_POWER_SETTING"],[3,"APPLICATIONLAUNCH_SETTING_VALUE"],[3,"POWER_PLATFORM_INFORMATION"],[3,"BATTERY_REPORTING_SCALE"],[3,"PPM_WMI_LEGACY_PERFSTATE"],[3,"PPM_WMI_IDLE_STATE"],[3,"PPM_WMI_IDLE_STATES"],[3,"PPM_WMI_IDLE_STATES_EX"],[3,"PPM_WMI_PERF_STATE"],[3,"PPM_WMI_PERF_STATES"],[3,"PPM_WMI_PERF_STATES_EX"],[3,"PPM_IDLE_STATE_ACCOUNTING"],[3,"PPM_IDLE_ACCOUNTING"],[3,"PPM_IDLE_STATE_BUCKET_EX"],[3,"PPM_IDLE_STATE_ACCOUNTING_EX"],[3,"PPM_IDLE_ACCOUNTING_EX"],[3,"PPM_PERFSTATE_EVENT"],[3,"PPM_PERFSTATE_DOMAIN_EVENT"],[3,"PPM_IDLESTATE_EVENT"],[3,"PPM_THERMALCHANGE_EVENT"],[3,"PPM_THERMAL_POLICY_EVENT"],[3,"POWER_ACTION_POLICY"],[3,"SYSTEM_POWER_LEVEL"],[3,"SYSTEM_POWER_POLICY"],[3,"PROCESSOR_IDLESTATE_INFO"],[3,"PROCESSOR_IDLESTATE_POLICY"],[3,"PROCESSOR_PERFSTATE_POLICY"],[3,"ADMINISTRATOR_POWER_POLICY"],[3,"HIBERFILE_BUCKET"],[3,"SYSTEM_POWER_CAPABILITIES"],[3,"SYSTEM_BATTERY_STATE"],[3,"IMAGE_DOS_HEADER"],[3,"IMAGE_OS2_HEADER"],[3,"IMAGE_VXD_HEADER"],[3,"IMAGE_FILE_HEADER"],[3,"IMAGE_DATA_DIRECTORY"],[3,"IMAGE_OPTIONAL_HEADER32"],[3,"IMAGE_ROM_OPTIONAL_HEADER"],[3,"IMAGE_OPTIONAL_HEADER64"],[3,"IMAGE_NT_HEADERS64"],[3,"IMAGE_NT_HEADERS32"],[3,"IMAGE_ROM_HEADERS"],[3,"ANON_OBJECT_HEADER"],[3,"ANON_OBJECT_HEADER_V2"],[3,"ANON_OBJECT_HEADER_BIGOBJ"],[3,"IMAGE_SECTION_HEADER"],[3,"IMAGE_SYMBOL"],[3,"IMAGE_SYMBOL_EX"],[3,"IMAGE_AUX_SYMBOL_TOKEN_DEF"],[3,"IMAGE_AUX_SYMBOL_Sym"],[3,"IMAGE_AUX_SYMBOL_File"],[3,"IMAGE_AUX_SYMBOL_Section"],[3,"IMAGE_AUX_SYMBOL_CRC"],[3,"IMAGE_AUX_SYMBOL"],[3,"IMAGE_AUX_SYMBOL_EX_Sym"],[3,"IMAGE_AUX_SYMBOL_EX_File"],[3,"IMAGE_AUX_SYMBOL_EX_Section"],[3,"IMAGE_AUX_SYMBOL_EX_s"],[3,"IMAGE_AUX_SYMBOL_EX_CRC"],[3,"IMAGE_AUX_SYMBOL_EX"],[3,"IMAGE_RELOCATION"],[3,"IMAGE_LINENUMBER"],[3,"IMAGE_BASE_RELOCATION"],[3,"IMAGE_ARCHIVE_MEMBER_HEADER"],[3,"IMAGE_EXPORT_DIRECTORY"],[3,"IMAGE_IMPORT_BY_NAME"],[3,"IMAGE_THUNK_DATA64"],[3,"IMAGE_THUNK_DATA32"],[3,"IMAGE_IMPORT_DESCRIPTOR"],[3,"IMAGE_BOUND_IMPORT_DESCRIPTOR"],[3,"IMAGE_BOUND_FORWARDER_REF"],[3,"IMAGE_DELAYLOAD_DESCRIPTOR"],[3,"IMAGE_RESOURCE_DIRECTORY"],[3,"IMAGE_RESOURCE_DIRECTORY_STRING"],[3,"IMAGE_RESOURCE_DIR_STRING_U"],[3,"IMAGE_RESOURCE_DATA_ENTRY"],[3,"IMAGE_LOAD_CONFIG_CODE_INTEGRITY"],[3,"IMAGE_DYNAMIC_RELOCATION_TABLE"],[3,"IMAGE_DYNAMIC_RELOCATION32"],[3,"IMAGE_DYNAMIC_RELOCATION64"],[3,"IMAGE_DYNAMIC_RELOCATION32_V2"],[3,"IMAGE_DYNAMIC_RELOCATION64_V2"],[3,"IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER"],[3,"IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER"],[3,"IMAGE_LOAD_CONFIG_DIRECTORY32"],[3,"IMAGE_LOAD_CONFIG_DIRECTORY64"],[3,"IMAGE_HOT_PATCH_INFO"],[3,"IMAGE_HOT_PATCH_BASE"],[3,"IMAGE_HOT_PATCH_HASHES"],[3,"IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY"],[3,"IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY"],[3,"_IMAGE_RUNTIME_FUNCTION_ENTRY"],[3,"IMAGE_DEBUG_DIRECTORY"],[3,"IMAGE_COFF_SYMBOLS_HEADER"],[3,"IMAGE_DEBUG_MISC"],[3,"IMAGE_FUNCTION_ENTRY"],[3,"IMAGE_FUNCTION_ENTRY64"],[3,"IMAGE_SEPARATE_DEBUG_HEADER"],[3,"NON_PAGED_DEBUG_INFO"],[3,"IMAGE_ARCHITECTURE_ENTRY"],[3,"IMAGE_COR20_HEADER"],[3,"SLIST_ENTRY"],[3,"SLIST_HEADER_s"],[3,"RTL_RUN_ONCE"],[3,"RTL_BARRIER"],[3,"MESSAGE_RESOURCE_ENTRY"],[3,"MESSAGE_RESOURCE_BLOCK"],[3,"MESSAGE_RESOURCE_DATA"],[3,"OSVERSIONINFOA"],[3,"OSVERSIONINFOW"],[3,"OSVERSIONINFOEXA"],[3,"OSVERSIONINFOEXW"],[3,"NV_MEMORY_RANGE"],[3,"RTL_CRITICAL_SECTION_DEBUG"],[3,"RTL_CRITICAL_SECTION"],[3,"RTL_SRWLOCK"],[3,"RTL_CONDITION_VARIABLE"],[3,"HEAP_OPTIMIZE_RESOURCES_INFORMATION"],[3,"ACTIVATION_CONTEXT_QUERY_INDEX"],[3,"ASSEMBLY_FILE_DETAILED_INFORMATION"],[3,"ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION"],[3,"ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION"],[3,"COMPATIBILITY_CONTEXT_ELEMENT"],[3,"ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION"],[3,"SUPPORTED_OS_INFO"],[3,"ACTIVATION_CONTEXT_DETAILED_INFORMATION"],[3,"HARDWARE_COUNTER_DATA"],[3,"PERFORMANCE_DATA"],[3,"EVENTLOGRECORD"],[3,"EVENTSFORLOGFILE"],[3,"PACKEDEVENTINFO"],[3,"TAPE_ERASE"],[3,"TAPE_PREPARE"],[3,"TAPE_WRITE_MARKS"],[3,"TAPE_GET_POSITION"],[3,"TAPE_SET_POSITION"],[3,"TAPE_GET_DRIVE_PARAMETERS"],[3,"TAPE_SET_DRIVE_PARAMETERS"],[3,"TAPE_GET_MEDIA_PARAMETERS"],[3,"TAPE_SET_MEDIA_PARAMETERS"],[3,"TAPE_CREATE_PARTITION"],[3,"TAPE_WMI_OPERATIONS"],[3,"TRANSACTION_BASIC_INFORMATION"],[3,"TRANSACTIONMANAGER_BASIC_INFORMATION"],[3,"TRANSACTIONMANAGER_LOG_INFORMATION"],[3,"TRANSACTIONMANAGER_LOGPATH_INFORMATION"],[3,"TRANSACTIONMANAGER_RECOVERY_INFORMATION"],[3,"TRANSACTIONMANAGER_OLDEST_INFORMATION"],[3,"TRANSACTION_PROPERTIES_INFORMATION"],[3,"TRANSACTION_BIND_INFORMATION"],[3,"TRANSACTION_ENLISTMENT_PAIR"],[3,"TRANSACTION_ENLISTMENTS_INFORMATION"],[3,"TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION"],[3,"RESOURCEMANAGER_BASIC_INFORMATION"],[3,"RESOURCEMANAGER_COMPLETION_INFORMATION"],[3,"ENLISTMENT_BASIC_INFORMATION"],[3,"ENLISTMENT_CRM_INFORMATION"],[3,"TRANSACTION_LIST_ENTRY"],[3,"TRANSACTION_LIST_INFORMATION"],[3,"KTMOBJECT_CURSOR"],[3,"TP_CALLBACK_INSTANCE"],[3,"TP_POOL"],[3,"TP_POOL_STACK_INFORMATION"],[3,"TP_CLEANUP_GROUP"],[3,"TP_CALLBACK_ENVIRON_V3"],[3,"TP_WORK"],[3,"TP_TIMER"],[3,"TP_WAIT"],[3,"TP_IO"],[3,"ACTIVATION_CONTEXT"],[6,"PCLAIM_SECURITY_ATTRIBUTE_V1"],[6,"PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE"],[6,"PLONG64"],[6,"PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE"],[6,"PWSTR"],[8,"Interface"],[8,"Class"],[4,"__some_function"],[4,"HKEY__"],[4,"HMETAFILE__"],[4,"HINSTANCE__"],[4,"HRGN__"],[4,"HRSRC__"],[4,"HSPRITE__"],[4,"HLSURF__"],[4,"HSTR__"],[4,"HTASK__"],[4,"HWINSTA__"],[4,"HKL__"]]},\
"window":{"doc":"Window storage and interfacing traits.","t":"IDIDIDGDDIDMLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLKLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLKLLLLKLLLLKLKLLLLKLLLLLMKLLLLLLLKLLLLMKLLMLLLLKLLLLKLLKLLLKLLLLLKLLLKLKLLLKLLLLKLKLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLMMM","n":["AdvancedWindow","Api","BuildFromWindowSettings","NoWindow","OpenGLWindow","Position","ProcAddress","Size","UnsupportedGraphicsApiError","Window","WindowSettings","api","automatic_close","automatic_close","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_from_window_settings","build_from_window_settings","capture_cursor","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","controllers","decorated","directx","draw_size","draw_size","eq","eq","eq","equivalent","equivalent","exit_on_esc","exit_on_esc","expected","fmt","fmt","fmt","fmt","fmt","fmt","fmt","found","from","from","from","from","from","from","from","from","from","from","from","from","fullscreen","get_automatic_close","get_automatic_close","get_automatic_close","get_controllers","get_decorated","get_exit_on_esc","get_exit_on_esc","get_exit_on_esc","get_fullscreen","get_maybe_graphics_api","get_position","get_position","get_proc_address","get_resizable","get_samples","get_size","get_srgb","get_title","get_title","get_title","get_transparent","get_vsync","graphics_api","height","hide","hide","into","into","into","into","into","into","is_current","is_directx","is_metal","is_opengl","is_vulkan","major","make_current","maybe_graphics_api","metal","minor","new","new","opengl","partial_cmp","poll_event","poll_event","position","resizable","samples","set_automatic_close","set_automatic_close","set_automatic_close","set_capture_cursor","set_capture_cursor","set_controllers","set_decorated","set_exit_on_esc","set_exit_on_esc","set_exit_on_esc","set_fullscreen","set_graphics_api","set_maybe_graphics_api","set_position","set_position","set_resizable","set_samples","set_should_close","set_should_close","set_size","set_size","set_size","set_srgb","set_title","set_title","set_title","set_transparent","set_vsync","should_close","should_close","show","show","size","size","size","srgb","swap_buffers","swap_buffers","title","title","to_owned","to_owned","to_owned","to_owned","to_string","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vsync","vulkan","wait_event","wait_event","wait_event_timeout","wait_event_timeout","width","x","y"],"q":[[0,"window"]],"d":["Trait representing a window with the most features that …","Stores graphics API version.","Constructs a window from a <code>WindowSettings</code> object.","A window without user interface, often used in server …","Trait for OpenGL specific operations on a window.","Structure to store the window position.","The type of an OpenGL function address.","Structure to store the window size.","An error for when a graphics API is unsupported.","Trait representing the minimum requirements for defining a …","Settings structure for window behavior.","A string identifying the API.","Sets whether the window will automatically close when …","Sets whether built windows should automatically close when …","","","","","","","","","","","","","Builds window from the given settings.","Builds the window from a <code>WindowSettings</code> object.","Errors","Sets whether to capture/grab the cursor.","","","","","","","","","","Sets whether built windows should listen to controller …","Sets whether built windows should be decorated.","Creates a new DirectX version.","Gets the draw size of the window.","","","","","","","Sets whether to exit when pressing the Esc button.","Sets whether built windows should exit when the Esc key is …","A list of supported graphics APIs.","","","","","","","","The requested graphics API.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Sets whether built windows will be fullscreen.","Gets whether the window will automatically close when …","","Gets whether built windows should automatically close when …","Gets whether built windows should listen to controller …","Gets whether built windows should be decorated.","Gets whether to exit when pressing esc.","","Gets whether built windows should exit when the Esc key is …","Gets whether built windows will be fullscreen.","Gets the graphics API version of built windows.","Gets the position of window.","","Returns the address of the specified OpenGL function if it …","Gets whether built windows should be resizable.","Gets the number of samples to use for anti-aliasing.","Gets the size of built windows.","Gets whether built windows should use hardware accelerated …","Gets a copy of the title of the window.","","Gets the title of built windows.","Gets whether built windows should be transparent.","Gets whether built windows should use vsync.","Sets the graphics API version of built windows.","The height.","Hides the window.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this window’s gl context is the current …","Returns <code>true</code> if the API is DirectX, <code>false</code> otherwise.","Returns <code>true</code> if the API is metal, <code>false</code> otherwise.","Returns <code>true</code> if the API is OpenGL, <code>false</code> otherwise.","Returns <code>true</code> if the API is Vulkan, <code>false</code> otherwise.","Major version.","Make the window’s gl context the current gl context.","Sets graphics API version of built windows.","Creates a new Metal version.","Minor version.","Creates a new <code>NoWindow</code>.","Creates window settings with defaults.","Creates a new OpenGL version.","","Polls an input event from the window.","","Sets the position of window.","Sets whether built windows should be resizable.","Sets the number of samples to use for anti-aliasing.","Sets whether the window will automatically close when …","","Sets whether built windows should automatically close when …","Sets whether to capture/grab the cursor.","","Sets whether built windows should listen to controller …","Sets whether built windows should be decorated.","Sets whether to exit when pressing esc.","","Sets whether built windows should exit when the Esc key is …","Sets whether built windows will be fullscreen.","Sets graphics API version of built windows.","Sets graphics API version of built windows.","Sets the position of window.","","Sets whether built windows should be resizable.","Sets the number of samples to use for anti-aliasing.","Tells the window to close or stay open.","","Sets the window size.","","Sets the size of built windows.","Sets whether built windows should use hardware accelerated …","Sets the title of the window.","","Sets the title of built windows.","Sets whether built windows should be transparent.","Sets whether built windows should use vsync.","Returns true if the window should close.","","Shows the window.","","Gets the size of the window.","","Sets the size of built windows.","Sets whether built windows should use hardware accelerated …","Swaps render buffers.","","Sets title on window.","Sets the title of built windows.","","","","","","Sets whether built windows should be transparent.","","","","","","","","","","","","","","","","","","","Sets whether built windows should use vsync.","Creates a new Vulkan version.","Wait indefinitely for an input event to be available from …","","Wait for an input event to be available from the window or …","","The width.","The x coordinate.","The y coordinate."],"i":[0,0,0,0,0,0,0,0,0,0,0,8,29,2,8,15,7,9,10,2,8,15,7,9,10,2,2,3,7,29,8,9,10,2,8,9,10,2,8,2,2,8,30,7,8,9,10,8,10,29,2,15,8,15,15,7,9,10,2,15,8,15,7,9,9,9,9,9,10,10,10,2,2,29,7,2,2,2,29,7,2,2,2,29,7,31,2,2,2,2,29,7,2,2,2,2,9,29,7,8,15,7,9,10,2,31,8,8,8,8,8,31,2,8,8,7,2,8,8,30,7,29,2,2,29,7,2,29,7,2,2,29,7,2,2,2,2,29,7,2,2,30,7,29,7,2,2,29,7,2,2,2,30,7,29,7,30,7,2,2,30,7,29,2,8,9,10,2,15,2,8,15,7,9,10,2,8,15,7,9,10,2,8,15,7,9,10,2,2,8,30,7,30,7,9,10,10],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1],[[2,1],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[6,[3,[5,[4]]]]]],[2,[[6,[[5,[4]]]]]],[2,[[6,[7,[5,[4]]]]]],[1],[8,8],[9,9],[10,10],[2,2],[[]],[[]],[[]],[[]],[[8,8],11],[[2,1],2],[[2,1],2],[[12,12],8],[[],9],[7,9],[[8,8],1],[[9,9],1],[[10,10],1],[[],1],[[],1],[1],[[2,1],2],0,[[8,13],[[6,[14]]]],[[15,13],[[6,[14]]]],[[15,13],[[6,[14]]]],[[7,13],16],[[9,13],16],[[10,13],16],[[2,13],16],0,[[]],[[]],[[]],[[],9],[[[17,[12]]],9],[[]],[[],9],[[[17,[18]]],9],[[[17,[19]]],10],[[],10],[[]],[[]],[[2,1],2],[[],1],[7,1],[2,1],[2,1],[2,1],[[],1],[7,1],[2,1],[2,1],[2,[[20,[8]]]],[[],[[20,[10]]]],[7,[[20,[10]]]],[21,22],[2,1],[2,23],[2,9],[2,1],[[],24],[7,24],[2,24],[2,1],[2,1],[[2,[25,[8]]],2],0,[[]],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[8,1],[8,1],[8,1],[8,1],0,[[]],[[2,[20,[[25,[8]]]]],2],[[12,12],8],0,[2,7],[[[25,[24]],[25,[9]]],2],[[12,12],8],[[8,8],[[20,[11]]]],[[],[[20,[26]]]],[7,[[20,[26]]]],[[[25,[10]]]],[[2,1],2],[[2,23],2],[1],[[7,1]],[[2,1]],[1],[[7,1]],[[2,1]],[[2,1]],[1],[[7,1]],[[2,1]],[[2,1]],[[2,[25,[8]]]],[[2,[20,[[25,[8]]]]]],[[[25,[10]]]],[[7,[25,[10]]]],[[2,1]],[[2,23]],[1],[[7,1]],[[[25,[9]]]],[[7,[25,[9]]]],[[2,9]],[[2,1]],[24],[[7,24]],[[2,24]],[[2,1]],[[2,1]],[[],1],[7,1],[[]],[7],[[],9],[7,9],[[2,9],2],[[2,1],2],[[]],[7],[24],[[2,24],2],[[]],[[]],[[]],[[]],[[],24],[[2,1],2],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[2,1],2],[[12,12],8],[[],26],[7,26],[28,[[20,[26]]]],[[7,28],[[20,[26]]]],0,0,0],"c":[],"p":[[15,"bool"],[3,"WindowSettings"],[8,"BuildFromWindowSettings"],[8,"Error"],[3,"Box"],[4,"Result"],[3,"NoWindow"],[3,"Api"],[3,"Size"],[3,"Position"],[4,"Ordering"],[15,"u32"],[3,"Formatter"],[3,"Error"],[3,"UnsupportedGraphicsApiError"],[6,"Result"],[15,"array"],[15,"f64"],[15,"i32"],[4,"Option"],[15,"str"],[6,"ProcAddress"],[15,"u8"],[3,"String"],[8,"Into"],[4,"Event"],[3,"TypeId"],[3,"Duration"],[8,"AdvancedWindow"],[8,"Window"],[8,"OpenGLWindow"]]},\
"windows_sys":{"doc":"Learn more about Rust for Windows here: …","t":"OO","n":["s","w"],"q":[[0,"windows_sys"]],"d":["A literal UTF-8 string with a trailing null terminator.","A literal UTF-16 wide string with a trailing null …"],"i":[0,0],"f":[0,0],"c":[],"p":[]},\
"windows_targets":{"doc":"Learn more about Rust for Windows here: …","t":"O","n":["link"],"q":[[0,"windows_targets"]],"d":["Defines an external function to import."],"i":[0],"f":[0],"c":[],"p":[]},\
"windows_x86_64_msvc":{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[]},\
"winit":{"doc":"Winit is a cross-platform window creation and event loop …","t":"AAAAAAANNDDNNDDIEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMMMENDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNSNNNNNNNNGNNNNNGNSNNNNNNNNNNNNNNNNNNNENDNNNNENNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNENNNNNNNNNNNNNNNNNNDNNNNNSNNNNNNNNNNNNNNDNENNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNGNNNNNNNENNNNNNNNDNENNNNNNNNNENNNNNNNNNNNNENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLMLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNEEDDDDDSNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAIQKIIGGGGIIIIKKKKKKKKKKKKKKKKKKKKKNNNNNENNSNNNNNNNEENNNNNNNENNNNDENNNSSNNNNNNNNNNNNNNNNNNENNNNNNNNNEENNNNDDDDDENNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLMLLMMLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["dpi","error","event","event_loop","monitor","platform","window","Logical","Logical","LogicalPosition","LogicalSize","Physical","Physical","PhysicalPosition","PhysicalSize","Pixel","Position","Size","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","clamp","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_f64","from_logical","from_logical","from_physical","from_physical","hash","hash","hash","hash","height","height","into","into","into","into","into","into","new","new","new","new","new","new","to_logical","to_logical","to_logical","to_logical","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical","to_physical","to_physical","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate_scale_factor","width","width","x","x","y","y","ExternalError","NotSupported","NotSupportedError","Os","OsError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","A","ALT","AbntC1","AbntC2","Added","Apostrophe","Apps","Asterisk","At","Ax","AxisId","AxisMotion","B","Back","Backslash","Button","ButtonId","C","CTRL","Calculator","Calibrated","Cancelled","Capital","Caret","CloseRequested","Colon","Comma","Commit","Compose","Convert","Copy","CursorEntered","CursorLeft","CursorMoved","Cut","D","Delete","Destroyed","DeviceEvent","DeviceEvent","DeviceId","Disabled","Down","DroppedFile","E","ElementState","Enabled","End","Ended","Equals","Escape","Event","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Focused","Force","G","Grave","H","Home","HoveredFile","HoveredFileCancelled","I","Ime","Ime","Init","Insert","J","K","Kana","Kanji","Key","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyboardInput","KeyboardInput","L","LAlt","LBracket","LControl","LOGO","LShift","LWin","Left","Left","LineDelta","LoopDestroyed","M","Mail","MainEventsCleared","MediaSelect","MediaStop","Middle","Minus","ModifiersChanged","ModifiersState","Motion","MouseButton","MouseInput","MouseMotion","MouseScrollDelta","MouseWheel","MouseWheel","Moved","Moved","Mute","MyComputer","N","NavigateBackward","NavigateForward","NewEvents","NextTrack","NoConvert","Normalized","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","OEM102","Occluded","Other","P","PageDown","PageUp","Paste","Pause","Period","PixelDelta","PlayPause","Plus","Poll","Power","Preedit","Pressed","PrevTrack","Q","R","RAlt","RBracket","RControl","RShift","RWin","ReceivedCharacter","RedrawEventsCleared","RedrawRequested","Released","Removed","Resized","ResumeTimeReached","Resumed","Return","Right","Right","S","SHIFT","ScaleFactorChanged","ScanCode","Scroll","Semicolon","Slash","Sleep","SmartMagnify","Snapshot","Space","StartCause","Started","Stop","Suspended","Sysrq","T","Tab","Text","ThemeChanged","Touch","Touch","TouchPhase","TouchpadMagnify","TouchpadPressure","TouchpadRotate","U","Underline","Unlabeled","Up","UserEvent","V","VirtualKeyCode","VolumeDown","VolumeUp","W","WaitCancelled","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","WindowEvent","WindowEvent","X","Y","Yen","Z","all","alt","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","ctrl","default","device_id","difference","dummy","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","hash","hash","hash","hash","hash","id","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","location","logo","map_nonuser_event","modifiers","normalized","not","partial_cmp","partial_cmp","partial_cmp","persistent_identifier","phase","remove","scancode","set","shift","state","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_static","to_static","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","virtual_keycode","axis","button","codepoint","delta","delta","state","value","device_id","event","event","window_id","altitude_angle","force","max_possible_force","requested_resume","requested_resume","start","start","axis","button","delta","delta","delta","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","input","is_synthetic","modifiers","modifiers","modifiers","new_inner_size","phase","phase","phase","position","pressure","scale_factor","stage","state","value","Always","ControlFlow","DeviceEventFilter","EventLoop","EventLoopBuilder","EventLoopClosed","EventLoopProxy","EventLoopWindowTarget","Exit","ExitWithCode","Never","Poll","Unfocused","Wait","WaitUntil","available_monitors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","create_proxy","default","default","default","default","deref","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","into","into","into","into","into","into","into","new","new","partial_cmp","primary_monitor","raw_display_handle","raw_display_handle","run","run_return","send_event","set_device_event_filter","set_exit","set_exit_with_code","set_poll","set_wait","set_wait_timeout","set_wait_until","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_any_thread","with_dpi_aware","with_msg_hook","with_user_event","with_user_event","MonitorHandle","VideoMode","bit_depth","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","hash","hmonitor","into","into","monitor","name","native_id","partial_cmp","partial_cmp","position","refresh_rate_millihertz","refresh_rate_millihertz","scale_factor","size","size","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","video_modes","run_return","windows","EventLoopExtRunReturn","UserEvent","run_return","DeviceIdExtWindows","EventLoopBuilderExtWindows","HINSTANCE","HMENU","HMONITOR","HWND","IconExtWindows","MonitorHandleExtWindows","WindowBuilderExtWindows","WindowExtWindows","from_path","from_resource","hinstance","hmonitor","hwnd","native_id","persistent_identifier","set_enable","set_skip_taskbar","set_taskbar_icon","set_undecorated_shadow","with_any_thread","with_dpi_aware","with_drag_and_drop","with_menu","with_msg_hook","with_no_redirection_bitmap","with_owner_window","with_skip_taskbar","with_taskbar_icon","with_undecorated_shadow","Alias","AllScroll","AlwaysOnBottom","AlwaysOnTop","Arrow","BadIcon","Borderless","ByteCountNotDivisibleBy4","CLOSE","Cell","ColResize","Confined","ContextMenu","Copy","Critical","Crosshair","CursorGrabMode","CursorIcon","Dark","Default","DimensionsVsPixelCount","EResize","East","EwResize","Exclusive","Fullscreen","Grab","Grabbing","Hand","Help","Icon","ImePurpose","Informational","Light","Locked","MAXIMIZE","MINIMIZE","Move","NResize","NeResize","NeswResize","NoDrop","None","Normal","Normal","North","NorthEast","NorthWest","NotAllowed","NsResize","NwResize","NwseResize","OsError","Password","Progress","ResizeDirection","RowResize","SResize","SeResize","South","SouthEast","SouthWest","SwResize","Terminal","Text","Theme","UserAttentionType","VerticalText","WResize","Wait","West","Window","WindowAttributes","WindowBuilder","WindowButtons","WindowId","WindowLevel","ZoomIn","ZoomOut","active","all","available_monitors","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","contains","content_protected","current_monitor","decorations","default","default","default","default","default","default","difference","drag_resize_window","drag_window","drop","dummy","empty","enabled_buttons","enabled_buttons","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus_window","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_path","from_resource","from_rgba","fullscreen","fullscreen","has_focus","hash","hash","hash","hash","hash","hinstance","hwnd","id","inner_position","inner_size","inner_size","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_decorated","is_empty","is_maximized","is_minimized","is_resizable","is_visible","max_inner_size","maximized","min_inner_size","new","new","not","outer_position","outer_size","parent_window","partial_cmp","partial_cmp","position","preferred_theme","primary_monitor","raw_display_handle","raw_window_handle","remove","request_redraw","request_user_attention","resizable","resize_increments","resize_increments","scale_factor","set","set_content_protected","set_cursor_grab","set_cursor_hittest","set_cursor_icon","set_cursor_position","set_cursor_visible","set_decorations","set_enable","set_enabled_buttons","set_fullscreen","set_ime_allowed","set_ime_position","set_ime_purpose","set_inner_size","set_max_inner_size","set_maximized","set_min_inner_size","set_minimized","set_outer_position","set_resizable","set_resize_increments","set_skip_taskbar","set_taskbar_icon","set_theme","set_title","set_transparent","set_undecorated_shadow","set_visible","set_window_icon","set_window_level","source","sub","sub_assign","symmetric_difference","theme","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","transparent","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","visible","window_attributes","window_icon","window_level","with_active","with_content_protected","with_decorations","with_drag_and_drop","with_enabled_buttons","with_fullscreen","with_inner_size","with_max_inner_size","with_maximized","with_menu","with_min_inner_size","with_no_redirection_bitmap","with_owner_window","with_parent_window","with_position","with_resizable","with_resize_increments","with_skip_taskbar","with_taskbar_icon","with_theme","with_title","with_transparent","with_undecorated_shadow","with_visible","with_window_icon","with_window_level","byte_count","height","pixel_count","width","width_x_height"],"q":[[0,"winit"],[7,"winit::dpi"],[148,"winit::error"],[186,"winit::event"],[694,"winit::event::DeviceEvent"],[701,"winit::event::Event"],[705,"winit::event::Force"],[708,"winit::event::StartCause"],[712,"winit::event::WindowEvent"],[743,"winit::event_loop"],[865,"winit::monitor"],[912,"winit::platform"],[914,"winit::platform::run_return"],[917,"winit::platform::windows"],[948,"winit::window"],[1374,"winit::window::BadIcon"]],"d":["UI scaling is important, so read the docs for this module …","","The <code>Event</code> enum and assorted supporting types.","The <code>EventLoop</code> struct and assorted supporting types, …","Types useful for interacting with a user’s monitors.","Contains traits with platform-specific methods in them.","The <code>Window</code> struct and associated types.","","","A position represented in logical pixels.","A size represented in logical pixels.","","","A position represented in physical pixels.","A size represented in physical pixels.","","A position that’s either physical or logical.","A size that’s either physical or logical.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that the scale factor is a normal positive <code>f64</code>.","","","","","","","An error whose cause it outside Winit’s control.","The operation is not supported by the backend.","The error type for when the requested operation is not …","The OS cannot perform the operation.","The error type for when the OS cannot perform the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The “alt” key.","","","","","","","","","Identifier for a specific analog axis on some device.","Motion on some analog axis. May report data redundant to …","","The Backspace key, right over Enter.","","","Identifier for a specific button on some device.","","The “control” key.","","On iOS, the force is calibrated so that the same number …","","","","The window has been requested to close.","","","Notifies when text should be inserted into the editor …","The “Compose” key on Linux.","","","The cursor has entered the window.","The cursor has left the window.","The cursor has moved on the window.","","","","The window has been destroyed.","Represents raw hardware events that are not associated …","Emitted when the OS sends an event to a device.","Identifier of an input device.","Notifies when the IME was disabled.","","A file has been dropped into the window.","","Describes the input state of a key.","Notifies when the IME was enabled.","","","","The Escape key, next to F1.","Describes a generic event.","","","","","","","","","","","","","","","","","","","","","","","","","","The window gained or lost focus.","Describes the force of a touch event","","","","","A file is being hovered over the window.","A file was hovered, but has exited the window.","","Describes input method events.","An event from an input method.","Sent once, immediately after <code>run</code> is called. Indicates that …","<code>Insert</code>, next to Backspace.","","","","","","The ‘0’ key over the ‘O’ and ‘P’ keys.","The ‘1’ key over the letters.","The ‘2’ key over the letters.","The ‘3’ key over the letters.","The ‘4’ key over the letters.","The ‘5’ key over the letters.","The ‘6’ key over the letters.","The ‘7’ key over the letters.","The ‘8’ key over the letters.","The ‘9’ key over the letters.","Describes a keyboard input event.","An event from the keyboard has been received.","","","","","This is the “windows” key on PC and “command” key …","","","","","Amount in lines or rows to scroll in the horizontal and …","Emitted when the event loop is being shut down.","","","Emitted when all of the event loop’s input events have …","","","","","The keyboard modifiers have changed.","Represents the current state of the keyboard modifiers","Motion on some analog axis. This event will be reported …","Describes a button of a mouse controller.","An mouse button press has been received.","Change in physical position of a pointing device.","Describes a difference in the mouse scroll wheel state.","A mouse wheel movement or touchpad scroll occurred.","Physical scroll event","The position of the window has changed. Contains the window…","","","","","","","Emitted when new events arrive from the OS to be processed.","","","If the platform reports the force as normalized, we have …","","","","","","","","","","","","","","","","","","","","","","The window has been occluded (completely hidden from view).","","","","","","Pause/Break key, next to Scroll lock.","","Amount in pixels to scroll in the horizontal and vertical …","","","Sent if the event loop is being resumed after the loop’s …","","Notifies when a new composing text should be set at the …","","","","","","","","","","The window received a unicode character.","Emitted after all <code>RedrawRequested</code> events have been …","Emitted after <code>MainEventsCleared</code> when a window should be …","","","The size of the window has changed. Contains the client …","Sent if the time specified by <code>ControlFlow::WaitUntil</code> has …","Emitted when the application has been resumed.","The Enter key.","","","","The “shift” key.","The window’s scale factor has changed.","Hardware-dependent keyboard scan code.","Scroll Lock.","","","","Smart magnification event.","Print Screen/SysRq.","The space bar.","Describes the reason the event loop is resuming.","","","Emitted when the application has been suspended.","","","","","The system window theme has changed.","Represents a touch event","Touch event has been received","Describes touch-screen input state.","Touchpad magnification event with two-finger pinch gesture.","Touchpad pressure event.","Touchpad rotation event with two-finger rotation gesture.","","","","","Emitted when an event is sent from …","","Symbolic name for a keyboard key.","","","","Sent if the OS has new events to send to the window, after …","","","","","","","","","Describes an event from a <code>Window</code>.","Emitted when the OS sends an event to a winit window.","","","","","Returns the set containing all flags.","Returns <code>true</code> if the alt key is pressed.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if the control key is pressed.","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns a dummy id, useful for unit testing.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes how hard the screen was pressed. May be <code>None</code> if …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Unique identifier of a finger.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns <code>true</code> if the logo key is pressed.","","Modifier keys active at the time of this input.","Returns the force normalized to the range between 0.0 and …","Returns the complement of this set of flags.","","","","","","Removes the specified flags in-place.","Identifies the physical key pressed","Inserts or removes the specified flags depending on the …","Returns <code>true</code> if the shift key is pressed.","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","If the event doesn’t contain a reference, turn it into …","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Identifies the semantic meaning of the key","","","","(x, y) change in position in unspecified units.","","","","","","","","The altitude (in radians) of the stylus.","The force of the touch, where a value of 1.0 represents …","The maximum possible force for a touch.","","","","","","","","","","","","","","","","","","","","","","If <code>true</code>, the event was generated synthetically by winit in …","","","","","","","","(x,y) coords in pixels relative to the top-left corner of …","","","","","","Always filter out device events.","Set by the user callback given to the <code>EventLoop::run</code> …","Filter controlling the propagation of device events.","Provides a way to retrieve events from the system and from …","Object that allows building the event loop.","The error that is returned when an <code>EventLoopProxy</code> attempts …","Used to send custom events to <code>EventLoop</code>.","Target that associates windows with an <code>EventLoop</code>.","Alias for <code>ExitWithCode</code><code>(0)</code>.","Send a <code>LoopDestroyed</code> event and stop the event loop. This …","Report all device events regardless of window focus.","When the current loop iteration finishes, immediately …","Filter out device events while the window is not focused.","When the current loop iteration finishes, suspend the …","When the current loop iteration finishes, suspend the …","Returns the list of all the monitors available on the …","","","","","","","","","","","","","","","Builds a new event loop.","","","","","","","","","","Creates an <code>EventLoopProxy</code> that can be used to dispatch …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Alias for <code>EventLoopBuilder::new().build()</code>.","Start building a new event loop.","","Returns the primary monitor of the system.","Returns a <code>raw_window_handle::RawDisplayHandle</code> for the …","Returns a <code>raw_window_handle::RawDisplayHandle</code> for the …","Hijacks the calling thread and initializes the winit event …","","Send an event to the <code>EventLoop</code> from which this proxy was …","Change <code>DeviceEvent</code> filter mode.","Sets this to <code>Exit</code>.","Sets this to <code>ExitWithCode</code><code>(code)</code>.","Sets this to <code>Poll</code>.","Sets this to <code>Wait</code>.","Sets this to wait until a timeout has expired.","Sets this to <code>WaitUntil</code><code>(instant)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start building a new event loop, with the given type as …","Handle to a monitor.","Describes a fullscreen video mode of a monitor.","Returns the bit depth of this video mode, as in how many …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the monitor that this video mode is valid for. …","Returns a human-readable name of the monitor.","","","","Returns the top-left corner position of the monitor …","Returns the refresh rate of this video mode in mHz.","The monitor refresh rate used by the system.","Returns the scale factor that can be used to map logical …","Returns the resolution of this video mode.","Returns the monitor’s resolution.","","","","","","","","","","Returns all fullscreen video modes supported by this …","","","Additional methods on <code>EventLoop</code> to return control flow to …","A type provided by the user that can be passed through …","Initializes the <code>winit</code> event loop.","Additional methods on <code>DeviceId</code> that are specific to …","Additional methods on <code>EventLoop</code> that are specific to …","Instance Handle type used by Win32 API","Menu Handle type used by Win32 API","Monitor Handle type used by Win32 API","Window Handle type used by Win32 API","Additional methods on <code>Icon</code> that are specific to Windows.","Additional methods on <code>MonitorHandle</code> that are specific to …","Additional methods on <code>WindowBuilder</code> that are specific to …","Additional methods on <code>Window</code> that are specific to Windows.","Create an icon from a file path.","Create an icon from a resource embedded in this executable …","Returns the HINSTANCE of the window","Returns the handle of the monitor - <code>HMONITOR</code>.","Returns the native handle that is used by this window.","Returns the name of the monitor adapter specific to the …","Returns an identifier that persistently refers to this …","Enables or disables mouse and keyboard input to the …","Whether to show or hide the window icon in the taskbar.","This sets <code>ICON_BIG</code>. A good ceiling here is 256x256.","Shows or hides the background drop shadow for undecorated …","Whether to allow the event loop to be created off of the …","Whether to enable process-wide DPI awareness.","Enables or disables drag and drop support (enabled by …","Sets a menu on the window to be created.","A callback to be executed before dispatching a win32 …","This sets <code>WS_EX_NOREDIRECTIONBITMAP</code>.","Set an owner to the window to be created. Can be used to …","Whether show or hide the window icon in the taskbar.","This sets <code>ICON_BIG</code>. A good ceiling here is 256x256.","Shows or hides the background drop shadow for undecorated …","","","The window will always be below normal windows.","The window will always be on top of normal windows.","Self explanatory.","An error produced when using <code>Icon::from_rgba</code> with invalid …","Providing <code>None</code> to <code>Borderless</code> will fullscreen on the …","Produced when the length of the <code>rgba</code> argument isn’t …","","","","The cursor is confined to the window area.","","","Platform-specific","A simple crosshair.","The behavior of cursor grabbing.","Describes the appearance of the mouse cursor.","Use the dark variant.","The platform-dependent default cursor.","Produced when the number of pixels (<code>rgba.len() / 4</code>) isn’…","Indicate that some edge is to be moved. For example, the …","","","","Fullscreen modes.","Indicates something can be grabbed.","Indicates something is grabbed.","A hand (often used to indicate links in web browsers).","Help indicator (often rendered as a “?”)","An icon used for the window titlebar, taskbar, etc.","Generic IME purposes for use in <code>Window::set_ime_purpose</code>.","Platform-specific","Use the light variant.","The cursor is locked inside the window area to the certain …","","","Indicates something is to be moved.","","","","","No grabbing of the cursor is performed.","The default.","No special hints for the IME (default).","","","","Cursor showing that something cannot be done.","","","","Produced when underlying OS functionality failed to create …","The IME is used for password input.","Progress indicator. Shows that processing is being done. …","Defines the orientation that a window resize will be …","","","","","","","","The IME is used to input into a terminal.","Indicates text that may be selected or edited.","The theme variant to use.","Platform-specific","","","Program busy indicator.","","Represents a window.","Attributes to use when creating a window.","Object that allows building windows.","","Identifier of a window. Unique for each window.","A window level groups windows with respect to their …","","","","Returns the set containing all flags.","Returns the list of all the monitors available on the …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the monitor on which the window currently resides.","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Resizes the window with the left mouse button until the …","Moves the window with the left mouse button until the …","","Returns a dummy id, useful for unit testing.","Returns an empty set of flags.","Gets the enabled window buttons.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Brings the window to the front and sets input focus. Has …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Creates an icon from 32bpp RGBA data.","Gets the window’s current fullscreen state.","","Gets whether the window has keyboard focus.","","","","","","","","Returns an identifier unique to the window.","Returns the position of the top-left hand corner of the …","Returns the physical size of the window’s client area.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Gets the window’s current decorations state.","Returns <code>true</code> if no flags are currently stored.","Gets the window’s current maximized state.","Gets the window’s current minimized state.","Gets the window’s current resizable state.","Gets the window’s current visibility state.","","","","Creates a new Window for platforms where this is …","Initializes a new builder with default values.","Returns the complement of this set of flags.","Returns the position of the top-left hand corner of the …","Returns the physical size of the entire window.","","","","","","Returns the primary monitor of the system.","Returns a <code>raw_window_handle::RawDisplayHandle</code> used by the …","Returns a <code>raw_window_handle::RawWindowHandle</code> for the Window","Removes the specified flags in-place.","Emits a <code>Event::RedrawRequested</code> event in the associated …","Requests user attention to the window, this has no effect …","","Returns window resize increments if any were set.","","Returns the scale factor that can be used to map logical …","Inserts or removes the specified flags depending on the …","Prevents the window contents from being captured by other …","Set grabbing mode on the cursor preventing it from leaving …","Modifies whether the window catches cursor events.","Modifies the cursor icon of the window.","Changes the position of the cursor in window coordinates.","Modifies the cursor’s visibility.","Turn window decorations on or off.","","Sets the enabled window buttons.","Sets the window to fullscreen or back.","Sets whether the window should get IME events","Sets location of IME candidate box in client area …","Sets the IME purpose for the window using <code>ImePurpose</code>.","Modifies the inner size of the window.","Sets a maximum dimension size for the window.","Sets the window to maximized or back.","Sets a minimum dimension size for the window.","Sets the window to minimized or back","Modifies the position of the window.","Sets whether the window is resizable or not.","Sets window resize increments.","","","Sets the current window theme. Use <code>None</code> to fallback to …","Modifies the title of the window.","Change the window transparency state.","","Modifies the window’s visibility.","Sets the window icon.","Change the window level.","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the current window theme.","Gets the current title of the window.","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Get whether the window will support transparency.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Get the current window attributes.","","","Whether the window will be initially focused or not.","Prevents the window contents from being captured by other …","Sets whether the window should have a border, a title bar, …","","Sets the enabled window buttons.","Sets whether the window should be put into fullscreen upon …","Requests the window to be of specific dimensions.","Sets the maximum dimensions a window can have.","Request that the window is maximized upon creation.","","Sets the minimum dimensions a window can have.","","","Build window with parent window.","Sets a desired initial position for the window.","Sets whether the window is resizable or not.","Build window with resize increments hint.","","","Sets a specific theme for the window.","Sets the initial title of the window in the title bar.","Sets whether the background of the window should be …","","Sets whether the window will be initially visible or …","Sets the window icon.","Sets the window level.","","","","",""],"i":[0,0,0,0,0,0,0,6,10,0,0,6,10,0,0,0,0,0,2,3,4,5,6,10,2,3,4,5,6,10,1,2,3,4,5,6,2,3,4,5,6,10,2,3,4,5,6,10,2,3,4,5,2,3,4,5,6,10,2,3,4,5,2,3,4,5,6,10,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,10,10,10,1,3,5,2,4,2,3,4,5,4,5,2,3,4,5,6,10,2,3,4,5,6,10,3,5,6,10,2,3,4,5,6,10,2,4,6,10,2,3,4,5,6,10,2,3,4,5,6,10,2,3,4,5,6,10,0,4,5,2,3,2,3,0,23,0,23,0,23,22,25,23,22,25,22,22,23,23,22,22,25,25,23,22,25,23,22,25,22,23,22,25,23,22,25,23,22,25,23,22,25,42,27,42,42,33,42,42,42,42,42,0,31,42,42,42,33,0,42,27,42,38,36,42,42,31,42,42,35,42,42,42,31,31,31,42,42,42,31,0,29,0,35,42,31,42,0,35,42,36,42,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,31,0,42,42,42,42,31,31,42,0,31,30,42,42,42,42,42,33,42,42,42,42,42,42,42,42,42,42,0,31,42,42,42,42,27,42,42,40,42,41,29,42,42,29,42,42,40,42,31,0,33,0,31,33,0,31,33,31,36,42,42,42,42,42,29,42,42,38,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,31,40,42,42,42,42,42,42,41,42,42,30,42,35,39,42,42,42,42,42,42,42,42,31,29,29,39,33,31,30,29,42,40,42,42,27,31,0,42,42,42,42,31,42,42,0,36,42,29,42,42,42,33,31,0,31,0,31,31,31,42,42,42,42,29,42,0,42,42,42,30,42,42,42,42,42,42,42,42,0,29,42,42,42,42,27,27,27,27,27,27,27,27,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,32,42,27,27,27,27,27,37,27,32,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,30,32,34,35,36,39,40,42,27,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,27,27,27,27,37,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,27,27,27,27,32,34,35,36,39,40,42,27,37,27,27,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,27,27,37,27,29,34,38,27,32,42,27,32,37,27,34,27,27,34,27,27,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,29,31,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,27,34,90,91,92,93,94,91,90,95,96,95,96,97,97,97,98,99,98,99,100,101,102,103,104,105,106,107,108,102,101,103,109,104,110,100,105,105,106,102,101,111,102,103,104,106,110,111,110,101,100,53,0,0,0,0,0,0,0,51,51,53,51,53,51,51,46,49,46,50,48,51,52,53,49,46,50,48,51,52,53,48,50,51,52,53,50,51,52,53,53,49,49,48,51,53,49,51,52,53,51,52,53,49,46,50,51,52,52,53,49,46,50,48,51,52,53,52,53,49,46,50,48,51,52,53,49,48,53,46,49,46,49,49,50,46,51,51,51,51,51,51,50,51,52,53,52,49,46,50,48,51,52,53,49,46,50,48,51,52,53,49,46,50,48,51,52,53,48,48,48,49,48,0,0,61,61,54,61,54,61,54,61,54,61,54,61,54,61,54,61,61,54,61,54,61,54,61,54,61,54,54,61,54,54,61,54,54,61,54,61,54,61,61,54,61,54,61,54,54,0,0,0,112,112,0,0,0,0,0,0,0,0,0,0,113,113,114,115,114,115,116,114,114,114,114,117,117,118,118,117,118,118,118,118,118,77,77,82,82,77,0,79,66,72,77,77,76,77,77,81,77,0,0,80,77,66,77,78,77,79,0,77,77,77,77,0,0,81,80,76,72,72,77,77,77,77,77,76,82,83,78,78,78,77,77,77,77,66,83,77,0,77,77,77,78,78,78,77,83,77,0,0,77,77,77,78,0,0,0,0,0,0,77,77,75,72,73,72,72,72,72,72,72,72,73,66,69,74,70,75,76,77,78,79,80,81,72,82,83,73,66,69,74,70,75,76,77,78,79,80,81,72,82,83,70,69,74,70,75,76,77,78,79,80,81,72,82,83,69,74,70,75,76,77,78,79,80,81,72,82,83,74,72,72,72,75,73,75,70,75,77,81,82,83,72,73,73,73,74,72,73,75,74,76,77,78,79,80,81,72,82,83,74,76,77,78,79,80,81,72,82,83,72,73,66,66,69,74,70,75,76,77,78,79,80,81,72,72,72,72,72,82,83,73,73,66,69,74,74,70,75,76,77,77,78,79,80,81,72,82,83,72,72,72,72,69,69,69,73,75,73,74,76,77,78,72,73,73,73,73,73,75,72,72,72,73,66,69,74,70,75,76,77,78,79,80,81,72,82,83,72,73,72,73,73,73,73,75,75,75,73,70,72,73,73,75,74,72,75,75,73,73,73,72,73,73,75,73,75,73,72,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,66,72,72,72,73,73,75,69,74,70,75,76,77,78,79,80,81,72,82,83,66,72,70,75,73,66,69,74,70,75,76,77,78,79,80,81,72,82,83,73,66,69,74,70,75,76,77,78,79,80,81,72,82,83,73,66,69,74,70,75,76,77,78,79,80,81,72,82,83,72,75,70,75,75,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,119,120,120,120,120],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[[2,[1]]],[[2,[1]]]],[[[3,[1]]],[[3,[1]]]],[[[4,[1]]],[[4,[1]]]],[[[5,[1]]],[[5,[1]]]],[[[7,[6]],[7,[6]],[7,[6]],8],6],[[[2,[9]]],[[2,[9]]]],[[[3,[9]]],[[3,[9]]]],[[[4,[9]]],[[4,[9]]]],[[[5,[9]]],[[5,[9]]]],[6,6],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[2,[11]]]],[[],[[3,[11]]]],[[],[[4,[11]]]],[[],[[5,[11]]]],[[[2,[12]],[2,[12]]],13],[[[3,[12]],[3,[12]]],13],[[[4,[12]],[4,[12]]],13],[[[5,[12]],[5,[12]]],13],[[6,6],13],[[10,10],13],[[],13],[[],13],[[],13],[[],13],[[[2,[14]],15],16],[[[3,[14]],15],16],[[[4,[14]],15],16],[[[5,[14]],15],16],[[6,15],16],[[10,15],16],[[]],[[],[[2,[1]]]],[[[17,[1]]],[[2,[1]]]],[[],[[3,[1]]]],[[[17,[1]]],[[3,[1]]]],[[]],[[]],[[],[[4,[1]]]],[[[17,[1]]],[[4,[1]]]],[[[17,[1]]],[[5,[1]]]],[[]],[[],[[5,[1]]]],[[[4,[1]]],6],[[]],[[[5,[1]]],6],[[[2,[1]]],10],[[]],[[[3,[1]]],10],[8],[[[7,[[2,[1]]]],8],[[3,[1]]]],[[[7,[[4,[1]]]],8],[[5,[1]]]],[[[7,[[3,[1]]]],8],[[2,[1]]]],[[[7,[[5,[1]]]],8],[[4,[1]]]],[[[2,[18]],19]],[[[3,[18]],19]],[[[4,[18]],19]],[[[5,[18]],19]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],3],[[],4],[[],5],[[[7,[6]]],6],[[[7,[10]]],10],[[[3,[1]],8],[[2,[1]]]],[[[5,[1]],8],[[4,[1]]]],[[6,8],[[4,[1]]]],[[10,8],[[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],8],[[3,[1]]]],[[[4,[1]],8],[[5,[1]]]],[[6,8],[[5,[1]]]],[[10,8],[[3,[1]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[8,13],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[22,22],[[]],[[23,15],[[20,[24]]]],[[23,15],16],[[22,15],[[20,[24]]]],[[22,15],[[20,[24]]]],[[25,15],16],[[25,15],[[20,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],27],[27,13],[[27,27],27],[[27,27]],[[27,27],27],[[27,27]],[27,28],[[27,27],27],[[27,27]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[9]]],[[29,[9]]]],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[27,27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[32,32],43],[[42,42],43],[[27,27],43],[27,27],[[27,27],13],[27,13],[[],27],0,[[27,27],27],[[],32],[[],27],[[[29,[12]],[29,[12]]],13],[[30,30],13],[[31,31],13],[[32,32],13],[[33,33],13],[[34,34],13],[[35,35],13],[[36,36],13],[[37,37],13],[[38,38],13],[[39,39],13],[[40,40],13],[[41,41],13],[[42,42],13],[[27,27],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[27,44]],[[[29,[14]],15],16],[[30,15],16],[[31,15],16],[[32,15],16],[[33,15],16],[[34,15],16],[[35,15],16],[[36,15],16],[[37,15],16],[[38,15],16],[[39,15],16],[[40,15],16],[[41,15],16],[[42,15],16],[[27,15],16],[[27,15],16],[[27,15],16],[[27,15],16],[[27,15],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,[[45,[27]]]],[28,27],[28,27],[44,27],[[32,19]],[[34,19]],[[35,19]],[[36,19]],[[39,19]],[[40,19]],[[42,19]],[[27,19]],0,[[27,27]],[[27,27],27],[[27,27],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,13],[27,13],0,[27,13],[29,[[20,[29,29]]]],0,[38,8],[27,27],[[32,32],[[45,[43]]]],[[42,42],[[45,[43]]]],[[27,27],[[45,[43]]]],[32,[[45,[26]]]],0,[[27,27]],0,[[27,27,13]],[27,13],0,[[27,27],27],[[27,27]],[[27,27],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[45,[29]]]],[31,[[45,[31]]]],[[27,27]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[27,27],27],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[46,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,49],[50,50],[51,51],[[[52,[9]]],[[52,[9]]]],[53,53],[[]],[[]],[[]],[[]],[[53,53],43],[49,50],[[],49],[[],[[48,[11]]]],[[],51],[[],53],[49,46],[[51,51],13],[[[52,[12]],[52,[12]]],13],[[53,53],13],[[],13],[[],13],[[],13],[[49,15],16],[[46,15],16],[[50,15],16],[[51,15],16],[[[52,[14]],15],16],[[52,15],16],[[53,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[18]],19]],[[53,19]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[],48],[[53,53],[[45,[43]]]],[46,[[45,[54]]]],[49,55],[46,55],[[49,56],57],[[49,56],58],[50,[[20,[52]]]],[[46,53]],[51],[[51,58]],[51],[51],[[51,59]],[[51,60]],[[]],[[]],[[]],[[]],[[],26],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[48,13],48],[[48,13],48],[[48,56],48],[[],49],[[],48],0,0,[61,62],[[]],[[]],[[]],[[]],[61,61],[54,54],[[]],[[]],[[61,61],43],[[54,54],43],[[61,61],13],[[54,54],13],[[],13],[[],13],[[61,15],16],[[61,15],16],[[54,15],16],[[]],[[]],[[61,19]],[54,63],[[]],[[]],[61,54],[54,[[45,[26]]]],[54,26],[[61,61],[[45,[43]]]],[[54,54],[[45,[43]]]],[54,[[3,[58]]]],[61,28],[54,[[45,[28]]]],[54,8],[61,[[5,[28]]]],[54,[[5,[28]]]],[[]],[[]],[[],26],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[54,47],0,0,0,0,[56,58],0,0,0,0,0,0,0,0,0,0,[[[65,[64]],[45,[[5,[28]]]]],[[20,[66]]]],[[62,[45,[[5,[28]]]]],[[20,[66]]]],[[],67],[[],63],[[],68],[[],26],[[],[[45,[26]]]],[13],[13],[[[45,[69]]]],[13],[13],[13],[13,70],[71,70],[56],[13,70],[68,70],[13,70],[[[45,[69]]],70],[13,70],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],72],[73,47],[[72,72],72],[[72,72]],[[72,72],72],[[72,72]],[72,28],[[72,72],72],[[72,72]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[70,46],[[20,[73,25]]]],[69,69],[74,74],[70,70],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[72,72],[82,82],[83,83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[74,74],43],[[72,72],43],[72,72],[[72,72],13],0,[73,[[45,[54]]]],0,[[],70],[[],75],[[],77],[[],81],[[],82],[[],83],[[72,72],72],[[73,78],[[20,[23]]]],[73,[[20,[23]]]],[73],[[],74],[[],72],[73,72],0,[[74,74],13],[[76,76],13],[[77,77],13],[[78,78],13],[[79,79],13],[[80,80],13],[[81,81],13],[[72,72],13],[[82,82],13],[[83,83],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[72,44]],[[73,15],16],[[66,15],16],[[66,15],16],[[69,15],[[20,[24]]]],[[74,15],16],[[70,15],16],[[75,15],16],[[76,15],16],[[77,15],16],[[78,15],16],[[79,15],16],[[80,15],16],[[81,15],16],[[72,15],16],[[72,15],16],[[72,15],16],[[72,15],16],[[72,15],16],[[82,15],16],[[83,15],16],[73],[[]],[[]],[[]],[[]],[84,74],[[]],[[]],[[]],[78,77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,[[45,[72]]]],[28,72],[28,72],[44,72],[[[65,[64]],[45,[[5,[28]]]]],[[20,[69,66]]]],[[62,[45,[[5,[28]]]]],[[20,[69,66]]]],[[[86,[85]],28,28],[[20,[69,66]]]],[73,[[45,[79]]]],0,[73,13],[[74,19]],[[76,19]],[[77,19]],[[78,19]],[[72,19]],[73,67],[73,68],[73,74],[73,[[20,[[3,[58]],22]]]],[73,[[5,[28]]]],0,[[72,72]],[[72,72],72],[[72,72],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,13],[73,13],[72,13],[73,13],[73,[[45,[13]]]],[73,13],[73,[[45,[13]]]],0,0,0,[46,[[20,[73,25]]]],[[],70],[72,72],[73,[[20,[[3,[58]],22]]]],[73,[[5,[28]]]],0,[[74,74],[[45,[43]]]],[[72,72],[[45,[43]]]],0,0,[73,[[45,[54]]]],[73,55],[73,87],[[72,72]],[73],[[73,[45,[81]]]],0,[73,[[45,[[5,[28]]]]]],0,[73,8],[[72,72,13]],[[73,13]],[[73,76],[[20,[23]]]],[[73,13],[[20,[23]]]],[[73,77]],[[73,[7,[10]]],[[20,[23]]]],[[73,13]],[[73,13]],[[73,13]],[[73,72]],[[73,[45,[79]]]],[[73,13]],[[73,[7,[10]]]],[[73,83]],[[73,[7,[6]]]],[[73,[45,[[7,[6]]]]]],[[73,13]],[[73,[45,[[7,[6]]]]]],[[73,13]],[[73,[7,[10]]]],[[73,13]],[[73,[45,[[7,[6]]]]]],[[73,13]],[[73,[45,[69]]]],[[73,[45,[80]]]],[[73,88]],[[73,13]],[[73,13]],[[73,13]],[[73,[45,[69]]]],[[73,82]],[66,[[45,[89]]]],[[72,72],72],[[72,72]],[[72,72],72],[73,[[45,[80]]]],[73,26],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[72,72]],[70,13],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[72,72],72],0,[70,75],0,0,[[70,13],70],[[70,13],70],[[70,13],70],[[70,13],70],[[70,72],70],[[70,[45,[79]]],70],[[70,[7,[6]]],70],[[70,[7,[6]]],70],[[70,13],70],[[70,71],70],[[70,[7,[6]]],70],[[70,13],70],[[70,68],70],[[70,[45,[87]]],70],[[70,[7,[10]]],70],[[70,13],70],[[70,[7,[6]]],70],[[70,13],70],[[70,[45,[69]]],70],[[70,[45,[80]]],70],[[70,[7,[26]]],70],[[70,13],70],[[70,13],70],[[70,13],70],[[70,[45,[69]]],70],[[70,82],70],0,0,0,0,0],"c":[613,730,731,732,863],"p":[[8,"Pixel"],[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[3,"PhysicalSize"],[4,"Size"],[8,"Into"],[15,"f64"],[8,"Clone"],[4,"Position"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"array"],[8,"Hash"],[8,"Hasher"],[4,"Result"],[3,"TypeId"],[3,"NotSupportedError"],[4,"ExternalError"],[3,"Error"],[3,"OsError"],[3,"String"],[3,"ModifiersState"],[15,"u32"],[4,"Event"],[4,"StartCause"],[4,"WindowEvent"],[3,"DeviceId"],[4,"DeviceEvent"],[3,"KeyboardInput"],[4,"Ime"],[4,"TouchPhase"],[3,"Touch"],[4,"Force"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[4,"Ordering"],[8,"IntoIterator"],[4,"Option"],[3,"EventLoopWindowTarget"],[8,"Iterator"],[3,"EventLoopBuilder"],[3,"EventLoop"],[3,"EventLoopProxy"],[4,"ControlFlow"],[3,"EventLoopClosed"],[4,"DeviceEventFilter"],[3,"MonitorHandle"],[4,"RawDisplayHandle"],[8,"FnMut"],[15,"never"],[15,"i32"],[3,"Duration"],[6,"Instant"],[3,"VideoMode"],[15,"u16"],[6,"HMONITOR"],[3,"Path"],[8,"AsRef"],[4,"BadIcon"],[6,"HINSTANCE"],[6,"HWND"],[3,"Icon"],[3,"WindowBuilder"],[6,"HMENU"],[3,"WindowButtons"],[3,"Window"],[3,"WindowId"],[3,"WindowAttributes"],[4,"CursorGrabMode"],[4,"CursorIcon"],[4,"ResizeDirection"],[4,"Fullscreen"],[4,"Theme"],[4,"UserAttentionType"],[4,"WindowLevel"],[4,"ImePurpose"],[15,"u64"],[15,"u8"],[3,"Vec"],[4,"RawWindowHandle"],[15,"str"],[8,"Error"],[13,"Motion"],[13,"Button"],[13,"Text"],[13,"MouseMotion"],[13,"MouseWheel"],[13,"DeviceEvent"],[13,"WindowEvent"],[13,"Calibrated"],[13,"ResumeTimeReached"],[13,"WaitCancelled"],[13,"AxisMotion"],[13,"MouseInput"],[13,"MouseWheel"],[13,"TouchpadMagnify"],[13,"TouchpadRotate"],[13,"KeyboardInput"],[13,"CursorMoved"],[13,"CursorEntered"],[13,"CursorLeft"],[13,"SmartMagnify"],[13,"TouchpadPressure"],[13,"ScaleFactorChanged"],[8,"EventLoopExtRunReturn"],[8,"IconExtWindows"],[8,"WindowExtWindows"],[8,"MonitorHandleExtWindows"],[8,"DeviceIdExtWindows"],[8,"EventLoopBuilderExtWindows"],[8,"WindowBuilderExtWindows"],[13,"ByteCountNotDivisibleBy4"],[13,"DimensionsVsPixelCount"]]},\
"zune_inflate":{"doc":"An incredibly spiffy deflate decoder.","t":"DDDLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLNENNDNNNNLLLLMMLLLLLLLLLLLLLLLL","n":["DeflateDecoder","DeflateEncoder","DeflateOptions","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","decode_deflate","decode_zlib","default","encode_deflate","encode_zlib","errors","from","from","from","get_confirm_checksum","get_limit","get_size_hint","into","into","into","new","new","new_with_options","new_with_options","set_confirm_checksum","set_limit","set_size_hint","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","CorruptData","DecodeErrorStatus","Generic","GenericStr","InflateDecodeErrors","InsufficientData","MismatchedAdler","MismatchedCRC","OutputLimitExceeded","borrow","borrow","borrow_mut","borrow_mut","data","error","fmt","fmt","fmt","from","from","into","into","new","new_with_error","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"zune_inflate"],[43,"zune_inflate::errors"]],"d":["A deflate decoder instance.","A simple Deflate Encoder.","Options that can influence decompression in …","","","","","","","","","Decode a deflate stream returning the data as <code>Vec&lt;u8&gt;</code> or …","Decode zlib-encoded data returning the uncompressed in a …","","Encode a deflate stream","","Errors possible when decoding deflate/zlib/gzip streams","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get whether the decoder will confirm a checksum after …","Get deflate/zlib limit option","Get the default set size hint for the decompressor","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new decompressor that will read compressed data …","Create a new deflate encoder.","Create new decoder with specified options","","Set whether the decoder should confirm a checksum after …","Set a limit to the internal vector used to store decoded …","Set the size hint for the decompressor","","","","","","","","","","","Input data was malformed.","","Anything that isn’t significant","Anything that isn’t significant but we need to pass back …","A struct returned when decompression fails","Input data is not enough to construct a full output","Output Adler does not match stored adler","Output CRC does not match stored CRC.","Limit set by the user was exceeded by decompressed output","","","","","Decoded data up until that decompression error","reason why decompression fails","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new decode wrapper with data being how many bytes …","Create a new decode wrapper with an empty vector","","","","","","",""],"i":[0,0,0,2,7,1,2,7,1,1,1,2,2,1,7,7,0,2,7,1,1,1,1,2,7,1,2,7,2,7,1,1,1,1,2,7,1,2,7,1,2,7,1,14,0,14,14,0,14,14,14,14,5,14,5,14,5,5,5,5,14,5,14,5,14,5,5,5,5,14,5,14,5,14],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[2,[[6,[[4,[3]],5]]]],[2,[[6,[[4,[3]],5]]]],[[],1],[7],[7,[[4,[3]]]],0,[[]],[[]],[[]],[1,8],[1,9],[1,9],[[]],[[]],[[]],[[[10,[3]]],2],[[[10,[3]]],7],[[[10,[3]],1],2],0,[[1,8],1],[[1,9],1],[[1,9],1],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[5,12],13],[[5,12],13],[[14,12],13],[[]],[[]],[[]],[[]],[[14,[4,[3]]],5],[14,5],[[],15],[[],6],[[],6],[[],6],[[],6],[[],11],[[],11]],"c":[],"p":[[3,"DeflateOptions"],[3,"DeflateDecoder"],[15,"u8"],[3,"Vec"],[3,"InflateDecodeErrors"],[4,"Result"],[3,"DeflateEncoder"],[15,"bool"],[15,"usize"],[15,"slice"],[3,"TypeId"],[3,"Formatter"],[6,"Result"],[4,"DecodeErrorStatus"],[3,"String"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
